/* 
 * ========================================================================
 * 
 * Copyright 2005 Tim O'Brien.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * ========================================================================
 */
String[] arrayA = new String[] { "1", "2", "2", "2", "3", "3", "4", "5" };
String[] arrayB = new String[] { "3", "4", "4", "5", "6", "7" };

List a = Arrays.asList( arrayA );
List b = Arrays.asList( arrayB );

List union = (List) CollectionUtils.union( a, b );
List intersection = (List) CollectionUtils.intersection( a, b );
List disjunction = (List) CollectionUtils.disjunction( a, b );
List subtract = (List) CollectionUtils.subtract( a, b );

Collections.sort( union );
Collections.sort( intersection );
Collections.sort( disjunction );
Collections.sort( subtract );

System.out.println( "A: " + ArrayUtils.toString( a.toArray() ) );
System.out.println( "B: " + ArrayUtils.toString( b.toArray() ) );
System.out.println( "Union: " + ArrayUtils.toString( union.toArray() ) );
System.out.println( "Intersection: " + 
                    ArrayUtils.toString( intersection.toArray() ) );
System.out.println( "Disjunction: " + 
                    ArrayUtils.toString( disjunction.toArray() ) );
System.out.println( "Subtract: " + ArrayUtils.toString( subtract.toArray() ) ); 
return 0;(int) 0
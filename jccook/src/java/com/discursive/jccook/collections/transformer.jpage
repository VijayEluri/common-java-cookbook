/* 
 * ========================================================================
 * 
 * Copyright 2005 Tim O'Brien.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * ========================================================================
 */
class SineTransformer implements Transformer {
	public Object transform(Object object) {
		Long number = (Long) object;
		double result = Math.sin( (double) number.longValue() );
		return new Long( (long) (result * 100 ) );
	}
}

Transformer sineTransform = new SineTransformer();

long[] longArray = new long[] { 12, -3, 45, 203, 0 };
Long[] longObjectArray = ArrayUtils.toObject( longArray );
List list = Arrays.asList( longObjectArray );
System.out.println( "Original: " + ArrayUtils.toString( list ) );

CollectionUtils.transform( list, sineTransform );
System.out.println( "Transformed: " + ArrayUtils.toString( list ) );

class MagnifyTransformer implements Transformer {
	public Object transform(Object object) {
		Long number = (Long) object;
		return new Long( number.longValue() * 1000 );
	}
}

Transformer magnifyTransform = new MagnifyTransformer();

long[] array = new long[] { 3, 4, 5, 6, 7 };
Long[] objectArray = ArrayUtils.toObject( array );
List originalList = Arrays.asList( objectArray );
System.out.println( "Original: " + ArrayUtils.toString( originalList ) );

List decoratedList = TransformedList.decorate( new ArrayList(), magnifyTransform );
decoratedList.addAll( originalList );
System.out.println( "Transformed: " + ArrayUtils.toString( decoratedList ) );

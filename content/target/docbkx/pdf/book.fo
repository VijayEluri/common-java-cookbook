<?xml version="1.0" encoding="utf-8"?><fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format" font-family="serif" font-size="12pt" text-align="left" line-height="1.3" font-selection-strategy="character-by-character" line-height-shift-adjustment="disregard-shifts" language="en"><fo:layout-master-set><fo:simple-page-master master-name="blank" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body display-align="center" margin-bottom="0.4in" margin-top="0.4in"/><fo:region-before region-name="xsl-region-before-blank" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-blank" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-first" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-first" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-odd" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-odd" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-even" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-even" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="lot-first" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-first" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="lot-odd" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-odd" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="lot-even" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-even" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="front-first" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-first" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="front-odd" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-odd" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="front-even" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-even" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="body-first" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-first" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="body-odd" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-odd" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="body-even" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-even" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="back-first" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-first" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="back-odd" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-odd" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="back-even" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-even" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="index-first" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="2"/><fo:region-before region-name="xsl-region-before-first" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="index-odd" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="2"/><fo:region-before region-name="xsl-region-before-odd" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="index-even" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="2"/><fo:region-before region-name="xsl-region-before-even" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="blank-draft" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" background-image="http://docbook.sourceforge.net/release/images/draft.png" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-blank" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-blank" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-first-draft" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1" background-image="http://docbook.sourceforge.net/release/images/draft.png" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-first" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-odd-draft" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1" background-image="http://docbook.sourceforge.net/release/images/draft.png" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-odd" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-even-draft" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1" background-image="http://docbook.sourceforge.net/release/images/draft.png" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-even" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="lot-first-draft" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1" background-image="http://docbook.sourceforge.net/release/images/draft.png" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-first" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="lot-odd-draft" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1" background-image="http://docbook.sourceforge.net/release/images/draft.png" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-odd" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="lot-even-draft" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1" background-image="http://docbook.sourceforge.net/release/images/draft.png" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-even" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="front-first-draft" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1" background-image="http://docbook.sourceforge.net/release/images/draft.png" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-first" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="front-odd-draft" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1" background-image="http://docbook.sourceforge.net/release/images/draft.png" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-odd" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="front-even-draft" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1" background-image="http://docbook.sourceforge.net/release/images/draft.png" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-even" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="body-first-draft" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1" background-image="http://docbook.sourceforge.net/release/images/draft.png" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-first" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="body-odd-draft" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1" background-image="http://docbook.sourceforge.net/release/images/draft.png" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-odd" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="body-even-draft" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1" background-image="http://docbook.sourceforge.net/release/images/draft.png" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-even" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="back-first-draft" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1" background-image="http://docbook.sourceforge.net/release/images/draft.png" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-first" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="back-odd-draft" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1" background-image="http://docbook.sourceforge.net/release/images/draft.png" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-odd" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="back-even-draft" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pc" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="1" background-image="http://docbook.sourceforge.net/release/images/draft.png" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-even" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="index-first-draft" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="2" background-image="http://docbook.sourceforge.net/release/images/draft.png" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-first" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="index-odd-draft" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="2" background-image="http://docbook.sourceforge.net/release/images/draft.png" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-odd" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:simple-page-master master-name="index-even-draft" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-right="1in" margin-left="1in"><fo:region-body margin-bottom="0.4in" margin-top="0.4in" column-gap="12pt" column-count="2" background-image="http://docbook.sourceforge.net/release/images/draft.png" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-even" extent="0.3in" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.3in" display-align="after"/></fo:simple-page-master><fo:page-sequence-master master-name="titlepage"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="titlepage-first" page-position="first"/><fo:conditional-page-master-reference master-reference="titlepage-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="titlepage-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="lot"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="lot-first" page-position="first"/><fo:conditional-page-master-reference master-reference="lot-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="lot-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="front"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="front-first" page-position="first"/><fo:conditional-page-master-reference master-reference="front-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="front-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="body"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="body-first" page-position="first"/><fo:conditional-page-master-reference master-reference="body-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="body-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="back"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="back-first" page-position="first"/><fo:conditional-page-master-reference master-reference="back-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="back-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="index"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="index-first" page-position="first"/><fo:conditional-page-master-reference master-reference="index-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="index-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="titlepage-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank-draft" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="titlepage-first-draft" page-position="first"/><fo:conditional-page-master-reference master-reference="titlepage-odd-draft" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="titlepage-odd-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="lot-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank-draft" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="lot-first-draft" page-position="first"/><fo:conditional-page-master-reference master-reference="lot-odd-draft" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="lot-odd-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="front-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank-draft" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="front-first-draft" page-position="first"/><fo:conditional-page-master-reference master-reference="front-odd-draft" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="front-odd-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="body-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank-draft" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="body-first-draft" page-position="first"/><fo:conditional-page-master-reference master-reference="body-odd-draft" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="body-odd-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="back-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank-draft" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="back-first-draft" page-position="first"/><fo:conditional-page-master-reference master-reference="back-odd-draft" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="back-odd-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="index-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank-draft" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="index-first-draft" page-position="first"/><fo:conditional-page-master-reference master-reference="index-odd-draft" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="index-odd-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master></fo:layout-master-set><fox:outline xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="I__tt2"><fox:label>Jakarta Commons Cookbook</fox:label></fox:outline><fox:outline xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="toc...I__tt2"><fox:label>Table of Contents</fox:label></fox:outline><fox:outline xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-PREFACE-1"><fox:label>Copyright</fox:label></fox:outline><fox:destination xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-PREFACE-1"/><fox:outline xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-PREFACE-2"><fox:label>Preface</fox:label><fox:outline internal-destination="jakartackbk-PREFACE-2-SECT-1"><fox:label>1. What's Inside</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-PREFACE-2-SECT-1"/><fox:outline internal-destination="jakartackbk-PREFACE-2-SECT-2"><fox:label>2. Conventions Used in This Book</fox:label><fox:destination internal-destination="I__tt3"/><fox:destination internal-destination="jakartackbk-PREFACE-2-NOTE-39"/><fox:destination internal-destination="jakartackbk-PREFACE-2-NOTE-40"/></fox:outline><fox:destination internal-destination="jakartackbk-PREFACE-2-SECT-2"/><fox:outline internal-destination="jakartackbk-PREFACE-2-SECT-3"><fox:label>3. What You'll Need</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-PREFACE-2-SECT-3"/><fox:outline internal-destination="jakartackbk-PREFACE-2-SECT-4"><fox:label>4. The Jakarta Commons Community</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-PREFACE-2-SECT-4"/><fox:outline internal-destination="jakartackbk-PREFACE-2-SECT-5"><fox:label>5. The Apache Software License</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-PREFACE-2-SECT-5"/><fox:outline internal-destination="jakartackbk-PREFACE-2-SECT-7"><fox:label>6. We'd Like to Hear from You</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-PREFACE-2-SECT-7"/><fox:outline internal-destination="jakartackbk-PREFACE-2-SECT-8"><fox:label>7. Acknowledgments (1st Edition)</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-PREFACE-2-SECT-8"/></fox:outline><fox:destination xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-PREFACE-2"/><fox:outline xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-CHP-1"><fox:label>Chapter 1. Supplements to the Java 2 Platform</fox:label><fox:outline internal-destination="ch01-2-fm2xml"><fox:label>1.1. Introduction</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1715"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1716"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1717"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1718"/><fox:destination internal-destination="jakartackbk-CHP-1-SIDEBAR-1"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1719"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1720"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1721"/></fox:outline><fox:destination internal-destination="ch01-2-fm2xml"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-1"><fox:label>1.1. Obtaining Commons Lang</fox:label><fox:outline internal-destination="jakartackbk-CHP-1-SECT-1.1"><fox:label>1.1.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1722"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1723"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-1.1"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-1.2"><fox:label>1.1.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-1.2"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-1.3"><fox:label>1.1.3. Discussion</fox:label><fox:destination internal-destination="I_1_tt4"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1724"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1725"/><fox:destination internal-destination="jakartackbk-CHP-1-NOTE-42"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-1.3"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-1.4"><fox:label>1.1.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1726"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1727"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-1.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-1"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-2"><fox:label>1.2. Joining the Commons-User Mailing List</fox:label><fox:outline internal-destination="jakartackbk-CHP-1-SECT-2.1"><fox:label>1.2.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1728"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1729"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1730"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-2.1"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-2.2"><fox:label>1.2.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-2.2"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-2.3"><fox:label>1.2.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1731"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1732"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1733"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-2.3"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-2.4"><fox:label>1.2.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-2.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-2"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-3"><fox:label>1.3. Getting the Commons Lang Source Code</fox:label><fox:outline internal-destination="jakartackbk-CHP-1-SECT-3.1"><fox:label>1.3.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1734"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1735"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1736"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1737"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1738"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-3.1"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-3.2"><fox:label>1.3.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-3.2"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-3.3"><fox:label>1.3.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1739"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1740"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1741"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1742"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1743"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1744"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1745"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1746"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1747"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-3.3"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-3.4"><fox:label>1.3.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-3.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-3"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-4"><fox:label>1.4. Automating the Generation of toString( ) Content</fox:label><fox:outline internal-destination="jakartackbk-CHP-1-SECT-4.1"><fox:label>1.4.1. Problem</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-4.1"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-4.2"><fox:label>1.4.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1748"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1749"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1750"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1751"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1752"/><fox:destination internal-destination="I_1_tt5"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-4.2"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-4.3"><fox:label>1.4.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-EX-1"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1753"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1754"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1755"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1756"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1757"/><fox:destination internal-destination="I_1_tt6"/><fox:destination internal-destination="I_1_tt7"/><fox:destination internal-destination="jakartackbk-CHP-1-NOTE-43"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1758"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1759"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1760"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1761"/><fox:destination internal-destination="jakartackbk-CHP-1-NOTE-44"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-4.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-4"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-5"><fox:label>1.5. Customizing Generated toString( ) Content</fox:label><fox:outline internal-destination="jakartackbk-CHP-1-SECT-5.1"><fox:label>1.5.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1762"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1763"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1764"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1765"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-5.1"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-5.2"><fox:label>1.5.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1766"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1767"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1768"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1769"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1770"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1771"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1772"/><fox:destination internal-destination="I_1_tt8"/><fox:destination internal-destination="I_1_tt9"/><fox:destination internal-destination="jakartackbk-CHP-1-NOTE-46"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-5.2"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-5.3"><fox:label>1.5.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1773"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1774"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1775"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1776"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1777"/><fox:destination internal-destination="jakartackbk-CHP-1-TABLE-1"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1778"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1779"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1780"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1781"/><fox:destination internal-destination="I_1_tt10"/><fox:destination internal-destination="I_1_tt11"/><fox:destination internal-destination="I_1_tt12"/><fox:destination internal-destination="I_1_tt13"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1782"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1783"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1784"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1785"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-5.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-5"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-6"><fox:label>1.6. Automating hashCode( ) and equals( )</fox:label><fox:outline internal-destination="jakartackbk-CHP-1-SECT-6.1"><fox:label>1.6.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1786"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1787"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1788"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1789"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1790"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1791"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1792"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1793"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1794"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-6.1"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-6.2"><fox:label>1.6.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1795"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1796"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1797"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1798"/><fox:destination internal-destination="jakartackbk-CHP-1-EX-2"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-6.2"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-6.3"><fox:label>1.6.3. Discussion</fox:label><fox:destination internal-destination="I_1_tt14"/><fox:destination internal-destination="I_1_tt15"/><fox:destination internal-destination="I_1_tt16"/><fox:destination internal-destination="I_1_tt17"/><fox:destination internal-destination="jakartackbk-CHP-1-NOTE-47"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1799"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1800"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1801"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1802"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1803"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1804"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1805"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1806"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1807"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-6.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-6"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-7"><fox:label>1.7. Automating compareTo( )</fox:label><fox:outline internal-destination="jakartackbk-CHP-1-SECT-7.1"><fox:label>1.7.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1808"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1809"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1810"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1811"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1812"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-7.1"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-7.2"><fox:label>1.7.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1813"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1814"/><fox:destination internal-destination="I_1_tt18"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-7.2"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-7.3"><fox:label>1.7.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-EX-3"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1815"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1816"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1817"/><fox:destination internal-destination="jakartackbk-CHP-1-EX-4"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1818"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-7.3"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-7.4"><fox:label>1.7.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1819"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1820"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1821"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1822"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1823"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-7.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-7"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-8"><fox:label>1.8. Printing an Array</fox:label><fox:outline internal-destination="jakartackbk-CHP-1-SECT-8.1"><fox:label>1.8.1. Problem</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-8.1"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-8.2"><fox:label>1.8.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1824"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1825"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1826"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1827"/><fox:destination internal-destination="I_1_tt19"/><fox:destination internal-destination="I_1_tt20"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-8.2"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-8.3"><fox:label>1.8.3. Discussion</fox:label><fox:destination internal-destination="I_1_tt21"/><fox:destination internal-destination="I_1_tt22"/><fox:destination internal-destination="I_1_tt23"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-8.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-8"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-9"><fox:label>1.9. Cloning and Reversing Arrays</fox:label><fox:outline internal-destination="jakartackbk-CHP-1-SECT-9.1"><fox:label>1.9.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1828"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1829"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1830"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1831"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-9.1"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-9.2"><fox:label>1.9.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1832"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1833"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1834"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1835"/><fox:destination internal-destination="jakartackbk-CHP-1-EX-5"/><fox:destination internal-destination="I_1_tt24"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-9.2"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-9.3"><fox:label>1.9.3. Discussion</fox:label><fox:destination internal-destination="I_1_tt25"/><fox:destination internal-destination="jakartackbk-CHP-1-EX-6"/><fox:destination internal-destination="I_1_tt26"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1836"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1837"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1838"/><fox:destination internal-destination="I_1_tt27"/><fox:destination internal-destination="I_1_tt28"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-9.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-9"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-10"><fox:label>1.10. Transforming Between Object Arraysand Primitive Arrays</fox:label><fox:outline internal-destination="jakartackbk-CHP-1-SECT-10.1"><fox:label>1.10.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1839"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1840"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1841"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1842"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1843"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-10.1"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-10.2"><fox:label>1.10.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1844"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1845"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1846"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1847"/><fox:destination internal-destination="I_1_tt29"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-10.2"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-10.3"><fox:label>1.10.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1848"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1849"/><fox:destination internal-destination="I_1_tt30"/><fox:destination internal-destination="jakartackbk-CHP-1-TABLE-2"/><fox:destination internal-destination="jakartackbk-CHP-1-TABLE-3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-10.3"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-10.4"><fox:label>1.10.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1850"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-10.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-10"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-11"><fox:label>1.11. Finding Items in an Array</fox:label><fox:outline internal-destination="jakartackbk-CHP-1-SECT-11.1"><fox:label>1.11.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1851"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1852"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1853"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1854"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1855"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-11.1"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-11.2"><fox:label>1.11.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1856"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1857"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1858"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1859"/><fox:destination internal-destination="I_1_tt31"/><fox:destination internal-destination="I_1_tt32"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-11.2"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-11.3"><fox:label>1.11.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-EX-7"/><fox:destination internal-destination="I_1_tt33"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-11.3"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-11.4"><fox:label>1.11.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-11.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-11"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-12"><fox:label>1.12. Creating a Map from a Multidimensional Array</fox:label><fox:outline internal-destination="jakartackbk-CHP-1-SECT-12.1"><fox:label>1.12.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1860"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1861"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1862"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-12.1"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-12.2"><fox:label>1.12.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1863"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1864"/><fox:destination internal-destination="jakartackbk-CHP-1-EX-8"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-12.2"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-12.3"><fox:label>1.12.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1865"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1866"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1867"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1868"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-12.3"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-12.4"><fox:label>1.12.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-12.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-12"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-13"><fox:label>1.13. Formatting Dates</fox:label><fox:outline internal-destination="jakartackbk-CHP-1-SECT-13.1"><fox:label>1.13.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1869"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1870"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-13.1"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-13.2"><fox:label>1.13.2. Solution</fox:label><fox:destination internal-destination="I_1_tt34"/><fox:destination internal-destination="I_1_tt35"/><fox:destination internal-destination="I_1_tt36"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-13.2"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-13.3"><fox:label>1.13.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-TABLE-4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-13.3"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-13.4"><fox:label>1.13.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1871"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1872"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-13.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-13"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-14"><fox:label>1.14. Rounding Date Objects</fox:label><fox:outline internal-destination="jakartackbk-CHP-1-SECT-14.1"><fox:label>1.14.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1873"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1874"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1875"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1876"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1877"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1878"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1879"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1880"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-14.1"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-14.2"><fox:label>1.14.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1881"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1882"/><fox:destination internal-destination="I_1_tt37"/><fox:destination internal-destination="I_1_tt38"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-14.2"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-14.3"><fox:label>1.14.3. Discussion</fox:label><fox:destination internal-destination="I_1_tt39"/><fox:destination internal-destination="I_1_tt40"/><fox:destination internal-destination="I_1_tt41"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-14.3"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-14.4"><fox:label>1.14.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1883"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-14.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-14"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-15"><fox:label>1.15. Truncating Date Objects</fox:label><fox:outline internal-destination="jakartackbk-CHP-1-SECT-15.1"><fox:label>1.15.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1884"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1885"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-15.1"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-15.2"><fox:label>1.15.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1886"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1887"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1888"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1889"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1890"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1891"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1892"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1893"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1894"/><fox:destination internal-destination="jakartackbk-CHP-1-EX-9"/><fox:destination internal-destination="I_1_tt42"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-15.2"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-15.3"><fox:label>1.15.3. Discussion</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-15.3"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-15.4"><fox:label>1.15.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-15.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-15"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-16"><fox:label>1.16. Creating an Enum</fox:label><fox:outline internal-destination="jakartackbk-CHP-1-SECT-16.1"><fox:label>1.16.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1895"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1896"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-16.1"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-16.2"><fox:label>1.16.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-EX-10"/><fox:destination internal-destination="I_1_tt43"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-16.2"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-16.3"><fox:label>1.16.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1897"/><fox:destination internal-destination="jakartackbk-CHP-1-EX-11"/><fox:destination internal-destination="jakartackbk-CHP-1-EX-12"/><fox:destination internal-destination="I_1_tt44"/><fox:destination internal-destination="jakartackbk-CHP-1-EX-13"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1898"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1899"/><fox:destination internal-destination="jakartackbk-CHP-1-EX-14"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1900"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1901"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-16.3"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-16.4"><fox:label>1.16.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-16.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-16"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-17"><fox:label>1.17. Generating Unique Numeric Identifiers</fox:label><fox:outline internal-destination="jakartackbk-CHP-1-SECT-17.1"><fox:label>1.17.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1902"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1903"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1904"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1905"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-17.1"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-17.2"><fox:label>1.17.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-EX-15"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1906"/><fox:destination internal-destination="I_1_tt45"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-17.2"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-17.3"><fox:label>1.17.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1907"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1908"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1909"/><fox:destination internal-destination="jakartackbk-CHP-1-EX-16"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1910"/><fox:destination internal-destination="I_1_tt46"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1911"/><fox:destination internal-destination="jakartackbk-CHP-1-EX-17"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1912"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1913"/><fox:destination internal-destination="jakartackbk-CHP-1-NOTE-49"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-17.3"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-17.4"><fox:label>1.17.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1914"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1915"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1916"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1917"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1918"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1919"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1920"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1921"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1922"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1923"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1924"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1925"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-17.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-17"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-18"><fox:label>1.18. Validation of Method Parameters</fox:label><fox:outline internal-destination="jakartackbk-CHP-1-SECT-18.1"><fox:label>1.18.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1926"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1927"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1928"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-18.1"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-18.2"><fox:label>1.18.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-EX-18"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-18.2"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-18.3"><fox:label>1.18.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-TABLE-5"/><fox:destination internal-destination="jakartackbk-CHP-1-EX-19"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-18.3"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-18.4"><fox:label>1.18.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1929"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1930"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1931"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-18.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-18"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-19"><fox:label>1.19. Measuring Time</fox:label><fox:outline internal-destination="jakartackbk-CHP-1-SECT-19.1"><fox:label>1.19.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1932"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1933"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-19.1"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-19.2"><fox:label>1.19.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1934"/><fox:destination internal-destination="jakartackbk-CHP-1-EX-20"/><fox:destination internal-destination="I_1_tt47"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-19.2"/><fox:outline internal-destination="jakartackbk-CHP-1-SECT-19.3"><fox:label>1.19.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1935"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1936"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1937"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1938"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1939"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1940"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1941"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1942"/><fox:destination internal-destination="jakartackbk-CHP-1-FIG-1"/><fox:destination internal-destination="I_1_tt48"/><fox:destination internal-destination="jakartackbk-CHP-1-EX-21"/><fox:destination internal-destination="I_1_tt49"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1943"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1944"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1945"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1946"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1947"/><fox:destination internal-destination="jakartackbk-CHP-1-ITERM-1948"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-19.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-1-SECT-19"/></fox:outline><fox:destination xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-CHP-1"/><fox:outline xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-CHP-2"><fox:label>Chapter 2. Manipulating Text</fox:label><fox:outline internal-destination="ch02-2-fm2xml"><fox:label>2.1. Introduction</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1949"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1950"/></fox:outline><fox:destination internal-destination="ch02-2-fm2xml"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-1"><fox:label>2.1. Setting Up StringUtils and WordUtils</fox:label><fox:outline internal-destination="jakartackbk-CHP-2-SECT-1.1"><fox:label>2.1.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1951"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1952"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1953"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1954"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1955"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1956"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1957"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1958"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-1.1"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-1.2"><fox:label>2.1.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-1.2"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-1.3"><fox:label>2.1.3. Discussion</fox:label><fox:destination internal-destination="I_2_tt50"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-1.3"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-1.4"><fox:label>2.1.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-1.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-1"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-2"><fox:label>2.2. Checking for an Empty String</fox:label><fox:outline internal-destination="jakartackbk-CHP-2-SECT-2.1"><fox:label>2.2.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1959"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1960"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1961"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1962"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1963"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1964"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-2.1"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-2.2"><fox:label>2.2.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1965"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1966"/><fox:destination internal-destination="I_2_tt51"/><fox:destination internal-destination="I_2_tt52"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-2.2"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-2.3"><fox:label>2.2.3. Discussion</fox:label><fox:destination internal-destination="I_2_tt53"/><fox:destination internal-destination="I_2_tt54"/><fox:destination internal-destination="I_2_tt55"/><fox:destination internal-destination="I_2_tt56"/><fox:destination internal-destination="I_2_tt57"/><fox:destination internal-destination="I_2_tt58"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1967"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1968"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1969"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1970"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1971"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1972"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-2.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-2"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-3"><fox:label>2.3. Abbreviating Strings</fox:label><fox:outline internal-destination="jakartackbk-CHP-2-SECT-3.1"><fox:label>2.3.1. Problem</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-3.1"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-3.2"><fox:label>2.3.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1973"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1974"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1975"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1976"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1977"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1978"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1979"/><fox:destination internal-destination="I_2_tt59"/><fox:destination internal-destination="I_2_tt60"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-3.2"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-3.3"><fox:label>2.3.3. Discussion</fox:label><fox:destination internal-destination="I_2_tt61"/><fox:destination internal-destination="I_2_tt62"/><fox:destination internal-destination="I_2_tt63"/><fox:destination internal-destination="jakartackbk-CHP-2-NOTE-51"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-3.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-3"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-4"><fox:label>2.4. Splitting a String</fox:label><fox:outline internal-destination="jakartackbk-CHP-2-SECT-4.1"><fox:label>2.4.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1980"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1981"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1982"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1983"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1984"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-4.1"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-4.2"><fox:label>2.4.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1985"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1986"/><fox:destination internal-destination="I_2_tt64"/><fox:destination internal-destination="I_2_tt65"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-4.2"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-4.3"><fox:label>2.4.3. Discussion</fox:label><fox:destination internal-destination="I_2_tt66"/><fox:destination internal-destination="I_2_tt67"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-4.3"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-4.4"><fox:label>2.4.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-4.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-4"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-5"><fox:label>2.5. Finding Nested Strings</fox:label><fox:outline internal-destination="jakartackbk-CHP-2-SECT-5.1"><fox:label>2.5.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1987"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1988"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1989"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1990"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1991"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-5.1"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-5.2"><fox:label>2.5.2. Solution</fox:label><fox:destination internal-destination="I_2_tt68"/><fox:destination internal-destination="I_2_tt69"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-5.2"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-5.3"><fox:label>2.5.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1992"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1993"/><fox:destination internal-destination="I_2_tt70"/><fox:destination internal-destination="I_2_tt71"/><fox:destination internal-destination="I_2_tt72"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-5.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-5"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-6"><fox:label>2.6. Stripping and Trimming a String</fox:label><fox:outline internal-destination="jakartackbk-CHP-2-SECT-6.1"><fox:label>2.6.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1994"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1995"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1996"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1997"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1998"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-1999"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2000"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2001"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2002"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2003"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2004"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2005"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-6.1"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-6.2"><fox:label>2.6.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2006"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2007"/><fox:destination internal-destination="I_2_tt73"/><fox:destination internal-destination="I_2_tt74"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-6.2"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-6.3"><fox:label>2.6.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2008"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2009"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-6.3.1"><fox:label>2.6.3.1. Stripping a string</fox:label><fox:destination internal-destination="I_2_tt75"/><fox:destination internal-destination="I_2_tt76"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-6.3.1"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-6.3.2"><fox:label>2.6.3.2. Trimming to null</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2010"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2011"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2012"/><fox:destination internal-destination="I_2_tt77"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-6.3.2"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-6.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-6"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-7"><fox:label>2.7. Chomping a String</fox:label><fox:outline internal-destination="jakartackbk-CHP-2-SECT-7.1"><fox:label>2.7.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2013"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2014"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2015"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2016"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2017"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2018"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2019"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2020"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2021"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-7.1"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-7.2"><fox:label>2.7.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2022"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2023"/><fox:destination internal-destination="I_2_tt78"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-7.2"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-7"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-8"><fox:label>2.8. Creating an Emphasized Header</fox:label><fox:outline internal-destination="jakartackbk-CHP-2-SECT-8.1"><fox:label>2.8.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2024"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2025"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2026"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2027"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2028"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-8.1"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-8.2"><fox:label>2.8.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2029"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2030"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2031"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2032"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2033"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2034"/><fox:destination internal-destination="I_2_tt79"/><fox:destination internal-destination="I_2_tt80"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-8.2"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-8.3"><fox:label>2.8.3. Discussion</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-8.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-8"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-9"><fox:label>2.9. Reversing a String</fox:label><fox:outline internal-destination="jakartackbk-CHP-2-SECT-9.1"><fox:label>2.9.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2035"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2036"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2037"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2038"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-9.1"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-9.2"><fox:label>2.9.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2039"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2040"/><fox:destination internal-destination="I_2_tt81"/><fox:destination internal-destination="I_2_tt82"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-9.2"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-9.3"><fox:label>2.9.3. Discussion</fox:label><fox:destination internal-destination="I_2_tt83"/><fox:destination internal-destination="I_2_tt84"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-9.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-9"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-10"><fox:label>2.10. Wrapping Words</fox:label><fox:outline internal-destination="jakartackbk-CHP-2-SECT-10.1"><fox:label>2.10.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2041"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2042"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2043"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2044"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2045"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2046"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-10.1"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-10.2"><fox:label>2.10.2. Solution</fox:label><fox:destination internal-destination="I_2_tt85"/><fox:destination internal-destination="I_2_tt86"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-10.2"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-10.3"><fox:label>2.10.3. Discussion</fox:label><fox:destination internal-destination="I_2_tt87"/><fox:destination internal-destination="I_2_tt88"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-10.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-10"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-11"><fox:label>2.11. Testing the Contents of a String</fox:label><fox:outline internal-destination="jakartackbk-CHP-2-SECT-11.1"><fox:label>2.11.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2047"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2048"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2049"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2050"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-11.1"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-11.2"><fox:label>2.11.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2051"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2052"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2053"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2054"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2055"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2056"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2057"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2058"/><fox:destination internal-destination="I_2_tt89"/><fox:destination internal-destination="I_2_tt90"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-11.2"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-11.3"><fox:label>2.11.3. Discussion</fox:label><fox:destination internal-destination="I_2_tt91"/><fox:destination internal-destination="I_2_tt92"/><fox:destination internal-destination="I_2_tt93"/><fox:destination internal-destination="I_2_tt94"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-11.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-11"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-12"><fox:label>2.12. Measuring the Frequency of a String</fox:label><fox:outline internal-destination="jakartackbk-CHP-2-SECT-12.1"><fox:label>2.12.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2059"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2060"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2061"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2062"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2063"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-12.1"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-12.2"><fox:label>2.12.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2064"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2065"/><fox:destination internal-destination="I_2_tt95"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-12.2"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-12.3"><fox:label>2.12.3. Discussion</fox:label><fox:destination internal-destination="I_2_tt96"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-12.3"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-12.4"><fox:label>2.12.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-12.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-12"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-13"><fox:label>2.13. Parsing Formatted Strings</fox:label><fox:outline internal-destination="jakartackbk-CHP-2-SECT-13.1"><fox:label>2.13.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2066"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2067"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2068"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2069"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2070"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-13.1"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-13.2"><fox:label>2.13.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2071"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2072"/><fox:destination internal-destination="I_2_tt97"/><fox:destination internal-destination="I_2_tt98"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-13.2"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-13.3"><fox:label>2.13.3. Discussion</fox:label><fox:destination internal-destination="I_2_tt99"/><fox:destination internal-destination="I_2_tt100"/><fox:destination internal-destination="I_2_tt101"/><fox:destination internal-destination="I_2_tt102"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2073"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2074"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2075"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2076"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2077"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-13.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-13"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-14"><fox:label>2.14. Calculating String Difference</fox:label><fox:outline internal-destination="jakartackbk-CHP-2-SECT-14.1"><fox:label>2.14.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2078"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2079"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2080"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2081"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2082"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-14.1"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-14.2"><fox:label>2.14.2. Solution</fox:label><fox:destination internal-destination="I_2_tt103"/><fox:destination internal-destination="I_2_tt104"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-14.2"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-14.3"><fox:label>2.14.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2083"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2084"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2085"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2086"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2087"/><fox:destination internal-destination="I_2_tt105"/><fox:destination internal-destination="I_2_tt106"/><fox:destination internal-destination="I_2_tt107"/><fox:destination internal-destination="I_2_tt108"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-14.3"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-14.4"><fox:label>2.14.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-14.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-14"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-15"><fox:label>2.15. Using Commons Codec</fox:label><fox:outline internal-destination="jakartackbk-CHP-2-SECT-15.1"><fox:label>2.15.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2088"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-15.1"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-15.2"><fox:label>2.15.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-15.2"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-15.3"><fox:label>2.15.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2089"/><fox:destination internal-destination="I_2_tt109"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-15.3"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-15.4"><fox:label>2.15.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-15.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-15"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-16"><fox:label>2.16. Getting the Commons Codec Source Code</fox:label><fox:outline internal-destination="jakartackbk-CHP-2-SECT-16.1"><fox:label>2.16.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2090"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2091"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2092"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2093"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-16.1"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-16.2"><fox:label>2.16.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-16.2"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-16.3"><fox:label>2.16.3. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2094"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-16.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-16"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-17"><fox:label>2.17. Calculating Soundex</fox:label><fox:outline internal-destination="jakartackbk-CHP-2-SECT-17.1"><fox:label>2.17.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2095"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2096"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2097"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2098"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2099"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2100"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2101"/><fox:destination internal-destination="jakartackbk-CHP-2-ITERM-2102"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-17.1"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-17.2"><fox:label>2.17.2. Solution</fox:label><fox:destination internal-destination="I_2_tt110"/><fox:destination internal-destination="I_2_tt111"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-17.2"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-17.3"><fox:label>2.17.3. Discussion</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-17.3"/><fox:outline internal-destination="jakartackbk-CHP-2-SECT-17.4"><fox:label>2.17.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-17.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-2-SECT-17"/></fox:outline><fox:destination xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-CHP-2"/><fox:outline xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-CHP-3"><fox:label>Chapter 3. JavaBeans</fox:label><fox:outline internal-destination="ch03-2-fm2xml"><fox:label>3.1. Introduction</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2103"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2104"/><fox:destination internal-destination="jakartackbk-CHP-3-EX-1"/></fox:outline><fox:destination internal-destination="ch03-2-fm2xml"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-1"><fox:label>3.1. Representing Beans Graphically</fox:label><fox:outline internal-destination="jakartackbk-CHP-3-SECT-1.1"><fox:label>3.1.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2105"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2106"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2107"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2108"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2109"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-1.1"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-1.2"><fox:label>3.1.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2110"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2111"/><fox:destination internal-destination="jakartackbk-CHP-3-FIG-1"/><fox:destination internal-destination="I_3_tt112"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-1.2"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-1.3"><fox:label>3.1.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-EX-2"/><fox:destination internal-destination="jakartackbk-CHP-3-EX-3"/><fox:destination internal-destination="jakartackbk-CHP-3-FIG-2"/><fox:destination internal-destination="I_3_tt113"/><fox:destination internal-destination="jakartackbk-CHP-3-NOTE-53"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-1.3"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-1.4"><fox:label>3.1.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2112"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2113"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2114"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2115"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2116"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2117"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2118"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2119"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2120"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2121"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2122"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2123"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-1.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-1"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-2"><fox:label>3.2. Obtaining Commons BeanUtils</fox:label><fox:outline internal-destination="jakartackbk-CHP-3-SECT-2.1"><fox:label>3.2.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2124"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2125"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2126"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2127"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-2.1"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-2.2"><fox:label>3.2.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-2.2"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-2.3"><fox:label>3.2.3. Discussion</fox:label><fox:destination internal-destination="I_3_tt114"/><fox:destination internal-destination="jakartackbk-CHP-3-SIDEBAR-1"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2128"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2129"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2130"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2131"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-2.3"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-2.4"><fox:label>3.2.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-2.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-2"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-3"><fox:label>3.3. Getting the Commons BeanUtils Source Code</fox:label><fox:outline internal-destination="jakartackbk-CHP-3-SECT-3.1"><fox:label>3.3.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2132"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2133"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2134"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2135"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2136"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2137"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-3.1"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-3.2"><fox:label>3.3.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-3.2"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-3.3"><fox:label>3.3.3. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-3.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-3"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-4"><fox:label>3.4. Accessing Simple Bean Properties</fox:label><fox:outline internal-destination="jakartackbk-CHP-3-SECT-4.1"><fox:label>3.4.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2138"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2139"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2140"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2141"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-4.1"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-4.2"><fox:label>3.4.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2142"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2143"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2144"/><fox:destination internal-destination="I_3_tt115"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2145"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2146"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-4.2"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-4.3"><fox:label>3.4.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2147"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2148"/><fox:destination internal-destination="jakartackbk-CHP-3-EX-4"/><fox:destination internal-destination="I_3_tt116"/><fox:destination internal-destination="jakartackbk-CHP-3-NOTE-54"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-4.3"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-4.4"><fox:label>3.4.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2149"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2150"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2151"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2152"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-4.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-4"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-5"><fox:label>3.5. Accessing Nested Bean Properties</fox:label><fox:outline internal-destination="jakartackbk-CHP-3-SECT-5.1"><fox:label>3.5.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2153"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2154"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2155"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2156"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2157"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-5.1"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-5.2"><fox:label>3.5.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2158"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2159"/><fox:destination internal-destination="I_3_tt117"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-5.2"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-5.3"><fox:label>3.5.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-FIG-3"/><fox:destination internal-destination="I_3_tt118"/><fox:destination internal-destination="I_3_tt119"/><fox:destination internal-destination="jakartackbk-CHP-3-NOTE-55"/><fox:destination internal-destination="I_3_tt120"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2160"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2161"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2162"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2163"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2164"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2165"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2166"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2167"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2168"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2169"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2170"/><fox:destination internal-destination="I_3_tt121"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-5.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-5"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-6"><fox:label>3.6. Accessing Indexed Bean Properties</fox:label><fox:outline internal-destination="jakartackbk-CHP-3-SECT-6.1"><fox:label>3.6.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2171"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2172"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2173"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2174"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2175"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-6.1"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-6.2"><fox:label>3.6.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2176"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2177"/><fox:destination internal-destination="I_3_tt122"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-6.2"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-6.3"><fox:label>3.6.3. Discussion</fox:label><fox:destination internal-destination="I_3_tt123"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-6.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-6"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-7"><fox:label>3.7. Accessing Mapped Bean Properties</fox:label><fox:outline internal-destination="jakartackbk-CHP-3-SECT-7.1"><fox:label>3.7.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2178"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2179"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2180"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2181"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2182"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-7.1"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-7.2"><fox:label>3.7.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2183"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2184"/><fox:destination internal-destination="I_3_tt124"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-7.2"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-7.3"><fox:label>3.7.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-FIG-4"/><fox:destination internal-destination="I_3_tt125"/><fox:destination internal-destination="I_3_tt126"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2185"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2186"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2187"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2188"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2189"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-7.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-7"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-8"><fox:label>3.8. Accessing a Simple, Nested, Indexed, and Mapped Bean Property</fox:label><fox:outline internal-destination="jakartackbk-CHP-3-SECT-8.1"><fox:label>3.8.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2190"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2191"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2192"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2193"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-8.1"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-8.2"><fox:label>3.8.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2194"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2195"/><fox:destination internal-destination="I_3_tt127"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-8.2"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-8.3"><fox:label>3.8.3. Discussion</fox:label><fox:destination internal-destination="I_3_tt128"/><fox:destination internal-destination="jakartackbk-CHP-3-FIG-5"/><fox:destination internal-destination="I_3_tt129"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-8.3"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-8.4"><fox:label>3.8.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2196"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2197"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2198"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2199"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2200"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2201"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2202"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2203"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-8.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-8"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-9"><fox:label>3.9. Determining the Type of a Bean Property</fox:label><fox:outline internal-destination="jakartackbk-CHP-3-SECT-9.1"><fox:label>3.9.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2204"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2205"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2206"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2207"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-9.1"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-9.2"><fox:label>3.9.2. Solution</fox:label><fox:destination internal-destination="I_3_tt130"/><fox:destination internal-destination="I_3_tt131"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-9.2"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-9.3"><fox:label>3.9.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2208"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2209"/><fox:destination internal-destination="I_3_tt132"/><fox:destination internal-destination="I_3_tt133"/><fox:destination internal-destination="I_3_tt134"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-9.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-9"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-10"><fox:label>3.10. Comparing Beans</fox:label><fox:outline internal-destination="jakartackbk-CHP-3-SECT-10.1"><fox:label>3.10.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2210"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2211"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2212"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2213"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2214"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-10.1"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-10.2"><fox:label>3.10.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2215"/><fox:destination internal-destination="I_3_tt135"/><fox:destination internal-destination="I_3_tt136"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-10.2"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-10.3"><fox:label>3.10.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-FIG-6"/><fox:destination internal-destination="I_3_tt137"/><fox:destination internal-destination="jakartackbk-CHP-3-EX-5"/><fox:destination internal-destination="I_3_tt138"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-10.3"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-10.4"><fox:label>3.10.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2216"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2217"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2218"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2219"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2220"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2221"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2222"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-10.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-10"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-11"><fox:label>3.11. Copying Bean Properties</fox:label><fox:outline internal-destination="jakartackbk-CHP-3-SECT-11.1"><fox:label>3.11.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2223"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2224"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2225"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2226"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2227"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-11.1"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-11.2"><fox:label>3.11.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2228"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2229"/><fox:destination internal-destination="I_3_tt139"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-11.2"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-11.3"><fox:label>3.11.3. Discussion</fox:label><fox:destination internal-destination="I_3_tt140"/><fox:destination internal-destination="I_3_tt141"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-11.3"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-11.4"><fox:label>3.11.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-11.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-11"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-12"><fox:label>3.12. Cloning a Bean</fox:label><fox:outline internal-destination="jakartackbk-CHP-3-SECT-12.1"><fox:label>3.12.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2230"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2231"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2232"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2233"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2234"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-12.1"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-12.2"><fox:label>3.12.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2235"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2236"/><fox:destination internal-destination="I_3_tt142"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-12.2"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-12.3"><fox:label>3.12.3. Discussion</fox:label><fox:destination internal-destination="I_3_tt143"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-12.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-12"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-13"><fox:label>3.13. Setting a Bean Property</fox:label><fox:outline internal-destination="jakartackbk-CHP-3-SECT-13.1"><fox:label>3.13.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2237"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2238"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2239"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2240"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2241"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-13.1"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-13.2"><fox:label>3.13.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2242"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2243"/><fox:destination internal-destination="I_3_tt144"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-13.2"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-13.3"><fox:label>3.13.3. Discussion</fox:label><fox:destination internal-destination="I_3_tt145"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-13.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-13"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-14"><fox:label>3.14. Testing Property Access</fox:label><fox:outline internal-destination="jakartackbk-CHP-3-SECT-14.1"><fox:label>3.14.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2244"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2245"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2246"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2247"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2248"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-14.1"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-14.2"><fox:label>3.14.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2249"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2250"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2251"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2252"/><fox:destination internal-destination="I_3_tt146"/><fox:destination internal-destination="I_3_tt147"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-14.2"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-14.3"><fox:label>3.14.3. Discussion</fox:label><fox:destination internal-destination="I_3_tt148"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-14.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-14"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-15"><fox:label>3.15. Validating Beans with Predicates</fox:label><fox:outline internal-destination="jakartackbk-CHP-3-SECT-15.1"><fox:label>3.15.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2253"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2254"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2255"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2256"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2257"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-15.1"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-15.2"><fox:label>3.15.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2258"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2259"/><fox:destination internal-destination="I_3_tt149"/><fox:destination internal-destination="I_3_tt150"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-15.2"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-15.3"><fox:label>3.15.3. Discussion</fox:label><fox:destination internal-destination="I_3_tt151"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-15.3"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-15.4"><fox:label>3.15.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-15.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-15"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-16"><fox:label>3.16. Creating a Map of Bean Properties</fox:label><fox:outline internal-destination="jakartackbk-CHP-3-SECT-16.1"><fox:label>3.16.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2260"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2261"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2262"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2263"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-16.1"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-16.2"><fox:label>3.16.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2264"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2265"/><fox:destination internal-destination="I_3_tt152"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-16.2"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-16.3"><fox:label>3.16.3. Discussion</fox:label><fox:destination internal-destination="I_3_tt153"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-16.3"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-16.4"><fox:label>3.16.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-16.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-16"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-17"><fox:label>3.17. Wrapping a Bean with a Map</fox:label><fox:outline internal-destination="jakartackbk-CHP-3-SECT-17.1"><fox:label>3.17.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2266"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2267"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2268"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2269"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-17.1"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-17.2"><fox:label>3.17.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2270"/><fox:destination internal-destination="I_3_tt154"/><fox:destination internal-destination="I_3_tt155"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-17.2"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-17.3"><fox:label>3.17.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2271"/><fox:destination internal-destination="jakartackbk-CHP-3-TABLE-1"/><fox:destination internal-destination="jakartackbk-CHP-3-EX-6"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-17.3"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-17.4"><fox:label>3.17.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2272"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2273"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2274"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2275"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-17.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-17"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-18"><fox:label>3.18. Creating a Dynamic Bean</fox:label><fox:outline internal-destination="jakartackbk-CHP-3-SECT-18.1"><fox:label>3.18.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2276"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2277"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2278"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-18.1"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-18.2"><fox:label>3.18.2. Solution</fox:label><fox:destination internal-destination="I_3_tt156"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2279"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2280"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2281"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-18.2"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-18.3"><fox:label>3.18.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-TABLE-2"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2282"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-18.3"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-18.4"><fox:label>3.18.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-18.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-18"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-19"><fox:label>3.19. Getting and Setting Properties as Strings</fox:label><fox:outline internal-destination="jakartackbk-CHP-3-SECT-19.1"><fox:label>3.19.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2283"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2284"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2285"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2286"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-19.1"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-19.2"><fox:label>3.19.2. Solution</fox:label><fox:destination internal-destination="I_3_tt157"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-19.2"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-19.3"><fox:label>3.19.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-3-EX-7"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2287"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2288"/><fox:destination internal-destination="jakartackbk-CHP-3-ITERM-2289"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-19.3"/><fox:outline internal-destination="jakartackbk-CHP-3-SECT-19.4"><fox:label>3.19.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-19.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-3-SECT-19"/></fox:outline><fox:destination xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-CHP-3"/><fox:outline xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-CHP-4"><fox:label>Chapter 4. Functors</fox:label><fox:outline internal-destination="ch04-2-fm2xml"><fox:label>4.1. Introduction</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2290"/></fox:outline><fox:destination internal-destination="ch04-2-fm2xml"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-1"><fox:label>4.1. Obtaining Commons Collections</fox:label><fox:outline internal-destination="jakartackbk-CHP-4-SECT-1.1"><fox:label>4.1.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2291"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2292"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2293"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-1.1"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-1.2"><fox:label>4.1.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-1.2"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-1.3"><fox:label>4.1.3. Discussion</fox:label><fox:destination internal-destination="I_4_tt158"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-1.3"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-1.4"><fox:label>4.1.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-1.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-1"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-2"><fox:label>4.2. Getting the Commons Collections Source Code</fox:label><fox:outline internal-destination="jakartackbk-CHP-4-SECT-2.1"><fox:label>4.2.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2294"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2295"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2296"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2297"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2298"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-2.1"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-2.2"><fox:label>4.2.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-2.2"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-2.3"><fox:label>4.2.3. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-2.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-2"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-3"><fox:label>4.3. Reversing a Comparator</fox:label><fox:outline internal-destination="jakartackbk-CHP-4-SECT-3.1"><fox:label>4.3.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2299"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2300"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2301"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-3.1"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-3.2"><fox:label>4.3.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2302"/><fox:destination internal-destination="I_4_tt159"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-3.2"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-3.3"><fox:label>4.3.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-EX-1"/><fox:destination internal-destination="jakartackbk-CHP-4-EX-2"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-3.3"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-3.4"><fox:label>4.3.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2303"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2304"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2305"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-3.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-3"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-4"><fox:label>4.4. Chaining Comparators</fox:label><fox:outline internal-destination="jakartackbk-CHP-4-SECT-4.1"><fox:label>4.4.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2306"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2307"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2308"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-4.1"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-4.2"><fox:label>4.4.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2309"/><fox:destination internal-destination="I_4_tt160"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-4.2"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-4.3"><fox:label>4.4.3. Discussion</fox:label><fox:destination internal-destination="I_4_tt161"/><fox:destination internal-destination="I_4_tt162"/><fox:destination internal-destination="I_4_tt163"/><fox:destination internal-destination="jakartackbk-CHP-4-SIDEBAR-1"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2310"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-4.3"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-4.4"><fox:label>4.4.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2311"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2312"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2313"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-4.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-4"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-5"><fox:label>4.5. Comparing Nulls</fox:label><fox:outline internal-destination="jakartackbk-CHP-4-SECT-5.1"><fox:label>4.5.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2314"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2315"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2316"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-5.1"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-5.2"><fox:label>4.5.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2317"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2318"/><fox:destination internal-destination="I_4_tt164"/><fox:destination internal-destination="jakartackbk-CHP-4-NOTE-56"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-5.2"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-5.3"><fox:label>4.5.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2319"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2320"/><fox:destination internal-destination="I_4_tt165"/><fox:destination internal-destination="I_4_tt166"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-5.3"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-5.4"><fox:label>4.5.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-5.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-5"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-6"><fox:label>4.6. Fixed-Order Comparison</fox:label><fox:outline internal-destination="jakartackbk-CHP-4-SECT-6.1"><fox:label>4.6.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2321"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2322"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2323"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2324"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2325"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-6.1"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-6.2"><fox:label>4.6.2. Solution</fox:label><fox:destination internal-destination="I_4_tt167"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-6.2"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-6.3"><fox:label>4.6.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-EX-3"/><fox:destination internal-destination="jakartackbk-CHP-4-EX-4"/><fox:destination internal-destination="I_4_tt168"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-6.3"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-6.4"><fox:label>4.6.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2326"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2327"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2328"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2329"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2330"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-6.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-6"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-7"><fox:label>4.7. Using Simple Predicates</fox:label><fox:outline internal-destination="jakartackbk-CHP-4-SECT-7.1"><fox:label>4.7.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2331"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2332"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2333"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-7.1"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-7.2"><fox:label>4.7.2. Solution</fox:label><fox:destination internal-destination="I_4_tt169"/><fox:destination internal-destination="I_4_tt170"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-7.2"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-7.3"><fox:label>4.7.3. Discussion</fox:label><fox:destination internal-destination="I_4_tt171"/><fox:destination internal-destination="jakartackbk-CHP-4-TABLE-1"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2334"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2335"/><fox:destination internal-destination="I_4_tt172"/><fox:destination internal-destination="I_4_tt173"/><fox:destination internal-destination="I_4_tt174"/><fox:destination internal-destination="I_4_tt175"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-7.3"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-7.4"><fox:label>4.7.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2336"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2337"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2338"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-7.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-7"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-8"><fox:label>4.8. Writing a Custom Predicate</fox:label><fox:outline internal-destination="jakartackbk-CHP-4-SECT-8.1"><fox:label>4.8.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2339"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2340"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2341"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2342"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2343"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2344"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-8.1"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-8.2"><fox:label>4.8.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2345"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2346"/><fox:destination internal-destination="jakartackbk-CHP-4-EX-5"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-8.2"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-8.3"><fox:label>4.8.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-EX-6"/><fox:destination internal-destination="I_4_tt176"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-8.3"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-8.4"><fox:label>4.8.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2347"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2348"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2349"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2350"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2351"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2352"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-8.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-8"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-9"><fox:label>4.9. Creating Composite Predicates</fox:label><fox:outline internal-destination="jakartackbk-CHP-4-SECT-9.1"><fox:label>4.9.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2353"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2354"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2355"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2356"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2357"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2358"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-9.1"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-9.2"><fox:label>4.9.2. Solution</fox:label><fox:destination internal-destination="I_4_tt177"/><fox:destination internal-destination="I_4_tt178"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-9.2"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-9.3"><fox:label>4.9.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-FIG-1"/><fox:destination internal-destination="I_4_tt179"/><fox:destination internal-destination="jakartackbk-CHP-4-FIG-2"/><fox:destination internal-destination="I_4_tt180"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2362"/><fox:destination internal-destination="jakartackbk-CHP-4-EX-7"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2363"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2364"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2365"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2366"/><fox:destination internal-destination="jakartackbk-CHP-4-EX-8"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2367"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2368"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2369"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2370"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2371"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2372"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2373"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2374"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-9.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-9"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-10"><fox:label>4.10. Transforming Objects</fox:label><fox:outline internal-destination="jakartackbk-CHP-4-SECT-10.1"><fox:label>4.10.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2375"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2376"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2377"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-10.1"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-10.2"><fox:label>4.10.2. Solution</fox:label><fox:destination internal-destination="I_4_tt181"/><fox:destination internal-destination="I_4_tt182"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-10.2"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-10.3"><fox:label>4.10.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-FIG-3"/><fox:destination internal-destination="I_4_tt183"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-10.3"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-10.4"><fox:label>4.10.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-10.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-10"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-11"><fox:label>4.11. Creating a Chain of Transformations</fox:label><fox:outline internal-destination="jakartackbk-CHP-4-SECT-11.1"><fox:label>4.11.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2378"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2379"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2380"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2381"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-11.1"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-11.2"><fox:label>4.11.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2382"/><fox:destination internal-destination="I_4_tt184"/><fox:destination internal-destination="I_4_tt185"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-11.2"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-11.3"><fox:label>4.11.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-FIG-4"/><fox:destination internal-destination="I_4_tt186"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-11.3"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-11.4"><fox:label>4.11.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2383"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2384"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-11.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-11"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-12"><fox:label>4.12. Applying Conditional Transformations</fox:label><fox:outline internal-destination="jakartackbk-CHP-4-SECT-12.1"><fox:label>4.12.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2385"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2386"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2387"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2388"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-12.1"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-12.2"><fox:label>4.12.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2389"/><fox:destination internal-destination="jakartackbk-CHP-4-EX-9"/><fox:destination internal-destination="I_4_tt187"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-12.2"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-12.3"><fox:label>4.12.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-FIG-5"/><fox:destination internal-destination="I_4_tt188"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-12.3"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-12.4"><fox:label>4.12.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2390"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2391"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2392"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2393"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-12.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-12"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-13"><fox:label>4.13. Writing a Closure</fox:label><fox:outline internal-destination="jakartackbk-CHP-4-SECT-13.1"><fox:label>4.13.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2394"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2395"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2396"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-13.1"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-13.2"><fox:label>4.13.2. Solution</fox:label><fox:destination internal-destination="I_4_tt189"/><fox:destination internal-destination="I_4_tt190"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-13.2"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-13.3"><fox:label>4.13.3. Discussion</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-13.3"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-13.4"><fox:label>4.13.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-13.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-13"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-14"><fox:label>4.14. Chaining Closures</fox:label><fox:outline internal-destination="jakartackbk-CHP-4-SECT-14.1"><fox:label>4.14.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2397"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2398"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2399"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2400"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-14.1"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-14.2"><fox:label>4.14.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2401"/><fox:destination internal-destination="I_4_tt191"/><fox:destination internal-destination="I_4_tt192"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-14.2"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-14.3"><fox:label>4.14.3. Discussion</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-14.3"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-14.4"><fox:label>4.14.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-14.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-14"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-15"><fox:label>4.15. Modeling Conditional Statements with Closures</fox:label><fox:outline internal-destination="jakartackbk-CHP-4-SECT-15.1"><fox:label>4.15.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2402"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2403"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2404"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-15.1"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-15.2"><fox:label>4.15.2. Solution</fox:label><fox:destination internal-destination="I_4_tt193"/><fox:destination internal-destination="I_4_tt194"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-15.2"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-15.3"><fox:label>4.15.3. Discussion</fox:label><fox:destination internal-destination="I_4_tt195"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2405"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2406"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2407"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-15.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-15"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-16"><fox:label>4.16. Modeling Loops with Closures</fox:label><fox:outline internal-destination="jakartackbk-CHP-4-SECT-16.1"><fox:label>4.16.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2408"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2409"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2410"/><fox:destination internal-destination="jakartackbk-CHP-4-ITERM-2411"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-16.1"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-16.2"><fox:label>4.16.2. Solution</fox:label><fox:destination internal-destination="I_4_tt196"/><fox:destination internal-destination="I_4_tt197"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-16.2"/><fox:outline internal-destination="jakartackbk-CHP-4-SECT-16.3"><fox:label>4.16.3. Discussion</fox:label><fox:destination internal-destination="I_4_tt198"/><fox:destination internal-destination="I_4_tt199"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-16.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-4-SECT-16"/></fox:outline><fox:destination xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-CHP-4"/><fox:outline xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-CHP-5"><fox:label>Chapter 5. Collections</fox:label><fox:outline internal-destination="ch05-2-fm2xml"><fox:label>5.1. Introduction</fox:label></fox:outline><fox:destination internal-destination="ch05-2-fm2xml"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-1"><fox:label>5.1. Obtaining Commons Collections</fox:label><fox:outline internal-destination="jakartackbk-CHP-5-SECT-1.1"><fox:label>5.1.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2412"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2413"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2414"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2415"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-1.1"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-1.2"><fox:label>5.1.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-1.2"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-1.3"><fox:label>5.1.3. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-1.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-1"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-2"><fox:label>5.2. Using a Looping Iterator</fox:label><fox:outline internal-destination="jakartackbk-CHP-5-SECT-2.1"><fox:label>5.2.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2416"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2417"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2418"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2419"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2420"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-2.1"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-2.2"><fox:label>5.2.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2421"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2422"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2423"/><fox:destination internal-destination="I_5_tt200"/><fox:destination internal-destination="I_5_tt201"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-2.2"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-2.3"><fox:label>5.2.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2424"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2425"/><fox:destination internal-destination="I_5_tt202"/><fox:destination internal-destination="I_5_tt203"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-2.3"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-2.4"><fox:label>5.2.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-2.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-2"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-3"><fox:label>5.3. Iterating Over an ArrayList</fox:label><fox:outline internal-destination="jakartackbk-CHP-5-SECT-3.1"><fox:label>5.3.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2426"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2427"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2428"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2429"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2430"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-3.1"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-3.2"><fox:label>5.3.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2431"/><fox:destination internal-destination="I_5_tt204"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2432"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2433"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2434"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2435"/><fox:destination internal-destination="I_5_tt205"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-3.2"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-3.3"><fox:label>5.3.3. Discussion</fox:label><fox:destination internal-destination="I_5_tt206"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2436"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2437"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2438"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2439"/><fox:destination internal-destination="I_5_tt207"/><fox:destination internal-destination="I_5_tt208"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-3.3"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-3.4"><fox:label>5.3.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-3.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-3"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-4"><fox:label>5.4. Filtering a Collection with a Predicate</fox:label><fox:outline internal-destination="jakartackbk-CHP-5-SECT-4.1"><fox:label>5.4.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2440"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2441"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2442"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2443"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2444"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-4.1"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-4.2"><fox:label>5.4.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2445"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2446"/><fox:destination internal-destination="I_5_tt209"/><fox:destination internal-destination="I_5_tt210"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-4.2"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-4.3"><fox:label>5.4.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2447"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2448"/><fox:destination internal-destination="jakartackbk-CHP-5-EX-1"/><fox:destination internal-destination="jakartackbk-CHP-5-EX-2"/><fox:destination internal-destination="I_5_tt211"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2449"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2450"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2451"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2452"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2453"/><fox:destination internal-destination="I_5_tt212"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-4.3"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-4.4"><fox:label>5.4.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2454"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2455"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2456"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2457"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2458"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-4.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-4"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-5"><fox:label>5.5. Iterating Through Distinct Elements</fox:label><fox:outline internal-destination="jakartackbk-CHP-5-SECT-5.1"><fox:label>5.5.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2459"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2460"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2461"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2462"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2463"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-5.1"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-5.2"><fox:label>5.5.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2464"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2465"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2466"/><fox:destination internal-destination="I_5_tt213"/><fox:destination internal-destination="I_5_tt214"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-5.2"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-5.3"><fox:label>5.5.3. Discussion</fox:label><fox:destination internal-destination="I_5_tt215"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-5.3"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-5.4"><fox:label>5.5.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-5.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-5"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-6"><fox:label>5.6. Using a Bag</fox:label><fox:outline internal-destination="jakartackbk-CHP-5-SECT-6.1"><fox:label>5.6.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2467"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2468"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2469"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2470"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2471"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-6.1"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-6.2"><fox:label>5.6.2. Solution</fox:label><fox:destination internal-destination="I_5_tt216"/><fox:destination internal-destination="I_5_tt217"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-6.2"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-6.3"><fox:label>5.6.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-EX-3"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2472"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2473"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2474"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2475"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2476"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2477"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2478"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2479"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2480"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2481"/><fox:destination internal-destination="I_5_tt218"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-6.3"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-6.4"><fox:label>5.6.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2482"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2483"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2484"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2485"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2486"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2487"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2488"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-6.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-6"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-7"><fox:label>5.7. Using a Buffer</fox:label><fox:outline internal-destination="jakartackbk-CHP-5-SECT-7.1"><fox:label>5.7.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2489"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2490"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2491"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2492"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2493"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-7.1"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-7.2"><fox:label>5.7.2. Solution</fox:label><fox:destination internal-destination="I_5_tt219"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-7.2"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-7.3"><fox:label>5.7.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2494"/><fox:destination internal-destination="jakartackbk-CHP-5-FIG-1"/><fox:destination internal-destination="I_5_tt220"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2495"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2496"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2497"/><fox:destination internal-destination="jakartackbk-CHP-5-EX-4"/><fox:destination internal-destination="jakartackbk-CHP-5-NOTE-57"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-7.3"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-7.4"><fox:label>5.7.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2498"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2499"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2500"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2501"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2502"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-7.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-7"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-8"><fox:label>5.8. Creating a Priority Queue</fox:label><fox:outline internal-destination="jakartackbk-CHP-5-SECT-8.1"><fox:label>5.8.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2503"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2504"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2505"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2506"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2507"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-8.1"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-8.2"><fox:label>5.8.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2508"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2509"/><fox:destination internal-destination="I_5_tt221"/><fox:destination internal-destination="I_5_tt222"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-8.2"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-8.3"><fox:label>5.8.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-EX-5"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2510"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2511"/><fox:destination internal-destination="jakartackbk-CHP-5-EX-6"/><fox:destination internal-destination="jakartackbk-CHP-5-EX-7"/><fox:destination internal-destination="I_5_tt223"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-8.3"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-8.4"><fox:label>5.8.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2512"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2513"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2514"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2515"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2516"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-8.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-8"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-9"><fox:label>5.9. Using a Blocking Buffer</fox:label><fox:outline internal-destination="jakartackbk-CHP-5-SECT-9.1"><fox:label>5.9.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2517"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2518"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2519"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2520"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2521"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-9.1"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-9.2"><fox:label>5.9.2. Solution</fox:label><fox:destination internal-destination="I_5_tt224"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2522"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2523"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2524"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2525"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2526"/><fox:destination internal-destination="jakartackbk-CHP-5-EX-8"/><fox:destination internal-destination="I_5_tt225"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-9.2"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-9.3"><fox:label>5.9.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-FIG-2"/><fox:destination internal-destination="I_5_tt226"/><fox:destination internal-destination="I_5_tt227"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2527"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2528"/><fox:destination internal-destination="jakartackbk-CHP-5-EX-9"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-9.3"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-9.4"><fox:label>5.9.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2529"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2530"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2531"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2532"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2533"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-9.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-9"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-10"><fox:label>5.10. Storing Multiple Values in a Map</fox:label><fox:outline internal-destination="jakartackbk-CHP-5-SECT-10.1"><fox:label>5.10.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2534"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2535"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2536"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2537"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2538"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2539"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-10.1"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-10.2"><fox:label>5.10.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2540"/><fox:destination internal-destination="I_5_tt228"/><fox:destination internal-destination="I_5_tt229"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-10.2"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-10.3"><fox:label>5.10.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2541"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2542"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2543"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2544"/><fox:destination internal-destination="jakartackbk-CHP-5-EX-10"/><fox:destination internal-destination="I_5_tt230"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2545"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2546"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2547"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2548"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2549"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2550"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2551"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2552"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-10.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-10"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-11"><fox:label>5.11. Retrieving a Key by a Value</fox:label><fox:outline internal-destination="jakartackbk-CHP-5-SECT-11.1"><fox:label>5.11.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2553"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2554"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2555"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2556"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2557"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-11.1"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-11.2"><fox:label>5.11.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2558"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2559"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2560"/><fox:destination internal-destination="I_5_tt231"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-11.2"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-11.3"><fox:label>5.11.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-EX-11"/><fox:destination internal-destination="I_5_tt232"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2561"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2562"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-11.3"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-11.4"><fox:label>5.11.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2563"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2564"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2565"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2566"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2567"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-11.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-11"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-12"><fox:label>5.12. Using a Case-Insensitive Map</fox:label><fox:outline internal-destination="jakartackbk-CHP-5-SECT-12.1"><fox:label>5.12.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2568"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2569"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2570"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2571"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2572"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2573"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2574"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2575"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-12.1"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-12.2"><fox:label>5.12.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2576"/><fox:destination internal-destination="I_5_tt233"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-12.2"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-12.3"><fox:label>5.12.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-EX-12"/><fox:destination internal-destination="I_5_tt234"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-12.3"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-12.4"><fox:label>5.12.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2577"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2578"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2579"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2580"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2581"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2582"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2583"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-12.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-12"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-13"><fox:label>5.13. Creating Typed Collections and Maps</fox:label><fox:outline internal-destination="jakartackbk-CHP-5-SECT-13.1"><fox:label>5.13.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2584"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2585"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2586"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2587"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2588"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-13.1"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-13.2"><fox:label>5.13.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2589"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2590"/><fox:destination internal-destination="I_5_tt235"/><fox:destination internal-destination="I_5_tt236"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-13.2"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-13.3"><fox:label>5.13.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-EX-13"/><fox:destination internal-destination="jakartackbk-CHP-5-NOTE-58"/><fox:destination internal-destination="jakartackbk-CHP-5-EX-14"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-13.3"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-13.4"><fox:label>5.13.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2591"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2592"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2593"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2594"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2595"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-13.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-13"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-14"><fox:label>5.14. Constraining Map Values</fox:label><fox:outline internal-destination="jakartackbk-CHP-5-SECT-14.1"><fox:label>5.14.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2596"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2597"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2598"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2599"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2600"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2601"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-14.1"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-14.2"><fox:label>5.14.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2602"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2603"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2604"/><fox:destination internal-destination="I_5_tt237"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-14.2"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-14.3"><fox:label>5.14.3. Discussion</fox:label><fox:destination internal-destination="I_5_tt238"/><fox:destination internal-destination="jakartackbk-CHP-5-EX-15"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2605"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2606"/><fox:destination internal-destination="jakartackbk-CHP-5-EX-16"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2607"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2608"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2609"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2610"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2611"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2612"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-14.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-14"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-15"><fox:label>5.15. Constraining List Contents</fox:label><fox:outline internal-destination="jakartackbk-CHP-5-SECT-15.1"><fox:label>5.15.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2613"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2614"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2615"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2616"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2617"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-15.1"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-15.2"><fox:label>5.15.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2618"/><fox:destination internal-destination="I_5_tt239"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-15.2"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-15.3"><fox:label>5.15.3. Discussion</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-15.3"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-15.4"><fox:label>5.15.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-15.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-15"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-16"><fox:label>5.16. Transforming Collections</fox:label><fox:outline internal-destination="jakartackbk-CHP-5-SECT-16.1"><fox:label>5.16.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2619"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2620"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2621"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2622"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-16.1"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-16.2"><fox:label>5.16.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2623"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2624"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2625"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2626"/><fox:destination internal-destination="I_5_tt240"/><fox:destination internal-destination="I_5_tt241"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-16.2"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-16.3"><fox:label>5.16.3. Discussion</fox:label><fox:destination internal-destination="I_5_tt242"/><fox:destination internal-destination="I_5_tt243"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-16.3"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-16.4"><fox:label>5.16.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2627"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2628"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2629"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2630"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2631"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-16.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-16"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-17"><fox:label>5.17. Creating a Least Recently Used Cache</fox:label><fox:outline internal-destination="jakartackbk-CHP-5-SECT-17.1"><fox:label>5.17.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2632"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2633"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2634"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2635"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-17.1"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-17.2"><fox:label>5.17.2. Solution</fox:label><fox:destination internal-destination="I_5_tt244"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-17.2"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-17.3"><fox:label>5.17.3. Discussion</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-17.3"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-17.4"><fox:label>5.17.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-17.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-17"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-18"><fox:label>5.18. Using a Lazy Map</fox:label><fox:outline internal-destination="jakartackbk-CHP-5-SECT-18.1"><fox:label>5.18.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2636"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2637"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2638"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2639"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2640"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2641"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2642"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-18.1"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-18.2"><fox:label>5.18.2. Solution</fox:label><fox:destination internal-destination="I_5_tt245"/><fox:destination internal-destination="I_5_tt246"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-18.2"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-18.3"><fox:label>5.18.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-EX-17"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2643"/><fox:destination internal-destination="jakartackbk-CHP-5-EX-18"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-18.3"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-18.4"><fox:label>5.18.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2644"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2645"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2646"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2647"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2648"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-18.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-18"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-19"><fox:label>5.19. Counting Objects in a Collection</fox:label><fox:outline internal-destination="jakartackbk-CHP-5-SECT-19.1"><fox:label>5.19.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2649"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2650"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2651"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2652"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-19.1"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-19.2"><fox:label>5.19.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2653"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2654"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2655"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2656"/><fox:destination internal-destination="I_5_tt247"/><fox:destination internal-destination="I_5_tt248"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-19.2"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-19.3"><fox:label>5.19.3. Discussion</fox:label><fox:destination internal-destination="I_5_tt249"/><fox:destination internal-destination="I_5_tt250"/><fox:destination internal-destination="I_5_tt251"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2657"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2658"/><fox:destination internal-destination="I_5_tt252"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-19.3"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-19.4"><fox:label>5.19.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2659"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2660"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2661"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2662"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-19.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-19"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-20"><fox:label>5.20. Performing Set Operations</fox:label><fox:outline internal-destination="jakartackbk-CHP-5-SECT-20.1"><fox:label>5.20.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2663"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2664"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2665"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2666"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2667"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2668"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2669"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-20.1"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-20.2"><fox:label>5.20.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2670"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2671"/><fox:destination internal-destination="jakartackbk-CHP-5-EX-19"/><fox:destination internal-destination="I_5_tt253"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-20.2"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-20.3"><fox:label>5.20.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-FIG-3"/><fox:destination internal-destination="I_5_tt254"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-20.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-20"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-21"><fox:label>5.21. Retrieving Map Values Without Casting</fox:label><fox:outline internal-destination="jakartackbk-CHP-5-SECT-21.1"><fox:label>5.21.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2676"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2677"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2678"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2679"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2680"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2681"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-21.1"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-21.2"><fox:label>5.21.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2682"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2683"/><fox:destination internal-destination="I_5_tt255"/><fox:destination internal-destination="I_5_tt256"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-21.2"/><fox:outline internal-destination="jakartackbk-CHP-5-SECT-21.3"><fox:label>5.21.3. Discussion</fox:label><fox:destination internal-destination="I_5_tt257"/><fox:destination internal-destination="jakartackbk-CHP-5-TABLE-1"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2684"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2685"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2686"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2687"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2688"/><fox:destination internal-destination="jakartackbk-CHP-5-ITERM-2689"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-21.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-5-SECT-21"/></fox:outline><fox:destination xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-CHP-5"/><fox:outline xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-CHP-6"><fox:label>Chapter 6. XML</fox:label><fox:outline internal-destination="ch06-2-fm2xml"><fox:label>6.1. Introduction</fox:label></fox:outline><fox:destination internal-destination="ch06-2-fm2xml"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-1"><fox:label>6.1. Obtaining Jakarta Commons Digester</fox:label><fox:outline internal-destination="jakartackbk-CHP-6-SECT-1.1"><fox:label>6.1.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2690"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2691"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2692"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-1.1"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-1.2"><fox:label>6.1.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-1.2"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-1.3"><fox:label>6.1.3. Discussion</fox:label><fox:destination internal-destination="I_6_tt258"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-1.3"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-1.4"><fox:label>6.1.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-1.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-1"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-2"><fox:label>6.2. Turning XML Documents into Objects</fox:label><fox:outline internal-destination="jakartackbk-CHP-6-SECT-2.1"><fox:label>6.2.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2693"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2694"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2695"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2696"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-2.1"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-2.2"><fox:label>6.2.2. Solution</fox:label><fox:destination internal-destination="I_6_tt259"/><fox:destination internal-destination="I_6_tt260"/><fox:destination internal-destination="I_6_tt261"/><fox:destination internal-destination="I_6_tt262"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-2.2"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-2.3"><fox:label>6.2.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2697"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2698"/><fox:destination internal-destination="I_6_tt263"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-2.3"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-2.4"><fox:label>6.2.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2699"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2700"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2701"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2702"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-2.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-2"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-3"><fox:label>6.3. Namespace-Aware Parsing</fox:label><fox:outline internal-destination="jakartackbk-CHP-6-SECT-3.1"><fox:label>6.3.1. Problem</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-3.1"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-3.2"><fox:label>6.3.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2703"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2704"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2705"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2706"/><fox:destination internal-destination="I_6_tt264"/><fox:destination internal-destination="I_6_tt265"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2707"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2708"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2709"/><fox:destination internal-destination="I_6_tt266"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2710"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2711"/><fox:destination internal-destination="I_6_tt267"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-3.2"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-3.3"><fox:label>6.3.3. Discussion</fox:label><fox:destination internal-destination="I_6_tt268"/><fox:destination internal-destination="I_6_tt269"/><fox:destination internal-destination="I_6_tt270"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-3.3"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-3.4"><fox:label>6.3.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2712"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2713"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2714"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2715"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-3.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-3"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-4"><fox:label>6.4. Creating a Simple XML Command Language</fox:label><fox:outline internal-destination="jakartackbk-CHP-6-SECT-4.1"><fox:label>6.4.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2716"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2717"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2718"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2719"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-4.1"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-4.2"><fox:label>6.4.2. Solution</fox:label><fox:destination internal-destination="I_6_tt271"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2720"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2721"/><fox:destination internal-destination="I_6_tt272"/><fox:destination internal-destination="I_6_tt273"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2722"/><fox:destination internal-destination="I_6_tt274"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2723"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2724"/><fox:destination internal-destination="I_6_tt275"/><fox:destination internal-destination="I_6_tt276"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-4.2"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-4.3"><fox:label>6.4.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2725"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2726"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-4.3"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-4.4"><fox:label>6.4.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2727"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2728"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2729"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2730"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-4.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-4"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-5"><fox:label>6.5. Variable Substitution and XML Parsing</fox:label><fox:outline internal-destination="jakartackbk-CHP-6-SECT-5.1"><fox:label>6.5.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2731"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2732"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2733"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2734"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2735"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-5.1"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-5.2"><fox:label>6.5.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2736"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2737"/><fox:destination internal-destination="jakartackbk-CHP-6-NOTE-59"/><fox:destination internal-destination="I_6_tt277"/><fox:destination internal-destination="I_6_tt278"/><fox:destination internal-destination="I_6_tt279"/><fox:destination internal-destination="I_6_tt280"/><fox:destination internal-destination="I_6_tt281"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-5.2"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-5.3"><fox:label>6.5.3. Discussion</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-5.3"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-5.4"><fox:label>6.5.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2738"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2739"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2740"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2741"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2742"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-5.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-5"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-6"><fox:label>6.6. Obtaining Jakarta Commons Betwixt</fox:label><fox:outline internal-destination="jakartackbk-CHP-6-SECT-6.1"><fox:label>6.6.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2743"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2744"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2745"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2746"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2747"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-6.1"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-6.2"><fox:label>6.6.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-6.2"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-6.3"><fox:label>6.6.3. Discussion</fox:label><fox:destination internal-destination="I_6_tt282"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-6.3"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-6.4"><fox:label>6.6.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-6.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-6"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-7"><fox:label>6.7. Turning Beans into XML Documents</fox:label><fox:outline internal-destination="jakartackbk-CHP-6-SECT-7.1"><fox:label>6.7.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2748"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2749"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2750"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2751"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2752"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-7.1"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-7.2"><fox:label>6.7.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2753"/><fox:destination internal-destination="I_6_tt283"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2754"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2755"/><fox:destination internal-destination="I_6_tt284"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-7.2"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-7.3"><fox:label>6.7.3. Discussion</fox:label><fox:destination internal-destination="I_6_tt285"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-7.3"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-7.4"><fox:label>6.7.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2756"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2757"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2758"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2759"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2760"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-7.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-7"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-8"><fox:label>6.8. Customizing XML Generated from an Object</fox:label><fox:outline internal-destination="jakartackbk-CHP-6-SECT-8.1"><fox:label>6.8.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2761"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2762"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2763"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2764"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2765"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2766"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2767"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-8.1"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-8.2"><fox:label>6.8.2. Solution</fox:label><fox:destination internal-destination="I_6_tt286"/><fox:destination internal-destination="I_6_tt287"/><fox:destination internal-destination="I_6_tt288"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-8.2"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-8.3"><fox:label>6.8.3. Discussion</fox:label><fox:destination internal-destination="I_6_tt289"/><fox:destination internal-destination="I_6_tt290"/><fox:destination internal-destination="I_6_tt291"/><fox:destination internal-destination="I_6_tt292"/><fox:destination internal-destination="I_6_tt293"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-8.3"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-8.4"><fox:label>6.8.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2768"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2769"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2770"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2771"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2772"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2773"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2774"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-8.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-8"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-9"><fox:label>6.9. Turning XML Documents into Beans</fox:label><fox:outline internal-destination="jakartackbk-CHP-6-SECT-9.1"><fox:label>6.9.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2775"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2776"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2777"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2778"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2779"/><fox:destination internal-destination="jakartackbk-CHP-6-ITERM-2780"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-9.1"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-9.2"><fox:label>6.9.2. Solution</fox:label><fox:destination internal-destination="I_6_tt294"/><fox:destination internal-destination="I_6_tt295"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-9.2"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-9.3"><fox:label>6.9.3. Discussion</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-9.3"/><fox:outline internal-destination="jakartackbk-CHP-6-SECT-9.4"><fox:label>6.9.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-9.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-6-SECT-9"/></fox:outline><fox:destination xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-CHP-6"/><fox:outline xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-CHP-7"><fox:label>Chapter 7. Application Infrastructure</fox:label><fox:outline internal-destination="ch07-2-fm2xml"><fox:label>7.1. Introduction</fox:label></fox:outline><fox:destination internal-destination="ch07-2-fm2xml"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-1"><fox:label>7.1. Obtaining Commons CLI</fox:label><fox:outline internal-destination="jakartackbk-CHP-7-SECT-1.1"><fox:label>7.1.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2781"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2782"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2783"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2784"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2785"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-1.1"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-1.2"><fox:label>7.1.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-1.2"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-1.3"><fox:label>7.1.3. Discussion</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-1.3"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-1.4"><fox:label>7.1.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-1.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-1"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-2"><fox:label>7.2. Parsing a Simple Command Line</fox:label><fox:outline internal-destination="jakartackbk-CHP-7-SECT-2.1"><fox:label>7.2.1. Problem</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-2.1"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-2.2"><fox:label>7.2.2. Solution</fox:label><fox:destination internal-destination="I_7_tt296"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-2.2"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-2.3"><fox:label>7.2.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2786"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2787"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2788"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2789"/><fox:destination internal-destination="I_7_tt297"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-2.3"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-2.4"><fox:label>7.2.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2790"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2791"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-2.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-2"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-3"><fox:label>7.3. Parsing a Complex Command Line</fox:label><fox:outline internal-destination="jakartackbk-CHP-7-SECT-3.1"><fox:label>7.3.1. Problem</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-3.1"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-3.2"><fox:label>7.3.2. Solution</fox:label><fox:destination internal-destination="I_7_tt298"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-3.2"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-3.3"><fox:label>7.3.3. Discussion</fox:label><fox:destination internal-destination="I_7_tt299"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-3.3"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-3.4"><fox:label>7.3.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-3.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-3"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-4"><fox:label>7.4. Printing Usage Information</fox:label><fox:outline internal-destination="jakartackbk-CHP-7-SECT-4.1"><fox:label>7.4.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2792"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2793"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2794"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2795"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-4.1"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-4.2"><fox:label>7.4.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2796"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2797"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2798"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2799"/><fox:destination internal-destination="jakartackbk-CHP-7-EX-1"/><fox:destination internal-destination="I_7_tt300"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-4.2"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-4.3"><fox:label>7.4.3. Discussion</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-4.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-4"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-5"><fox:label>7.5. Obtaining Commons Configuration</fox:label><fox:outline internal-destination="jakartackbk-CHP-7-SECT-5.1"><fox:label>7.5.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2800"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2801"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2802"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-5.1"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-5.2"><fox:label>7.5.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-5.2"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-5.3"><fox:label>7.5.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2803"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-5.3"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-5.4"><fox:label>7.5.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-5.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-5"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-6"><fox:label>7.6. Configuring Applications with Properties Files</fox:label><fox:outline internal-destination="jakartackbk-CHP-7-SECT-6.1"><fox:label>7.6.1. Problem</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-6.1"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-6.2"><fox:label>7.6.2. Solution</fox:label><fox:destination internal-destination="I_7_tt301"/><fox:destination internal-destination="I_7_tt302"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-6.2"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-6.3"><fox:label>7.6.3. Discussion</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-6.3"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-6.4"><fox:label>7.6.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2804"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-6.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-6"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-7"><fox:label>7.7. Configuring Applications with XML</fox:label><fox:outline internal-destination="jakartackbk-CHP-7-SECT-7.1"><fox:label>7.7.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2805"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2806"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2807"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2808"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2809"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-7.1"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-7.2"><fox:label>7.7.2. Solution</fox:label><fox:destination internal-destination="I_7_tt303"/><fox:destination internal-destination="I_7_tt304"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-7.2"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-7.3"><fox:label>7.7.3. Discussion</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-7.3"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-7.4"><fox:label>7.7.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-7.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-7"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-8"><fox:label>7.8. Using Composite Configuration</fox:label><fox:outline internal-destination="jakartackbk-CHP-7-SECT-8.1"><fox:label>7.8.1. Problem</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-8.1"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-8.2"><fox:label>7.8.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2810"/><fox:destination internal-destination="jakartackbk-CHP-7-TABLE-1"/><fox:destination internal-destination="jakartackbk-CHP-7-EX-2"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2811"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2812"/><fox:destination internal-destination="jakartackbk-CHP-7-EX-3"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2813"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2814"/><fox:destination internal-destination="jakartackbk-CHP-7-EX-4"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2815"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2816"/><fox:destination internal-destination="I_7_tt305"/><fox:destination internal-destination="I_7_tt306"/><fox:destination internal-destination="I_7_tt307"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-8.2"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-8.3"><fox:label>7.8.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2817"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2818"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2819"/><fox:destination internal-destination="I_7_tt308"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-8.3"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-8.4"><fox:label>7.8.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2820"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2821"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2822"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2823"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2824"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-8.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-8"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-9"><fox:label>7.9. Obtaining Commons Logging</fox:label><fox:outline internal-destination="jakartackbk-CHP-7-SECT-9.1"><fox:label>7.9.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2825"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2826"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2827"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2828"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2829"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-9.1"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-9.2"><fox:label>7.9.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-9.2"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-9.3"><fox:label>7.9.3. Discussion</fox:label><fox:destination internal-destination="I_7_tt309"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-9.3"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-9.4"><fox:label>7.9.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-9.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-9"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-10"><fox:label>7.10. Using an Abstract Logging Interface</fox:label><fox:outline internal-destination="jakartackbk-CHP-7-SECT-10.1"><fox:label>7.10.1. Problem</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-10.1"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-10.2"><fox:label>7.10.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2830"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2831"/><fox:destination internal-destination="I_7_tt310"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-10.2"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-10.3"><fox:label>7.10.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2832"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2833"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-10.3"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-10.4"><fox:label>7.10.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-10.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-10"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-11"><fox:label>7.11. Specifying a Logging Implementation</fox:label><fox:outline internal-destination="jakartackbk-CHP-7-SECT-11.1"><fox:label>7.11.1. Problem</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-11.1"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-11.2"><fox:label>7.11.2. Solution</fox:label><fox:destination internal-destination="I_7_tt311"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-11.2"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-11.3"><fox:label>7.11.3. Discussion</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-11.3"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-11.4"><fox:label>7.11.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2834"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2835"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2836"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2837"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2838"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-11.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-11"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-12"><fox:label>7.12. Obtaining Apache Log4J</fox:label><fox:outline internal-destination="jakartackbk-CHP-7-SECT-12.1"><fox:label>7.12.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2839"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2840"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2841"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2842"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2843"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-12.1"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-12.2"><fox:label>7.12.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-12.2"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-12.3"><fox:label>7.12.3. Discussion</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-12.3"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-12.4"><fox:label>7.12.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-12.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-12"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-13"><fox:label>7.13. Configuring Log4J with a Properties File</fox:label><fox:outline internal-destination="jakartackbk-CHP-7-SECT-13.1"><fox:label>7.13.1. Problem</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-13.1"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-13.2"><fox:label>7.13.2. Solution</fox:label><fox:destination internal-destination="I_7_tt312"/><fox:destination internal-destination="I_7_tt313"/><fox:destination internal-destination="I_7_tt314"/><fox:destination internal-destination="I_7_tt315"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-13.2"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-13.3"><fox:label>7.13.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2844"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2845"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-13.3"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-13.4"><fox:label>7.13.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2846"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2847"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2848"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2849"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2850"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-13.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-13"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-14"><fox:label>7.14. Configuring Log4J with XML</fox:label><fox:outline internal-destination="jakartackbk-CHP-7-SECT-14.1"><fox:label>7.14.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2851"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2852"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2853"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2854"/><fox:destination internal-destination="jakartackbk-CHP-7-ITERM-2855"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-14.1"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-14.2"><fox:label>7.14.2. Solution</fox:label><fox:destination internal-destination="I_7_tt316"/><fox:destination internal-destination="I_7_tt317"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-14.2"/><fox:outline internal-destination="jakartackbk-CHP-7-SECT-14.3"><fox:label>7.14.3. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-14.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-7-SECT-14"/></fox:outline><fox:destination xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-CHP-7"/><fox:outline xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-CHP-8"><fox:label>Chapter 8. Math</fox:label><fox:outline internal-destination="ch08-2-fm2xml"><fox:label>8.1. Introduction</fox:label></fox:outline><fox:destination internal-destination="ch08-2-fm2xml"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-1"><fox:label>8.1. Using Fractions</fox:label><fox:outline internal-destination="jakartackbk-CHP-8-SECT-1.1"><fox:label>8.1.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2856"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2857"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2858"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2859"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2860"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-1.1"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-1.2"><fox:label>8.1.2. Solution</fox:label><fox:destination internal-destination="I_8_tt318"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-1.2"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-1.3"><fox:label>8.1.3. Discussion</fox:label><fox:destination internal-destination="I_8_tt319"/><fox:destination internal-destination="jakartackbk-CHP-8-FIG-1"/><fox:destination internal-destination="I_8_tt320"/><fox:destination internal-destination="I_8_tt321"/><fox:destination internal-destination="I_8_tt322"/><fox:destination internal-destination="jakartackbk-CHP-8-NOTE-61"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2861"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2862"/><fox:destination internal-destination="jakartackbk-CHP-8-TABLE-1"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2863"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-1.3"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-1.4"><fox:label>8.1.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-1.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-1"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-2"><fox:label>8.2. Finding the Maximum and Minimum in an Array</fox:label><fox:outline internal-destination="jakartackbk-CHP-8-SECT-2.1"><fox:label>8.2.1. Problem</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-2.1"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-2.2"><fox:label>8.2.2. Solution</fox:label><fox:destination internal-destination="I_8_tt323"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-2.2"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-2.3"><fox:label>8.2.3. Discussion</fox:label><fox:destination internal-destination="I_8_tt324"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-2.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-2"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-3"><fox:label>8.3. Using Number Ranges</fox:label><fox:outline internal-destination="jakartackbk-CHP-8-SECT-3.1"><fox:label>8.3.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2864"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2865"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2866"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2867"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2868"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2869"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-3.1"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-3.2"><fox:label>8.3.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2870"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2871"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2872"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2873"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2874"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2875"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2876"/><fox:destination internal-destination="I_8_tt325"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-3.2"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-3.3"><fox:label>8.3.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2877"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2878"/><fox:destination internal-destination="I_8_tt326"/><fox:destination internal-destination="I_8_tt327"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-3.3"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-3.4"><fox:label>8.3.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-3.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-3"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-4"><fox:label>8.4. Generating Random Variables</fox:label><fox:outline internal-destination="jakartackbk-CHP-8-SECT-4.1"><fox:label>8.4.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2879"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2880"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2881"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2882"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2883"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2884"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2885"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2886"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-4.1"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-4.2"><fox:label>8.4.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2887"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2888"/><fox:destination internal-destination="I_8_tt328"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2889"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2890"/><fox:destination internal-destination="I_8_tt329"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-4.2"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-4.3"><fox:label>8.4.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2891"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2892"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2893"/><fox:destination internal-destination="I_8_tt330"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2894"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2895"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-4.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-4"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-5"><fox:label>8.5. Obtaining Commons Math</fox:label><fox:outline internal-destination="jakartackbk-CHP-8-SECT-5.1"><fox:label>8.5.1. Problem</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-5.1"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-5.2"><fox:label>8.5.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-5.2"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-5.3"><fox:label>8.5.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-8-NOTE-63"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-5.3"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-5.4"><fox:label>8.5.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-5.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-5"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-6"><fox:label>8.6. Calculating Simple Univariate Statistics</fox:label><fox:outline internal-destination="jakartackbk-CHP-8-SECT-6.1"><fox:label>8.6.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2896"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2897"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2898"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2899"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2900"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2901"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-6.1"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-6.2"><fox:label>8.6.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2902"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2903"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2904"/><fox:destination internal-destination="I_8_tt331"/><fox:destination internal-destination="I_8_tt332"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-6.2"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-6.3"><fox:label>8.6.3. Discussion</fox:label><fox:destination internal-destination="I_8_tt333"/><fox:destination internal-destination="I_8_tt334"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-6.3"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-6.4"><fox:label>8.6.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-6.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-6"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-7"><fox:label>8.7. Solving a System of Linear Equations</fox:label><fox:outline internal-destination="jakartackbk-CHP-8-SECT-7.1"><fox:label>8.7.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2905"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2906"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2907"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2908"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2909"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2910"/><fox:destination internal-destination="jakartackbk-CHP-8-FIG-2"/><fox:destination internal-destination="I_8_tt335"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-7.1"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-7.2"><fox:label>8.7.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2911"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2912"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2913"/><fox:destination internal-destination="jakartackbk-CHP-8-FIG-3"/><fox:destination internal-destination="I_8_tt336"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2914"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2915"/><fox:destination internal-destination="I_8_tt337"/><fox:destination internal-destination="I_8_tt338"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-7.2"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-7.3"><fox:label>8.7.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-8-FIG-4"/><fox:destination internal-destination="I_8_tt339"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-7.3"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-7.4"><fox:label>8.7.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-7.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-7"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-8"><fox:label>8.8. Arithmetic with Complex Numbers</fox:label><fox:outline internal-destination="jakartackbk-CHP-8-SECT-8.1"><fox:label>8.8.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2916"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2917"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2918"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2919"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2920"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2921"/><fox:destination internal-destination="jakartackbk-CHP-8-FIG-5"/><fox:destination internal-destination="I_8_tt340"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-8.1"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-8.2"><fox:label>8.8.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2922"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2923"/><fox:destination internal-destination="I_8_tt341"/><fox:destination internal-destination="I_8_tt342"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-8.2"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-8.3"><fox:label>8.8.3. Discussion</fox:label><fox:destination internal-destination="I_8_tt343"/><fox:destination internal-destination="I_8_tt344"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-8.3"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-8.4"><fox:label>8.8.4. See also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-8.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-8"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-9"><fox:label>8.9. Establishing Relationships Between Variables</fox:label><fox:outline internal-destination="jakartackbk-CHP-8-SECT-9.1"><fox:label>8.9.1. Problem</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-9.1"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-9.2"><fox:label>8.9.2. Solution</fox:label><fox:destination internal-destination="I_8_tt345"/><fox:destination internal-destination="I_8_tt346"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-9.2"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-9.3"><fox:label>8.9.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2924"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2925"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2926"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2927"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2928"/><fox:destination internal-destination="I_8_tt347"/><fox:destination internal-destination="I_8_tt348"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-9.3"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-9.4"><fox:label>8.9.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-9.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-9"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-10"><fox:label>8.10. Estimating the Amount of Time Left in a Process</fox:label><fox:outline internal-destination="jakartackbk-CHP-8-SECT-10.1"><fox:label>8.10.1. Problem</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-10.1"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-10.2"><fox:label>8.10.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2929"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2930"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2931"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2932"/><fox:destination internal-destination="jakartackbk-CHP-8-EX-1"/><fox:destination internal-destination="jakartackbk-CHP-8-EX-2"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2933"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2934"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2935"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2936"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2937"/><fox:destination internal-destination="jakartackbk-CHP-8-ITERM-2938"/><fox:destination internal-destination="I_8_tt349"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-10.2"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-10.3"><fox:label>8.10.3. Discussion</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-10.3"/><fox:outline internal-destination="jakartackbk-CHP-8-SECT-10.4"><fox:label>8.10.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-10.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-8-SECT-10"/></fox:outline><fox:destination xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-CHP-8"/><fox:outline xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-CHP-9"><fox:label>Chapter 9. Templating</fox:label><fox:outline internal-destination="ch09-2-fm2xml"><fox:label>9.1. Introduction</fox:label><fox:outline internal-destination="ch09-3-fm2xml"><fox:label>9.1.1. Common Templating Problems in Applications</fox:label><fox:destination internal-destination="I_9_tt350"/><fox:destination internal-destination="I_9_tt351"/></fox:outline><fox:destination internal-destination="ch09-3-fm2xml"/><fox:outline internal-destination="ch09-4-fm2xml"><fox:label>9.1.2. Templating in Web Applications</fox:label><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2939"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2940"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2941"/><fox:destination internal-destination="I_9_tt352"/><fox:destination internal-destination="jakartackbk-CHP-9-NOTE-65"/></fox:outline><fox:destination internal-destination="ch09-4-fm2xml"/></fox:outline><fox:destination internal-destination="ch09-2-fm2xml"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-1"><fox:label>9.1. Obtaining Commons JEXL</fox:label><fox:outline internal-destination="jakartackbk-CHP-9-SECT-1.1"><fox:label>9.1.1. Problem</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-1.1"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-1.2"><fox:label>9.1.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-1.2"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-1.3"><fox:label>9.1.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2942"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2943"/><fox:destination internal-destination="jakartackbk-CHP-9-NOTE-66"/><fox:destination internal-destination="I_9_tt353"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-1.3"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-1.4"><fox:label>9.1.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-1.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-1"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-2"><fox:label>9.2. Using an Expression Language</fox:label><fox:outline internal-destination="jakartackbk-CHP-9-SECT-2.1"><fox:label>9.2.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2944"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2945"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2946"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2947"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2948"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-2.1"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-2.2"><fox:label>9.2.2. Solution</fox:label><fox:destination internal-destination="I_9_tt354"/><fox:destination internal-destination="I_9_tt355"/><fox:destination internal-destination="I_9_tt356"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-2.2"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-2.3"><fox:label>9.2.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2949"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2950"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2951"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2952"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2953"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2954"/><fox:destination internal-destination="jakartackbk-CHP-9-TABLE-1"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-2.3"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-2.4"><fox:label>9.2.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-2.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-2"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-3"><fox:label>9.3. Invoking Methods in an Expression</fox:label><fox:outline internal-destination="jakartackbk-CHP-9-SECT-3.1"><fox:label>9.3.1. Problem</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-3.1"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-3.2"><fox:label>9.3.2. Solution</fox:label><fox:destination internal-destination="I_9_tt357"/><fox:destination internal-destination="I_9_tt358"/><fox:destination internal-destination="I_9_tt359"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-3.2"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-3.3"><fox:label>9.3.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2955"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2956"/><fox:destination internal-destination="jakartackbk-CHP-9-TABLE-2"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-3.3"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-3.4"><fox:label>9.3.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-3.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-3"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-4"><fox:label>9.4. Externalizing Logic with an Expression Language</fox:label><fox:outline internal-destination="jakartackbk-CHP-9-SECT-4.1"><fox:label>9.4.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2957"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2958"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2959"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2960"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2961"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-4.1"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-4.2"><fox:label>9.4.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2962"/><fox:destination internal-destination="I_9_tt360"/><fox:destination internal-destination="I_9_tt361"/><fox:destination internal-destination="I_9_tt362"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2963"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2964"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-4.2"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-4.3"><fox:label>9.4.3. Discussion</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-4.3"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-4.4"><fox:label>9.4.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2965"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2966"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2967"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2968"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2969"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-4.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-4"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-5"><fox:label>9.5. Obtaining Jakarta Velocity</fox:label><fox:outline internal-destination="jakartackbk-CHP-9-SECT-5.1"><fox:label>9.5.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2970"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2971"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2972"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2973"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-5.1"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-5.2"><fox:label>9.5.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-5.2"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-5.3"><fox:label>9.5.3. Discussion</fox:label><fox:destination internal-destination="I_9_tt363"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-5.3"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-5.4"><fox:label>9.5.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-5.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-5"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-6"><fox:label>9.6. Using a Simple Templating Language</fox:label><fox:outline internal-destination="jakartackbk-CHP-9-SECT-6.1"><fox:label>9.6.1. Problem</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-6.1"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-6.2"><fox:label>9.6.2. Solution</fox:label><fox:destination internal-destination="I_9_tt364"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2974"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2975"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2976"/><fox:destination internal-destination="I_9_tt365"/><fox:destination internal-destination="I_9_tt366"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-6.2"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-6.3"><fox:label>9.6.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2977"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2978"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2979"/><fox:destination internal-destination="jakartackbk-CHP-9-TABLE-3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-6.3"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-6.4"><fox:label>9.6.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-6.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-6"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-7"><fox:label>9.7. Writing Templates with Conditionals and Loops</fox:label><fox:outline internal-destination="jakartackbk-CHP-9-SECT-7.1"><fox:label>9.7.1. Problem</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-7.1"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-7.2"><fox:label>9.7.2. Solution</fox:label><fox:destination internal-destination="I_9_tt367"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2980"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2981"/><fox:destination internal-destination="I_9_tt368"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2982"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2983"/><fox:destination internal-destination="I_9_tt369"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-7.2"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-7.3"><fox:label>9.7.3. Discussion</fox:label><fox:destination internal-destination="I_9_tt370"/><fox:destination internal-destination="I_9_tt371"/><fox:destination internal-destination="I_9_tt372"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-7.3"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-7.4"><fox:label>9.7.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2984"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2985"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2986"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-7.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-7"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-8"><fox:label>9.8. Using Macros in a Templating Engine</fox:label><fox:outline internal-destination="jakartackbk-CHP-9-SECT-8.1"><fox:label>9.8.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2987"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2988"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-8.1"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-8.2"><fox:label>9.8.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2989"/><fox:destination internal-destination="I_9_tt373"/><fox:destination internal-destination="I_9_tt374"/><fox:destination internal-destination="I_9_tt375"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-8.2"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-8.3"><fox:label>9.8.3. Discussion</fox:label><fox:destination internal-destination="I_9_tt376"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2990"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2991"/><fox:destination internal-destination="I_9_tt377"/><fox:destination internal-destination="I_9_tt378"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-8.3"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-8.4"><fox:label>9.8.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-8.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-8"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-9"><fox:label>9.9. Invoking Methods in a Template</fox:label><fox:outline internal-destination="jakartackbk-CHP-9-SECT-9.1"><fox:label>9.9.1. Problem</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-9.1"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-9.2"><fox:label>9.9.2. Solution</fox:label><fox:destination internal-destination="I_9_tt379"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2992"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2993"/><fox:destination internal-destination="I_9_tt380"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2994"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2995"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2996"/><fox:destination internal-destination="I_9_tt381"/><fox:destination internal-destination="I_9_tt382"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-9.2"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-9.3"><fox:label>9.9.3. Discussion</fox:label><fox:destination internal-destination="I_9_tt383"/><fox:destination internal-destination="I_9_tt384"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2997"/><fox:destination internal-destination="I_9_tt385"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-9.3"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-9.4"><fox:label>9.9.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2998"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-2999"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-9.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-9"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-10"><fox:label>9.10. Obtaining FreeMarker</fox:label><fox:outline internal-destination="jakartackbk-CHP-9-SECT-10.1"><fox:label>9.10.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3000"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3001"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3002"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-10.1"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-10.2"><fox:label>9.10.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-10.2"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-10.3"><fox:label>9.10.3. Discussion</fox:label><fox:destination internal-destination="I_9_tt386"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-10.3"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-10.4"><fox:label>9.10.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-10.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-10"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-11"><fox:label>9.11. Using a Complex Scripting Engine</fox:label><fox:outline internal-destination="jakartackbk-CHP-9-SECT-11.1"><fox:label>9.11.1. Problem</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-11.1"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-11.2"><fox:label>9.11.2. Solution</fox:label><fox:destination internal-destination="I_9_tt387"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3003"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3004"/><fox:destination internal-destination="I_9_tt388"/><fox:destination internal-destination="I_9_tt389"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-11.2"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-11.3"><fox:label>9.11.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-9-NOTE-67"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-11.3"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-11.4"><fox:label>9.11.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-11.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-11"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-12"><fox:label>9.12. Accessing XML Documents from a Templating Engine</fox:label><fox:outline internal-destination="jakartackbk-CHP-9-SECT-12.1"><fox:label>9.12.1. Problem</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-12.1"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-12.2"><fox:label>9.12.2. Solution</fox:label><fox:destination internal-destination="I_9_tt390"/><fox:destination internal-destination="I_9_tt391"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3005"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3006"/><fox:destination internal-destination="I_9_tt392"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-12.2"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-12.3"><fox:label>9.12.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3007"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3008"/><fox:destination internal-destination="I_9_tt393"/><fox:destination internal-destination="jakartackbk-CHP-9-TABLE-4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-12.3"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-12.4"><fox:label>9.12.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-12.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-12"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-13"><fox:label>9.13. Using Velocity in a Web Application</fox:label><fox:outline internal-destination="jakartackbk-CHP-9-SECT-13.1"><fox:label>9.13.1. Problem</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-13.1"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-13.2"><fox:label>9.13.2. Solution</fox:label><fox:destination internal-destination="I_9_tt394"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-13.2"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-13.3"><fox:label>9.13.3. Discussion</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-13.3"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-13.4"><fox:label>9.13.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3009"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3010"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3011"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3012"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3013"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-13.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-13"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-14"><fox:label>9.14. Using FreeMarker in a Web Application</fox:label><fox:outline internal-destination="jakartackbk-CHP-9-SECT-14.1"><fox:label>9.14.1. Problem</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-14.1"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-14.2"><fox:label>9.14.2. Solution</fox:label><fox:destination internal-destination="I_9_tt395"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-14.2"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-14.3"><fox:label>9.14.3. Discussion</fox:label><fox:destination internal-destination="I_9_tt396"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3014"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3015"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3016"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3017"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3018"/><fox:destination internal-destination="I_9_tt397"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-14.3"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-14.4"><fox:label>9.14.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3019"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3020"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3021"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-14.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-14"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-15"><fox:label>9.15. Writing Templates in Eclipse</fox:label><fox:outline internal-destination="jakartackbk-CHP-9-SECT-15.1"><fox:label>9.15.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3022"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3023"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3024"/><fox:destination internal-destination="jakartackbk-CHP-9-ITERM-3025"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-15.1"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-15.2"><fox:label>9.15.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-15.2"/><fox:outline internal-destination="jakartackbk-CHP-9-SECT-15.3"><fox:label>9.15.3. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-15.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-9-SECT-15"/></fox:outline><fox:destination xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-CHP-9"/><fox:outline xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-CHP-10"><fox:label>Chapter 10. I/O and Networking</fox:label><fox:outline internal-destination="ch10-2-fm2xml"><fox:label>10.1. Introduction</fox:label></fox:outline><fox:destination internal-destination="ch10-2-fm2xml"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-1"><fox:label>10.1. Obtaining Commons IO</fox:label><fox:outline internal-destination="jakartackbk-CHP-10-SECT-1.1"><fox:label>10.1.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3026"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3027"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3028"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-1.1"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-1.2"><fox:label>10.1.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-1.2"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-1.3"><fox:label>10.1.3. Discussion</fox:label><fox:destination internal-destination="I_10_tt398"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-1.3"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-1.4"><fox:label>10.1.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-1.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-1"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-2"><fox:label>10.2. Copying Streams, byte[ ], Readers, and Writers</fox:label><fox:outline internal-destination="jakartackbk-CHP-10-SECT-2.1"><fox:label>10.2.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3029"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3030"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3031"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3032"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3033"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3034"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3035"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-2.1"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-2.2"><fox:label>10.2.2. Solution</fox:label><fox:destination internal-destination="I_10_tt399"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-2.2"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-2.3"><fox:label>10.2.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3036"/><fox:destination internal-destination="I_10_tt400"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-2.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-2"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-3"><fox:label>10.3. Closing Streams, Readers, and Writers</fox:label><fox:outline internal-destination="jakartackbk-CHP-10-SECT-3.1"><fox:label>10.3.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3037"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3038"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3039"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3040"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3041"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3042"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3043"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-3.1"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-3.2"><fox:label>10.3.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3044"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3045"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3046"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3047"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3048"/><fox:destination internal-destination="I_10_tt401"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-3.2"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-3.3"><fox:label>10.3.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3049"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3050"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3051"/><fox:destination internal-destination="I_10_tt402"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3052"/><fox:destination internal-destination="I_10_tt403"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3053"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3054"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3055"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3056"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3057"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3058"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3059"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-3.3"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-3.4"><fox:label>10.3.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-3.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-3"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-4"><fox:label>10.4. Printing a Human-Readable File Size</fox:label><fox:outline internal-destination="jakartackbk-CHP-10-SECT-4.1"><fox:label>10.4.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3060"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3061"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3062"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3063"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3064"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-4.1"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-4.2"><fox:label>10.4.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3065"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3066"/><fox:destination internal-destination="I_10_tt404"/><fox:destination internal-destination="I_10_tt405"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-4.2"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-4.3"><fox:label>10.4.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-NOTE-68"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-4.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-4"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-5"><fox:label>10.5. Copying Files, Strings, and URLs</fox:label><fox:outline internal-destination="jakartackbk-CHP-10-SECT-5.1"><fox:label>10.5.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3067"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3068"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3069"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3070"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3071"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3072"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3073"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-5.1"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-5.2"><fox:label>10.5.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3074"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3075"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3076"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3077"/><fox:destination internal-destination="I_10_tt406"/><fox:destination internal-destination="I_10_tt407"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-5.2"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-5.3"><fox:label>10.5.3. Discussion</fox:label><fox:destination internal-destination="I_10_tt408"/><fox:destination internal-destination="I_10_tt409"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-5.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-5"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-6"><fox:label>10.6. Deleting Directories Recursively</fox:label><fox:outline internal-destination="jakartackbk-CHP-10-SECT-6.1"><fox:label>10.6.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3078"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3079"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3080"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3081"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3082"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-6.1"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-6.2"><fox:label>10.6.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3083"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3084"/><fox:destination internal-destination="I_10_tt410"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-6.2"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-6.3"><fox:label>10.6.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3085"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3086"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3087"/><fox:destination internal-destination="I_10_tt411"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-6.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-6"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-7"><fox:label>10.7. Obtaining the Size of a Directory</fox:label><fox:outline internal-destination="jakartackbk-CHP-10-SECT-7.1"><fox:label>10.7.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3088"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3089"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3090"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3091"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-7.1"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-7.2"><fox:label>10.7.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3092"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3093"/><fox:destination internal-destination="I_10_tt412"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-7.2"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-7"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-8"><fox:label>10.8. Touching a File</fox:label><fox:outline internal-destination="jakartackbk-CHP-10-SECT-8.1"><fox:label>10.8.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3094"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3095"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3096"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3097"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3098"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-8.1"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-8.2"><fox:label>10.8.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3099"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3100"/><fox:destination internal-destination="I_10_tt413"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-8.2"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-8"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-9"><fox:label>10.9. Filtering Files</fox:label><fox:outline internal-destination="jakartackbk-CHP-10-SECT-9.1"><fox:label>10.9.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3101"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3102"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3103"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3104"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3105"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-9.1"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-9.2"><fox:label>10.9.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3106"/><fox:destination internal-destination="I_10_tt414"/><fox:destination internal-destination="I_10_tt415"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-9.2"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-9.3"><fox:label>10.9.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3107"/><fox:destination internal-destination="I_10_tt416"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3108"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3109"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-9.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-9"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-10"><fox:label>10.10. Measuring Stream Traffic</fox:label><fox:outline internal-destination="jakartackbk-CHP-10-SECT-10.1"><fox:label>10.10.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3110"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3111"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3112"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3113"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3114"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3115"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3116"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-10.1"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-10.2"><fox:label>10.10.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3117"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3118"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3119"/><fox:destination internal-destination="I_10_tt417"/><fox:destination internal-destination="I_10_tt418"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-10.2"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-10.3"><fox:label>10.10.3. Discussion</fox:label><fox:destination internal-destination="I_10_tt419"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-10.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-10"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-11"><fox:label>10.11. Splitting an OutputStream</fox:label><fox:outline internal-destination="jakartackbk-CHP-10-SECT-11.1"><fox:label>10.11.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3120"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3121"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3122"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3123"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-11.1"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-11.2"><fox:label>10.11.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3124"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3125"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3126"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3127"/><fox:destination internal-destination="I_10_tt420"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-11.2"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-11"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-12"><fox:label>10.12. Obtaining Jakarta ORO</fox:label><fox:outline internal-destination="jakartackbk-CHP-10-SECT-12.1"><fox:label>10.12.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3128"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3129"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3130"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3131"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3132"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-12.1"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-12.2"><fox:label>10.12.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-12.2"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-12.3"><fox:label>10.12.3. Discussion</fox:label><fox:destination internal-destination="I_10_tt421"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-12.3"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-12.4"><fox:label>10.12.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-12.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-12"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-13"><fox:label>10.13. Using Globs and Perl5 Regular Expressions to List Files</fox:label><fox:outline internal-destination="jakartackbk-CHP-10-SECT-13.1"><fox:label>10.13.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3133"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3134"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3135"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3136"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3137"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3138"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3139"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-13.1"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-13.2"><fox:label>10.13.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3140"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3141"/><fox:destination internal-destination="I_10_tt422"/><fox:destination internal-destination="I_10_tt423"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-13.2"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-13"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-14"><fox:label>10.14. Obtaining Commons Net</fox:label><fox:outline internal-destination="jakartackbk-CHP-10-SECT-14.1"><fox:label>10.14.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3142"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3143"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3144"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-14.1"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-14.2"><fox:label>10.14.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-14.2"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-14.3"><fox:label>10.14.3. Discussion</fox:label><fox:destination internal-destination="I_10_tt424"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-14.3"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-14.4"><fox:label>10.14.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-14.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-14"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-15"><fox:label>10.15. Writing an FTP Client</fox:label><fox:outline internal-destination="jakartackbk-CHP-10-SECT-15.1"><fox:label>10.15.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3145"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3146"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3147"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3148"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-15.1"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-15.2"><fox:label>10.15.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3149"/><fox:destination internal-destination="I_10_tt425"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3150"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3151"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3152"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3153"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3154"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3155"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3156"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3157"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-15.2"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-15.3"><fox:label>10.15.3. Discussion</fox:label><fox:destination internal-destination="I_10_tt426"/><fox:destination internal-destination="I_10_tt427"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-15.3"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-15.4"><fox:label>10.15.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3158"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3159"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3160"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3161"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3162"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3163"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-15.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-15"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-16"><fox:label>10.16. Sending Mail with SMTP</fox:label><fox:outline internal-destination="jakartackbk-CHP-10-SECT-16.1"><fox:label>10.16.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3164"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3165"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3166"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3167"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3168"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3169"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-16.1"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-16.2"><fox:label>10.16.2. Solution</fox:label><fox:destination internal-destination="I_10_tt428"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3170"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3171"/><fox:destination internal-destination="I_10_tt429"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-16.2"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-16.3"><fox:label>10.16.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3172"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3173"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3174"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3175"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3176"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3177"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3178"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3179"/><fox:destination internal-destination="I_10_tt430"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-16.3"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-16.4"><fox:label>10.16.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3180"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3181"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3182"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3183"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3184"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-16.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-16"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-17"><fox:label>10.17. Checking a POP3 Mailbox</fox:label><fox:outline internal-destination="jakartackbk-CHP-10-SECT-17.1"><fox:label>10.17.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3185"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3186"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3187"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3188"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3189"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-17.1"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-17.2"><fox:label>10.17.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3190"/><fox:destination internal-destination="I_10_tt431"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3191"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3192"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3193"/><fox:destination internal-destination="jakartackbk-CHP-10-ITERM-3194"/><fox:destination internal-destination="I_10_tt432"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-17.2"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-17.3"><fox:label>10.17.3. Discussion</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-17.3"/><fox:outline internal-destination="jakartackbk-CHP-10-SECT-17.4"><fox:label>10.17.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-17.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-10-SECT-17"/></fox:outline><fox:destination xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-CHP-10"/><fox:outline xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-CHP-11"><fox:label>Chapter 11. HTTP and WebDAV</fox:label><fox:outline internal-destination="ch11-2-fm2xml"><fox:label>11.1. Introduction</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3195"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3196"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3197"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3198"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3199"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3200"/></fox:outline><fox:destination internal-destination="ch11-2-fm2xml"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-1"><fox:label>11.1. Obtaining Jakarta HttpClient</fox:label><fox:outline internal-destination="jakartackbk-CHP-11-SECT-1.1"><fox:label>11.1.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3201"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3202"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3203"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3204"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-1.1"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-1.2"><fox:label>11.1.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-1.2"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-1.3"><fox:label>11.1.3. Discussion</fox:label><fox:destination internal-destination="I_11_tt433"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-1.3"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-1.4"><fox:label>11.1.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-NOTE-70"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-1.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-1"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-2"><fox:label>11.2. Getting Jakarta HttpClient Source Code</fox:label><fox:outline internal-destination="jakartackbk-CHP-11-SECT-2.1"><fox:label>11.2.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3205"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3206"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3207"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3208"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3209"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-2.1"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-2.2"><fox:label>11.2.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-2.2"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-2.3"><fox:label>11.2.3. Discussion</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-2.3"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-2.4"><fox:label>11.2.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-2.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-2"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-3"><fox:label>11.3. Performing an HTTP GET</fox:label><fox:outline internal-destination="jakartackbk-CHP-11-SECT-3.1"><fox:label>11.3.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3210"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3211"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3212"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3213"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-3.1"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-3.2"><fox:label>11.3.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3214"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3215"/><fox:destination internal-destination="I_11_tt434"/><fox:destination internal-destination="I_11_tt435"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-3.2"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-3.3"><fox:label>11.3.3. Discussion</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-3.3"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-3.4"><fox:label>11.3.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-3.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-3"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-4"><fox:label>11.4. Sending Parameters in a Query String</fox:label><fox:outline internal-destination="jakartackbk-CHP-11-SECT-4.1"><fox:label>11.4.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3216"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3217"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3218"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3219"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3220"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-4.1"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-4.2"><fox:label>11.4.2. Solution</fox:label><fox:destination internal-destination="I_11_tt436"/><fox:destination internal-destination="I_11_tt437"/><fox:destination internal-destination="jakartackbk-CHP-11-NOTE-71"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-4.2"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-4.3"><fox:label>11.4.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3221"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3222"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3223"/><fox:destination internal-destination="I_11_tt438"/><fox:destination internal-destination="I_11_tt439"/><fox:destination internal-destination="I_11_tt440"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-4.3"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-4.4"><fox:label>11.4.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3224"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3225"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3226"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3227"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3228"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-4.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-4"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-5"><fox:label>11.5. Retrieving Content with a Conditional GET</fox:label><fox:outline internal-destination="jakartackbk-CHP-11-SECT-5.1"><fox:label>11.5.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3229"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3230"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3231"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3232"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3233"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-5.1"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-5.2"><fox:label>11.5.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-EX-1"/><fox:destination internal-destination="I_11_tt441"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-5.2"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-5.3"><fox:label>11.5.3. Discussion</fox:label><fox:destination internal-destination="I_11_tt442"/><fox:destination internal-destination="I_11_tt443"/><fox:destination internal-destination="I_11_tt444"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3234"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3235"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3236"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3237"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-5.3"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-5.4"><fox:label>11.5.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3238"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3239"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3240"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3241"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-5.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-5"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-6"><fox:label>11.6. Debugging HTTP Communications</fox:label><fox:outline internal-destination="jakartackbk-CHP-11-SECT-6.1"><fox:label>11.6.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3242"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3243"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3244"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3245"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-6.1"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-6.2"><fox:label>11.6.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3246"/><fox:destination internal-destination="I_11_tt445"/><fox:destination internal-destination="I_11_tt446"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-6.2"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-6.3"><fox:label>11.6.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3247"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3248"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3249"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3250"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-6.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-6"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-7"><fox:label>11.7. Making an HTTP POST Request</fox:label><fox:outline internal-destination="jakartackbk-CHP-11-SECT-7.1"><fox:label>11.7.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3251"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3252"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3253"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3254"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3255"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3256"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-7.1"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-7.2"><fox:label>11.7.2. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3257"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3258"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3259"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3260"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3261"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3262"/><fox:destination internal-destination="I_11_tt447"/><fox:destination internal-destination="I_11_tt448"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-7.2"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-7.3"><fox:label>11.7.3. Discussion</fox:label><fox:destination internal-destination="I_11_tt449"/><fox:destination internal-destination="jakartackbk-CHP-11-NOTE-72"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-7.3"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-7.4"><fox:label>11.7.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-7.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-7"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-8"><fox:label>11.8. Sending POST Data from a File</fox:label><fox:outline internal-destination="jakartackbk-CHP-11-SECT-8.1"><fox:label>11.8.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3263"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3264"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-8.1"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-8.2"><fox:label>11.8.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3265"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3266"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3267"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3268"/><fox:destination internal-destination="I_11_tt450"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-8.2"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-8.3"><fox:label>11.8.3. Discussion</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-8.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-8"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-9"><fox:label>11.9. Uploading Files with a Multipart POST</fox:label><fox:outline internal-destination="jakartackbk-CHP-11-SECT-9.1"><fox:label>11.9.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3269"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3270"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-9.1"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-9.2"><fox:label>11.9.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3271"/><fox:destination internal-destination="I_11_tt451"/><fox:destination internal-destination="I_11_tt452"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-9.2"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-9.3"><fox:label>11.9.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3272"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3273"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3274"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3275"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3276"/><fox:destination internal-destination="I_11_tt453"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-9.3"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-9.4"><fox:label>11.9.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-9.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-9"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-10"><fox:label>11.10. Basic Authentication</fox:label><fox:outline internal-destination="jakartackbk-CHP-11-SECT-10.1"><fox:label>11.10.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3277"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3278"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3279"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-10.1"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-10.2"><fox:label>11.10.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3280"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3281"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3282"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3283"/><fox:destination internal-destination="I_11_tt454"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3284"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3285"/><fox:destination internal-destination="I_11_tt455"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-10.2"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-10.3"><fox:label>11.10.3. Discussion</fox:label><fox:destination internal-destination="I_11_tt456"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3286"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3287"/><fox:destination internal-destination="I_11_tt457"/><fox:destination internal-destination="I_11_tt458"/><fox:destination internal-destination="I_11_tt459"/><fox:destination internal-destination="I_11_tt460"/><fox:destination internal-destination="jakartackbk-CHP-11-NOTE-73"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-10.3"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-10.4"><fox:label>11.10.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3288"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3289"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3290"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-10.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-10"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-11"><fox:label>11.11. NTLM Authentication</fox:label><fox:outline internal-destination="jakartackbk-CHP-11-SECT-11.1"><fox:label>11.11.1. Problem</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-11.1"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-11.2"><fox:label>11.11.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3291"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3292"/><fox:destination internal-destination="I_11_tt461"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-11.2"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-11.3"><fox:label>11.11.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3293"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3294"/><fox:destination internal-destination="I_11_tt462"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-11.3"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-11.4"><fox:label>11.11.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-11.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-11"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-12"><fox:label>11.12. Working with Cookies</fox:label><fox:outline internal-destination="jakartackbk-CHP-11-SECT-12.1"><fox:label>11.12.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3295"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3296"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3297"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3298"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3299"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-12.1"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-12.2"><fox:label>11.12.2. Solution</fox:label><fox:destination internal-destination="I_11_tt463"/><fox:destination internal-destination="I_11_tt464"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-12.2"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-12.3"><fox:label>11.12.3. Discussion</fox:label><fox:destination internal-destination="I_11_tt465"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3300"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3301"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3302"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3303"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3304"/><fox:destination internal-destination="I_11_tt466"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-12.3"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-12.4"><fox:label>11.12.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3305"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3306"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3307"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3308"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3309"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-12.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-12"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-13"><fox:label>11.13. Handling Redirects</fox:label><fox:outline internal-destination="jakartackbk-CHP-11-SECT-13.1"><fox:label>11.13.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3310"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3311"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3312"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3313"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-13.1"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-13.2"><fox:label>11.13.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3314"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3315"/><fox:destination internal-destination="I_11_tt467"/><fox:destination internal-destination="I_11_tt468"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-13.2"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-13.3"><fox:label>11.13.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3316"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3317"/><fox:destination internal-destination="I_11_tt469"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3318"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3319"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3320"/><fox:destination internal-destination="I_11_tt470"/><fox:destination internal-destination="I_11_tt471"/><fox:destination internal-destination="I_11_tt472"/><fox:destination internal-destination="I_11_tt473"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-13.3"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-13.4"><fox:label>11.13.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3321"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3322"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3323"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3324"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3325"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3326"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3327"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3328"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3329"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-13.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-13"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-14"><fox:label>11.14. SSL</fox:label><fox:outline internal-destination="jakartackbk-CHP-11-SECT-14.1"><fox:label>11.14.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3330"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3331"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3332"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3333"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-14.1"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-14.2"><fox:label>11.14.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3334"/><fox:destination internal-destination="I_11_tt474"/><fox:destination internal-destination="I_11_tt475"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-14.2"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-14.3"><fox:label>11.14.3. Discussion</fox:label><fox:destination internal-destination="I_11_tt476"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-14.3"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-14.4"><fox:label>11.14.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-14.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-14"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-15"><fox:label>11.15. Accepting a Self-Signed Certificate</fox:label><fox:outline internal-destination="jakartackbk-CHP-11-SECT-15.1"><fox:label>11.15.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3335"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3336"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3337"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3338"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-15.1"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-15.2"><fox:label>11.15.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3339"/><fox:destination internal-destination="I_11_tt477"/><fox:destination internal-destination="I_11_tt478"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-15.2"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-15.3"><fox:label>11.15.3. Discussion</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-15.3"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-15.4"><fox:label>11.15.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-15.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-15"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-16"><fox:label>11.16. Obtaining Jakarta Slide</fox:label><fox:outline internal-destination="jakartackbk-CHP-11-SECT-16.1"><fox:label>11.16.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3340"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3341"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3342"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3343"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-16.1"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-16.2"><fox:label>11.16.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3344"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-16.2"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-16.3"><fox:label>11.16.3. Discussion</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-16.3"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-16.4"><fox:label>11.16.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-16.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-16"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-17"><fox:label>11.17. Connecting to WebDAV Resources</fox:label><fox:outline internal-destination="jakartackbk-CHP-11-SECT-17.1"><fox:label>11.17.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3345"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3346"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3347"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3348"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-17.1"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-17.2"><fox:label>11.17.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3349"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3350"/><fox:destination internal-destination="I_11_tt479"/><fox:destination internal-destination="I_11_tt480"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-17.2"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-17.3"><fox:label>11.17.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3351"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3352"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3353"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-17.3"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-17"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-18"><fox:label>11.18. Modifying a WebDAV Resource</fox:label><fox:outline internal-destination="jakartackbk-CHP-11-SECT-18.1"><fox:label>11.18.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3354"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3355"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3356"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-18.1"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-18.2"><fox:label>11.18.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3357"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3358"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3359"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3360"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3361"/><fox:destination internal-destination="jakartackbk-CHP-11-ITERM-3362"/><fox:destination internal-destination="I_11_tt481"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-18.2"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-18.3"><fox:label>11.18.3. Discussion</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-18.3"/><fox:outline internal-destination="jakartackbk-CHP-11-SECT-18.4"><fox:label>11.18.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-18.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-11-SECT-18"/></fox:outline><fox:destination xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-CHP-11"/><fox:outline xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-CHP-12"><fox:label>Chapter 12. Searching and Filtering</fox:label><fox:outline internal-destination="ch12-2-fm2xml"><fox:label>12.1. Introduction</fox:label></fox:outline><fox:destination internal-destination="ch12-2-fm2xml"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-1"><fox:label>12.1. Obtaining Commons JXPath</fox:label><fox:outline internal-destination="jakartackbk-CHP-12-SECT-1.1"><fox:label>12.1.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3363"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3364"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3365"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3366"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-1.1"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-1.2"><fox:label>12.1.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-1.2"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-1.3"><fox:label>12.1.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3367"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3368"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3369"/><fox:destination internal-destination="I_12_tt482"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-1.3"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-1.4"><fox:label>12.1.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-1.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-1"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-2"><fox:label>12.2. Querying an Object Graph with XPath</fox:label><fox:outline internal-destination="jakartackbk-CHP-12-SECT-2.1"><fox:label>12.2.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3370"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3371"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3372"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3373"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3374"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-2.1"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-2.2"><fox:label>12.2.2. Solution</fox:label><fox:destination internal-destination="I_12_tt483"/><fox:destination internal-destination="I_12_tt484"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-2.2"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-2.3"><fox:label>12.2.3. Discussion</fox:label><fox:destination internal-destination="I_12_tt485"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-2.3"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-2.4"><fox:label>12.2.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3375"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3376"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3377"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3378"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3379"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-2.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-2"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-3"><fox:label>12.3. Search a Collection of Simple Objects</fox:label><fox:outline internal-destination="jakartackbk-CHP-12-SECT-3.1"><fox:label>12.3.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3380"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3381"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3382"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3383"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3384"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-3.1"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-3.2"><fox:label>12.3.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3385"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3386"/><fox:destination internal-destination="I_12_tt486"/><fox:destination internal-destination="I_12_tt487"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-3.2"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-3.3"><fox:label>12.3.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3387"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-3.3"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-3.4"><fox:label>12.3.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3388"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3389"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3390"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3391"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3392"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-3.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-3"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-4"><fox:label>12.4. Applying XPath Queries to Complex Object Graphs</fox:label><fox:outline internal-destination="jakartackbk-CHP-12-SECT-4.1"><fox:label>12.4.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3393"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3394"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3395"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3396"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3397"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-4.1"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-4.2"><fox:label>12.4.2. Solution</fox:label><fox:destination internal-destination="I_12_tt488"/><fox:destination internal-destination="I_12_tt489"/><fox:destination internal-destination="I_12_tt490"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3398"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3399"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3400"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3401"/><fox:destination internal-destination="I_12_tt491"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-4.2"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-4.3"><fox:label>12.4.3. Discussion</fox:label><fox:destination internal-destination="I_12_tt492"/><fox:destination internal-destination="I_12_tt493"/><fox:destination internal-destination="I_12_tt494"/><fox:destination internal-destination="I_12_tt495"/><fox:destination internal-destination="I_12_tt496"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3402"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3403"/><fox:destination internal-destination="I_12_tt497"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-4.3"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-4.4"><fox:label>12.4.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3404"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3405"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3406"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3407"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3408"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-4.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-4"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-5"><fox:label>12.5. Obtaining Jakarta Lucene</fox:label><fox:outline internal-destination="jakartackbk-CHP-12-SECT-5.1"><fox:label>12.5.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3409"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3410"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3411"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3412"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3413"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-5.1"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-5.2"><fox:label>12.5.2. Solution</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-5.2"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-5.3"><fox:label>12.5.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3414"/><fox:destination internal-destination="I_12_tt498"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-5.3"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-5.4"><fox:label>12.5.4. See Also</fox:label></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-5.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-5"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-6"><fox:label>12.6. Creating an Index of XML Documents</fox:label><fox:outline internal-destination="jakartackbk-CHP-12-SECT-6.1"><fox:label>12.6.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3415"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3416"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3417"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3418"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-6.1"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-6.2"><fox:label>12.6.2. Solution</fox:label><fox:destination internal-destination="I_12_tt499"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3419"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3420"/><fox:destination internal-destination="I_12_tt500"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3421"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3422"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3423"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3424"/><fox:destination internal-destination="jakartackbk-CHP-12-EX-1"/><fox:destination internal-destination="jakartackbk-CHP-12-EX-2"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-6.2"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-6.3"><fox:label>12.6.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3425"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3426"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3427"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3428"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-6.3"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-6.4"><fox:label>12.6.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3429"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3430"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3431"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3432"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-6.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-6"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-7"><fox:label>12.7. Searching for a Specific Term in a Document Index</fox:label><fox:outline internal-destination="jakartackbk-CHP-12-SECT-7.1"><fox:label>12.7.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3433"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3434"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3435"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3436"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-7.1"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-7.2"><fox:label>12.7.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3437"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3438"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3439"/><fox:destination internal-destination="I_12_tt501"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3440"/><fox:destination internal-destination="jakartackbk-CHP-12-NOTE-75"/><fox:destination internal-destination="I_12_tt502"/><fox:destination internal-destination="I_12_tt503"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-7.2"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-7.3"><fox:label>12.7.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3441"/><fox:destination internal-destination="jakartackbk-CHP-12-TABLE-1"/><fox:destination internal-destination="I_12_tt504"/><fox:destination internal-destination="I_12_tt505"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-7.3"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-7.4"><fox:label>12.7.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3442"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3443"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3444"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3445"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-7.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-7"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-8"><fox:label>12.8. Finding the Frequency of Terms in an Index</fox:label><fox:outline internal-destination="jakartackbk-CHP-12-SECT-8.1"><fox:label>12.8.1. Problem</fox:label><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3446"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3447"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3448"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3449"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-8.1"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-8.2"><fox:label>12.8.2. Solution</fox:label><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3450"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3451"/><fox:destination internal-destination="jakartackbk-CHP-12-EX-3"/><fox:destination internal-destination="I_12_tt506"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-8.2"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-8.3"><fox:label>12.8.3. Discussion</fox:label><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3452"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3453"/><fox:destination internal-destination="I_12_tt507"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-8.3"/><fox:outline internal-destination="jakartackbk-CHP-12-SECT-8.4"><fox:label>12.8.4. See Also</fox:label><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3454"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3455"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3456"/><fox:destination internal-destination="jakartackbk-CHP-12-ITERM-3457"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-8.4"/></fox:outline><fox:destination internal-destination="jakartackbk-CHP-12-SECT-8"/></fox:outline><fox:destination xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-CHP-12"/><fox:destination xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="jakartackbk-COLOPHON"/><fox:destination xmlns:fox="http://xml.apache.org/fop/extensions" internal-destination="I__tt2"/><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="false" master-reference="titlepage" language="en" format="1" initial-page-number="1" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"/></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"/></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif" margin-left="0pc"/></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif" margin-left="0pc"/></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block id="I__tt2"><fo:block><fo:block><fo:block><fo:table table-layout="fixed" width="175mm"><fo:table-column column-width="175mm"/><fo:table-body><fo:table-row><fo:table-cell text-align="center"><fo:block><fo:external-graphic content-width="scale-to-fit" content-height="scale-to-fit" width="100mm" src="../images/discursive-logo.png"/></fo:block><fo:block font-family="Helvetica" font-size="22pt" padding-before="10mm">
                              Common Java Cookbook
							</fo:block><fo:block font-family="Helvetica" font-size="14pt" padding="10mm">
                              A Common Cookbook for Java
							</fo:block><fo:block font-family="Helvetica" font-size="12pt" padding="10mm">
                              Edition: 0.1-SNAPSHOT
							</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell text-align="center"><fo:block font-family="Helvetica" font-size="12pt" padding="10mm">Timothy M. O'Brien ()</fo:block><fo:block font-family="Helvetica" font-size="12pt" padding="10mm">Copyright © 2009</fo:block><fo:block font-family="Helvetica" font-size="10pt" padding="1mm"/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="false" master-reference="lot" language="en" format="i" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>Jakarta Commons Cookbook</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>Jakarta Commons Cookbook</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"/></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif" margin-left="0pc"/></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" id="toc...I__tt2"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-PREFACE-1">Copyright</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-PREFACE-1"><fo:page-number-citation ref-id="jakartackbk-PREFACE-1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-PREFACE-2">Preface</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-PREFACE-2"><fo:page-number-citation ref-id="jakartackbk-PREFACE-2"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-PREFACE-2" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-PREFACE-2-SECT-1">1.  What's Inside</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-PREFACE-2-SECT-1"><fo:page-number-citation ref-id="jakartackbk-PREFACE-2-SECT-1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-PREFACE-2-SECT-2">2.  Conventions Used in This Book</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-PREFACE-2-SECT-2"><fo:page-number-citation ref-id="jakartackbk-PREFACE-2-SECT-2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-PREFACE-2-SECT-3">3.  What You'll Need</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-PREFACE-2-SECT-3"><fo:page-number-citation ref-id="jakartackbk-PREFACE-2-SECT-3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-PREFACE-2-SECT-4">4.  The Jakarta Commons Community</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-PREFACE-2-SECT-4"><fo:page-number-citation ref-id="jakartackbk-PREFACE-2-SECT-4"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-PREFACE-2-SECT-5">5.  The Apache Software License</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-PREFACE-2-SECT-5"><fo:page-number-citation ref-id="jakartackbk-PREFACE-2-SECT-5"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-PREFACE-2-SECT-7">6.  We'd Like to Hear from You</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-PREFACE-2-SECT-7"><fo:page-number-citation ref-id="jakartackbk-PREFACE-2-SECT-7"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-PREFACE-2-SECT-8">7.  Acknowledgments (1st Edition)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-PREFACE-2-SECT-8"><fo:page-number-citation ref-id="jakartackbk-PREFACE-2-SECT-8"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1">1.  Supplements to the Java 2 Platform</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1"><fo:page-number-citation ref-id="jakartackbk-CHP-1"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-1" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ch01-2-fm2xml">1.1.  Introduction</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ch01-2-fm2xml"><fo:page-number-citation ref-id="ch01-2-fm2xml"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1">1.1.  Obtaining Commons Lang</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-1"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-1-SECT-1" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1.1">1.1.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1.1"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-1.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1.2">1.1.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1.2"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-1.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1.3">1.1.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1.3"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-1.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1.4">1.1.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1.4"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-1.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-2">1.2.  Joining the Commons-User Mailing List</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-2"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-2"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-1-SECT-2" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-2.1">1.2.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-2.1"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-2.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-2.2">1.2.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-2.2"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-2.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-2.3">1.2.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-2.3"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-2.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-2.4">1.2.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-2.4"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-2.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-3">1.3.  Getting the Commons Lang Source Code</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-3"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-3"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-1-SECT-3" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-3.1">1.3.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-3.1"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-3.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-3.2">1.3.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-3.2"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-3.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-3.3">1.3.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-3.3"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-3.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-3.4">1.3.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-3.4"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-3.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-4">1.4.  Automating the Generation of toString( ) Content</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-4"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-4"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-1-SECT-4" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-4.1">1.4.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-4.1"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-4.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-4.2">1.4.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-4.2"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-4.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-4.3">1.4.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-4.3"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-4.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-5">1.5.  Customizing Generated toString( ) Content</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-5"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-5"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-1-SECT-5" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-5.1">1.5.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-5.1"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-5.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-5.2">1.5.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-5.2"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-5.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-5.3">1.5.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-5.3"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-5.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-6">1.6.  Automating hashCode( ) and equals( )</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-6"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-6"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-1-SECT-6" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-6.1">1.6.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-6.1"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-6.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-6.2">1.6.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-6.2"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-6.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-6.3">1.6.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-6.3"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-6.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-7">1.7.  Automating compareTo( )</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-7"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-7"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-1-SECT-7" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-7.1">1.7.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-7.1"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-7.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-7.2">1.7.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-7.2"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-7.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-7.3">1.7.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-7.3"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-7.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-7.4">1.7.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-7.4"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-7.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-8">1.8.  Printing an Array</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-8"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-8"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-1-SECT-8" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-8.1">1.8.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-8.1"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-8.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-8.2">1.8.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-8.2"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-8.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-8.3">1.8.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-8.3"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-8.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-9">1.9.  Cloning and Reversing Arrays</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-9"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-9"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-1-SECT-9" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-9.1">1.9.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-9.1"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-9.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-9.2">1.9.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-9.2"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-9.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-9.3">1.9.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-9.3"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-9.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-10">1.10.  Transforming Between Object Arraysand Primitive Arrays</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-10"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-10"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-1-SECT-10" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-10.1">1.10.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-10.1"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-10.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-10.2">1.10.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-10.2"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-10.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-10.3">1.10.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-10.3"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-10.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-10.4">1.10.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-10.4"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-10.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-11">1.11.  Finding Items in an Array</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-11"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-11"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-1-SECT-11" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-11.1">1.11.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-11.1"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-11.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-11.2">1.11.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-11.2"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-11.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-11.3">1.11.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-11.3"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-11.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-11.4">1.11.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-11.4"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-11.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-12">1.12.  Creating a Map from a Multidimensional Array</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-12"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-12"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-1-SECT-12" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-12.1">1.12.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-12.1"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-12.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-12.2">1.12.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-12.2"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-12.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-12.3">1.12.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-12.3"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-12.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-12.4">1.12.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-12.4"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-12.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-13">1.13.  Formatting Dates</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-13"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-13"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-1-SECT-13" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-13.1">1.13.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-13.1"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-13.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-13.2">1.13.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-13.2"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-13.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-13.3">1.13.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-13.3"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-13.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-13.4">1.13.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-13.4"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-13.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-14">1.14.  Rounding Date Objects</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-14"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-14"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-1-SECT-14" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-14.1">1.14.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-14.1"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-14.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-14.2">1.14.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-14.2"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-14.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-14.3">1.14.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-14.3"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-14.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-14.4">1.14.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-14.4"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-14.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-15">1.15.  Truncating Date Objects</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-15"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-15"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-1-SECT-15" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-15.1">1.15.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-15.1"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-15.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-15.2">1.15.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-15.2"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-15.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-15.3">1.15.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-15.3"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-15.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-15.4">1.15.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-15.4"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-15.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-16">1.16.  Creating an Enum</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-16"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-16"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-1-SECT-16" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-16.1">1.16.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-16.1"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-16.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-16.2">1.16.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-16.2"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-16.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-16.3">1.16.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-16.3"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-16.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-16.4">1.16.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-16.4"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-16.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-17">1.17.  Generating Unique Numeric Identifiers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-17"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-17"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-1-SECT-17" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-17.1">1.17.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-17.1"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-17.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-17.2">1.17.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-17.2"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-17.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-17.3">1.17.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-17.3"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-17.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-17.4">1.17.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-17.4"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-17.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-18">1.18.  Validation of Method Parameters</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-18"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-18"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-1-SECT-18" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-18.1">1.18.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-18.1"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-18.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-18.2">1.18.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-18.2"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-18.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-18.3">1.18.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-18.3"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-18.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-18.4">1.18.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-18.4"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-18.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-19">1.19.  Measuring Time</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-19"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-19"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-1-SECT-19" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-19.1">1.19.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-19.1"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-19.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-19.2">1.19.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-19.2"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-19.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-19.3">1.19.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-19.3"><fo:page-number-citation ref-id="jakartackbk-CHP-1-SECT-19.3"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2">2.  Manipulating Text</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2"><fo:page-number-citation ref-id="jakartackbk-CHP-2"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-2" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ch02-2-fm2xml">2.1.  Introduction</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ch02-2-fm2xml"><fo:page-number-citation ref-id="ch02-2-fm2xml"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-1">2.1.  Setting Up StringUtils and WordUtils</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-1"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-1"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-2-SECT-1" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-1.1">2.1.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-1.1"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-1.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-1.2">2.1.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-1.2"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-1.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-1.3">2.1.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-1.3"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-1.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-1.4">2.1.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-1.4"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-1.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-2">2.2.  Checking for an Empty String</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-2"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-2"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-2-SECT-2" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-2.1">2.2.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-2.1"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-2.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-2.2">2.2.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-2.2"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-2.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-2.3">2.2.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-2.3"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-2.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-3">2.3.  Abbreviating Strings</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-3"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-3"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-2-SECT-3" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-3.1">2.3.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-3.1"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-3.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-3.2">2.3.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-3.2"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-3.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-3.3">2.3.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-3.3"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-3.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-4">2.4.  Splitting a String</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-4"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-4"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-2-SECT-4" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-4.1">2.4.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-4.1"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-4.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-4.2">2.4.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-4.2"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-4.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-4.3">2.4.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-4.3"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-4.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-4.4">2.4.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-4.4"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-4.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-5">2.5.  Finding Nested Strings</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-5"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-5"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-2-SECT-5" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-5.1">2.5.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-5.1"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-5.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-5.2">2.5.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-5.2"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-5.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-5.3">2.5.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-5.3"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-5.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-6">2.6.  Stripping and Trimming a String</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-6"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-6"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-2-SECT-6" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-6.1">2.6.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-6.1"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-6.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-6.2">2.6.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-6.2"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-6.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-6.3">2.6.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-6.3"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-6.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-7">2.7.  Chomping a String</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-7"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-7"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-2-SECT-7" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-7.1">2.7.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-7.1"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-7.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-7.2">2.7.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-7.2"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-7.2"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-8">2.8.  Creating an Emphasized Header</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-8"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-8"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-2-SECT-8" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-8.1">2.8.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-8.1"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-8.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-8.2">2.8.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-8.2"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-8.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-8.3">2.8.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-8.3"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-8.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-9">2.9.  Reversing a String</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-9"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-9"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-2-SECT-9" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-9.1">2.9.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-9.1"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-9.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-9.2">2.9.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-9.2"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-9.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-9.3">2.9.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-9.3"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-9.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-10">2.10.  Wrapping Words</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-10"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-10"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-2-SECT-10" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-10.1">2.10.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-10.1"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-10.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-10.2">2.10.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-10.2"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-10.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-10.3">2.10.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-10.3"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-10.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-11">2.11.  Testing the Contents of a String</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-11"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-11"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-2-SECT-11" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-11.1">2.11.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-11.1"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-11.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-11.2">2.11.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-11.2"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-11.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-11.3">2.11.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-11.3"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-11.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-12">2.12.  Measuring the Frequency of a String</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-12"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-12"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-2-SECT-12" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-12.1">2.12.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-12.1"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-12.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-12.2">2.12.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-12.2"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-12.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-12.3">2.12.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-12.3"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-12.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-12.4">2.12.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-12.4"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-12.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-13">2.13.  Parsing Formatted Strings</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-13"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-13"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-2-SECT-13" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-13.1">2.13.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-13.1"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-13.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-13.2">2.13.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-13.2"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-13.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-13.3">2.13.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-13.3"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-13.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-14">2.14.  Calculating String Difference</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-14"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-14"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-2-SECT-14" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-14.1">2.14.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-14.1"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-14.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-14.2">2.14.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-14.2"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-14.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-14.3">2.14.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-14.3"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-14.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-14.4">2.14.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-14.4"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-14.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-15">2.15.  Using Commons Codec</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-15"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-15"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-2-SECT-15" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-15.1">2.15.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-15.1"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-15.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-15.2">2.15.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-15.2"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-15.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-15.3">2.15.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-15.3"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-15.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-15.4">2.15.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-15.4"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-15.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-16">2.16.  Getting the Commons Codec Source Code</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-16"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-16"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-2-SECT-16" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-16.1">2.16.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-16.1"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-16.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-16.2">2.16.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-16.2"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-16.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-16.3">2.16.3.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-16.3"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-16.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-17">2.17.  Calculating Soundex</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-17"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-17"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-2-SECT-17" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-17.1">2.17.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-17.1"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-17.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-17.2">2.17.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-17.2"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-17.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-17.3">2.17.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-17.3"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-17.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-17.4">2.17.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-17.4"><fo:page-number-citation ref-id="jakartackbk-CHP-2-SECT-17.4"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3">3.  JavaBeans</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3"><fo:page-number-citation ref-id="jakartackbk-CHP-3"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-3" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ch03-2-fm2xml">3.1.  Introduction</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ch03-2-fm2xml"><fo:page-number-citation ref-id="ch03-2-fm2xml"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-1">3.1.  Representing Beans Graphically</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-1"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-1"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-3-SECT-1" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-1.1">3.1.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-1.1"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-1.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-1.2">3.1.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-1.2"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-1.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-1.3">3.1.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-1.3"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-1.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-1.4">3.1.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-1.4"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-1.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-2">3.2.  Obtaining Commons BeanUtils</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-2"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-2"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-3-SECT-2" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-2.1">3.2.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-2.1"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-2.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-2.2">3.2.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-2.2"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-2.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-2.3">3.2.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-2.3"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-2.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-2.4">3.2.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-2.4"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-2.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-3">3.3.  Getting the Commons BeanUtils Source Code</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-3"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-3"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-3-SECT-3" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-3.1">3.3.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-3.1"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-3.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-3.2">3.3.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-3.2"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-3.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-3.3">3.3.3.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-3.3"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-3.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-4">3.4.  Accessing Simple Bean Properties</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-4"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-4"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-3-SECT-4" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-4.1">3.4.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-4.1"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-4.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-4.2">3.4.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-4.2"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-4.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-4.3">3.4.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-4.3"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-4.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-4.4">3.4.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-4.4"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-4.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-5">3.5.  Accessing Nested Bean Properties</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-5"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-5"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-3-SECT-5" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-5.1">3.5.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-5.1"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-5.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-5.2">3.5.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-5.2"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-5.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-5.3">3.5.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-5.3"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-5.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-6">3.6.  Accessing Indexed Bean Properties</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-6"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-6"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-3-SECT-6" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-6.1">3.6.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-6.1"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-6.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-6.2">3.6.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-6.2"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-6.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-6.3">3.6.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-6.3"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-6.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-7">3.7.  Accessing Mapped Bean Properties</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-7"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-7"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-3-SECT-7" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-7.1">3.7.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-7.1"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-7.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-7.2">3.7.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-7.2"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-7.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-7.3">3.7.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-7.3"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-7.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-8">3.8.  Accessing a Simple, Nested, Indexed, and Mapped Bean Property</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-8"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-8"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-3-SECT-8" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-8.1">3.8.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-8.1"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-8.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-8.2">3.8.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-8.2"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-8.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-8.3">3.8.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-8.3"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-8.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-8.4">3.8.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-8.4"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-8.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-9">3.9.  Determining the Type of a Bean Property</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-9"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-9"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-3-SECT-9" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-9.1">3.9.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-9.1"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-9.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-9.2">3.9.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-9.2"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-9.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-9.3">3.9.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-9.3"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-9.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-10">3.10.  Comparing Beans</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-10"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-10"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-3-SECT-10" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-10.1">3.10.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-10.1"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-10.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-10.2">3.10.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-10.2"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-10.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-10.3">3.10.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-10.3"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-10.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-10.4">3.10.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-10.4"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-10.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-11">3.11.  Copying Bean Properties</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-11"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-11"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-3-SECT-11" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-11.1">3.11.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-11.1"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-11.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-11.2">3.11.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-11.2"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-11.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-11.3">3.11.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-11.3"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-11.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-11.4">3.11.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-11.4"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-11.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-12">3.12.  Cloning a Bean</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-12"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-12"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-3-SECT-12" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-12.1">3.12.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-12.1"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-12.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-12.2">3.12.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-12.2"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-12.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-12.3">3.12.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-12.3"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-12.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-13">3.13.  Setting a Bean Property</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-13"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-13"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-3-SECT-13" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-13.1">3.13.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-13.1"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-13.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-13.2">3.13.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-13.2"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-13.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-13.3">3.13.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-13.3"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-13.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-14">3.14.  Testing Property Access</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-14"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-14"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-3-SECT-14" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-14.1">3.14.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-14.1"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-14.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-14.2">3.14.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-14.2"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-14.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-14.3">3.14.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-14.3"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-14.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-15">3.15.  Validating Beans with Predicates</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-15"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-15"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-3-SECT-15" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-15.1">3.15.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-15.1"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-15.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-15.2">3.15.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-15.2"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-15.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-15.3">3.15.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-15.3"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-15.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-15.4">3.15.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-15.4"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-15.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-16">3.16.  Creating a Map of Bean Properties</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-16"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-16"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-3-SECT-16" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-16.1">3.16.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-16.1"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-16.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-16.2">3.16.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-16.2"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-16.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-16.3">3.16.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-16.3"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-16.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-16.4">3.16.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-16.4"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-16.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-17">3.17.  Wrapping a Bean with a Map</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-17"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-17"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-3-SECT-17" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-17.1">3.17.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-17.1"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-17.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-17.2">3.17.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-17.2"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-17.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-17.3">3.17.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-17.3"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-17.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-17.4">3.17.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-17.4"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-17.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-18">3.18.  Creating a Dynamic Bean</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-18"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-18"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-3-SECT-18" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-18.1">3.18.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-18.1"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-18.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-18.2">3.18.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-18.2"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-18.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-18.3">3.18.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-18.3"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-18.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-18.4">3.18.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-18.4"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-18.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-19">3.19.  Getting and Setting Properties as Strings</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-19"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-19"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-3-SECT-19" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-19.1">3.19.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-19.1"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-19.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-19.2">3.19.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-19.2"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-19.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-19.3">3.19.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-19.3"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-19.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-19.4">3.19.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-19.4"><fo:page-number-citation ref-id="jakartackbk-CHP-3-SECT-19.4"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4">4.  Functors</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4"><fo:page-number-citation ref-id="jakartackbk-CHP-4"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-4" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ch04-2-fm2xml">4.1.  Introduction</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ch04-2-fm2xml"><fo:page-number-citation ref-id="ch04-2-fm2xml"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-1">4.1.  Obtaining Commons Collections</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-1"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-1"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-4-SECT-1" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-1.1">4.1.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-1.1"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-1.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-1.2">4.1.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-1.2"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-1.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-1.3">4.1.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-1.3"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-1.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-1.4">4.1.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-1.4"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-1.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-2">4.2.  Getting the Commons Collections Source Code</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-2"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-2"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-4-SECT-2" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-2.1">4.2.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-2.1"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-2.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-2.2">4.2.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-2.2"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-2.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-2.3">4.2.3.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-2.3"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-2.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-3">4.3.  Reversing a Comparator</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-3"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-3"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-4-SECT-3" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-3.1">4.3.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-3.1"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-3.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-3.2">4.3.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-3.2"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-3.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-3.3">4.3.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-3.3"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-3.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-3.4">4.3.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-3.4"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-3.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-4">4.4.  Chaining Comparators</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-4"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-4"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-4-SECT-4" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-4.1">4.4.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-4.1"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-4.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-4.2">4.4.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-4.2"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-4.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-4.3">4.4.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-4.3"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-4.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-4.4">4.4.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-4.4"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-4.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-5">4.5.  Comparing Nulls</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-5"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-5"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-4-SECT-5" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-5.1">4.5.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-5.1"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-5.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-5.2">4.5.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-5.2"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-5.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-5.3">4.5.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-5.3"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-5.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-5.4">4.5.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-5.4"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-5.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-6">4.6.  Fixed-Order Comparison</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-6"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-6"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-4-SECT-6" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-6.1">4.6.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-6.1"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-6.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-6.2">4.6.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-6.2"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-6.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-6.3">4.6.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-6.3"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-6.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-6.4">4.6.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-6.4"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-6.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-7">4.7.  Using Simple Predicates</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-7"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-7"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-4-SECT-7" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-7.1">4.7.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-7.1"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-7.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-7.2">4.7.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-7.2"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-7.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-7.3">4.7.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-7.3"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-7.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-7.4">4.7.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-7.4"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-7.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-8">4.8.  Writing a Custom Predicate</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-8"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-8"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-4-SECT-8" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-8.1">4.8.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-8.1"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-8.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-8.2">4.8.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-8.2"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-8.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-8.3">4.8.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-8.3"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-8.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-8.4">4.8.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-8.4"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-8.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-9">4.9.  Creating Composite Predicates</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-9"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-9"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-4-SECT-9" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-9.1">4.9.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-9.1"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-9.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-9.2">4.9.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-9.2"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-9.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-9.3">4.9.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-9.3"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-9.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-10">4.10.  Transforming Objects</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-10"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-10"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-4-SECT-10" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-10.1">4.10.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-10.1"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-10.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-10.2">4.10.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-10.2"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-10.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-10.3">4.10.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-10.3"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-10.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-10.4">4.10.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-10.4"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-10.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-11">4.11.  Creating a Chain of Transformations</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-11"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-11"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-4-SECT-11" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-11.1">4.11.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-11.1"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-11.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-11.2">4.11.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-11.2"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-11.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-11.3">4.11.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-11.3"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-11.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-11.4">4.11.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-11.4"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-11.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-12">4.12.  Applying Conditional Transformations</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-12"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-12"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-4-SECT-12" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-12.1">4.12.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-12.1"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-12.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-12.2">4.12.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-12.2"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-12.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-12.3">4.12.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-12.3"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-12.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-12.4">4.12.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-12.4"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-12.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-13">4.13.  Writing a Closure</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-13"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-13"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-4-SECT-13" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-13.1">4.13.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-13.1"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-13.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-13.2">4.13.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-13.2"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-13.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-13.3">4.13.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-13.3"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-13.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-13.4">4.13.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-13.4"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-13.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-14">4.14.  Chaining Closures</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-14"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-14"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-4-SECT-14" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-14.1">4.14.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-14.1"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-14.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-14.2">4.14.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-14.2"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-14.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-14.3">4.14.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-14.3"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-14.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-14.4">4.14.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-14.4"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-14.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-15">4.15.  Modeling Conditional Statements with Closures</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-15"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-15"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-4-SECT-15" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-15.1">4.15.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-15.1"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-15.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-15.2">4.15.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-15.2"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-15.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-15.3">4.15.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-15.3"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-15.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-16">4.16.  Modeling Loops with Closures</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-16"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-16"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-4-SECT-16" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-16.1">4.16.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-16.1"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-16.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-16.2">4.16.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-16.2"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-16.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-16.3">4.16.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-16.3"><fo:page-number-citation ref-id="jakartackbk-CHP-4-SECT-16.3"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5">5.  Collections</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5"><fo:page-number-citation ref-id="jakartackbk-CHP-5"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-5" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ch05-2-fm2xml">5.1.  Introduction</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ch05-2-fm2xml"><fo:page-number-citation ref-id="ch05-2-fm2xml"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-1">5.1.  Obtaining Commons Collections</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-1"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-1"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-5-SECT-1" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-1.1">5.1.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-1.1"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-1.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-1.2">5.1.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-1.2"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-1.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-1.3">5.1.3.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-1.3"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-1.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-2">5.2.  Using a Looping Iterator</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-2"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-2"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-5-SECT-2" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-2.1">5.2.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-2.1"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-2.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-2.2">5.2.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-2.2"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-2.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-2.3">5.2.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-2.3"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-2.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-2.4">5.2.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-2.4"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-2.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-3">5.3.  Iterating Over an ArrayList</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-3"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-3"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-5-SECT-3" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-3.1">5.3.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-3.1"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-3.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-3.2">5.3.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-3.2"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-3.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-3.3">5.3.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-3.3"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-3.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-3.4">5.3.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-3.4"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-3.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-4">5.4.  Filtering a Collection with a Predicate</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-4"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-4"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-5-SECT-4" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-4.1">5.4.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-4.1"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-4.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-4.2">5.4.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-4.2"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-4.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-4.3">5.4.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-4.3"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-4.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-4.4">5.4.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-4.4"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-4.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-5">5.5.  Iterating Through Distinct Elements</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-5"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-5"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-5-SECT-5" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-5.1">5.5.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-5.1"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-5.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-5.2">5.5.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-5.2"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-5.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-5.3">5.5.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-5.3"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-5.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-5.4">5.5.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-5.4"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-5.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-6">5.6.  Using a Bag</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-6"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-6"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-5-SECT-6" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-6.1">5.6.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-6.1"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-6.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-6.2">5.6.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-6.2"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-6.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-6.3">5.6.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-6.3"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-6.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-6.4">5.6.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-6.4"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-6.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-7">5.7.  Using a Buffer</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-7"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-7"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-5-SECT-7" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-7.1">5.7.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-7.1"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-7.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-7.2">5.7.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-7.2"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-7.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-7.3">5.7.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-7.3"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-7.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-7.4">5.7.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-7.4"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-7.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-8">5.8.  Creating a Priority Queue</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-8"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-8"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-5-SECT-8" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-8.1">5.8.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-8.1"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-8.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-8.2">5.8.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-8.2"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-8.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-8.3">5.8.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-8.3"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-8.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-8.4">5.8.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-8.4"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-8.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-9">5.9.  Using a Blocking Buffer</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-9"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-9"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-5-SECT-9" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-9.1">5.9.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-9.1"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-9.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-9.2">5.9.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-9.2"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-9.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-9.3">5.9.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-9.3"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-9.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-9.4">5.9.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-9.4"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-9.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-10">5.10.  Storing Multiple Values in a Map</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-10"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-10"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-5-SECT-10" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-10.1">5.10.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-10.1"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-10.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-10.2">5.10.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-10.2"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-10.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-10.3">5.10.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-10.3"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-10.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-11">5.11.  Retrieving a Key by a Value</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-11"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-11"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-5-SECT-11" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-11.1">5.11.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-11.1"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-11.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-11.2">5.11.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-11.2"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-11.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-11.3">5.11.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-11.3"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-11.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-11.4">5.11.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-11.4"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-11.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-12">5.12.  Using a Case-Insensitive Map</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-12"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-12"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-5-SECT-12" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-12.1">5.12.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-12.1"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-12.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-12.2">5.12.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-12.2"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-12.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-12.3">5.12.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-12.3"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-12.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-12.4">5.12.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-12.4"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-12.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-13">5.13.  Creating Typed Collections and Maps</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-13"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-13"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-5-SECT-13" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-13.1">5.13.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-13.1"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-13.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-13.2">5.13.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-13.2"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-13.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-13.3">5.13.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-13.3"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-13.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-13.4">5.13.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-13.4"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-13.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-14">5.14.  Constraining Map Values</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-14"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-14"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-5-SECT-14" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-14.1">5.14.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-14.1"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-14.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-14.2">5.14.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-14.2"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-14.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-14.3">5.14.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-14.3"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-14.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-15">5.15.  Constraining List Contents</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-15"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-15"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-5-SECT-15" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-15.1">5.15.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-15.1"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-15.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-15.2">5.15.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-15.2"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-15.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-15.3">5.15.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-15.3"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-15.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-15.4">5.15.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-15.4"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-15.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-16">5.16.  Transforming Collections</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-16"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-16"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-5-SECT-16" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-16.1">5.16.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-16.1"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-16.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-16.2">5.16.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-16.2"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-16.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-16.3">5.16.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-16.3"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-16.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-16.4">5.16.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-16.4"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-16.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-17">5.17.  Creating a Least Recently Used Cache</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-17"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-17"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-5-SECT-17" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-17.1">5.17.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-17.1"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-17.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-17.2">5.17.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-17.2"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-17.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-17.3">5.17.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-17.3"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-17.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-17.4">5.17.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-17.4"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-17.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-18">5.18.  Using a Lazy Map</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-18"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-18"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-5-SECT-18" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-18.1">5.18.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-18.1"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-18.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-18.2">5.18.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-18.2"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-18.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-18.3">5.18.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-18.3"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-18.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-18.4">5.18.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-18.4"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-18.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-19">5.19.  Counting Objects in a Collection</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-19"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-19"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-5-SECT-19" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-19.1">5.19.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-19.1"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-19.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-19.2">5.19.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-19.2"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-19.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-19.3">5.19.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-19.3"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-19.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-19.4">5.19.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-19.4"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-19.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-20">5.20.  Performing Set Operations</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-20"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-20"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-5-SECT-20" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-20.1">5.20.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-20.1"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-20.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-20.2">5.20.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-20.2"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-20.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-20.3">5.20.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-20.3"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-20.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-21">5.21.  Retrieving Map Values Without Casting</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-21"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-21"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-5-SECT-21" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-21.1">5.21.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-21.1"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-21.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-21.2">5.21.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-21.2"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-21.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-21.3">5.21.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-21.3"><fo:page-number-citation ref-id="jakartackbk-CHP-5-SECT-21.3"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6">6.  XML</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6"><fo:page-number-citation ref-id="jakartackbk-CHP-6"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-6" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ch06-2-fm2xml">6.1.  Introduction</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ch06-2-fm2xml"><fo:page-number-citation ref-id="ch06-2-fm2xml"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-1">6.1.  Obtaining Jakarta Commons Digester</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-1"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-1"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-6-SECT-1" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-1.1">6.1.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-1.1"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-1.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-1.2">6.1.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-1.2"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-1.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-1.3">6.1.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-1.3"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-1.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-1.4">6.1.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-1.4"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-1.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-2">6.2.  Turning XML Documents into Objects</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-2"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-2"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-6-SECT-2" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-2.1">6.2.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-2.1"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-2.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-2.2">6.2.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-2.2"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-2.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-2.3">6.2.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-2.3"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-2.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-2.4">6.2.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-2.4"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-2.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-3">6.3.  Namespace-Aware Parsing</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-3"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-3"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-6-SECT-3" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-3.1">6.3.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-3.1"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-3.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-3.2">6.3.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-3.2"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-3.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-3.3">6.3.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-3.3"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-3.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-3.4">6.3.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-3.4"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-3.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-4">6.4.  Creating a Simple XML Command Language</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-4"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-4"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-6-SECT-4" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-4.1">6.4.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-4.1"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-4.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-4.2">6.4.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-4.2"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-4.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-4.3">6.4.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-4.3"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-4.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-4.4">6.4.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-4.4"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-4.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-5">6.5.  Variable Substitution and XML Parsing</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-5"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-5"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-6-SECT-5" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-5.1">6.5.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-5.1"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-5.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-5.2">6.5.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-5.2"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-5.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-5.3">6.5.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-5.3"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-5.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-5.4">6.5.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-5.4"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-5.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-6">6.6.  Obtaining Jakarta Commons Betwixt</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-6"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-6"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-6-SECT-6" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-6.1">6.6.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-6.1"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-6.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-6.2">6.6.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-6.2"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-6.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-6.3">6.6.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-6.3"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-6.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-6.4">6.6.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-6.4"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-6.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-7">6.7.  Turning Beans into XML Documents</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-7"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-7"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-6-SECT-7" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-7.1">6.7.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-7.1"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-7.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-7.2">6.7.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-7.2"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-7.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-7.3">6.7.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-7.3"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-7.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-7.4">6.7.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-7.4"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-7.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-8">6.8.  Customizing XML Generated from an Object</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-8"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-8"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-6-SECT-8" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-8.1">6.8.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-8.1"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-8.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-8.2">6.8.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-8.2"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-8.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-8.3">6.8.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-8.3"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-8.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-8.4">6.8.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-8.4"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-8.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-9">6.9.  Turning XML Documents into Beans</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-9"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-9"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-6-SECT-9" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-9.1">6.9.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-9.1"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-9.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-9.2">6.9.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-9.2"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-9.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-9.3">6.9.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-9.3"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-9.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-9.4">6.9.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-9.4"><fo:page-number-citation ref-id="jakartackbk-CHP-6-SECT-9.4"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7">7.  Application Infrastructure</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7"><fo:page-number-citation ref-id="jakartackbk-CHP-7"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-7" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ch07-2-fm2xml">7.1.  Introduction</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ch07-2-fm2xml"><fo:page-number-citation ref-id="ch07-2-fm2xml"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-1">7.1.  Obtaining Commons CLI</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-1"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-1"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-7-SECT-1" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-1.1">7.1.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-1.1"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-1.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-1.2">7.1.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-1.2"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-1.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-1.3">7.1.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-1.3"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-1.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-1.4">7.1.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-1.4"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-1.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-2">7.2.  Parsing a Simple Command Line</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-2"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-2"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-7-SECT-2" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-2.1">7.2.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-2.1"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-2.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-2.2">7.2.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-2.2"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-2.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-2.3">7.2.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-2.3"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-2.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-2.4">7.2.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-2.4"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-2.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-3">7.3.  Parsing a Complex Command Line</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-3"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-3"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-7-SECT-3" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-3.1">7.3.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-3.1"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-3.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-3.2">7.3.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-3.2"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-3.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-3.3">7.3.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-3.3"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-3.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-3.4">7.3.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-3.4"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-3.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-4">7.4.  Printing Usage Information</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-4"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-4"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-7-SECT-4" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-4.1">7.4.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-4.1"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-4.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-4.2">7.4.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-4.2"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-4.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-4.3">7.4.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-4.3"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-4.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-5">7.5.  Obtaining Commons Configuration</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-5"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-5"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-7-SECT-5" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-5.1">7.5.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-5.1"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-5.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-5.2">7.5.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-5.2"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-5.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-5.3">7.5.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-5.3"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-5.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-5.4">7.5.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-5.4"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-5.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-6">7.6.  Configuring Applications with Properties Files</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-6"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-6"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-7-SECT-6" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-6.1">7.6.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-6.1"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-6.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-6.2">7.6.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-6.2"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-6.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-6.3">7.6.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-6.3"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-6.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-6.4">7.6.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-6.4"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-6.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-7">7.7.  Configuring Applications with XML</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-7"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-7"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-7-SECT-7" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-7.1">7.7.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-7.1"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-7.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-7.2">7.7.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-7.2"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-7.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-7.3">7.7.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-7.3"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-7.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-7.4">7.7.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-7.4"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-7.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-8">7.8.  Using Composite Configuration</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-8"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-8"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-7-SECT-8" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-8.1">7.8.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-8.1"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-8.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-8.2">7.8.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-8.2"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-8.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-8.3">7.8.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-8.3"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-8.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-8.4">7.8.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-8.4"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-8.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-9">7.9.  Obtaining Commons Logging</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-9"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-9"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-7-SECT-9" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-9.1">7.9.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-9.1"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-9.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-9.2">7.9.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-9.2"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-9.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-9.3">7.9.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-9.3"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-9.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-9.4">7.9.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-9.4"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-9.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-10">7.10.  Using an Abstract Logging Interface</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-10"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-10"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-7-SECT-10" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-10.1">7.10.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-10.1"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-10.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-10.2">7.10.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-10.2"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-10.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-10.3">7.10.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-10.3"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-10.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-10.4">7.10.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-10.4"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-10.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-11">7.11.  Specifying a Logging Implementation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-11"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-11"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-7-SECT-11" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-11.1">7.11.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-11.1"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-11.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-11.2">7.11.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-11.2"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-11.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-11.3">7.11.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-11.3"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-11.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-11.4">7.11.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-11.4"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-11.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-12">7.12.  Obtaining Apache Log4J</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-12"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-12"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-7-SECT-12" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-12.1">7.12.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-12.1"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-12.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-12.2">7.12.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-12.2"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-12.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-12.3">7.12.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-12.3"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-12.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-12.4">7.12.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-12.4"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-12.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-13">7.13.  Configuring Log4J with a Properties File</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-13"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-13"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-7-SECT-13" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-13.1">7.13.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-13.1"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-13.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-13.2">7.13.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-13.2"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-13.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-13.3">7.13.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-13.3"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-13.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-13.4">7.13.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-13.4"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-13.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-14">7.14.  Configuring Log4J with XML</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-14"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-14"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-7-SECT-14" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-14.1">7.14.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-14.1"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-14.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-14.2">7.14.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-14.2"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-14.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-14.3">7.14.3.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-14.3"><fo:page-number-citation ref-id="jakartackbk-CHP-7-SECT-14.3"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8">8.  Math</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8"><fo:page-number-citation ref-id="jakartackbk-CHP-8"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-8" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ch08-2-fm2xml">8.1.  Introduction</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ch08-2-fm2xml"><fo:page-number-citation ref-id="ch08-2-fm2xml"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-1">8.1.  Using Fractions</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-1"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-1"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-8-SECT-1" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-1.1">8.1.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-1.1"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-1.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-1.2">8.1.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-1.2"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-1.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-1.3">8.1.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-1.3"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-1.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-1.4">8.1.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-1.4"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-1.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-2">8.2.  Finding the Maximum and Minimum in an Array</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-2"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-2"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-8-SECT-2" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-2.1">8.2.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-2.1"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-2.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-2.2">8.2.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-2.2"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-2.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-2.3">8.2.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-2.3"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-2.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-3">8.3.  Using Number Ranges</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-3"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-3"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-8-SECT-3" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-3.1">8.3.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-3.1"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-3.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-3.2">8.3.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-3.2"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-3.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-3.3">8.3.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-3.3"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-3.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-3.4">8.3.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-3.4"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-3.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-4">8.4.  Generating Random Variables</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-4"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-4"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-8-SECT-4" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-4.1">8.4.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-4.1"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-4.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-4.2">8.4.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-4.2"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-4.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-4.3">8.4.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-4.3"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-4.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-5">8.5.  Obtaining Commons Math</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-5"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-5"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-8-SECT-5" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-5.1">8.5.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-5.1"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-5.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-5.2">8.5.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-5.2"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-5.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-5.3">8.5.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-5.3"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-5.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-5.4">8.5.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-5.4"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-5.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-6">8.6.  Calculating Simple Univariate Statistics</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-6"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-6"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-8-SECT-6" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-6.1">8.6.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-6.1"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-6.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-6.2">8.6.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-6.2"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-6.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-6.3">8.6.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-6.3"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-6.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-6.4">8.6.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-6.4"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-6.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-7">8.7.  Solving a System of Linear Equations</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-7"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-7"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-8-SECT-7" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-7.1">8.7.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-7.1"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-7.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-7.2">8.7.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-7.2"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-7.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-7.3">8.7.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-7.3"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-7.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-7.4">8.7.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-7.4"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-7.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-8">8.8.  Arithmetic with Complex Numbers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-8"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-8"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-8-SECT-8" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-8.1">8.8.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-8.1"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-8.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-8.2">8.8.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-8.2"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-8.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-8.3">8.8.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-8.3"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-8.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-8.4">8.8.4.  See also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-8.4"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-8.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-9">8.9.  Establishing Relationships Between Variables</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-9"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-9"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-8-SECT-9" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-9.1">8.9.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-9.1"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-9.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-9.2">8.9.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-9.2"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-9.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-9.3">8.9.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-9.3"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-9.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-9.4">8.9.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-9.4"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-9.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-10">8.10.  Estimating the Amount of Time Left in a Process</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-10"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-10"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-8-SECT-10" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-10.1">8.10.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-10.1"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-10.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-10.2">8.10.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-10.2"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-10.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-10.3">8.10.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-10.3"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-10.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-10.4">8.10.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-10.4"><fo:page-number-citation ref-id="jakartackbk-CHP-8-SECT-10.4"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9">9.  Templating</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9"><fo:page-number-citation ref-id="jakartackbk-CHP-9"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-9" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ch09-2-fm2xml">9.1.  Introduction</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ch09-2-fm2xml"><fo:page-number-citation ref-id="ch09-2-fm2xml"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.ch09-2-fm2xml" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ch09-3-fm2xml">9.1.1.  Common Templating Problems in Applications</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ch09-3-fm2xml"><fo:page-number-citation ref-id="ch09-3-fm2xml"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ch09-4-fm2xml">9.1.2.  Templating in Web Applications</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ch09-4-fm2xml"><fo:page-number-citation ref-id="ch09-4-fm2xml"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-1">9.1.  Obtaining Commons JEXL</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-1"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-1"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-9-SECT-1" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-1.1">9.1.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-1.1"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-1.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-1.2">9.1.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-1.2"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-1.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-1.3">9.1.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-1.3"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-1.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-1.4">9.1.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-1.4"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-1.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-2">9.2.  Using an Expression Language</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-2"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-2"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-9-SECT-2" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-2.1">9.2.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-2.1"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-2.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-2.2">9.2.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-2.2"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-2.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-2.3">9.2.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-2.3"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-2.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-2.4">9.2.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-2.4"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-2.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-3">9.3.  Invoking Methods in an Expression</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-3"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-3"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-9-SECT-3" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-3.1">9.3.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-3.1"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-3.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-3.2">9.3.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-3.2"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-3.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-3.3">9.3.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-3.3"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-3.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-3.4">9.3.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-3.4"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-3.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-4">9.4.  Externalizing Logic with an Expression Language</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-4"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-4"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-9-SECT-4" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-4.1">9.4.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-4.1"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-4.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-4.2">9.4.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-4.2"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-4.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-4.3">9.4.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-4.3"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-4.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-4.4">9.4.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-4.4"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-4.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-5">9.5.  Obtaining Jakarta Velocity</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-5"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-5"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-9-SECT-5" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-5.1">9.5.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-5.1"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-5.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-5.2">9.5.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-5.2"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-5.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-5.3">9.5.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-5.3"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-5.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-5.4">9.5.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-5.4"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-5.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-6">9.6.  Using a Simple Templating Language</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-6"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-6"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-9-SECT-6" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-6.1">9.6.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-6.1"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-6.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-6.2">9.6.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-6.2"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-6.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-6.3">9.6.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-6.3"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-6.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-6.4">9.6.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-6.4"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-6.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-7">9.7.  Writing Templates with Conditionals and Loops</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-7"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-7"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-9-SECT-7" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-7.1">9.7.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-7.1"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-7.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-7.2">9.7.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-7.2"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-7.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-7.3">9.7.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-7.3"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-7.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-7.4">9.7.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-7.4"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-7.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-8">9.8.  Using Macros in a Templating Engine</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-8"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-8"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-9-SECT-8" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-8.1">9.8.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-8.1"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-8.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-8.2">9.8.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-8.2"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-8.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-8.3">9.8.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-8.3"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-8.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-8.4">9.8.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-8.4"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-8.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-9">9.9.  Invoking Methods in a Template</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-9"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-9"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-9-SECT-9" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-9.1">9.9.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-9.1"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-9.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-9.2">9.9.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-9.2"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-9.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-9.3">9.9.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-9.3"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-9.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-9.4">9.9.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-9.4"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-9.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-10">9.10.  Obtaining FreeMarker</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-10"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-10"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-9-SECT-10" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-10.1">9.10.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-10.1"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-10.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-10.2">9.10.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-10.2"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-10.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-10.3">9.10.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-10.3"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-10.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-10.4">9.10.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-10.4"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-10.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-11">9.11.  Using a Complex Scripting Engine</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-11"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-11"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-9-SECT-11" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-11.1">9.11.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-11.1"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-11.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-11.2">9.11.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-11.2"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-11.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-11.3">9.11.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-11.3"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-11.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-11.4">9.11.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-11.4"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-11.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-12">9.12.  Accessing XML Documents from a Templating Engine</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-12"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-12"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-9-SECT-12" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-12.1">9.12.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-12.1"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-12.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-12.2">9.12.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-12.2"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-12.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-12.3">9.12.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-12.3"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-12.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-12.4">9.12.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-12.4"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-12.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-13">9.13.  Using Velocity in a Web Application</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-13"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-13"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-9-SECT-13" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-13.1">9.13.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-13.1"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-13.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-13.2">9.13.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-13.2"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-13.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-13.3">9.13.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-13.3"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-13.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-13.4">9.13.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-13.4"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-13.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-14">9.14.  Using FreeMarker in a Web Application</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-14"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-14"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-9-SECT-14" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-14.1">9.14.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-14.1"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-14.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-14.2">9.14.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-14.2"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-14.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-14.3">9.14.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-14.3"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-14.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-14.4">9.14.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-14.4"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-14.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-15">9.15.  Writing Templates in Eclipse</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-15"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-15"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-9-SECT-15" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-15.1">9.15.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-15.1"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-15.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-15.2">9.15.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-15.2"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-15.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-15.3">9.15.3.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-15.3"><fo:page-number-citation ref-id="jakartackbk-CHP-9-SECT-15.3"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10">10.  I/O and Networking</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10"><fo:page-number-citation ref-id="jakartackbk-CHP-10"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-10" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ch10-2-fm2xml">10.1.  Introduction</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ch10-2-fm2xml"><fo:page-number-citation ref-id="ch10-2-fm2xml"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-1">10.1.  Obtaining Commons IO</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-1"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-1"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-10-SECT-1" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-1.1">10.1.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-1.1"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-1.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-1.2">10.1.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-1.2"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-1.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-1.3">10.1.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-1.3"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-1.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-1.4">10.1.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-1.4"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-1.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-2">10.2.  Copying Streams, byte[ ], Readers, and Writers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-2"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-2"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-10-SECT-2" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-2.1">10.2.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-2.1"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-2.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-2.2">10.2.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-2.2"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-2.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-2.3">10.2.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-2.3"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-2.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-3">10.3.  Closing Streams, Readers, and Writers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-3"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-3"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-10-SECT-3" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-3.1">10.3.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-3.1"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-3.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-3.2">10.3.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-3.2"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-3.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-3.3">10.3.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-3.3"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-3.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-3.4">10.3.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-3.4"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-3.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-4">10.4.  Printing a Human-Readable File Size</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-4"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-4"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-10-SECT-4" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-4.1">10.4.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-4.1"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-4.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-4.2">10.4.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-4.2"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-4.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-4.3">10.4.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-4.3"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-4.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-5">10.5.  Copying Files, Strings, and URLs</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-5"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-5"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-10-SECT-5" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-5.1">10.5.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-5.1"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-5.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-5.2">10.5.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-5.2"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-5.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-5.3">10.5.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-5.3"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-5.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-6">10.6.  Deleting Directories Recursively</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-6"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-6"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-10-SECT-6" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-6.1">10.6.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-6.1"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-6.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-6.2">10.6.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-6.2"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-6.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-6.3">10.6.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-6.3"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-6.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-7">10.7.  Obtaining the Size of a Directory</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-7"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-7"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-10-SECT-7" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-7.1">10.7.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-7.1"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-7.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-7.2">10.7.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-7.2"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-7.2"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-8">10.8.  Touching a File</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-8"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-8"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-10-SECT-8" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-8.1">10.8.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-8.1"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-8.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-8.2">10.8.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-8.2"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-8.2"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-9">10.9.  Filtering Files</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-9"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-9"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-10-SECT-9" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-9.1">10.9.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-9.1"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-9.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-9.2">10.9.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-9.2"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-9.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-9.3">10.9.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-9.3"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-9.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-10">10.10.  Measuring Stream Traffic</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-10"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-10"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-10-SECT-10" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-10.1">10.10.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-10.1"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-10.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-10.2">10.10.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-10.2"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-10.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-10.3">10.10.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-10.3"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-10.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-11">10.11.  Splitting an OutputStream</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-11"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-11"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-10-SECT-11" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-11.1">10.11.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-11.1"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-11.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-11.2">10.11.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-11.2"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-11.2"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-12">10.12.  Obtaining Jakarta ORO</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-12"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-12"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-10-SECT-12" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-12.1">10.12.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-12.1"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-12.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-12.2">10.12.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-12.2"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-12.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-12.3">10.12.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-12.3"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-12.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-12.4">10.12.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-12.4"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-12.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-13">10.13.  Using Globs and Perl5 Regular Expressions to List Files</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-13"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-13"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-10-SECT-13" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-13.1">10.13.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-13.1"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-13.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-13.2">10.13.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-13.2"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-13.2"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-14">10.14.  Obtaining Commons Net</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-14"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-14"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-10-SECT-14" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-14.1">10.14.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-14.1"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-14.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-14.2">10.14.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-14.2"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-14.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-14.3">10.14.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-14.3"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-14.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-14.4">10.14.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-14.4"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-14.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-15">10.15.  Writing an FTP Client</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-15"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-15"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-10-SECT-15" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-15.1">10.15.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-15.1"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-15.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-15.2">10.15.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-15.2"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-15.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-15.3">10.15.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-15.3"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-15.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-15.4">10.15.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-15.4"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-15.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-16">10.16.  Sending Mail with SMTP</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-16"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-16"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-10-SECT-16" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-16.1">10.16.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-16.1"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-16.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-16.2">10.16.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-16.2"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-16.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-16.3">10.16.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-16.3"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-16.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-16.4">10.16.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-16.4"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-16.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-17">10.17.  Checking a POP3 Mailbox</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-17"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-17"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-10-SECT-17" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-17.1">10.17.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-17.1"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-17.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-17.2">10.17.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-17.2"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-17.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-17.3">10.17.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-17.3"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-17.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-17.4">10.17.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-17.4"><fo:page-number-citation ref-id="jakartackbk-CHP-10-SECT-17.4"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11">11.  HTTP and WebDAV</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11"><fo:page-number-citation ref-id="jakartackbk-CHP-11"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-11" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ch11-2-fm2xml">11.1.  Introduction</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ch11-2-fm2xml"><fo:page-number-citation ref-id="ch11-2-fm2xml"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-1">11.1.  Obtaining Jakarta HttpClient</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-1"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-1"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-11-SECT-1" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-1.1">11.1.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-1.1"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-1.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-1.2">11.1.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-1.2"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-1.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-1.3">11.1.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-1.3"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-1.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-1.4">11.1.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-1.4"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-1.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-2">11.2.  Getting Jakarta HttpClient Source Code</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-2"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-2"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-11-SECT-2" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-2.1">11.2.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-2.1"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-2.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-2.2">11.2.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-2.2"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-2.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-2.3">11.2.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-2.3"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-2.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-2.4">11.2.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-2.4"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-2.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-3">11.3.  Performing an HTTP GET</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-3"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-3"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-11-SECT-3" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-3.1">11.3.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-3.1"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-3.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-3.2">11.3.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-3.2"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-3.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-3.3">11.3.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-3.3"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-3.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-3.4">11.3.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-3.4"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-3.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-4">11.4.  Sending Parameters in a Query String</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-4"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-4"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-11-SECT-4" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-4.1">11.4.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-4.1"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-4.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-4.2">11.4.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-4.2"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-4.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-4.3">11.4.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-4.3"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-4.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-4.4">11.4.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-4.4"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-4.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-5">11.5.  Retrieving Content with a Conditional GET</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-5"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-5"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-11-SECT-5" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-5.1">11.5.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-5.1"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-5.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-5.2">11.5.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-5.2"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-5.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-5.3">11.5.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-5.3"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-5.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-5.4">11.5.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-5.4"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-5.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-6">11.6.  Debugging HTTP Communications</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-6"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-6"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-11-SECT-6" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-6.1">11.6.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-6.1"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-6.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-6.2">11.6.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-6.2"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-6.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-6.3">11.6.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-6.3"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-6.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-7">11.7.  Making an HTTP POST Request</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-7"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-7"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-11-SECT-7" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-7.1">11.7.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-7.1"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-7.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-7.2">11.7.2.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-7.2"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-7.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-7.3">11.7.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-7.3"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-7.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-7.4">11.7.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-7.4"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-7.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-8">11.8.  Sending POST Data from a File</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-8"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-8"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-11-SECT-8" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-8.1">11.8.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-8.1"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-8.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-8.2">11.8.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-8.2"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-8.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-8.3">11.8.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-8.3"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-8.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-9">11.9.  Uploading Files with a Multipart POST</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-9"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-9"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-11-SECT-9" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-9.1">11.9.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-9.1"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-9.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-9.2">11.9.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-9.2"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-9.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-9.3">11.9.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-9.3"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-9.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-9.4">11.9.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-9.4"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-9.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-10">11.10.  Basic Authentication</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-10"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-10"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-11-SECT-10" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-10.1">11.10.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-10.1"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-10.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-10.2">11.10.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-10.2"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-10.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-10.3">11.10.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-10.3"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-10.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-10.4">11.10.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-10.4"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-10.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-11">11.11.  NTLM Authentication</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-11"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-11"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-11-SECT-11" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-11.1">11.11.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-11.1"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-11.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-11.2">11.11.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-11.2"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-11.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-11.3">11.11.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-11.3"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-11.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-11.4">11.11.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-11.4"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-11.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-12">11.12.  Working with Cookies</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-12"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-12"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-11-SECT-12" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-12.1">11.12.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-12.1"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-12.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-12.2">11.12.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-12.2"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-12.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-12.3">11.12.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-12.3"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-12.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-12.4">11.12.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-12.4"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-12.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-13">11.13.  Handling Redirects</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-13"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-13"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-11-SECT-13" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-13.1">11.13.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-13.1"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-13.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-13.2">11.13.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-13.2"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-13.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-13.3">11.13.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-13.3"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-13.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-13.4">11.13.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-13.4"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-13.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-14">11.14.  SSL</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-14"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-14"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-11-SECT-14" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-14.1">11.14.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-14.1"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-14.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-14.2">11.14.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-14.2"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-14.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-14.3">11.14.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-14.3"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-14.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-14.4">11.14.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-14.4"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-14.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-15">11.15.  Accepting a Self-Signed Certificate</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-15"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-15"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-11-SECT-15" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-15.1">11.15.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-15.1"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-15.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-15.2">11.15.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-15.2"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-15.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-15.3">11.15.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-15.3"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-15.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-15.4">11.15.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-15.4"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-15.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-16">11.16.  Obtaining Jakarta Slide</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-16"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-16"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-11-SECT-16" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-16.1">11.16.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-16.1"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-16.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-16.2">11.16.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-16.2"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-16.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-16.3">11.16.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-16.3"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-16.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-16.4">11.16.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-16.4"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-16.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-17">11.17.  Connecting to WebDAV Resources</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-17"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-17"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-11-SECT-17" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-17.1">11.17.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-17.1"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-17.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-17.2">11.17.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-17.2"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-17.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-17.3">11.17.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-17.3"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-17.3"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-18">11.18.  Modifying a WebDAV Resource</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-18"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-18"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-11-SECT-18" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-18.1">11.18.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-18.1"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-18.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-18.2">11.18.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-18.2"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-18.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-18.3">11.18.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-18.3"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-18.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-18.4">11.18.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-18.4"><fo:page-number-citation ref-id="jakartackbk-CHP-11-SECT-18.4"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12">12.  Searching and Filtering</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12"><fo:page-number-citation ref-id="jakartackbk-CHP-12"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-12" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ch12-2-fm2xml">12.1.  Introduction</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ch12-2-fm2xml"><fo:page-number-citation ref-id="ch12-2-fm2xml"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-1">12.1.  Obtaining Commons JXPath</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-1"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-1"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-12-SECT-1" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-1.1">12.1.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-1.1"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-1.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-1.2">12.1.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-1.2"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-1.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-1.3">12.1.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-1.3"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-1.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-1.4">12.1.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-1.4"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-1.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-2">12.2.  Querying an Object Graph with XPath</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-2"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-2"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-12-SECT-2" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-2.1">12.2.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-2.1"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-2.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-2.2">12.2.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-2.2"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-2.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-2.3">12.2.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-2.3"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-2.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-2.4">12.2.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-2.4"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-2.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-3">12.3.  Search a Collection of Simple Objects</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-3"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-3"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-12-SECT-3" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-3.1">12.3.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-3.1"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-3.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-3.2">12.3.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-3.2"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-3.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-3.3">12.3.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-3.3"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-3.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-3.4">12.3.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-3.4"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-3.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-4">12.4.  Applying XPath Queries to Complex Object Graphs</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-4"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-4"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-12-SECT-4" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-4.1">12.4.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-4.1"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-4.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-4.2">12.4.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-4.2"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-4.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-4.3">12.4.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-4.3"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-4.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-4.4">12.4.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-4.4"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-4.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-5">12.5.  Obtaining Jakarta Lucene</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-5"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-5"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-12-SECT-5" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-5.1">12.5.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-5.1"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-5.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-5.2">12.5.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-5.2"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-5.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-5.3">12.5.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-5.3"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-5.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-5.4">12.5.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-5.4"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-5.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-6">12.6.  Creating an Index of XML Documents</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-6"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-6"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-12-SECT-6" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-6.1">12.6.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-6.1"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-6.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-6.2">12.6.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-6.2"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-6.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-6.3">12.6.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-6.3"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-6.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-6.4">12.6.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-6.4"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-6.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-7">12.7.  Searching for a Specific Term in a Document Index</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-7"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-7"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-12-SECT-7" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-7.1">12.7.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-7.1"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-7.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-7.2">12.7.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-7.2"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-7.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-7.3">12.7.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-7.3"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-7.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-7.4">12.7.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-7.4"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-7.4"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-8">12.8.  Finding the Frequency of Terms in an Index</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-8"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-8"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.I__tt2.jakartackbk-CHP-12-SECT-8" margin-left="48pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-8.1">12.8.1.  Problem</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-8.1"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-8.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-8.2">12.8.2.  Solution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-8.2"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-8.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-8.3">12.8.3.  Discussion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-8.3"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-8.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-8.4">12.8.4.  See Also</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-8.4"><fo:page-number-citation ref-id="jakartackbk-CHP-12-SECT-8.4"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="false" master-reference="front" language="en" format="i" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>Copyright</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>Copyright</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"/></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif" margin-left="0pc"/></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block id="jakartackbk-PREFACE-1"><fo:block><fo:block><fo:block margin-left="0pc" font-size="24.8832pt" font-family="serif" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="12pt" space-before.minimum="12pt * 0.8" space-before.maximum="12pt * 1.2" hyphenate="false" text-align="left" start-indent="0pc" word-spacing="-0.1em" letter-spacing="-0.05em" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Copyright</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Copyright © 2009 Discursive. All rights reserved.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Published by Discursive, 626 Grove St., Suite 201, Evanston, IL 60202.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Java and all Java-based trademarks and logos are trademarks or registered trademarks of Sun Microsystems, Inc., in the United States and other countries. Discursive is independent of Sun Microsystems, Inc.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Many of the designations used by manufacturers and sellers to distinguish
their products are claimed as trademarks. Where those designations
appear in this book, and Discursive was aware of a
trademark claim, the designations have been printed in caps or initial
caps.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">While every precaution has been taken in the preparation of this
book, the publisher and authors assume no responsibility for errors or
omissions, or for damages resulting from the use of the information
contained herein.</fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="false" master-reference="front" language="en" format="i" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>Preface</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>Preface</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"/></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif" margin-left="0pc"/></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block id="jakartackbk-PREFACE-2"><fo:block><fo:block><fo:block margin-left="0pc" font-size="24.8832pt" font-family="serif" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="12pt" space-before.minimum="12pt * 0.8" space-before.maximum="12pt * 1.2" hyphenate="false" text-align="left" start-indent="0pc" word-spacing="-0.1em" letter-spacing="-0.05em" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Preface</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In this book, you'll find information about a set of
libraries developed within the Jakarta Commons (also referred to as
"Commons"). Commons (<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons</fo:inline>) is a set
of small, popular components from the Apache Software
Foundation's Jakarta project. Ranging from the
elementary to the complex, many would consider some of these
libraries indispensable to any Java© project. These
components are so widespread, they may already be on your classpath.
If you develop an application using Jakarta Struts, Apache Tomcat, or
Hibernate, you have Commons BeanUtils and Commons Logging in your
classpath. If you just installed Red Hat Enterprise Linux with the
default configuration, you've got Commons libraries
somewhere in <fo:inline font-family="monospace" font-size="0.8em">/usr</fo:inline>. If you downloaded
Sun's J2EE 1.4 SDK, you will have also downloaded
Commons Logging and Commons Launcher. While Jakarta Commons may be
everywhere, many are still unaware of the capabilities these
components provide.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This book uses Jakarta Commons to focus on tactical implementation
details, answering such questions as: How do we parse XML? How do we
serialize beans? Is there an easier way to work with Collections? How
do we work with HTTP and keep track of cookies? The tactical is often
sacrificed for the strategic. Consider a complex J2EE system with a
solid, well-conceived architecture. The strategic (or high-level)
design appears reasonable from 40,000 feet, but as soon as you drill
into the details, you notice that every Servlet or JSP contains pages
upon pages of unmaintainable and unnecessary code because the
developers were not aware of some valuable time-saver like BeanUtils,
Collections, or the Digester. Or, worse, the developer may have spent
a week reimplementing most of the capabilities of Commons BeanUtils
even though BeanUtils was already in the classpath. Knowing what
Jakarta Commons has to offer often helps to inform decisions made at
the lowest level.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Few application developers would consider writing a custom XML
parser, but developers will frequently write custom components that
duplicate freely available libraries. Take, as an example, a set of
static utility methods that seems to pop up in almost every complex
project. A common process such as reading a file to a
<fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> may be refactored into a
<fo:inline font-family="monospace" font-size="0.8em">CommonFileUtils</fo:inline> class, or turning a DOM
<fo:inline font-family="monospace" font-size="0.8em">Document</fo:inline> into a set of beans may be accomplished
with a set of classes in some custom code. Jakarta Commons provides
solutions to both of these problems and many more, and reading this
book may help you to avoid unnecessary wheel reinvention.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Many people know of these components in a general sense, but few have
the months or weeks necessary to sit down and read the relevant
tutorials, FAQs, blogs, and archived mailing lists associated with
each component. The amount of work involved in keeping up-to-date
with an array of open source communities is not trivial. This is why
I've tried to compact much of this information into
easily accessible recipes. These recipes were written to provide the
information you need to start using Commons in a few minutes, but the
Discussion and See Also sections give you an opportunity to dig
deeper into the motivation behind each Commons component if you need
more information.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The tools introduced herein save you serious time and provide you
with a set of alternatives you may not currently be aware of. I wish
I had read a book like this five years ago; it would have accelerated
my learning and helped me to avoid some costly design decisions. Use
this text as you will; if you are only interested in Commons
Collections, you should be able to quickly familiarize yourself with
Collections by browsing <fo:basic-link internal-destination="jakartackbk-CHP-5" text-decoration="underline" color="blue">Chapter 5</fo:basic-link>. On the other hand, if
you are looking for a survey of some of the major projects in Jakarta
Commons, read this book from start to finish. Part structured
reference, part prose, the cookbook format lets you customize your
reading experience, and I hope this book is as interesting to read as
it was to write.</fo:block><fo:block id="jakartackbk-PREFACE-2-SECT-1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">What's Inside</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1. What's Inside</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This book covers components from Jakarta Commons, a few projects from
Jakarta, and one project outside of the Apache Software Foundation.
This book covers the following components:</fo:block><fo:list-block space-before.optimum="0em" space-before.minimum="0em" space-before.maximum="0em" space-after.optimum="0em" space-after.minimum="0em" space-after.maximum="0em" margin-left="1.0em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e104"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e105"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Jakarta Commons BeanUtils</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e108"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Jakarta Commons Betwixt</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e111"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Jakarta Commons CLI</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e114"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Jakarta Commons Codec</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e117"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Jakarta Commons Collections</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e120"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Jakarta Commons Configuration</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e123"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Jakarta Commons Digester</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e126"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Jakarta Commons HttpClient</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e129"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Jakarta Commons ID</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e132"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Jakarta Commons IO</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e135"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Jakarta Commons JEXL</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e138"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Jakarta Commons JXPath</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e141"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Jakarta Commons Lang</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e144"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Jakarta Commons Logging</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e147"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Jakarta Commons Math</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e150"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Jakarta Commons Net</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e153"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Apache Log4J</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e156"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Jakarta Velocity</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e159"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>FreeMarker</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e162"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Jakarta Lucene</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e165"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Jakarta Slide</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">All of these projects are covered in detail in the following
chapters. Here's what's in each
chapter:</fo:block><fo:block space-before.optimum="0em" space-before.minimum="0em" space-before.maximum="0em" space-after.optimum="0em" space-after.minimum="0em" space-after.maximum="0em" margin-left="1.0em" id="d0e170"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e171" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                  <fo:basic-link internal-destination="jakartackbk-CHP-1" text-decoration="underline" color="blue">Chapter 1</fo:basic-link>, <fo:inline font-style="italic">Supplements to the Java 2 Platform</fo:inline>
               </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>This chapter introduces Commons Lang. Automation of
<fo:inline font-family="monospace" font-size="0.8em">toString( )</fo:inline>, working with arrays, formatting and
rounding dates, working with enumerations, generating identifiers,
and measuring time are some of the topics discussed in this chapter.
This chapter also covers the generation of unique identifiers with
Commons ID.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e186" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                  <fo:basic-link internal-destination="jakartackbk-CHP-2" text-decoration="underline" color="blue">Chapter 2</fo:basic-link>, <fo:inline font-style="italic">Manipulating Text</fo:inline>
               </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>While Java does not have the extensive text manipulation capabilities
of a scripting language like Perl, Commons Lang's
<fo:inline font-family="monospace" font-size="0.8em">StringUtils</fo:inline> has a number of utility methods that
can be used to manipulate text. This chapter deals with
<fo:inline font-family="monospace" font-size="0.8em">StringUtils</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">WordUtils</fo:inline>, and
Commons Codec.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e207" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                  <fo:basic-link internal-destination="jakartackbk-CHP-3" text-decoration="underline" color="blue">Chapter 3</fo:basic-link>, <fo:inline font-style="italic">JavaBeans</fo:inline>
               </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>Beans appear throughout Java; from Jakarta Struts to Hibernate, beans
are a unit of information in an object model. This chapter introduces
Commons BeanUtils, one of the most widely used components from
Jakarta Commons.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e219" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                  <fo:basic-link internal-destination="jakartackbk-CHP-4" text-decoration="underline" color="blue">Chapter 4</fo:basic-link>, <fo:inline font-style="italic">Functors</fo:inline>
               </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>Functors are a fundamental way of thinking about programming as a set
of functional objects. Commons Collections introduced predicates,
transformers, and closures, and functors, which can be used to model
control structures and loops. This chapter demonstrates how one would
apply functors to any program.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e231" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                  <fo:basic-link internal-destination="jakartackbk-CHP-5" text-decoration="underline" color="blue">Chapter 5</fo:basic-link>, <fo:inline font-style="italic">Collections</fo:inline>
               </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>Iterators, filtering with predicates, buffers, queues, bidirectional
maps, type-safe collections, constraining collections, lazy maps, and
set operations are a few of the topics introduced in this chapter.
This chapter deals with Commons Collections, new collection types
introduced, and the application of functors to various collections.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e243" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                  <fo:basic-link internal-destination="jakartackbk-CHP-6" text-decoration="underline" color="blue">Chapter 6</fo:basic-link>, <fo:inline font-style="italic">XML</fo:inline>
               </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>If you are constantly parsing or creating XML documents, this chapter
introduces some alternatives to the standard parser APIs (SAX, DOM,
and JDOM). This chapter introduces Commons Digester, Commons Betwixt,
and Commons JXPath.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e255" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                  <fo:basic-link internal-destination="jakartackbk-CHP-7" text-decoration="underline" color="blue">Chapter 7</fo:basic-link>, <fo:inline font-style="italic">Application Infrastructure</fo:inline>
               </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>Commons Configuration is introduced as a way to parse properties
files and XML configuration files. Other recipes in this chapter show
how Commons CLI can be used to parse a complex set of required and
optional command-line options. This chapter also details the
configuration and use of Commons Logging and Apache Log4J.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e267" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                  <fo:basic-link internal-destination="jakartackbk-CHP-8" text-decoration="underline" color="blue">Chapter 8</fo:basic-link>, <fo:inline font-style="italic">Math</fo:inline>
               </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>This chapter focuses on simple mathematical capabilities in both
Commons Lang and Commons Math. This chapter introduces classes to
work with fractions, complex numbers, matrices, and simple univariate
statistics.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e279" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                  <fo:basic-link internal-destination="jakartackbk-CHP-9" text-decoration="underline" color="blue">Chapter 9</fo:basic-link>, <fo:inline font-style="italic">Templating</fo:inline>
               </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>This chapter deals with simple expression languages such as Commons
JEXL to more complex templating engines such as Jakarta Velocity and
FreeMarker. This chapter also demonstrates the integration of both
Velocity and FreeMarker with a J2EE servlet container such as Jakarta
Tomcat.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e291" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                  <fo:basic-link internal-destination="jakartackbk-CHP-10" text-decoration="underline" color="blue">Chapter 10</fo:basic-link>, <fo:inline font-style="italic">I/O and Networking</fo:inline>
               </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>This chapter introduces Commons IO, which contains a number of
utilities for working with streams and files, and Commons Net, which
contains simple clients for the FTP, POP, and SMTP protocols.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e303" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                  <fo:basic-link internal-destination="jakartackbk-CHP-11" text-decoration="underline" color="blue">Chapter 11</fo:basic-link>, <fo:inline font-style="italic">HTTP and WebDAV</fo:inline>
               </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>If you need to communicate with anything over HTTP, read this
chapter, which deals with Jakarta HttpClient and the WebDAV client
library from Jakarta Slide.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e315" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                  <fo:basic-link internal-destination="jakartackbk-CHP-12" text-decoration="underline" color="blue">Chapter 12</fo:basic-link>, <fo:inline font-style="italic">Searching and Filtering</fo:inline>
               </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>Commons JXPath can be used to apply XPath expressions to collections
and object graphs. Jakarta Lucene is a fully functional search engine
that can index any structured document. This chapter demonstrates the
use of Lucene with Commons Digester.</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Limited time and resources forced me to make some decisions about
which projects to include in this text. Projects like Velocity,
FreeMarker, and Log4J, while not Commons components, were included
because they fit the mold of a small, easily reusable component.
Other Commons components were not included in this book because they
were still being developed at the time of writing, or because a short
recipe would have been impossible without a detailed 30-page
introduction. Commons DbUtils, DBCP, Discovery, Jelly, Launcher,
Modeler, Pool, Primitives, Chain, and promising sandbox components
could fill another entire volume. Some projects, such as Jakarta
HiveMind, started as components in the Commons Sandbox only to be
promoted directly to subproject status of the Jakarta project.
Classification of projects and components in Jakarta can also be
somewhat arbitrary; Jakarta ORO and Jakarta RegExp would both seem to
be prime candidates for the Jakarta Commons, but they are both
subprojects of Jakarta. Other projects, such as Jakarta Commons
HttpClient, have recently been promoted to be subprojects of Jakarta,
leaving the Commons entirely. Think of this book as focusing on
Jakarta Commons with some other projects thrown in to liven up the
discussion. I apologize in advance if I left your favorite project
out.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Writing a book about a series of frequently released components is
reminiscent of a game called whack-a-mole. Just when you finish
updating a chapter for a new release, another component has a
release. On average, one commons component is released every one or
two weeks; therefore, a few of the versions in this book may be
obsolete as soon as this book hits the shelves. In general, Jakarta
Commons makes a concerted effort to preserve backward compatibility
and keep a stable public interface. Lessons learned on Commons
BeanUtils 1.6 should remain applicable to Commons BeanUtils 1.7. If
you find that a more recent version of a component has been released,
you should download that more recent version and check the
Discursive site for updates related to this book.</fo:block></fo:block><fo:block id="jakartackbk-PREFACE-2-SECT-2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Conventions Used in This Book</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2. Conventions Used in This Book</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">I'll use a number of conventions you should know
about in this book. For example, menu items are separated with
an→ like this:
File→
New→ Project. To make them
stand out, new lines of code will be displayed highlighted when
they're added. Example code is often presented out
of context; instead of developing an entire class, only the relevant
block of code is presented. Most examples will include the necessary
import statements for Commons-relevant classes, and other
<fo:inline font-family="monospace" font-size="0.8em">import</fo:inline> statements will be implied. When code is
omitted or implied, it will be represented by ellipses:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I__tt3">import org.apache.commons.digester.Digester;
...
Digester digester = new Digester( );
digester.doSomething( );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In addition, the following typographical conventions are also used in
this book:</fo:block><fo:block space-before.optimum="0em" space-before.minimum="0em" space-before.maximum="0em" space-after.optimum="0em" space-after.minimum="0em" space-after.maximum="0em" margin-left="1.0em" id="d0e352"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e353" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                  <fo:inline font-style="italic">Italic</fo:inline>
               </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>Indicates new terms, URLs, email addresses, filenames, file
extensions, pathnames, directories, and Unix utilities.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e362" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em">Constant width</fo:inline>
               </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>Indicates commands, options, switches, variables, types, classes,
namespaces, methods, modules, properties, parameters, values,
objects, events, event handlers, and XML tags.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e371" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-style="italic">Constant width italic</fo:inline>
               </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>Shows text that should be replaced with user-supplied values.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e380" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Constant width bold</fo:inline>
               </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>Highlights important text within code examples.</fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-PREFACE-2-NOTE-39"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/tip.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Tip</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This icon signifies a tip, suggestion, or general note.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-PREFACE-2-NOTE-40"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/warning.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Warning</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This icon indicates a warning or caution.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block></fo:block><fo:block id="jakartackbk-PREFACE-2-SECT-3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">What You'll Need</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3. What You'll Need</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">To experiment with the various libraries introduced in this book, you
will need the J2SE 1.4 SDK, which can be obtained from <fo:inline font-family="monospace" font-size="0.8em">http://www.javasoft.com</fo:inline>. The examples in this
book were developed in an IDE named Eclipse, which can be downloaded
from the Eclipse project site at <fo:inline font-family="monospace" font-size="0.8em">http://www.eclipse.org</fo:inline>. Each chapter contains
instructions for downloading the various Jakarta Commons components;
to download any component from Jakarta Commons, go to the Jakarta
Commons page at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons</fo:inline> and click
on "Binaries" under
"Download" in the left menu.</fo:block></fo:block><fo:block id="jakartackbk-PREFACE-2-SECT-4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">The Jakarta Commons Community</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4. The Jakarta Commons Community</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The Jakarta community and the larger community of the Apache Software
Foundation is committed to developing open source software. The
Apache Software Foundation is a nonprofit corporation registered in
Delaware that supports ongoing collaborative software development
according to a set of simple ideals: transparency, meritocracy,
consensus, and mutual respect. To learn more about the foundation,
start at the Frequently Asked Questions page on www.apache.org
(<fo:inline font-family="monospace" font-size="0.8em">http://www.apache.org/foundation/faq.html</fo:inline>).
Jakarta is a project under the Apache Software Foundation, and it is
managed by what is known as a Project Management Committee (PMC).
This committee manages a number of Jakarta subprojects including the
Jakarta Commons.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The Jakarta community and Apache XML community both had tremendous
growth spurts from 1999 to 2003, with both projects becoming dominant
forces in open source Java. Tomcat, Struts, Xerces, Xalan, Ant,
Cocoon, and other projects were embraced by the larger community and
Java developed a very strong association with open source because of
the influence of Jakarta. Toward the end of this growth spurt, the
corporate structure of Apache required a certain level of oversight
and accountability, which could not be achieved in an umbrella
project like Jakarta with hundreds of committers. A decision was made
to encourage Jakarta subprojects to move toward smaller, more focused
PMCs. One of the first projects to leave Jakarta was Apache Ant, and
other projects such as Maven, Struts, and Log4j followed suit. This
new, more nimble approach to the structure of collaborative software
development avoids the creation of a management layer between project
participants and the PMC. Apache is making way for a new generation
of projects that will set the standard for open source Java,
including Geronimo, Pluto, Directory, Derby, and Axion. Be aware that
the structure of projects and subprojects in Jakarta is somewhat
fluid at the moment, and, as the situation evolves, certain
components could be split off into separate Apache projects.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you find the components in this book helpful, I encourage you to
take some time to observe the commons-dev developer mailing list. The
ASF is (mostly) transparent, and this means that the general public
has a window into the collaborative development process that is used
to create a large body of great software. I would encourage any
developer to take an interest in a piece of software and watch the
development process. Follow the decisions, releases, arguments,
flame-wars, and evolution of something like Jakarta Commons and you
can see for yourself what works and what doesn't
work. This is also a great way to keep yourself informed of the
changes and direction of certain projects.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">I don't intend to speak for this community, and,
honestly, no one can speak for a group as diverse as the one that has
formed around Jakarta Commons. I wanted to write this book to help
attract more people to the concept of Jakarta Commons and to take
some time to encourage people to think about how they could
contribute to that effort. If there are more people paying attention
to the software, Commons components will have higher quality, more
bug reports will be filed, and more people might take some time to
submit documentation patches. If you find Jakarta Commons (or any
other Apache software) useful, you should consider taking a little
bit of time to help a fellow user on the user mailing list or submit
documentation patches. If you find a typo or a bug, file a report on
Apache's Bugzilla installation (<fo:inline font-family="monospace" font-size="0.8em">http://issues.apache.org/bugzilla</fo:inline>) or Jira
installation (<fo:inline font-family="monospace" font-size="0.8em">http://issues.apache.org/jira</fo:inline>).</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">There is always a need for greater unit test coverage, and any time
you find an inconsistency in code you should file a bug.
Contributions can come in many forms — answering user
questions, writing documentation, writing unit tests, submitting
patches, or providing feedback. All of these contributions help
sustain a living community. If you find yourself unable to
participate in the community, you can make a small (possibly
tax-deductible) donation to the Apache Software Foundation to help
offset the cost of infrastructure and bandwidth (<fo:inline font-family="monospace" font-size="0.8em">http://www.apache.org/foundation/contributing.html</fo:inline>).</fo:block></fo:block><fo:block id="jakartackbk-PREFACE-2-SECT-5"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">The Apache Software License</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5. The Apache Software License</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Everything in this book is covered by the Apache Software License 2.0
(except FreeMarker, which is covered by a similar BSD-style license).
All developers who touch open source should be familiar with the
various licenses and come to their own conclusions; most importantly,
you should become familiar with the Apache license (and other
BSD-style licenses) and how it differs from the GNU General Public
License (GPL) and GNU Lesser General Public License (LGPL). Read the
Apache Software License 2.0 at <fo:inline font-family="monospace" font-size="0.8em">http://www.apache.org/licenses/</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">I am not a lawyer (IANAL), but I would urge you to learn as much as
you can about these licenses before you start to use them. For more
information about open source, and for a comprehensive list of
licenses, see the Open Source Initiative (OSI) at <fo:inline font-family="monospace" font-size="0.8em">http://www.opensource.org</fo:inline>. The Apache license
does not place restrictions on people or organizations that wish to
redistribute the software it covers, and, in general, the Apache
license creates fewer licensing headaches for individuals and
organizations that want to incorporate open source software into a
commercial product.</fo:block></fo:block><fo:block id="jakartackbk-PREFACE-2-SECT-7"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">We'd Like to Hear from You</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6. We'd Like to Hear from You</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Please address comments and questions concerning this book to the
publisher:</fo:block><fo:table space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>Discursive</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>626 Grove St., Suite 201, Evanston, IL 60202</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block><fo:block id="jakartackbk-PREFACE-2-SECT-8"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Acknowledgments (1st Edition)</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7. Acknowledgments (1st Edition)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This book would have been impossible to write were it not for the
support and inspiration of a number of colleagues, friends, and
family.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Thanks to Brett McLaughlin, my editor, who had a huge impact on the
quality, structure, and content of the book. His feedback and advice
over the course of the past year has been immeasurably valuable.
Thanks also to Karen Tegtmeyer for reviewing this book.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Primary credit should first go to the Jakarta community and the
various individuals who give hours upon hours of time to cut releases
and maintain infrastructure. In the face of constant challenge,
Jakarta has remained a well spring of innovation.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Thanks to Michael Podrazik, Stefan Winz, Bob Hartlaub, Gautam
Guliani, Jarret Rackoff, Robert Sorkin, and Federico Hatoum, and
Grassroots Technologies in New York, NY. Stefan originally introduced
me to the Commons in the form of the Digester.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Thanks to various colleagues: Tim Beynart, Mike Smith, Felix Sheng,
Julian Bleecker, Jim Buswell, Peter Costa, Rich Angeletti, David
Winterfeldt, Ray Krueger, Chris Bobbitt, Tom Bergerson, Alex Wolfe,
David Navin, Mark Snell, Bill Martens, Sultan Meghji, Daniel Summers,
Greg Sandell, Dan Waite, and Benjamin Burton.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Mad props to Dave and Nicola, Rock, Patrick, Kat and Jay, Mike,
Kelcey, John, Heather, Nick, Jessica, Marc, Krys, Joan, Jim, Zach,
Sarah, and Mickey. Much respect to John Bicknell, Karen Brunssen, Kit
Bridges and the Trinity Episcopal Church Choir. Endless thanks to
Andrea and Klaus.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Thanks to my family, Chris, Kriste, Charlotte, Lily, Sean, Amy, Lucy,
Kathy, Toby, Julie, Taylor, the Gilmores, Janey, all the
O'Briens, and my parents Margaret and Michael.
Thanks to the Paynes: Becky, James, Heather, Chris, Jeannette, Matt,
Susette and Tom, Grandma Barbee and James Sr.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Most of all, I would like to thank my wife, Susan
O'Brien, for being perfect. Happy Halloween.</fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="false" master-reference="body" language="en" format="1" initial-page-number="1" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>Supplements to the Java 2 Platform</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>Supplements to the Java 2 Platform</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"/></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif" margin-left="0pc"/></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block id="jakartackbk-CHP-1"><fo:block font-family="serif"><fo:block margin-left="0pc"><fo:block text-align="left" font-weight="bold" font-size="21.6pt"><fo:block keep-with-next.within-column="always" space-before.optimum="12pt" space-before.minimum="12pt * 0.8" space-before.maximum="12pt * 1.2" hyphenate="false" text-align="left" start-indent="0pc" word-spacing="-0.1em" letter-spacing="-0.05em" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 1. Supplements to the Java 2 Platform</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="ch01-2-fm2xml"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Introduction</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.1. Introduction</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This chapter introduces utilities that augment the
<fo:wrapper id="jakartackbk-CHP-1-ITERM-1715"><!--Java 2 Standard
Edition--></fo:wrapper>Java 2 Standard
<fo:wrapper id="jakartackbk-CHP-1-ITERM-1716"><!--J2SE (Java 2 Standard
Edition)--></fo:wrapper>Edition (J2SE), providing classes and
utilities that make some of the more mundane programming tasks more
straightforward. Jakarta Commons Lang is a collection of useful
supplements to the J2SE. This package fills gaps present in the
standard Java API and provides a number of simple, time-saving
utility classes. Sun's Javadoc for the
<fo:inline font-family="monospace" font-size="0.8em">java.lang</fo:inline> package in the J2SE states that the
package "provides classes that are fundamental to
the design of the Java programming language." In the
same vein, Jakarta Commons Lang provides classes that augment the
fundamental design of the Java programming language.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You may be tempted to skip the simple recipes presented in this
chapter and continue on to more advanced topics in this text. String
manipulation, date truncation, and <fo:inline font-family="monospace" font-size="0.8em">toString( )</fo:inline>
methods do not inspire the sense of mystery and genius one feels when
working with <fo:wrapper id="jakartackbk-CHP-1-ITERM-1717"><!--Extensible Markup
Language--></fo:wrapper>Extensible Markup
Language (XML) or<fo:wrapper id="jakartackbk-CHP-1-ITERM-1718"><!--XML (Extensible Markup
Language)--></fo:wrapper> an open source text-to-speech engine.
But, even if you are the most fluent speaker of Java, there are
lessons to be learned from the utilities introduced in this chapter;
a simple trick learned here may save you a few minutes every single
day. Don't waste your time rewriting and maintaining
utilities that already exist in Commons Lang; there are more
interesting problems to be solved, and building <fo:inline font-family="monospace" font-size="0.8em">hashcode()</fo:inline> functions is not one of them.</fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" border-style="solid" border-width="1pt" border-color="black" background-color="#DDDDDD" padding-left="12pt" padding-right="12pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pt" margin-right="0pt" id="jakartackbk-CHP-1-SIDEBAR-1"><fo:block><fo:block><fo:block font-family="serif" font-weight="bold"><fo:block font-weight="bold" hyphenate="false" text-align="start" keep-with-next.within-column="always">The Advent of Tiger</fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">With the release of
<fo:wrapper id="jakartackbk-CHP-1-ITERM-1719"><!--Tiger--></fo:wrapper>Tiger (the codename
for Java 1.5), some of these utilities are duplicated or superseded.
Those of you who are stuck with 1.4 for a few more months will find
some of the supplements in this chapter helpful, regardless of the
availability of a new <fo:wrapper id="jakartackbk-CHP-1-ITERM-1720"><!--Java Virtual
Machine--></fo:wrapper>Java Virtual Machine
(JVM). Even if<fo:wrapper id="jakartackbk-CHP-1-ITERM-1721"><!--JVM (Java Virtual
Machine)--></fo:wrapper> you are using Java 1.5, the recipes in
this chapter will still be relevant. A few classes in many Jakarta
Commons projects have been made obsolete by the release of 1.4, but
there are still many vocal users who are using an application that
only runs in 1.3 (or even 1.2). The bar for backward compatibility
will eventually shift, but for now, most Commons components work with
1.3 or 1.4 at a minimum.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Obtaining Commons Lang</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.1. Obtaining Commons Lang</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-1.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.1.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You want to use <fo:wrapper id="jakartackbk-CHP-1-ITERM-1722"><!--Commons
Lang, downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1723"><!--downloading, Commons
Lang--></fo:wrapper>Commons Lang because your program needs
to use some of the simple utilities this component provides, such as
array manipulation, date manipulation, and enums.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-1.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.1.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">To download the latest version of Commons Lang, follow these steps:</fo:block><fo:list-block space-before.optimum="0em" space-before.minimum="0em" space-before.maximum="0em" space-after.optimum="0em" space-after.minimum="0em" space-after.maximum="0em" margin-left="1.0em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.2em" id="d0e559"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e560"><fo:list-item-label end-indent="label-end()"><fo:block>1.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>In a web browser, open the URL <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/site/binindex.cgi</fo:inline>.
This URL will select a mirror, and generate a page with links to
download binary distributions from an Apache mirror.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e566"><fo:list-item-label end-indent="label-end()"><fo:block>2.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Find the Commons Lang project section. If you search for the term
"Commons Lang," you will find a
section that provides a link to download the latest binary release of
Commons Lang.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e569"><fo:list-item-label end-indent="label-end()"><fo:block>3.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Click on either the <fo:inline font-family="monospace" font-size="0.8em">2.0 zip</fo:inline> or <fo:inline font-family="monospace" font-size="0.8em">2.0
tar.gz</fo:inline> (depending on your platform) to download Commons
Lang 2.0.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e578"><fo:list-item-label end-indent="label-end()"><fo:block>4.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Unzip or untar the binary distribution. This will create a directory
named <fo:inline font-family="monospace" font-size="0.8em">commons-lang-2.0</fo:inline>. The
<fo:inline font-family="monospace" font-size="0.8em">commons-lang-2.0</fo:inline> directory should now contain a
Java Archive (JAR) file, <fo:inline font-family="monospace" font-size="0.8em">commons-lang-2.0.jar</fo:inline>.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e590"><fo:list-item-label end-indent="label-end()"><fo:block>5.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Copy or add <fo:inline font-family="monospace" font-size="0.8em">commons-lang-2.0.jar</fo:inline> to your
classpath.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-1.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.1.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Step #5 varies based on your development environment. If you are
working with Apache Ant as a build tool, you will need to make sure
that your classpath includes the Commons Lang JAR. If you are using
an Integrated Development Environment (IDE) like Eclipse, you will
need to copy this JAR to a directory in your project, and alter your
project's preferences to add Commons Lang 2.0 to the
"Java Build Path." If you are using
Maven as a build tool, add the following dependency to the
dependencies section of your <fo:inline font-family="monospace" font-size="0.8em">project.xml</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt4">&lt;dependencies&gt;
  &lt;dependency&gt;
    &lt;id&gt;commons-lang&lt;/id&gt;
    &lt;version&gt;2.0&lt;/version&gt;
  &lt;/dependency&gt;

  ...other dependencies...
&lt;/dependencies&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:wrapper id="jakartackbk-CHP-1-ITERM-1724"><!--Commons
Lang, library--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1725"><!--libraries, Commons
Lang--></fo:wrapper>Commons Lang library includes utilities
for working with dates, exceptions, arrays, enums, and more. It is
one of the most widely used libraries in open source Java. To learn
more about Commons Lang, visit the Jakarta Commons Lang web site at
<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/lang/</fo:inline>.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-CHP-1-NOTE-42"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/tip.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Tip</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">At the time of writing, the most recent version of the Commons Lang
component was Version 2.0. If there is a more recent version of
Commons Lang available, use the latest version. Although not a
guarantee or a promise, most Jakarta Commons components strive for
backward compatibility. If an interface has been altered or
functionality removed, it will be noted in the release notes for a
newer version. If you are going to use a different version of the
Commons Lang component with the recipes in this chapter, make sure to
read the release notes, which are stored in the file
<fo:inline font-family="monospace" font-size="0.8em">RELEASE-NOTES.txt</fo:inline>.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-1.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.1.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you are having an issue<fo:wrapper id="jakartackbk-CHP-1-ITERM-1726"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1727"><!----></fo:wrapper> with one of the utilities in
Commons Lang, see <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-2" text-decoration="underline" color="blue">Recipe 1.2</fo:basic-link> on joining the
Commons-user mailing list. If you are looking for the source code,
see <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-3" text-decoration="underline" color="blue">Recipe 1.3</fo:basic-link> on obtaining the source code
for Commons Lang. You can also visit the Commons Lang web site at
<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/lang</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Joining the Commons-User Mailing List</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.2. Joining the Commons-User Mailing List</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-2.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.2.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You want to ask a question about a<fo:wrapper id="jakartackbk-CHP-1-ITERM-1728"><!--Commons
Lang, mailing lists--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1729"><!--mailing lists--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1730"><!--lists, mailing--></fo:wrapper>
component in Jakarta Commons.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-2.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.2.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Join the <fo:inline font-family="monospace" font-size="0.8em">commons-user@jakarta.apache.org</fo:inline> mailing list,
and ask your question. This mailing list is full of Commons users,
and it is a good place to discuss any problems
you've had with a particular utility in the Jakarta
Commons.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-2.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.2.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Before you join this
mailing<fo:wrapper id="jakartackbk-CHP-1-ITERM-1731"><!--resources, mailing
lists--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1732"><!--troubleshooting
mailing lists--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1733"><!--joining
mailing lists--></fo:wrapper> list, take a moment to
familiarize yourself with the mailing list guidelines available at
<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/site/mail.html</fo:inline>.
Once you have read these guidelines, you can find information about
joining this mailing list at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/site/mail2.html#Commons</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The Jakarta Commons-user mailing list is a place for users of all
Commons components to ask questions of other users and Commons
developers. This mailing list has a high volume of messages, and
subscribers should prefix all subjects with the component you are
discussing. In the case of Commons Lang, make sure your email subject
starts with <fo:inline font-family="monospace" font-size="0.8em">[lang]</fo:inline> before sending a message to the
Commons-user mailing list; otherwise, your email may be ignored.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you have a question or a comment, you will save yourself time and
trouble if you search the archives of the Commons-user mailing list
(<fo:inline font-family="monospace" font-size="0.8em">http://www.mail-archive.com/commons-user@jakarta.apache.org/</fo:inline>)
for related discussions. The archives of this mailing list are a
great place to look if you are having problems with a particular
Commons component. Try not to ask a question that has already been
asked and answered in a previous discussion, and remember that the
Apache Software Foundation (ASF) is a volunteer
organization—members of the community will gladly assist you if
you provide enough information. And, don't be shy.
If you know the answer to someone's question, you
don't have to ask for anyone's
permission to actively participate.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-2.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.2.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The Commons-user mailing list archive is also available from the
Eyebrowse list archive at <fo:inline font-family="monospace" font-size="0.8em">http://nagoya.apache.org/eyebrowse/SummarizeList?listId=15</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Getting the Commons Lang Source Code</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.3. Getting the Commons Lang Source Code</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-3.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.3.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You want to view the <fo:wrapper id="jakartackbk-CHP-1-ITERM-1734"><!--Commons
Lang, source code--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1735"><!--source code, Commons
Lang--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1736"><!--code, Commons
Lang--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1737"><!--viewing source
code--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1738"><!--downloading, Commons
Lang--></fo:wrapper>source code for the Commons Lang project.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-3.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.3.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Download the source code from <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/site/sourceindex.cgi</fo:inline>.
Following the same procedure as outlined in <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1" text-decoration="underline" color="blue">Recipe 1.1</fo:basic-link>, you can download a file named
<fo:inline font-family="monospace" font-size="0.8em">commons-lang-2.0-src.zip</fo:inline> (or
<fo:inline font-family="monospace" font-size="0.8em">commons-lang-2.0-src.tar.gz</fo:inline>). Once you unzip
this file, you will have the source to Commons Lang in
<fo:inline font-family="monospace" font-size="0.8em">./commons-lang-2.0-src</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-3.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.3.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The
<fo:inline font-family="monospace" font-size="0.8em">commons-lang-2.0-src</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1739"><!--commons-lang-2.0-src
directory--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1740"><!--directories, commons-lang-2.0-src--></fo:wrapper>
directory will contain
<fo:wrapper id="jakartackbk-CHP-1-ITERM-1741"><!--subdirectories--></fo:wrapper>the following:</fo:block><fo:block space-before.optimum="0em" space-before.minimum="0em" space-before.maximum="0em" space-after.optimum="0em" space-after.minimum="0em" space-after.maximum="0em" margin-left="1.0em" id="d0e802"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e803" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                     <fo:inline font-family="monospace" font-size="0.8em">build.xml</fo:inline>
                  </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>An Apache Ant<fo:wrapper id="jakartackbk-CHP-1-ITERM-1742"><!--files--></fo:wrapper>
                        <fo:wrapper id="jakartackbk-CHP-1-ITERM-1743"><!--build.xml--></fo:wrapper>
                        <fo:wrapper id="jakartackbk-CHP-1-ITERM-1744"><!--src/java subdirectory--></fo:wrapper>
                        <fo:wrapper id="jakartackbk-CHP-1-ITERM-1745"><!--subdirectories, src/java--></fo:wrapper>
build file, which you can use to compile the source. If Ant is
installed, you can compile or test by running <fo:inline font-family="monospace" font-size="0.8em">ant
compile</fo:inline> or <fo:inline font-family="monospace" font-size="0.8em">ant test</fo:inline>.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e836" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                     <fo:inline font-family="monospace" font-size="0.8em">src/java</fo:inline>
                  </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>This subdirectory contains the source for the classes in Commons
Lang.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e845" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                     <fo:inline font-family="monospace" font-size="0.8em">src/test</fo:inline>
                  </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>This <fo:wrapper id="jakartackbk-CHP-1-ITERM-1746"><!--src/test subdirectory--></fo:wrapper>
                        <fo:wrapper id="jakartackbk-CHP-1-ITERM-1747"><!--subdirectories, src/test--></fo:wrapper>subdirectory
contains unit tests for the Commons Lang project. Each
<fo:inline font-family="monospace" font-size="0.8em">*Test.java</fo:inline> file is an extension of JUnit
<fo:inline font-family="monospace" font-size="0.8em">TestCase</fo:inline> class.</fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-3.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.3.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about Apache Ant, see the Ant project page at
<fo:inline font-family="monospace" font-size="0.8em">http://ant.apache.org</fo:inline>. Also see
Chapter 3 in the <fo:inline font-style="italic">Java Extreme Programming
Cookbook</fo:inline> by Eric M. Burke and Brian M. Coyner
(O'Reilly).</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The unit tests in this source distribution use the JUnit testing
framework. For more information about JUnit, see the JUnit project
page at <fo:inline font-family="monospace" font-size="0.8em">http://www.junit.org</fo:inline>.
Also see Chapter 4 in the <fo:inline font-style="italic">Java Extreme Programming
Cookbook</fo:inline> by Burke and Coyner.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">See <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1" text-decoration="underline" color="blue">Recipe 1.1</fo:basic-link> for information about
obtaining the binary distribution for Commons Lang, and see the
Commons Lang web site at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/lang</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Automating the Generation of toString( ) Content</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.4. Automating the Generation of toString( ) Content</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-4.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.4.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You want to automate the creation of <fo:inline font-family="monospace" font-size="0.8em">toString( )</fo:inline>
methods.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-4.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.4.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use the Commons Lang<fo:wrapper id="jakartackbk-CHP-1-ITERM-1748"><!--Commons
Lang, toString( )
methods, automation--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1749"><!--toString( )
methods, automation--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1750"><!--methods, toString(
), automation--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1751"><!--automation, toString(
) methods--></fo:wrapper>
               <fo:inline font-family="monospace" font-size="0.8em">ReflectionToStringBuilder</fo:inline> or
<fo:inline font-family="monospace" font-size="0.8em">ToStringBuilder</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">ToStringBuilder</fo:inline> to create <fo:inline font-family="monospace" font-size="0.8em">toString()</fo:inline> methods. The following code is an example of a
<fo:inline font-family="monospace" font-size="0.8em">toString( )</fo:inline> method, which uses a
<fo:wrapper id="jakartackbk-CHP-1-ITERM-1752"><!--reflection
builders--></fo:wrapper>reflection builder:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt5">import org.apache.commons.lang.builder.ToStringBuilder;

public void toString( ) {
    ReflectionToStringBuilder.toString( this );
}</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-4.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.4.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Assume that you have an object named
<fo:inline font-family="monospace" font-size="0.8em">PoliticalCandidate</fo:inline>—a bean that represents
some information about a presidential candidate. This bean has a set
of properties: <fo:inline font-family="monospace" font-size="0.8em">firstName</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">lastName</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">dateOfBirth</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">moneyRaised</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">homeState</fo:inline>.
<fo:basic-link internal-destination="jakartackbk-CHP-1-EX-1" text-decoration="underline" color="blue">Example 1-1</fo:basic-link> shows the
<fo:inline font-family="monospace" font-size="0.8em">PoliticalCandidate</fo:inline> class using a
<fo:inline font-family="monospace" font-size="0.8em">ReflectionToStringBuilder</fo:inline>; the getter and setter
methods have been omitted for brevity.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-EX-1"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 1-1. The PoliticalCandidate class using ReflectionToStringBuilder</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e997">import java.math.*;
import java.util.*;
import org.apache.commons.lang.builder.ReflectionToStringBuilder;

public class PoliticalCandidate {

    private String lastName;
    private String firstName;
    private Date dateOfBirth;
    private BigDecimal moneyRaised;
    private State homeState;

    // get/set methods are omitted for brevity...

    public void toString( ) {
        ReflectionToStringBuilder.toString( this );
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The process of keeping the contents of a <fo:inline font-family="monospace" font-size="0.8em">toString()</fo:inline> method synchronized with a changing object model becomes
a chore (usually a forgotten one). Commons Lang includes a fairly
simple utility designed to automate this chore using reflection. The
<fo:inline font-family="monospace" font-size="0.8em">ToStringBuilder</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1753"><!--ToStringBuilder
class--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1754"><!--classes, ToStringBuilder--></fo:wrapper>
class and its extension,
<fo:inline font-family="monospace" font-size="0.8em">ReflectionToStringBuilder</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1755"><!--ReflectionToStringBuilder
class--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1756"><!--classes, ReflectionToStringBuilder--></fo:wrapper>,
can condense a large <fo:inline font-family="monospace" font-size="0.8em">toString( )</fo:inline> method body into
one line of code. Most importantly, the
<fo:inline font-family="monospace" font-size="0.8em">ReflectionToStringBuilder</fo:inline> reflects any future
changes that are made to the object model. The following code
demonstrates the output of a string
<fo:wrapper id="jakartackbk-CHP-1-ITERM-1757"><!--strings, built via
reflection--></fo:wrapper>built via reflection:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt6">// Create a State
State va = new State( "VA", "Virginia");

// Create a Birth Date
Calendar calendar = new GregorianCalendar( );
calendar.set( Calendar.YEAR, 1743 );
calendar.set( Calendar.MONTH, Calendar.APRIL );
calendar.set( Calendar.DAY_OF_MONTH, 13 );
Date dob = calendar.getTime( );

BigDecimal moneyRaised = new BigDecimal( 293829292.93 );        

// Create a Political Candidate
PoliticalCandidate candidate = 
    new PoliticalCandidate( "Jefferson", "Thomas", dob, moneyRaised, va );
        
System.out.println( candidate );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Assume that the <fo:inline font-family="monospace" font-size="0.8em">State</fo:inline> object is another bean using
the same <fo:inline font-family="monospace" font-size="0.8em">ReflectionToStringBuilder</fo:inline>. The code above
sets the properties of a bean and produces the following output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt7">com.discursive.jccook.lang.builders.PoliticalCandidate@187aeca
    [lastName=Jefferson,\firstName=Thomas,
     dateOfBirth=Sat Apr 13 22:38:42 CST 1743,
     moneyRaised=\293829292.930000007152557373046875,
     state=\com.discursive.jccook.lang.builders.State@87816d
         [abbreviation=VA,name=Virginia]]</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-CHP-1-NOTE-43"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/tip.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Tip</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">As in other cases in this book, I've applied a
minimal amount of formatting to the output so that it fits on the
printed page. Your results will be the same in terms of content but
will be all on one long line.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This is not the most readable piece of information in the world, but
it <fo:inline font-style="italic">was</fo:inline> automatically generated. Keeping a
<fo:inline font-family="monospace" font-size="0.8em">toString( )</fo:inline> method up-to-date in an object model
that contains one hundred entities is next to impossible under the
constraints of a deadline and a budget. If your objects have
meaningful <fo:inline font-family="monospace" font-size="0.8em">toString( )</fo:inline> methods, it will be much
easier to diagnose problems in your application. If you use the
<fo:inline font-family="monospace" font-size="0.8em">ReflectionToStringBuilder</fo:inline>, you are assured that
the message printed out will be accurate; the alternative is to have
a message that may or may not <fo:wrapper id="jakartackbk-CHP-1-ITERM-1758"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1759"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1760"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1761"><!----></fo:wrapper>be relevant—trusting
developers to keep <fo:inline font-family="monospace" font-size="0.8em">toString( )</fo:inline> methods updated
manually.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-CHP-1-NOTE-44"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/warning.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Warning</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This utility uses the class <fo:inline font-family="monospace" font-size="0.8em">AccessibleObject</fo:inline> in
the J2SE reflection package to bypass access modifiers and access
private member variables of an object directly. If your system is
running under a restrictive <fo:inline font-family="monospace" font-size="0.8em">SecurityManager</fo:inline>, you
may need to alter your configuration to allow Commons Lang to bypass
these security restrictions. Only use this reflection builder if you
are certain that your code will run in an environment without a
restrictive security policy. I use this utility in a system that runs
on a few servers in a known location, but if I were writing a
reusable library, a reflection builder would not be feasible; if
someone were to use my library in an environment with a different
security policy, calling a <fo:inline font-family="monospace" font-size="0.8em">toString( )</fo:inline> may cause
problems. The relevant permission is the
<fo:inline font-family="monospace" font-size="0.8em">suppressAccessChecks</fo:inline> permission target of the
<fo:inline font-family="monospace" font-size="0.8em">java.lang.reflect.ReflectPermission</fo:inline> class.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-5"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Customizing Generated toString( ) Content</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.5. Customizing Generated toString( ) Content</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-5.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.5.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to automate <fo:inline font-family="monospace" font-size="0.8em">toString( )</fo:inline> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1762"><!--Commons
Lang, toString( )
methods, customization--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1763"><!--toString( )
methods, customization--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1764"><!--methods, toString(
), customization--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1765"><!--customization, toString(
) methods--></fo:wrapper>while retaining control over the
output, contents, and formatting.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-5.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.5.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In addition to the <fo:inline font-family="monospace" font-size="0.8em">ReflectionToStringBuilder</fo:inline>,
Commons Lang provides for customization via the
<fo:inline font-family="monospace" font-size="0.8em">ToStringBuilder</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1766"><!--ToStringBuilder
class--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1767"><!--customization--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1768"><!--classes, ToStringBuilder, customization--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1769"><!--customization, ToStringBuilder
class--></fo:wrapper> and
<fo:inline font-family="monospace" font-size="0.8em">ToStringStyle</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1770"><!--ToStringStyle
class customization--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1771"><!--classes, ToStringStyle--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1772"><!--customization, ToStringStyle
class--></fo:wrapper> class. From the previous recipe, if you
only want the <fo:inline font-family="monospace" font-size="0.8em">PoliticalCandidate</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">toString( )</fo:inline> method to print
<fo:inline font-family="monospace" font-size="0.8em">lastName</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">firstName</fo:inline>, use the
<fo:inline font-family="monospace" font-size="0.8em">ToStringBuilder</fo:inline> class and pass in a
<fo:inline font-family="monospace" font-size="0.8em">ToStringStyle</fo:inline> object. The following example
demonstrates a <fo:inline font-family="monospace" font-size="0.8em">toString( )</fo:inline> method implementation
that customizes both style and content:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt8">import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;

public String toString( ) {
    return new ToStringBuilder(this, ToStringStyle.MULTI_LINE_STYLE)
                   .append("lastName", lastName)
                   .append("firstName", firstName)
                   .toString( );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Calling <fo:inline font-family="monospace" font-size="0.8em">toString( )</fo:inline> on this object will produce
the following output containing only the two properties specified as
parameters to <fo:inline font-family="monospace" font-size="0.8em">append( )</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt9">com.discursive.jccook.lang.builders.PoliticalCandidate@1cd2e5f[
  lastName=Jefferson
  firstName=Thomas
]</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-CHP-1-NOTE-46"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/tip.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Tip</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Unlike the output shown in <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-4" text-decoration="underline" color="blue">Recipe 1.4</fo:basic-link>, this
output is shown <fo:inline font-style="italic">exactly</fo:inline> as it appears on your
screen.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-5.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.5.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Generating <fo:inline font-family="monospace" font-size="0.8em">toString( )</fo:inline> content using reflection
saves time, but the trade-off is that the code using reflection
prints out every member variable of a given class. What do you do
when the desired behavior is to print out only a few selected
variables from a given class? What if your objects are very
<fo:inline font-family="monospace" font-size="0.8em">wide</fo:inline>, in that they have many properties that you
don't want to print out in a <fo:inline font-family="monospace" font-size="0.8em">toString()</fo:inline> method? There are situations where an object could have a
large number of properties or when a particular property of an object
might contain a large amount of textual content. In these situations,
it would be counterproductive to use
<fo:inline font-family="monospace" font-size="0.8em">ReflectionToStringBuilder</fo:inline> to print out every
member variable in a class.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use a <fo:inline font-family="monospace" font-size="0.8em">ToStringBuilder</fo:inline> and customize the contents
of the output with a static member of a
<fo:inline font-family="monospace" font-size="0.8em">ToStringStyle</fo:inline>. The constructor of a
<fo:inline font-family="monospace" font-size="0.8em">ToStringBuilder</fo:inline> takes an object instance and a
<fo:inline font-family="monospace" font-size="0.8em">ToStringStyle</fo:inline>, returning an instance of a
<fo:inline font-family="monospace" font-size="0.8em">ToStringBuilder</fo:inline>. This builder is then customized
by calling <fo:inline font-family="monospace" font-size="0.8em">append( )</fo:inline>, which lets you specify the
properties you want included in the output. To customize the contents
of a <fo:inline font-family="monospace" font-size="0.8em">ToStringBuilder</fo:inline>, you must manually add
<fo:wrapper id="jakartackbk-CHP-1-ITERM-1773"><!--adding, properties--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1774"><!--properties, adding--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1775"><!--instances, properties,
adding--></fo:wrapper>each property to an instance of a
builder. The <fo:inline font-family="monospace" font-size="0.8em">append( )</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1776"><!--append(
) method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1777"><!--methods, append(
)--></fo:wrapper> method accepts all primitives, objects, and
arrays. <fo:basic-link internal-destination="jakartackbk-CHP-1-TABLE-1" text-decoration="underline" color="blue">Table 1-1</fo:basic-link> summarizes the variations of
<fo:inline font-family="monospace" font-size="0.8em">append( )</fo:inline> for integer primitives and objects.</fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-TABLE-1"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 1-1. Variations of ToStringBuilder append( )</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-left-style="solid" border-right-style="solid" border-top-style="solid" border-bottom-style="solid" border-left-width="0.1pt" border-right-width="0.1pt" border-top-width="0.1pt" border-bottom-width="0.1pt" border-left-color="black" border-right-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="17.4cm"><fo:table-column column-number="1"/><fo:table-column column-number="2"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">ToStringBuilder method</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Description</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">append(int value)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Appends the value of the integer.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">append(String n, int value)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Appends the value of the integer and the name of the property.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">append(Object value)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Appends the <fo:inline font-family="monospace" font-size="0.8em">toString( )</fo:inline> of an Object.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">append(String n, Object value)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Appends the <fo:inline font-family="monospace" font-size="0.8em">toString( )</fo:inline> of an Object and the name
of the property.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">append(int[] array)append(Object[] array)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Appends the formatted contents of array.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">append(String n int[] array)append(String n, Object[]
array)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Appends the property name and the size of an array</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">append(String n, int[] array, boolean detail)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Appends the property name and the full contents of an array.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">ToStringStyle</fo:inline> class provides a mechanism to
customize the output of a <fo:inline font-family="monospace" font-size="0.8em">ToStringBuilder</fo:inline>, and
this class contains a few <fo:wrapper id="jakartackbk-CHP-1-ITERM-1778"><!--built-in
styles--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1779"><!--ToStringBuilder
class--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1780"><!--styles--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1781"><!--classes, ToStringBuilder, styles--></fo:wrapper>built-in
styles. One example is the
<fo:inline font-family="monospace" font-size="0.8em">ToStringStyle.MULTI_LINE_STYLE</fo:inline>, which puts a
newline character between every property. Another example is the
<fo:inline font-family="monospace" font-size="0.8em">ToStringStyle.SIMPLE_STYLE</fo:inline>, which simply prints
the value of every member variable. The following list provides an
example of each of these preset styles:</fo:block><fo:block space-before.optimum="0em" space-before.minimum="0em" space-before.maximum="0em" space-after.optimum="0em" space-after.minimum="0em" space-after.maximum="0em" margin-left="1.0em" id="d0e1467"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e1468" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                     <fo:inline font-family="monospace" font-size="0.8em">ToStringStyle.DEFAULT_STYLE</fo:inline>
                  </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt10">com.discursive.jccook.lang.builders.
PoliticalCandidate@1cd2e5f[lastName=Jefferson,firstName=Thomas]</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e1477" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                     <fo:inline font-family="monospace" font-size="0.8em">ToStringStyle.MULTI_LINE_STYLE</fo:inline>
                  </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt11">com.discursive.jccook.lang.builders.PoliticalCandidate@1cd2e5f[
  lastName=Jefferson
  firstName=Thomas
]</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e1486" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                     <fo:inline font-family="monospace" font-size="0.8em">ToStringStyle.NO_FIELD_NAMES_STYLE</fo:inline>
                  </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt12">com.discursive.jccook.lang.builders.PoliticalCandidate@1cd2e5f[Jefferson,Thomas]</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e1495" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                     <fo:inline font-family="monospace" font-size="0.8em">ToStringStyle.SIMPLE_STYLE</fo:inline>
                  </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt13">Jefferson,Thomas</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">What's the big deal about <fo:inline font-family="monospace" font-size="0.8em">toString()</fo:inline> methods? This is about accuracy and keeping messages
relevant in an evolving system. All useful error messages include a
string representation of the object involved in the error. If you get
an exception, and you print the value of an object, it is usually
clear what is causing that exception. In the absence of sensible
logging, it is next to impossible to debug a system without diving
directly into a debugger. This is especially true if you are trying
to diagnose the cause of an infrequent problem that only affects a
tiny percentage of users who only encounter a problem if they perform
a very specific action in a specific context. In these cases, it is
helpful to know the internal state of every object involved in the
error, and <fo:inline font-family="monospace" font-size="0.8em">toString( )</fo:inline> is the easiest way to print
this out to a log. Automate your <fo:inline font-family="monospace" font-size="0.8em">toString( )</fo:inline>
method, and your error messages will be more <fo:wrapper id="jakartackbk-CHP-1-ITERM-1782"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1783"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1784"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1785"><!----></fo:wrapper>meaningful.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-6"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Automating hashCode( ) and equals( )</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.6. Automating hashCode( ) and equals( )</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-6.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.6.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need a way to automatically<fo:wrapper id="jakartackbk-CHP-1-ITERM-1786"><!--Commons
Lang, hashcode( ) method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1787"><!--hashcode( ) method
automation--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1788"><!--methods, hashcode(
) automation--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1789"><!--automation, hashcode(
) method--></fo:wrapper> implement <fo:inline font-family="monospace" font-size="0.8em">equals()</fo:inline> and <fo:wrapper id="jakartackbk-CHP-1-ITERM-1790"><!--Commons
Lang, equals( ) method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1791"><!--automation--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1792"><!--equals( ) method
automation--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1793"><!--methods, equals(
) automation--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1794"><!--automation, equals(
) method--></fo:wrapper>
               <fo:inline font-family="monospace" font-size="0.8em">hashCode( )</fo:inline>
methods.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-6.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.6.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Commons Lang
<fo:inline font-family="monospace" font-size="0.8em">EqualsBuilder</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1795"><!--EqualsBuilder
class--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1796"><!--classes, EqualsBuilder--></fo:wrapper>
and
<fo:inline font-family="monospace" font-size="0.8em">HashCodeBuilder</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1797"><!--HashCodeBuilder
class--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1798"><!--classes, HashCodeBuilder--></fo:wrapper>
provide methods to automate both the <fo:inline font-family="monospace" font-size="0.8em">equals( )</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">hashCode( )</fo:inline>. <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-2" text-decoration="underline" color="blue">Example 1-2</fo:basic-link> briefly
demonstrates these two builders using the
<fo:inline font-family="monospace" font-size="0.8em">PoliticalCandidate</fo:inline> bean from the previous two
recipes.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-EX-2"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 1-2. Automating hashCode( ) and equals( )</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e1631">import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.EqualsBuilder;

public class PoliticalCandidate {

    // Member variables - omitted for brevity

    // Constructors - omitted for brevity

    // get/set methods - omitted for brevity

    // A hashCode which creates a hash from the two unique identifiers
    public int hashCode( ) {
        return new HashCodeBuilder(17, 37)
                       .append(firstName)
                       .append(lastName).toHashCode( );
    }

    // An equals which compares two unique identifiers
    public boolean equals(Object o) {
        boolean equals = false;
        if ( o != null &amp;&amp; 
            PoliticalCandidate.class.isAssignableFrom(o) ) {
            PoliticalCandidate pc = (PoliticalCandidate) o;
            equals = (new EqualsBuilder( )
                       .append(firstName, ps.firstName)
                       .append(lastName, ps.lastName)).isEquals( );
        }
        return equals;
    }
}</fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-6.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.6.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">HashCodeBuilder</fo:inline> has a constructor that takes two
integer primitives. These primitives are used as an offset when
creating a hash code; both numbers should be odd, nonzero, and prime.
The <fo:inline font-family="monospace" font-size="0.8em">HashCodeBuilder</fo:inline> in <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-2" text-decoration="underline" color="blue">Example 1-2</fo:basic-link> is configured to use the
<fo:inline font-family="monospace" font-size="0.8em">firstName</fo:inline> and the <fo:inline font-family="monospace" font-size="0.8em">lastName</fo:inline> of
the <fo:inline font-family="monospace" font-size="0.8em">PoliticalCandidate</fo:inline> object; therefore, two
<fo:inline font-family="monospace" font-size="0.8em">PoliticalCandidate</fo:inline> objects with the same first and
last name will have identical hash codes. If a hash code depends on
every field in a class, you may use reflection to generate a hash
code:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt14">public int hashCode( ) {
    return HashCodeBuilder.reflectionHashCode(this);
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Like <fo:inline font-family="monospace" font-size="0.8em">ToStringBuilder</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">HashCodeBuilder</fo:inline>, the
<fo:inline font-family="monospace" font-size="0.8em">EqualsBuilder</fo:inline> is also configured via an
<fo:inline font-family="monospace" font-size="0.8em">append( )</fo:inline> method, which takes two arguments to
compare. <fo:inline font-family="monospace" font-size="0.8em">EqualsBuilder</fo:inline>'s
<fo:inline font-family="monospace" font-size="0.8em">append( )</fo:inline> method accepts all primitives, objects,
and arrays, and one advantage of <fo:inline font-family="monospace" font-size="0.8em">EqualsBuilder</fo:inline> is
the ability to compare two arrays by simply passing them to
<fo:inline font-family="monospace" font-size="0.8em">append( )</fo:inline>. When this happens,
<fo:inline font-family="monospace" font-size="0.8em">EqualsBuilder</fo:inline> compares every element of an array:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt15">int[] array1 = new int[] { 1, 3, 4, 2, 5, 3, 4, 5, 3, 4 };
int[] array2 = new int[] { 1, 3, 4, 2, 5, 3, 4, 5, 3, 4 };
int[] array3 = new int[] { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 };

EqualsBuilder builder = new EqualsBuilder( );
builder.append( array1, array2 );
boolean firstTwoEqual = builder.isEquals( );
System.out.println( "Is array1 equal to array2? " + firstTwoEqual );

EqualsBuilder builder = new EqualsBuilder( );
builder.append( array2, array3 );
boolean lastTwoEqual = builder.isEquals( );
System.out.println( "Is array2 equal to array3? " + lastTwoEqual );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">EqualsBuilder</fo:inline> compares the contents of two
arrays, checking to see that the corresponding element is equal. The
following output is produced:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt16">Is array1 equal to array2? true
Is array2 equal to array3? false</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If two classes are equal only if every field is equal, the
<fo:inline font-family="monospace" font-size="0.8em">EqualsBuilder</fo:inline> can compare two objects using
reflection as in the following code:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt17">public boolean equals(Object o) {
    return EqualsBuilder.reflectionEquals(this, o);
}</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-CHP-1-NOTE-47"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/warning.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Warning</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Be careful when using reflection to automate <fo:inline font-family="monospace" font-size="0.8em">hashCode()</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">equals( )</fo:inline>, you may get more than
you bargained for. In <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-2" text-decoration="underline" color="blue">Example 1-2</fo:basic-link>, a candidate is
uniquely identified by first and last name; if this bean were mapped
to a table in a relational database, <fo:inline font-family="monospace" font-size="0.8em">firstName</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">lastName</fo:inline> would be a composite key identifying each
unique row. A <fo:inline font-family="monospace" font-size="0.8em">HashMap</fo:inline> or
<fo:inline font-family="monospace" font-size="0.8em">HashSet</fo:inline> is similar to a database table in that the
identifier is defined by the fields used by <fo:inline font-family="monospace" font-size="0.8em">hashCode()</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">equals( )</fo:inline>; putting an equal object
with the same hash code into a <fo:inline font-family="monospace" font-size="0.8em">HashMap</fo:inline> replaces
the previous entry. A poorly implemented <fo:inline font-family="monospace" font-size="0.8em">hashCode(
)</fo:inline> or <fo:inline font-family="monospace" font-size="0.8em">equals( )</fo:inline> can have unintended
consequences when storing objects in such a data structure. In other
words, <fo:inline font-family="monospace" font-size="0.8em">equals( )</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">hashCode()</fo:inline> should be based off of the properties that uniquely
identify a class. This being the case, the <fo:inline font-family="monospace" font-size="0.8em">equals()</fo:inline> function should return true if two
<fo:inline font-family="monospace" font-size="0.8em">PoliticalCandidate</fo:inline> objects have<fo:wrapper id="jakartackbk-CHP-1-ITERM-1799"><!----></fo:wrapper> 
                  <fo:wrapper id="jakartackbk-CHP-1-ITERM-1800"><!----></fo:wrapper> 
                  <fo:wrapper id="jakartackbk-CHP-1-ITERM-1801"><!----></fo:wrapper> 
                  <fo:wrapper id="jakartackbk-CHP-1-ITERM-1802"><!----></fo:wrapper> 
                  <fo:wrapper id="jakartackbk-CHP-1-ITERM-1803"><!----></fo:wrapper> identical first
<fo:wrapper id="jakartackbk-CHP-1-ITERM-1804"><!----></fo:wrapper>
                  <fo:wrapper id="jakartackbk-CHP-1-ITERM-1805"><!----></fo:wrapper>
                  <fo:wrapper id="jakartackbk-CHP-1-ITERM-1806"><!----></fo:wrapper>
                  <fo:wrapper id="jakartackbk-CHP-1-ITERM-1807"><!----></fo:wrapper>and
last names, and the hash code for two equal objects should be
identical. The <fo:inline font-family="monospace" font-size="0.8em">hashCode( )</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">equals()</fo:inline> in <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-2" text-decoration="underline" color="blue">Example 1-2</fo:basic-link> are written to only take
into account the <fo:inline font-family="monospace" font-size="0.8em">firstName</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">lastName</fo:inline> properties.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-7"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Automating compareTo( )</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.7. Automating compareTo( )</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-7.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.7.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need a quick way to implement <fo:inline font-family="monospace" font-size="0.8em">compareTo( )</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1808"><!--Commons
Lang, compareTo( ) method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1809"><!--automation--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1810"><!--compareTo( ) method,
automation--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1811"><!--methods, compareTo(
) automation--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1812"><!--automation, compareTo(
) method--></fo:wrapper>methods.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-7.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.7.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Commons Lang <fo:inline font-family="monospace" font-size="0.8em">CompareToBuilder</fo:inline> provides a builder
for <fo:inline font-family="monospace" font-size="0.8em">compareTo( )</fo:inline> methods.
<fo:inline font-family="monospace" font-size="0.8em">CompareToBuilder</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1813"><!--CompareToBuilder
class--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1814"><!--classes, CompareToBuilder--></fo:wrapper>
can perform a comparison via reflection, or a comparison can be
customized by passing parameters to an instance of
<fo:inline font-family="monospace" font-size="0.8em">CompareToBuilder</fo:inline>. The following example
demonstrates the use of the reflection builder to implement a
<fo:inline font-family="monospace" font-size="0.8em">compareTo( )</fo:inline> method. This implementation compares
all nonstatic and nontransient member variables in both classes.</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt18">import org.apache.commons.lang.builder.CompareToBuilder;

// Build a compareTo function from reflection 
public int compareTo(Object o) {
    return CompareToBuilder.reflectionCompare(this, obj);
}</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-7.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.7.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">CompareToBuilder.reflectionCompare( )</fo:inline> takes two
objects and compares the non-static, nontransient member variables of
these objects. In <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-2" text-decoration="underline" color="blue">Example 1-2</fo:basic-link>, the comparison
involves the name properties of two
<fo:inline font-family="monospace" font-size="0.8em">PoliticalCandidate</fo:inline> objects from <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-3" text-decoration="underline" color="blue">Example 1-3</fo:basic-link>, which are considered equal if both
<fo:inline font-family="monospace" font-size="0.8em">firstName</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">lastName</fo:inline> are
equal. <fo:inline font-family="monospace" font-size="0.8em">reflectionCompare( )</fo:inline> ignores static fields
and transients; therefore, in <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-3" text-decoration="underline" color="blue">Example 1-3</fo:basic-link>,
<fo:inline font-family="monospace" font-size="0.8em">averageAge</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">fullName</fo:inline> do not
contribute to the automated comparison.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-EX-3"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 1-3. Implementing compareTo( ) using a reflection builder</fo:block><fo:wrapper id="jakartackbk-CHP-1-ITERM-1815"><!--reflection builders, compareTo( ) method--></fo:wrapper><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e1902">public class PoliticalCandidate {

    // Static variable
    private static String averageAge;

    // Member variables 
    private String firstName;
    private String lastName;
    private transient String fullName;

    // Constructors

    // get/set methods

    // Build a compareTo function from reflection 
    public int compareTo(Object o) {
        return CompareToBuilder.reflectionCompare(this, obj);
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In addition to a comparison by reflection, the
<fo:inline font-family="monospace" font-size="0.8em">CompareToBuilder</fo:inline> can be configured to compare two
objects by a set of variables in a particular order. The order of
comparisons plays a key role when a comparison involves multiple
member variables; this order is not specified when using the
<fo:inline font-family="monospace" font-size="0.8em">reflectionCompare()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1816"><!--reflectionCompare( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1817"><!--methods, reflectionCompare(
)--></fo:wrapper> method. Assume that the default sorting
behavior for <fo:inline font-family="monospace" font-size="0.8em">PoliticalCandidate</fo:inline> objects should be
<fo:inline font-family="monospace" font-size="0.8em">lastName</fo:inline> and then <fo:inline font-family="monospace" font-size="0.8em">firstName</fo:inline>; if
two objects have the same <fo:inline font-family="monospace" font-size="0.8em">lastName</fo:inline>, then sort by
the <fo:inline font-family="monospace" font-size="0.8em">firstName</fo:inline>. The following example demonstrates
a customization of the <fo:inline font-family="monospace" font-size="0.8em">compareTo( )</fo:inline> method.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Calling <fo:inline font-family="monospace" font-size="0.8em">append( )</fo:inline> specifies what variables will be
compared and in what order they will be compared. The order of the
calls to <fo:inline font-family="monospace" font-size="0.8em">append( )</fo:inline> are backward—similar to
pushing an object onto the top of a stack. The last property
"pushed" onto the
<fo:inline font-family="monospace" font-size="0.8em">CompareToBuilder</fo:inline> is the first property to be
compared. Objects are compared by last name, and first name is used
as a "tiebreaker." <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-4" text-decoration="underline" color="blue">Example 1-4</fo:basic-link> will compare two
<fo:inline font-family="monospace" font-size="0.8em">PoliticalCandidate</fo:inline> objects by
<fo:inline font-family="monospace" font-size="0.8em">lastName</fo:inline>, falling back to
<fo:inline font-family="monospace" font-size="0.8em">firstName</fo:inline> only if the <fo:inline font-family="monospace" font-size="0.8em">lastName</fo:inline>
values were equal.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-EX-4"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 1-4. Customizing a compareTo( ) method with CompareToBuilder</fo:block><fo:wrapper id="jakartackbk-CHP-1-ITERM-1818"><!--customization, compareTo( ) method--></fo:wrapper><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e1974">// A compare to that mimics the behavior of equals( )
public int compareTo(Object o) {
    int compare = -1; // By default return less-than
    if( o != null &amp;&amp; 
        PoliticalCandidate.class.isAssignableFrom( o.getClass( ) ) ) {
            PoliticalCandidate pc = (PoliticalCandidate) o;
            compare = (new CompareToBuilder( )
                          .append(firstName, pc.firstName)
                          .append(lastName, pc.lastName)).toComparison( );
    }
    return compare;
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Remember to keep the behavior of <fo:inline font-family="monospace" font-size="0.8em">equals( )</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">compareTo( )</fo:inline> consistent to avoid problems when
sorting collections. Automating the <fo:inline font-family="monospace" font-size="0.8em">compareTo( )</fo:inline>
method via reflection may not compare objects in a way that is
consistent with <fo:inline font-family="monospace" font-size="0.8em">equals( )</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-7.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.7.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">compareTo( )</fo:inline> methods provide the natural sorting
order for a set of objects, and they are frequently used when sorting
a collection of JavaBeans©. If you are trying to
sort a collection of beans, you are better off using the
<fo:inline font-family="monospace" font-size="0.8em">BeanComparator</fo:inline>, which is described in <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-10" text-decoration="underline" color="blue">Recipe 3.10</fo:basic-link>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Instead of capturing comparison logic in a <fo:inline font-family="monospace" font-size="0.8em">compareTo()</fo:inline> method, consider using a <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline>
object. The Jakarta Commons Collections project contains a number of
supplements to the <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> interface, such
<fo:wrapper id="jakartackbk-CHP-1-ITERM-1819"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1820"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1821"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1822"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1823"><!----></fo:wrapper>as
utilities to reverse and chain comparators.
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> utilities are discussed in <fo:basic-link internal-destination="jakartackbk-CHP-4" text-decoration="underline" color="blue">Chapter 4</fo:basic-link>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-8"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Printing an Array</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.8. Printing an Array</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-8.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.8.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to print the contents of an array.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-8.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.8.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toString()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1824"><!--ArrayUtils.toString( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1825"><!--methods, ArrayUtils.toString(
)--></fo:wrapper> to print the
contents<fo:wrapper id="jakartackbk-CHP-1-ITERM-1826"><!--printing, arrays--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1827"><!--arrays, printing--></fo:wrapper>
of an array. This method takes any array as an argument and prints
out the contents delimited by commas and surrounded by brackets:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt19">int[] intArray = new int[] { 2, 3, 4, 5, 6 };

int[] multiDimension = new int[][] { { 1, 2, 3 }, { 2, 3 }, {5, 6, 7} };

System.out.println( "intArray: " + ArrayUtils.toString( intArray ) );
System.out.println( "multiDimension: " + ArrayUtils.
toString( multiDimension ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example takes two arrays and prints them out using
<fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toString( )</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt20">intArray: {2,3,4,5,6}
multiDimension: {{1,2,3},{2,3},{5,6,7}}</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-8.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.8.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This simple utility can be used to print the contents of an
<fo:inline font-family="monospace" font-size="0.8em">Object[]</fo:inline>, substituting an object for a
<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> element:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt21">String[] strings = new String[] { "Blue", "Green", null, "Yellow" };

System.out.println( "Strings: " + ArrayUtils.toString( strings, "Unknown" );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example prints the <fo:inline font-family="monospace" font-size="0.8em">strings</fo:inline> array, and when
<fo:inline font-family="monospace" font-size="0.8em">ArrayUtils</fo:inline> encounters a <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>
element, it will print out
"Unknown":</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt22">Strings: {Blue,Green,Unknown,Yellow}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This utility comes in handy when you need to print the contents of a
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> for debugging purposes. If you need to
print out the contents of a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>, convert it
to an array, and pass that array to <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toString()</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt23">List list = new ArrayList( );
list.add( "Foo" );
list.add( "Blah" );

System.out.println( ArrayUtils.toString( list.toArray( ) ) );</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-9"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Cloning and Reversing Arrays</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.9. Cloning and Reversing Arrays</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-9.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.9.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to reverse and clone the
<fo:wrapper id="jakartackbk-CHP-1-ITERM-1828"><!--cloning, arrays--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1829"><!--arrays, cloning--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1830"><!--reversing, arrays--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1831"><!--arrays, reversing--></fo:wrapper>contents
of an array.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-9.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.9.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.clone()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1832"><!--ArrayUtils.clone( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1833"><!--methods, ArrayUtils.clone--></fo:wrapper>
and <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.reverse()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1834"><!--ArrayUtils.reverse( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1835"><!--methods, ArrayUtils.reverse(
)--></fo:wrapper> methods from Commons Lang. <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-5" text-decoration="underline" color="blue">Example 1-5</fo:basic-link> demonstrates the reversal and cloning of a
primitive array full of <fo:inline font-family="monospace" font-size="0.8em">long</fo:inline> primitives.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-EX-5"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 1-5. Cloning and reversing a primitive array with ArrayUtils</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e2189">import org.apache.commons.lang.ArrayUtils;

long[] array = { 1, 3, 2, 3, 5, 6 };
long[] reversed = ArrayUtils.clone( array );
ArrayUtils.reverse( reversed );

System.out.println( "Original: " + ArrayUtils.toString( array ) );
System.out.println( "Reversed: " + ArrayUtils.toString( reversed ) );</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">array</fo:inline> is cloned and reversed, and the contents
of the original and the reversed array are displayed as output using
<fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toString( )</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt24">Original: { 1, 3, 2, 3, 5, 6 }
Reversed: { 6, 5, 3, 2, 3, 1 }</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-9.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.9.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-5" text-decoration="underline" color="blue">Example 1-5</fo:basic-link>, <fo:inline font-family="monospace" font-size="0.8em">clone( )</fo:inline> returns
a reference to a new array, and <fo:inline font-family="monospace" font-size="0.8em">reverse( )</fo:inline>
operates on the array reference supplied as a parameter. It is
important to realize that while <fo:inline font-family="monospace" font-size="0.8em">clone( )</fo:inline> leaves
the original array alone, <fo:inline font-family="monospace" font-size="0.8em">reverse( )</fo:inline> operates
directly on the supplied array. In addition to supporting all
primitive arrays, <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.clone( )</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.reverse( )</fo:inline> work with object arrays. If
<fo:inline font-family="monospace" font-size="0.8em">array</fo:inline> had been an array of <fo:inline font-family="monospace" font-size="0.8em">Long</fo:inline>
objects, the code would bear a striking resemblance to the previous
example.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The only difference between Examples <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-6" text-decoration="underline" color="blue">Example 1-6</fo:basic-link> and
<fo:basic-link internal-destination="jakartackbk-CHP-1-EX-5" text-decoration="underline" color="blue">Example 1-5</fo:basic-link> is the type of array being cloned and
reversed. Again, <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toString( )</fo:inline> is used to
print out the contents of both the original and the reverse array:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt25">Original: { 3, 56, 233 }
Reversed: { 233, 56, 3 }</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-EX-6"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 1-6. Cloning and reversing an Object[  ] with ArrayUtils</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e2249">Long[] array = new Long[] { new Long(3), new Long(56), new Long(233) };
Long[] reversed = ArrayUtils.clone( array );
ArrayUtils.reverse( reversed );

System.out.println( "Original: " + ArrayUtils.toString( array ) );
System.out.println( "Reversed: " + ArrayUtils.toString( reversed ) );</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Without the aid of <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.clone( )</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.reverse( )</fo:inline>, this task would have
involved writing a loop to populate a reversed array. The following
code completes the same task, but, in order to reverse an array, this
example assigns the values from the original array in reverse;
elements are inserted starting at
<fo:inline font-family="monospace" font-size="0.8em">reversed[reversed.length</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">- 1]</fo:inline>
and ending at <fo:inline font-family="monospace" font-size="0.8em">reversed[0]</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt26">// readTemps returns a 1000 member double[]
double[] temperature = readTemps( );

double[] reversed = new double[temperature.length];
for( int i = 0; i &lt; temperature.length; i++ ) {
    reversed[reversed.length - (i+1)] = temperature[i];
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Another option is the use of the <fo:inline font-family="monospace" font-size="0.8em">Collections.reverse()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1836"><!--Collections.reverse( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1837"><!--methods, Collections.reverse(
)--></fo:wrapper> method. J2SE contains a
<fo:inline font-family="monospace" font-size="0.8em">Collections</fo:inline> object with a static <fo:inline font-family="monospace" font-size="0.8em">reverse()</fo:inline> method, but this only operates on a
<fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> object. If you had an array of
<fo:inline font-family="monospace" font-size="0.8em">double</fo:inline> primitives, and you wanted to take
advantage of the <fo:inline font-family="monospace" font-size="0.8em">Collections</fo:inline> class, you would need
to convert your double array to a list. Without Java
1.5's
<fo:wrapper id="jakartackbk-CHP-1-ITERM-1838"><!--autoboxing--></fo:wrapper>autoboxing
feature, a <fo:inline font-family="monospace" font-size="0.8em">double[]</fo:inline> will need to be translated
into a <fo:inline font-family="monospace" font-size="0.8em">Double[]</fo:inline> before elements can be used to
populate a list:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt27">double[] temps = readTemps( );

List tempList = new ArrayList( );
for( int i = 0; i &lt; temps.length; i++ ) {
    tempList.add( new Double[temps[i]] );
}

Collections.reverse( tempList );

double[] reversed = new double( tempList.size( ) );
Iterator i = tempList.iterator( );
int index = 0;
while( i.hasNext( ) ) {
    reversed[index] = ((Double) i.next( )).doubleValue( );
    index++;
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">That nasty translation between a <fo:inline font-family="monospace" font-size="0.8em">double</fo:inline> array and
a list of <fo:inline font-family="monospace" font-size="0.8em">Double</fo:inline> objects complicates your code.
The next recipe will touch upon an easier method for performing this
translation.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Is <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.clone( )</fo:inline> really necessary? All
arrays have a <fo:inline font-family="monospace" font-size="0.8em">clone( )</fo:inline> method, and all Java arrays
implement <fo:inline font-family="monospace" font-size="0.8em">Cloneable</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">Serializable</fo:inline>, but I would be surprised if many
Java developers have read the relevant section of the Java Language
Specification (JLS), which discusses Array Members (section 10.7).
All arrays can be cloned by calling the <fo:inline font-family="monospace" font-size="0.8em">clone( )</fo:inline>
method:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt28">long[] temps = readTemps( );
long[] cloned = (long[]) temps.clone( );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.clone( )</fo:inline> doesn't
provide you with any performance benefits, it
doesn't necessarily improve your code, and one could
debate the assertion that it makes for more readable code. But,
mainly, it exists as a safe way to handle <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>
array references. If you attempt to clone a <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>
reference, this utility will return a <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> instead
of throwing a runtime exception.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-10"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Transforming Between Object Arraysand Primitive Arrays</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.10. Transforming Between Object Arraysand Primitive Arrays</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-10.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.10.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need a way to convert
an<fo:wrapper id="jakartackbk-CHP-1-ITERM-1839"><!--conversion, object arrays to
primitive arrays--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1840"><!--arrays, conversion--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1841"><!--objects, conversion--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1842"><!--primitive array conversion--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1843"><!--translation, arrays--></fo:wrapper> object
array to a primitive array.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-10.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.10.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toObject()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1844"><!--ArrayUtils.toObject( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1845"><!--methods, ArrayUtils.toObject(
)--></fo:wrapper> and <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toPrimitive()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1846"><!--ArrayUtils.toPrimitive( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1847"><!--methods, ArrayUtils.toPrimitive(
)--></fo:wrapper> to translate between primitive arrays and
object arrays. The following example demonstrates the translation
from a primitive array to an object array and vice versa:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt29">import org.apache.commons.lang.ArrayUtils;

long[] primitiveArray = new long[] { 12, 100, 2929, 3323 };
Long[] objectArray = ArrayUtils.toObject( primitiveArray );

Double[] doubleObjects = new Double[] { new Double( 3.22, 5.222, 3.221 ) };
double[] doublePrimitives = ArrayUtils.toPrimitive( doubleObject );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The result from both translations is an array of equal length and
equal contents. The first translation takes a
<fo:inline font-family="monospace" font-size="0.8em">long[]</fo:inline> and translates the array to a
<fo:inline font-family="monospace" font-size="0.8em">Long[]</fo:inline>, and the second translation takes a
<fo:inline font-family="monospace" font-size="0.8em">Double[]</fo:inline> and turns it into a
<fo:inline font-family="monospace" font-size="0.8em">double[]</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-10.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.10.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Assume that the following example uses an external library that
expects a list of <fo:inline font-family="monospace" font-size="0.8em">Double</fo:inline> objects. The existing
system uses an array of double primitives, and you need to
"step up" from a primitive array to
an object array in order to pass a parameter to the
<fo:inline font-family="monospace" font-size="0.8em">complexCalculation()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1848"><!--complexCalculation( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1849"><!--methods, complexCalculation(
)--></fo:wrapper> method:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt30">// Assume that temps is a 4000 element double[]
double[] temps = readTemps( );

<fo:inline font-weight="bold">// Turn the double[] into an array of Double objects</fo:inline>
               <fo:inline font-weight="bold">Double[] objectArray = ArrayUtils.toObject( temps );</fo:inline>

List inputList = Arrays.asList( objectArray );

// Assume that some process returns results as a List of Double 
// objects
List outputList = externalLib.complexCalculation( inputList );

<fo:inline font-weight="bold">// Transform this List of doubles to an array of double primitives</fo:inline>
               <fo:inline font-weight="bold">Double[] resultObjArray =</fo:inline> 
               <fo:inline font-weight="bold">(Double[]) outputList.toArray( new Double[0] );</fo:inline>

double[] result = 
    ArrayUtils.toPrimitive( resultObjArray, Double.NaN  );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The primitive array, <fo:inline font-family="monospace" font-size="0.8em">temps</fo:inline>, is transformed to an
object array using <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toObject( )</fo:inline>, and the
results of our calculation are translated from a list to an array of
primitives using <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toPrimitive( )</fo:inline>. While
an object array can contain a <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> element, a
primitive array cannot; the second argument to
<fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toPrimitive( )</fo:inline> specifies a double value
to be used if there is a <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> in the object array.
In this example, <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> values in the object array
are stored as <fo:inline font-family="monospace" font-size="0.8em">Double.NaN</fo:inline> in our primitive array.
The second argument to <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toPrimitive( )</fo:inline>
is optional; if it is not present and a <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> value
is present in the object array, a
<fo:inline font-family="monospace" font-size="0.8em">NullPointerException</fo:inline> is thrown.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils</fo:inline> offers various static methods to
transform between primitive and object arrays. Tables <fo:basic-link internal-destination="jakartackbk-CHP-1-TABLE-2" text-decoration="underline" color="blue">Table 1-2</fo:basic-link> and <fo:basic-link internal-destination="jakartackbk-CHP-1-TABLE-3" text-decoration="underline" color="blue">Table 1-3</fo:basic-link> summarize
both the <fo:inline font-family="monospace" font-size="0.8em">toObject( )</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">toPrimitive()</fo:inline> methods.</fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-TABLE-2"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 1-2. The various flavors of ArrayUtils.toObject( )</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-left-style="solid" border-right-style="solid" border-top-style="solid" border-bottom-style="solid" border-left-width="0.1pt" border-right-width="0.1pt" border-top-width="0.1pt" border-bottom-width="0.1pt" border-left-color="black" border-right-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="17.4cm"><fo:table-column column-number="1"/><fo:table-column column-number="2"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Return type</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Method signature</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">Boolean[]</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toObject( boolean[] array )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">Byte[]</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toObject( byte[] array )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">Double[]</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toObject( double[] array )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">Float[]</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toObject( float[] array )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">Integer[]</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toObject( int[] array )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">Short[]</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toObject( short[] array )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">Long[]</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toObject( long[] array )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-TABLE-3"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 1-3. The various flavors of ArrayUtils.toPrimitive( )</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-left-style="solid" border-right-style="solid" border-top-style="solid" border-bottom-style="solid" border-left-width="0.1pt" border-right-width="0.1pt" border-top-width="0.1pt" border-bottom-width="0.1pt" border-left-color="black" border-right-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="17.4cm"><fo:table-column column-number="1"/><fo:table-column column-number="2"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Return type</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Method signature</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">Boolean[]</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toPrimitive( boolean[] array )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">Byte[]</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toPrimitive( byte[] array )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">Double[]</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toPrimitive( double[] array )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">Float[]</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toPrimitive( float[] array )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">Integer[]</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toPrimitive( integer[] array )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">Short[]</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toPrimitive( short[] array )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">Long[]</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toPrimitive( long[] array )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-10.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.10.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Java 1.5 has added a feature called
<fo:wrapper id="jakartackbk-CHP-1-ITERM-1850"><!--autoboxing--></fo:wrapper>autoboxing, which
provides for automatic conversions between primitives and objects.
For more information about autoboxing, see <fo:inline font-family="monospace" font-size="0.8em">http://www.jcp.org/aboutJava/communityprocess/jsr/tiger/autoboxing.html</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-11"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Finding Items in an Array</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.11. Finding Items in an Array</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-11.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.11.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to test an array
to<fo:wrapper id="jakartackbk-CHP-1-ITERM-1851"><!--searching, arrays--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1852"><!--arrays, searching--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1853"><!--testing, arrays--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1854"><!--arrays, testing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1855"><!--indexes, arrays--></fo:wrapper>
see if it contains an element. If the array contains the element, you
need the index of the matching element.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-11.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.11.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.contains()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1856"><!--ArrayUtils.contains( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1857"><!--methods, ArrayUtils.contains(
)--></fo:wrapper> to see if an array contains a specified
element, and use <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.indexOf( )</fo:inline> or
<fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.lastIndexOf(
)</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1858"><!--ArrayUtils.lastIndexOf( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1859"><!--methods, ArrayUtils.lastIndexOf(
)--></fo:wrapper> to find the position of a matching element.
The following example demonstrates the use of these three methods:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt31">import org.apache.commons.lang.ArrayUtils;

String[] stringArray = { "Red", "Orange", "Blue", "Brown", "Red" };

boolean containsBlue = ArrayUtils.contains( stringArray, "Blue" );
int indexOfRed = ArrayUtils.indexOf( stringArray, "Red");
int lastIndexOfRed = ArrayUtils.lastIndexOf( string, "Red" );

System.out.println( "Array contains 'Blue'? " + containsBlue );
System.out.println( "Index of 'Red'? " + indexOfRed );
System.out.println( "Last Index of 'Red'? " + lastIndexOfRed );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example locates strings in a string array and produces the
following output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt32">Array contains 'Blue'? true
Index of 'Red'? 0
Last Index of 'Red'? 4</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-11.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.11.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">All three methods work with an object array or any primitive array;
in fact, almost every method defined in <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils</fo:inline>
can be applied to every possible array
type—<fo:inline font-family="monospace" font-size="0.8em">boolean[]</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">byte[]</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">char[]</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">double[]</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">float[]</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">long[]</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">short[]</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">Object[]</fo:inline>. When
using a primitive array, <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils</fo:inline> compares the
value in question to each element of an array until a match is found.
When using an object array, <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils</fo:inline> calls the
<fo:inline font-family="monospace" font-size="0.8em">equals( )</fo:inline> method to check for a matching array
element.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.indexOf( )</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.lastIndexOf( )</fo:inline> take an optional third
parameter that controls where an element search begins. In the next
example, you are searching an array of double primitives for the
value -9999. <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-7" text-decoration="underline" color="blue">Example 1-7</fo:basic-link> demonstrates how to
establish that the value is contained within an array and how to
locate the index for each matching element.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-EX-7"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 1-7. Searching an array using ArrayUtils.contains( ) and ArrayUtils.indexOf( )</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e2945">// temps is a 1000 element long[]
long[] temps = readTemps( );

// Check to see if the array contains -9999
boolean hasErrorFlag = ArrayUtils.contains( temperature, -9999 );
    
// Print out the index of every errored reading
int start = 0;
while( hasErrorFlag &amp;&amp; 
         (ArrayUtils.indexOf(temperature, -9999, start) != -1) ) {
    int errorIdx = ArrayUtils.indexOf(temperature, -9999, start);
    System.out.println( "Error reading at index: " + errorIdx );
    start = errorIdx + 1;
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You could easily implement this method yourself;
<fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.contains( )</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.indexOf( )</fo:inline> are simply methods that
iterate through every element of an array and test for equality. The
simple savings you gain from <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils</fo:inline> is one
less <fo:inline font-family="monospace" font-size="0.8em">for</fo:inline> loop you have to test and maintain:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt33">long testValue = -9999;
boolean hasErrors = false;

for( int i = 0; i &lt; temps.length; i++ ) {
    if( temps[i] == testValue ) {
        hasErrors = true;
    }
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The benefits are small, but maintaining your own custom utility
classes is a pain—it is just another thing to test and
maintain. <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils</fo:inline> isn't going
to change your application's architecture, but it
will ultimately reduce the amount of trivial code you have to write,
and you will not have to expend energy maintaining or testing trivial
code.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-11.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.11.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-4" text-decoration="underline" color="blue">Chapter 4</fo:basic-link> contains a number of recipes dealing
with <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> objects and filtering collections.
Instead of using the three methods defined in this recipe, you can
put objects into a collection and count or select the elements that
match an <fo:inline font-family="monospace" font-size="0.8em">EqualPredicate</fo:inline>. See <fo:basic-link internal-destination="jakartackbk-CHP-4" text-decoration="underline" color="blue">Chapter 4</fo:basic-link> for more information about querying
collections with predicates.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-12"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Creating a Map from a Multidimensional Array</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.12. Creating a Map from a Multidimensional Array</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-12.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.12.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to create a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> from
a<fo:wrapper id="jakartackbk-CHP-1-ITERM-1860"><!--mapping, multidimensional
arrays--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1861"><!--multidimensional
arrays, mapping--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1862"><!--arrays, mapping
multidimensional--></fo:wrapper> multidimensional array.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-12.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.12.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toMap()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1863"><!--ArrayUtils.toMap( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1864"><!--methods, ArrayUtils.toMap(
)--></fo:wrapper> to create a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> from a
two-dimensional array (<fo:inline font-family="monospace" font-size="0.8em">Object[][]</fo:inline>). <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-8" text-decoration="underline" color="blue">Example 1-8</fo:basic-link> demonstrates the creation of such a
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>. <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-8" text-decoration="underline" color="blue">Example 1-8</fo:basic-link> takes an
<fo:inline font-family="monospace" font-size="0.8em">Object[][]</fo:inline> representing atomic symbols and atomic
weights and turns it into a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> retrieving the
atomic weight for hydrogen.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-EX-8"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 1-8. Creating a Map from an Object[  ][  ]</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e3054">import org.apache.commons.lang.ArrayUtils;

Object[] weightArray = 
    new Object[][] { {"H" , new Double( 1.007)},
                     {"He", new Double( 4.002)},
                     {"Li", new Double( 6.941)},
                     {"Be", new Double( 9.012)},
                     {"B",  new Double(10.811)},
                     {"C",  new Double(12.010)},
                     {"N",  new Double(14.007)},
                     {"O",  new Double(15.999)},
                     {"F",  new Double(18.998)},
                     {"Ne", new Double(20.180)} };

// Create a Map mapping colors.
Map weights = ArrayUtils.toMap( weightArray );

Double hydrogenWeight = map.get( "H" );</fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-12.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.12.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Instead of calling <fo:inline font-family="monospace" font-size="0.8em">weights.put( )</fo:inline> for each entry
in the <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>, an <fo:inline font-family="monospace" font-size="0.8em">Object[][]</fo:inline> is
created and then passed to <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toMap()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1865"><!--ArrayUtils.toMap( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1866"><!--methods, ArraysUtils.toMap(
)--></fo:wrapper>. The <fo:inline font-family="monospace" font-size="0.8em">toMap()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1867"><!--toMap( ) method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1868"><!--methods, toMap(
)--></fo:wrapper> method then extracts the first item in each
array as the key and the second item as the value. This is a simple
way to quickly create a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> in a piece of code;
the alternative to using <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toMap( )</fo:inline> is to
simply create a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> and repeatedly call the
<fo:inline font-family="monospace" font-size="0.8em">put( )</fo:inline> method.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-12.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.12.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In the previous example, <fo:inline font-family="monospace" font-size="0.8em">Double</fo:inline> objects are added
to a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>, and values are retrieved from the
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> using <fo:inline font-family="monospace" font-size="0.8em">get( )</fo:inline>. Commons
Collections contains utility methods for retrieving
<fo:inline font-family="monospace" font-size="0.8em">Double</fo:inline> objects as <fo:inline font-family="monospace" font-size="0.8em">double</fo:inline>
primitives; <fo:inline font-family="monospace" font-size="0.8em">MapUtils.getDouble( )</fo:inline> retrieves an
object from a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>, casts it to a
<fo:inline font-family="monospace" font-size="0.8em">Number</fo:inline>, and calls <fo:inline font-family="monospace" font-size="0.8em">doubleValue(
)</fo:inline> using the default value supplied if there is no
corresponding key in the <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>. See <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-21" text-decoration="underline" color="blue">Recipe 5.21</fo:basic-link> for more information about
<fo:inline font-family="monospace" font-size="0.8em">MapUtils.getDouble( )</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-13"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Formatting Dates</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.13. Formatting Dates</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-13.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.13.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to format
a<fo:wrapper id="jakartackbk-CHP-1-ITERM-1869"><!--formatting, dates--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1870"><!--dates, formatting--></fo:wrapper>
date, and <fo:inline font-family="monospace" font-size="0.8em">SimpleDateFormat</fo:inline> is not thread-safe. You
are also looking for standard International Organization of Standards
(ISO) date formats.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-13.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.13.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">FastDateFormat</fo:inline>, a thread-safe formatter for
Java <fo:inline font-family="monospace" font-size="0.8em">Date</fo:inline> objects, and use public static instances
of <fo:inline font-family="monospace" font-size="0.8em">FastDateFormat</fo:inline> on
<fo:inline font-family="monospace" font-size="0.8em">DateFormatUtils</fo:inline>, which correspond to ISO date and
time formatting standards defined in ISO 8601. The following example
outputs the international standard for representing a date and time
in a given time zone:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt34">Date now = new Date( );
String isoDT = DateFormatUtils.ISO_DATETIME_TIME_ZONE_FORMAT.format( now );
    
System.out.println( "It is currently: " + isoDT );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This produces the following output displaying the current time with
time-zone information:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt35">It is currently: 2004-03-26T16:20:00-07:00</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you need to use a custom date format, use
<fo:inline font-family="monospace" font-size="0.8em">FastDateFormat</fo:inline> as a substitute for
<fo:inline font-family="monospace" font-size="0.8em">SimpleDateFormat</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt36">// create a formatter that simply prints the year and month
FastDateFormat formatter = 
    new FastDateFormat( "yyyy-mm",
                         TimeZone.getDefault( ),
                         Locale.getDefault( ) );

String output = formatter.format( new Date( ) );
// output equals "2003-10"</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-13.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.13.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The problem for this recipe is two-fold; your <fo:inline font-weight="bold">multithreaded</fo:inline> application needs to print out
<fo:inline font-weight="bold">standard</fo:inline> date/time formats. Printing
a standard format is a problem easily solved by static instances of
<fo:inline font-family="monospace" font-size="0.8em">FastDateFormat</fo:inline> on
<fo:inline font-family="monospace" font-size="0.8em">DateFormatUtils</fo:inline>. Ideally, every program that needs
to deal with dates knows how to recognize an ISO 8601 date when
parsing input. The world is getting smaller by the day; use
international standards when presenting dates, times, measures, and
country codes.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">SimpleDateFormat</fo:inline> is incapable of producing an
ISO-8601-compliant time zone that matches the pattern:
<fo:inline font-family="monospace" font-size="0.8em">+11:30</fo:inline>. Sun's
<fo:inline font-family="monospace" font-size="0.8em">SimpleDateFormat</fo:inline> class can generate time zones
without the colon separator, but these are incompatible with systems
that need to be able to parse a standard format.
<fo:inline font-family="monospace" font-size="0.8em">FastDateFormat</fo:inline> has achieved compliance with the
ISO 8601 standard by adding a "ZZ"
date format symbol, which is translated into the appropriate
time-zone representation. In addition to the format demonstrated in
the previous example, the <fo:inline font-family="monospace" font-size="0.8em">DateFormatUtils</fo:inline> class
maintains a number of variations on the full ISO 8601 date format;
there is a format to show only the time, a format to show only the
date, and others, as well as the standard format for displaying dates
in Simple Mail Transfer Protocol (SMTP). (See <fo:basic-link internal-destination="jakartackbk-CHP-1-TABLE-4" text-decoration="underline" color="blue">Table 1-4</fo:basic-link>.)</fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-TABLE-4"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 1-4. Static date/time formats in DateFormatUtils</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-left-style="solid" border-right-style="solid" border-top-style="solid" border-bottom-style="solid" border-left-width="0.1pt" border-right-width="0.1pt" border-top-width="0.1pt" border-bottom-width="0.1pt" border-left-color="black" border-right-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="17.4cm"><fo:table-column column-number="1"/><fo:table-column column-number="2"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Name</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Format</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">ISO_DATE_FORMAT</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">yyyy-MM-dd"2004-01-02</fo:inline>"</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">ISO_DATE_TIME_ZONE_FORMAT</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">yyyy-MM-ddZZ"2004-01-02-07:00</fo:inline>"</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">ISO_DATETIME_FORMAT</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">yyyy-MM-dd'T'HH:mm:ss"2004-01-02T23:22:12</fo:inline>"</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">ISO_DATETIME_TIME_ZONE_FORMAT</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">yyyy-MM-dd'T'HH:mm:ssZZ"2004-01-02T21:13:45-07:00</fo:inline>"</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">ISO_TIME_FORMAT</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">'<fo:inline font-family="monospace" font-size="0.8em">T'HH:mm:ss"T04:23:22</fo:inline>"</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">ISO_TIME_NO_T_FORMAT</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">HH:mm:ss"05:12:34</fo:inline>"</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">ISO_TIME_NO_T_TIME_ZONE_FORMAT</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">HH:mm:ssZZ"12:32:22-07:00</fo:inline>"</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">ISO_TIME_TIME_ZONE_FORMAT</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">'<fo:inline font-family="monospace" font-size="0.8em">T'HH:mm:ssZZ"T18:23:22-07:00</fo:inline>"</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">SMTP_DATETIME_FORMAT</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">EEE, dd MMM yyyy HH:mm:ss Z"Wed, 01 Feb 2004 20:03:01
CST</fo:inline>"</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Why would you want to use <fo:inline font-family="monospace" font-size="0.8em">FastDateFormat</fo:inline> in the
same way <fo:inline font-family="monospace" font-size="0.8em">SimpleDateFormat</fo:inline> is used?
Isn't <fo:inline font-family="monospace" font-size="0.8em">SimpleDateFormat</fo:inline> enough?
The simple answer is no; <fo:inline font-family="monospace" font-size="0.8em">SimpleDateFormat</fo:inline> is
<fo:inline font-style="italic">not</fo:inline> thread-safe and
<fo:inline font-family="monospace" font-size="0.8em">FastDateFormat</fo:inline> is. In fact, you should be aware
that none of the Sun formatting classes are thread-safe. If multiple
threads are using any Java formatting object there is a possibility
of deadlock, <fo:inline font-family="monospace" font-size="0.8em">RuntimeException</fo:inline>, or inconsistent
behavior. If your systems use a shared instance
<fo:inline font-family="monospace" font-size="0.8em">SimpleDateFormat</fo:inline> across multiple threads, you
should migrate to <fo:inline font-family="monospace" font-size="0.8em">FastDateFormat</fo:inline> immediately.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-13.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.13.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Java date and time classes have a number of issues—concurrency
issues with date formatting being "only the tip of
the iceberg." An active member of the Jakarta
Commons Community, Stephen Colebourne, has taken time to create a
clean room reimplementation of a date and time API. For more
information about Joda, take a look at the Joda project page
(<fo:inline font-family="monospace" font-size="0.8em">http://www.joda.org/)</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about the ISO date and time standards, see
<fo:inline font-family="monospace" font-size="0.8em">http://www.cl.cam.ac.uk/~mgk25/iso-time.html</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about nonthread-safe implementations of
<fo:inline font-family="monospace" font-size="0.8em">SimpleDateFormat</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1871"><!--SimpleDateFormat
class--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1872"><!--classes, SimpleDateFormat--></fo:wrapper>,
see Sun's Bug Database, and look for Bug #4264153.
Sun specifically states that all of the format classes
<fo:inline font-family="monospace" font-size="0.8em">Format</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">MessageFormat</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">NumberFormat</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">DecimalFormat</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">ChoiceFormat</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">DateFormat</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">SimpleDateFormat</fo:inline> are not thread-safe. It is
unclear if Sun has addressed this issue in Java 1.4, but if you are
writing critical multithreaded applications, you should avoid
Sun's formatting classes or synchronize access to
them.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-14"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Rounding Date Objects</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.14. Rounding Date Objects</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-14.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.14.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to round a date to
the<fo:wrapper id="jakartackbk-CHP-1-ITERM-1873"><!--dates, rounding--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1874"><!--rounding dates--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1875"><!--seconds, rounding--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1876"><!--minutes, rounding--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1877"><!--hours, rounding--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1878"><!--days, rounding--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1879"><!--months, rounding--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1880"><!--years, rounding--></fo:wrapper> nearest
second, minute, hour, day, month, or year.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-14.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.14.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">DateUtils</fo:inline> to round <fo:inline font-family="monospace" font-size="0.8em">Date</fo:inline>
objects to the nearest <fo:inline font-family="monospace" font-size="0.8em">Calendar</fo:inline> field.
<fo:inline font-family="monospace" font-size="0.8em">DateUtils.round()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1881"><!--DateUtils.round( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1882"><!--methods, DateUtils.round(
)--></fo:wrapper> can round to almost every
<fo:inline font-family="monospace" font-size="0.8em">Calendar</fo:inline> field, including
<fo:inline font-family="monospace" font-size="0.8em">Calendar.SECOND</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">Calendar.MINUTE</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">Calendar.HOUR</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">Calendar.DAY_OF_MONTH</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">Calendar.MONTH</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">Calendar.YEAR</fo:inline>. The following example demonstrates
the use of <fo:inline font-family="monospace" font-size="0.8em">DateUtils.round( )</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt37">import org.apache.commons.lang.time.FastDateFormat;
import org.apache.commons.lang.time.DateFormatUtils;
import org.apache.commons.lang.time.DateUtils;

FastDateFormat dtFormat = DateFormatUtils.ISO_DATETIME_FORMAT;

Date now = new Date( );
Date nearestHour = DateUtils.round( now, Calendar.HOUR );
Date nearestDay = DateUtils.round( now, Calendar.DAY_OF_MONTH );
Date nearestYear = DateUtils.round( now, Calendar.YEAR );

System.out.println( "Now: " + dtFormat.format( now ) );
System.out.println( "Nearest Hour: " + dtFormat.format( nearestHour ) );
System.out.println( "Nearest Day: " + dtFormat.format( nearestDay ) );
System.out.println( "Nearest Year: " + dtFormat.format( nearestYear ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example creates an object representing the current time and
rounds this date to the nearest hour, day, and year. Assuming that
the current date is March 28, 2004, and the current time is 1:48
P.M., this program creates the following output using the
<fo:inline font-family="monospace" font-size="0.8em">FastDateFormat</fo:inline> class from the previous recipe:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt38">Now: 2004-03-28T13:48:12
Nearest Hour: 2004-03-28T14:00:00
Nearest Day: 2004-03-29T00:00:00
Nearest Year: 2004-01-01T00:00:00</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-14.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.14.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you are creating a system to record the time of an event, and you
are not certain exactly when that event happened, it is appropriate
to round that date and time to an approximate value. Are you certain
that you woke up at 9:02 A.M., 23 seconds, and 879 milliseconds? Or,
is it more likely that you remember that you woke up around 9 A.M.?
It would be appropriate to round this time to the
<fo:inline font-family="monospace" font-size="0.8em">Calendar.MINUTE</fo:inline> or
<fo:inline font-family="monospace" font-size="0.8em">Calendar.HOUR</fo:inline> field at the very
least—recording a general time, such as
"around 9 A.M." In the following
example, <fo:inline font-family="monospace" font-size="0.8em">DateUtils.round( )</fo:inline> calculates an
approximate time:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt39">// Rounding to the nearest hour
Date wokeUp = new Date( );
Date wokeUpAround = DateUtils.round( now, Calendar.HOUR );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If your <fo:inline font-family="monospace" font-size="0.8em">wokeUp</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">Date</fo:inline> object is
1:31 P.M., then <fo:inline font-family="monospace" font-size="0.8em">wokeUpAround</fo:inline> will be equal to 2:00
P.M. But, if you woke up at 1:15 P.M., your
<fo:inline font-family="monospace" font-size="0.8em">wokeUpAround</fo:inline> object would then be rounded down to
1:00 P.M. When you round or truncate to a field, all of the date
fields less significant than the specified field are set to zero. In
this example, rounding to an hour causes the minutes, seconds, and
milliseconds to be set to zero. Rounding a <fo:inline font-family="monospace" font-size="0.8em">Date</fo:inline> to
a <fo:inline font-family="monospace" font-size="0.8em">Calendar.YEAR</fo:inline> sets the day of the year to one
and the time to the first instance of the nearest year:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt40">Date now = new Date( )
Date nearestYear = DateUtils.round( now, Calendar.YEAR );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This previous code rounds to the nearest year, and if
<fo:inline font-family="monospace" font-size="0.8em">now</fo:inline> is 15 May 2004, the resulting
<fo:inline font-family="monospace" font-size="0.8em">Date</fo:inline> will correspond to the first instance of
2004. Alternatively, if <fo:inline font-family="monospace" font-size="0.8em">now</fo:inline> is 15 July 2004, the
resulting <fo:inline font-family="monospace" font-size="0.8em">Date</fo:inline> will be the first instance of 2005.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">DateUtils.round( )</fo:inline> works with the following field
values, listed in order of significance:</fo:block><fo:list-block space-before.optimum="0em" space-before.minimum="0em" space-before.maximum="0em" space-after.optimum="0em" space-after.minimum="0em" space-after.maximum="0em" margin-left="1.0em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e3662"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3663"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                     <fo:inline font-family="monospace" font-size="0.8em">Calendar.MILLISECOND</fo:inline>
                  </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3669"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                     <fo:inline font-family="monospace" font-size="0.8em">Calendar.SECOND</fo:inline>
                  </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3675"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                     <fo:inline font-family="monospace" font-size="0.8em">Calendar.MINUTE</fo:inline>
                  </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3681"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                     <fo:inline font-family="monospace" font-size="0.8em">Calendar.HOUR_OF_DAY</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">Calendar.HOUR</fo:inline>
                  </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3690"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                     <fo:inline font-family="monospace" font-size="0.8em">Calendar.DATE</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">Calendar.DAY_OF_MONTH</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">Calendar.AM_PM</fo:inline>
                  </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3702"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                     <fo:inline font-family="monospace" font-size="0.8em">Calendar.MONTH</fo:inline>
                  </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3708"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                     <fo:inline font-family="monospace" font-size="0.8em">DateUtils.SEMI_MONTH</fo:inline>
                  </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3714"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                     <fo:inline font-family="monospace" font-size="0.8em">Calendar.YEAR</fo:inline>
                  </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3720"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                     <fo:inline font-family="monospace" font-size="0.8em">Calendar.ERA</fo:inline>
                  </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">DateUtils</fo:inline> introduces a
<fo:inline font-family="monospace" font-size="0.8em">DateUtils.SEMI_MONTH</fo:inline> field, which will cause dates
to be rounded to the middle or beginning of a month. In
<fo:inline font-family="monospace" font-size="0.8em">DateUtils</fo:inline>, the middle of the month is defined as
the 15th day of the month with the second half of the month starting
at midnight on the 16th day of the month:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt41">Calendar cal = Calendar.getInstance( );
cal.set( 2004, Calendar.MARCH, 5, 10, 2, 2 );

System.out.println( DateUtils.round( cal.getTime( ) , 
DateUtils.SEMI_MONTH ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This code will print out <fo:inline font-family="monospace" font-size="0.8em">Mon Mar 01 00:00:00 CST
2004</fo:inline> as the 5th of March and is closer to the beginning of
the month than it is to the middle of the month. If the
<fo:inline font-family="monospace" font-size="0.8em">Calendar</fo:inline> object was March, 14th, 2004, and it had
been rounded to a <fo:inline font-family="monospace" font-size="0.8em">DateUtils.SEMI_MONTH</fo:inline>, the
rounded date would have been set to midnight on March 16th. One would
think that the middle of March is the 15th? Isn't
that date the famous Ides of March—the date on which Brutus
betrayed Caesar? According to <fo:inline font-family="monospace" font-size="0.8em">DateUtils</fo:inline>, the first
half of the month ends at 11:59 P.M. on the 15th of the month; the
<fo:inline font-family="monospace" font-size="0.8em">DateUtils.round( )</fo:inline> method returns the first
instant of the beginning of the second half of March: <fo:inline font-family="monospace" font-size="0.8em">March
16 12:00:00.000 A.M</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-14.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.14.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The more you work with Java's
<fo:inline font-family="monospace" font-size="0.8em">Date</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">Calendar</fo:inline> object, the
more you will curse the J2SE. If your frustration is boiling over,
take a look at<fo:wrapper id="jakartackbk-CHP-1-ITERM-1883"><!--Joda--></fo:wrapper> Joda.
Joda contains an entire package devoted to date, time, and duration
formatting, and it is not based on the <fo:inline font-family="monospace" font-size="0.8em">Date</fo:inline> or
<fo:inline font-family="monospace" font-size="0.8em">Calendar</fo:inline> classes. For more information about Joda,
take a look at the Joda project page at: <fo:inline font-family="monospace" font-size="0.8em">http://www.joda.org/</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-15"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Truncating Date Objects</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.15. Truncating Date Objects</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-15.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.15.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to truncate a<fo:wrapper id="jakartackbk-CHP-1-ITERM-1884"><!--truncating
dates--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1885"><!--dates, truncating--></fo:wrapper>
date to a calendar field.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-15.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.15.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">DateUtils.truncate()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1886"><!--DateUtils.truncate( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1887"><!--methods, DateUtils.truncate(
)--></fo:wrapper> to throw out<fo:wrapper id="jakartackbk-CHP-1-ITERM-1888"><!--fields,
truncating date objects--></fo:wrapper> all fields less
significant than the specified field. When a <fo:inline font-family="monospace" font-size="0.8em">Date</fo:inline>
is truncated to the <fo:inline font-family="monospace" font-size="0.8em">Calendar.MONTH</fo:inline> field,
<fo:inline font-family="monospace" font-size="0.8em">DateUtils.truncate( )</fo:inline> will return a
<fo:inline font-family="monospace" font-size="0.8em">Date</fo:inline> object set to the first instance of the
month. The
<fo:wrapper id="jakartackbk-CHP-1-ITERM-1889"><!--days, truncating--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1890"><!--hours, truncating--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1891"><!--minutes, truncating--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1892"><!--seconds, truncating--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1893"><!--months, truncating--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1894"><!--milliseconds,
truncating--></fo:wrapper>day, hour, minute, second, and
millisecond field will each contain the minimum possible value for
that field. <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-9" text-decoration="underline" color="blue">Example 1-9</fo:basic-link> truncates a date at the
month field and the hour field.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-EX-9"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 1-9. Truncating a Date object at Calendar.MONTH</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e3873">import org.apache.commons.lang.time.DateUtils;
import org.apache.commons.lang.time.FastDateFormat;
import org.apache.commons.lang.time.DateFormatUtils;

FastDateFormat dtFormat = DateFormatUtils.ISO_DATETIME_FORMAT;

Date now = new Date( );
Date truncatedMonth = DateUtils.truncate( now, Calendar.MONTH );
Date truncatedHour = DateUtils.truncate( now, Calendar.HOUR ); 

System.out.println( "Now: " + dtFormat.format( now ) );
System.out.println( "Truncated Month: " 
                 + dtFormat.format( truncatedMonth ) );
System.out.println( "Truncated Hour: " 
                    + dtFormat.format( truncatedHour ) );</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Assuming that the current date is March 28, 2004, and the current
time is 1:48 P.M., this example produces the following output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt42">Now: 2004-03-28T13:48:12
Truncated Month: 2004-03-01T00:00:00
Truncated Hour: 2004-03-28T13:00:00</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-15.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.15.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you want to associate every event that happened between 2 P.M. and
3 P.M. with the 2 P.M. hour, or every event that happened in a
particular year with the first instant of that year, you need to
truncate a <fo:inline font-family="monospace" font-size="0.8em">Date</fo:inline> at a specified
<fo:inline font-family="monospace" font-size="0.8em">Calendar</fo:inline> field. When a <fo:inline font-family="monospace" font-size="0.8em">Date</fo:inline> is
truncated, it is rounded down; <fo:inline font-family="monospace" font-size="0.8em">DateUtils.truncate()</fo:inline> is the equivalent of <fo:inline font-family="monospace" font-size="0.8em">Math.floor( )</fo:inline> for
the <fo:inline font-family="monospace" font-size="0.8em">Date</fo:inline> class. If it is 4:02 P.M. on October 31,
1975, a <fo:inline font-family="monospace" font-size="0.8em">Date</fo:inline> object truncated at the
<fo:inline font-family="monospace" font-size="0.8em">Calendar.HOUR</fo:inline> field will point to 4:00 P.M., and a
<fo:inline font-family="monospace" font-size="0.8em">Date</fo:inline> truncated at the
<fo:inline font-family="monospace" font-size="0.8em">Calendar.YEAR</fo:inline> field will point to the first
millisecond of the first minute, of the first hour, of the first day
of year 2005: <fo:inline font-family="monospace" font-size="0.8em">January 01 2005: 12:00:00.000 A.M</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-15.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.15.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">DateUtils.truncate( )</fo:inline> can also be used to truncate
a date to the nearest <fo:inline font-family="monospace" font-size="0.8em">DateUtils.SEMI_MONTH</fo:inline>.
<fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-14" text-decoration="underline" color="blue">Recipe 1.14</fo:basic-link> discusses
<fo:inline font-family="monospace" font-size="0.8em">DateUtils.SEMI_MONTH</fo:inline> in more detail.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-16"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Creating an Enum</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.16. Creating an Enum</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-16.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.16.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need an Enum, but<fo:wrapper id="jakartackbk-CHP-1-ITERM-1895"><!--enums,
creating--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1896"><!--formatting, enums--></fo:wrapper>
you are not using the new Java 1.5 release.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-16.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.16.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you are stuck with Java 1.4 or lower, you can use Commons Lang
<fo:inline font-family="monospace" font-size="0.8em">Enum</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">ValuedEnum</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">EnumUtils</fo:inline> to create an enum
"type," which approximates the new
language feature. <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-10" text-decoration="underline" color="blue">Example 1-10</fo:basic-link> extends Enum,
providing three flavors: <fo:inline font-family="monospace" font-size="0.8em">Flavor.CHOCOLATE</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">Flavor.VANILLA</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">Flavor.STRAWBERRY</fo:inline>.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-EX-10"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 1-10. Defining a Flavor enumeration by extending Enum</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e3981">import java.util.*;
import org.apache.commons.lang.enum.Enum;

public final class Flavor extends Enum {
    public static Flavor CHOCOLATE = new Flavor( "Chocolate" );
    public static Flavor VANILLA = new Flavor( "Vanilla" );
    public static Flavor STRAWBERRY = new Flavor( "Strawberry" );

    private Flavor(String name, int value) { super( name, value ); }

    public static Flavor getEnum(String flavor) {
        return (Flavor) getEnum(Flavor.class, flavor);
    }
 
    public static Map getEnumMap( ) {
        return getEnumMap(Flavor.class);
    }
 
    public static List getEnumList( ) {
        return getEnumList(Flavor.class);
    }
 
    public static Iterator iterator( ) {
        return iterator(Flavor.class);
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The key to an <fo:inline font-family="monospace" font-size="0.8em">Enum</fo:inline> is the private constructor;
this guarantees that there are only three instances of
<fo:inline font-family="monospace" font-size="0.8em">Flavor</fo:inline> in any virtual machine. This extension of
<fo:inline font-family="monospace" font-size="0.8em">Enum</fo:inline> provides a number of useful utilities to get
a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> or <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> of available
<fo:inline font-family="monospace" font-size="0.8em">Flavor</fo:inline> instances:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt43">// Using Flavor to create an ice cream cone
IceCreamCone cone = new IceCreamCone( );
cone.setScoops( 5 );
cone.setFlavor( Flavor.VANILLA );
cone.addTopping( "sprinkles" );

List flavors = Flavor.getEnumList( );
System.out.println( ArrayUtils.toString( flavors.toString( ) ) );
// prints "{ Chocolate, Vanilla, Strawberry }"</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-16.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.16.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Assume that you are writing a system to classify choral singers by
voice type: soprano, alto, tenor, and bass. Your database has a table
<fo:inline font-family="monospace" font-size="0.8em">dbo.lu_VoicePart</fo:inline>, which contains a part name and a
numeric part code. This voice part is a coded type; it needs both a
name and a code, and a straightforward design is achieved by
extending
<fo:inline font-family="monospace" font-size="0.8em">ValuedEnum</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1897"><!--ValuedEnum,
extending--></fo:wrapper>. <fo:inline font-family="monospace" font-size="0.8em">ValuedEnum</fo:inline> is an
<fo:inline font-family="monospace" font-size="0.8em">Enum</fo:inline> that keeps track of a numeric code for each
instance of the enumeration. <fo:inline font-family="monospace" font-size="0.8em">PartEnum</fo:inline> extends
<fo:inline font-family="monospace" font-size="0.8em">ValuedEnum</fo:inline> to store static instances of the four
possible voice parts: soprano, alto, tenor, and bass. (See <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-11" text-decoration="underline" color="blue">Example 1-11</fo:basic-link>.)</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-EX-11"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 1-11. Extending ValuedEnum to create an enum</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e4038">import java.util.*;
import org.apache.commons.lang.enum.ValuedEnum;

public final class PartEnum extends ValuedEnum {
    public static int  SOPRANO_VAL = 1;
    public static int  ALTO_VAL = 2;
    public static int  TENOR_VAL = 3;
    public static int  BASS_VAL = 4;

    public static PartEnum SOPRANO = new PartsEnum( "Soprano", SOPRANO_VAL );
    public static PartEnum ALTO = new PartsEnum( "Alto", ALTO_VAL );
    public static PartEnum TENOR = new PartsEnum( "Tenor", TENOR_VAL );
    public static PartEnum BASS = new PartsEnum( "Bass", BASS_VAL );

    private PartsEnum(String name, int value) { super( name, value ); }

    public static PartEnum getEnum(String part) {
        return (PartEnum) getEnum(PartEnum.class, part);
    }

    public static PartEnum getEnum(int part) {
        return (PartEnum) getEnum(PartEnum.class, part);
    }

    public static Map getEnumMap( ) {
        return getEnumMap(PartEnum.class);
    }

    public static List getEnumList( ) {
        return getEnumList(PartEnum.class);
    }

    public static Iterator iterator( ) {
        return iterator(PartEnum.class);
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This class extends <fo:inline font-family="monospace" font-size="0.8em">ValuedEnum</fo:inline> and has a private
constructor. This guarantees that the only instances of this
enumeration will be defined in <fo:inline font-family="monospace" font-size="0.8em">PartEnum</fo:inline>; four
instances of <fo:inline font-family="monospace" font-size="0.8em">PartEnum</fo:inline> are created as public static
final constants, and a name is assigned to every part. (See <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-12" text-decoration="underline" color="blue">Example 1-12</fo:basic-link>.)</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-EX-12"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 1-12. Vocalist bean with a PartEnum</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e4057">public class Vocalist {
    private String name;
    private PartEnum part;

    public String getName( ) { return name; }
    public void setName(String name) { this.name = name; }

    public PartEnum getPart( ) { return part; }
    public void setPart(PartEnum part) { this.part = part; }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Checking for every voice part involves a call to
<fo:inline font-family="monospace" font-size="0.8em">PartEnum.iterator( )</fo:inline>, which obviates the need for
an <fo:inline font-family="monospace" font-size="0.8em">if</fo:inline>/<fo:inline font-family="monospace" font-size="0.8em">else if</fo:inline> control statement
to catch every single voice part:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt44">Iterator parts = PartEnum.iterator( );
while( parts.hasNext( ) ) {
  PartEnum part = (PartEnum) parts.next( );
  if( part.equals( vocalist.getPart( ) ) ) {
    System.out.println( "Vocalist is a " + part.getValue( ) );
  }
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example did not include any reference to a specific voice part,
but, if your code needs to reference a specific voice type, it can
use the static constants in
<fo:inline font-family="monospace" font-size="0.8em">PartEnum</fo:inline>—<fo:inline font-family="monospace" font-size="0.8em">PartEnum.SOPRANO</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">PartEnum.ALTO</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">PartEnum.TENOR</fo:inline>,
and <fo:inline font-family="monospace" font-size="0.8em">PartEnum.BASS</fo:inline>. And, lastly, it is impossible
to create a <fo:inline font-family="monospace" font-size="0.8em">Vocalist</fo:inline> object with an invalid voice
part, as the part property must be one of the four static instances
of <fo:inline font-family="monospace" font-size="0.8em">PartEnum</fo:inline> defined in a
<fo:inline font-family="monospace" font-size="0.8em">PartEnum</fo:inline> or <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Using Enum types becomes especially important if an object has
multiple classifications. If you were creating an object to track a
person, you could easily end up with two overlapping classifications.
In <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-13" text-decoration="underline" color="blue">Example 1-13</fo:basic-link>, both <fo:inline font-family="monospace" font-size="0.8em">jobStatus</fo:inline>
and <fo:inline font-family="monospace" font-size="0.8em">gender</fo:inline> can be <fo:inline font-family="monospace" font-size="0.8em">UNKNOWN</fo:inline>, and
the valid options for both <fo:inline font-family="monospace" font-size="0.8em">jobStatus</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">gender</fo:inline> are defined as public static
<fo:inline font-family="monospace" font-size="0.8em">int</fo:inline> variables.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-EX-13"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 1-13. Using 
public static final constants for category information</fo:block><fo:wrapper id="jakartackbk-CHP-1-ITERM-1898"><!--public static final constants--></fo:wrapper><fo:wrapper id="jakartackbk-CHP-1-ITERM-1899"><!--constants, public static final--></fo:wrapper><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e4135">public class Person {
    public static final int STUDENT = -1;
    public static final int EMPLOYED = 0;
    public static final int UNEMPLOYED = 1;
    public static final int RETIRED = 2;
    public static final int UNKNOWN = 3;
    public static final int MALE = 0;
    public static final int FEMALE = 1;

    private int jobStatus;
    private int gender;

    public int getJobStatus( ) { return jobStatus; }
    public void setJobStatus(int jobStatus) { this.jobStatus = jobStatus; }

    public int getGender( ) { return gender; }
    public void setGender(int gender) { this.gender = gender; }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This class defines two properties—<fo:inline font-family="monospace" font-size="0.8em">jobStatus</fo:inline>
and <fo:inline font-family="monospace" font-size="0.8em">gender</fo:inline>—and both correspond to codes
stored in the database. This system needs to know; that
<fo:inline font-family="monospace" font-size="0.8em">MALE</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">FEMALE</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">UNKNOWN</fo:inline> are the valid values for the
<fo:inline font-family="monospace" font-size="0.8em">gender</fo:inline> property; and <fo:inline font-family="monospace" font-size="0.8em">STUDENT</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">EMPLOYED</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">UNEMPLOYED</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">UNKNOWN</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">RETIRED</fo:inline> all
correspond to the <fo:inline font-family="monospace" font-size="0.8em">jobStatus</fo:inline> property. This class
does not define which constants are related to which property. Is
<fo:inline font-family="monospace" font-size="0.8em">UNKNOWN</fo:inline> a <fo:inline font-family="monospace" font-size="0.8em">gender</fo:inline> or a
<fo:inline font-family="monospace" font-size="0.8em">jobStatus</fo:inline>? Some systems rename these static
variables to reflect which properties they correspond
to—<fo:inline font-family="monospace" font-size="0.8em">GENDER_MALE</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">GENDER_FEMALE</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">and
GENDER_UNKNOWN</fo:inline> would clearly correspond to the
<fo:inline font-family="monospace" font-size="0.8em">gender</fo:inline> property; and
<fo:inline font-family="monospace" font-size="0.8em">JOB_STUDENT</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">JOB_EMPLOYED</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">JOB_UNEMPLOYED</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">JOB_UNKNOWN</fo:inline>,
and <fo:inline font-family="monospace" font-size="0.8em">JOB_RETIRED</fo:inline> would correspond to the
<fo:inline font-family="monospace" font-size="0.8em">jobStatus</fo:inline> property. This solution only draws a
conceptual boundary in the mind of the programmer; no logical
separation is achieved, and there is still no way to guarantee that a
bean property will have a valid value. (See <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-14" text-decoration="underline" color="blue">Example 1-14</fo:basic-link>.)</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-EX-14"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 1-14. Simplifying with ValueEnum</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e4220">public class Person {
    private JobStatusEnum jobStatus;
    private GenderEnum gender;

    public JobStatusEnum getJobStatus( ) { return jobStatus; }
    public void setJobStatus(JobStatusEnum jobStatus) { 
        this.jobStatus = jobStatus; 
    }

    public GenderEnum getGender( ) { return gender; }
    public void setGender(GenderEnum gender) { this.gender = gender; }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The solution to this problem can be solved by extending
<fo:inline font-family="monospace" font-size="0.8em">ValuedEnum</fo:inline> and getting rid of the confusing
mish-mash of public static constants. If you find yourself frequently
creating static variables to reflect categories or types, enums are
the solution. And, if you haven't upgraded to Java
1.5, use<fo:wrapper id="jakartackbk-CHP-1-ITERM-1900"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1901"><!----></fo:wrapper> Commons Lang
<fo:inline font-family="monospace" font-size="0.8em">Enum</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">ValuedEnum</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-16.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.16.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">As mentioned previously, Java 1.5 (or Tiger) has a new language
feature: enums. If you are using Java 1.5, see the
"Java 1.5 in a Nutshell" article
from Sun Microsystems at <fo:inline font-family="monospace" font-size="0.8em">http://java.sun.com/developer/technicalArticles/releases/j2se15/</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-17"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Generating Unique Numeric Identifiers</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.17. Generating Unique Numeric Identifiers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-17.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.17.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to generate numeric<fo:wrapper id="jakartackbk-CHP-1-ITERM-1902"><!--numeric
identifiers--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1903"><!--alphanumeric
identifiers--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1904"><!--identifiers, generating--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1905"><!--LongIdentifierFactory--></fo:wrapper>
and alphanumeric identifiers.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-17.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.17.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">IdentifierUtils</fo:inline> to create an
<fo:inline font-family="monospace" font-size="0.8em">IdentifierFactory</fo:inline> with both numeric and
alphanumeric identifiers. <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-15" text-decoration="underline" color="blue">Example 1-15</fo:basic-link> demonstrates
the use of a <fo:inline font-family="monospace" font-size="0.8em">LongIdentifierFactory</fo:inline> to create
unique numeric identifiers.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-EX-15"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 1-15. Using a LongIdentifierFactory to create unique numeric identifiers</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e4291">import org.apache.commons.lang.util.IdentifierUtils;
import org.apache.commons.lang.util.LongIdentifierFactory;

LongIdentifierFactory idFactory = factory.longGenerator(false, 0);
    
System.out.print( "Identifiers: " );
for( int i = 0; i &lt; 10; i++ ) {
    System.out.println( idFactory.nextLongIdentifier( ) + " " );
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This code will create 10 <fo:wrapper id="jakartackbk-CHP-1-ITERM-1906"><!--unique numeric
identifiers--></fo:wrapper>unique numeric identifiers and print
them out on one line, producing the following output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt45">Identifiers: 0 1 2 3 4 5 6 7 8 9</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-17.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.17.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you need a <fo:wrapper id="jakartackbk-CHP-1-ITERM-1907"><!--unique alphanumeric
identifiers--></fo:wrapper>unique alphanumeric identifier,
create a <fo:inline font-family="monospace" font-size="0.8em">StringIdentifierFactory</fo:inline>. This factory is
created by calling the <fo:inline font-family="monospace" font-size="0.8em">stringAlphanumericIdentifierFactory(
)</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1908"><!--stringAlphanumericIdentifierFactory( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1909"><!--methods, stringAlphanumericIdentifierFactory(
)--></fo:wrapper> method, passing true if you want the
factory to wrap when it reaches a maximum value. The second parameter
to this method specifies the length of the alphanumeric identifier;
in this case, a length of four is specified. (See <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-16" text-decoration="underline" color="blue">Example 1-16</fo:basic-link>.)</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-EX-16"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 1-16. Using an IdentifierGenerator to create unique alphanumeric identifiers</fo:block><fo:wrapper id="jakartackbk-CHP-1-ITERM-1910"><!--IdentifierGenerator--></fo:wrapper><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e4335">import org.apache.commons.lang.util.IdentifierUtils;
import org.apache.commons.lang.util.StringIdentifierFactory;

StringIdentifierFactory idFactory = 
    IdentifierUtils.<fo:inline font-style="italic">stringAlphanumericIdentifierFactory</fo:inline>(true, 4);

System.out.print( "Identifiers: " );
for( int i = 0; i &lt; 10; i++ ) {
    System.out.println( idFactory.nextStringIdentifier( ) + " " );
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This factory will create strings with four characters, which contain
a base-36 representation of an integer that is incremented every time
<fo:inline font-family="monospace" font-size="0.8em">nextStringIdentifier( )</fo:inline> is called. The progression
of alphanumeric identifiers follows this pattern:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt46">0000, 0001, 0002, ... 000a, 000b, 000c, ... 000z, 0010, 0011, 0012, 
... 001a, etc.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Once the identifier reaches the maximum value of
"1111," it will wrap around to the
start of the sequence. A factory that was not configured to wrap will
throw an <fo:inline font-family="monospace" font-size="0.8em">IllegalStateException</fo:inline> when the maximum ID
value has been reached.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you do not feel like instantiating your own instance of a
generator,
<fo:inline font-family="monospace" font-size="0.8em">IdentifierUtils</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1911"><!--IdentifierUtils--></fo:wrapper>
contains static methods to access three static identifier factories:
<fo:inline font-family="monospace" font-size="0.8em">LONG_IDENTIFIER_FACTORY</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">STRING_NUMERIC_IDENTIFIER_FACTORY</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">STRING_ALPHANUMERIC_IDENTIFIER_FACTORY</fo:inline>. (See <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-17" text-decoration="underline" color="blue">Example 1-17</fo:basic-link>.)</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-EX-17"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 1-17. Static generators on IdentifierUtils</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e4376">import org.apache.commons.lang.util.IdentifierUtils;

// Returns a Long identifier.  
Long longId = IdentifierUtils.nextLongIdentifier( );

// Returns a String numeric id.
String idNumber = IdentifierUtils.nextStringNumericIdentifier( );

// Returns a String alphanumeric id.
String idAlpha = IdentifierUtils.nextStringAlphanumericIdentifier( );</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">nextStringNumericIdentifier()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1912"><!--nextStringNumericIdentifier( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1913"><!--methods, nextStringNumericIdentifier(
)--></fo:wrapper> method returns a string that contains a
number: "1,"
"2,"
"3," and so on. This static
<fo:inline font-family="monospace" font-size="0.8em">STRING_ALPHANUMERIC_IDENTIFIER_FACTORY</fo:inline> is a
wrapping alphanumeric generator that creates strings of length 15.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-CHP-1-NOTE-49"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/warning.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Warning</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This recipe demonstrates the use of the identifier generation
utilities available in Commons Lang. Ongoing development of
<fo:inline font-family="monospace" font-size="0.8em">IdentifierUtils</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">IdentifierFactory</fo:inline> has moved to the Commons Id
project in the Jakarta Commons Sandbox.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-17.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.17.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The examples in this recipe provide a simple mechanism to create
unique identifiers within a single JVM; the problem of generating
truly unique identifiers across multiple systems is a job for the
<fo:wrapper id="jakartackbk-CHP-1-ITERM-1914"><!--Universal Unique
Identifier--></fo:wrapper>Universal<fo:wrapper id="jakartackbk-CHP-1-ITERM-1915"><!--UUID
(Universal Unique Identifier)--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1916"><!--identifiers, UUID--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1917"><!--values, UUID--></fo:wrapper>
Unique Identifier (UUID). The nascent Commons Id project contains a
few utilities for working with UUID values, but, at the time of
writing, these utilities are not yet ready for a final release. If
you would like to either generate or use a UUID in a Java program,
you are encouraged to follow the development of Commons Id UUID
utilities at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/sandbox/id</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The J2SE contains a class that can create a unique identifier across
every JVM: a <fo:wrapper id="jakartackbk-CHP-1-ITERM-1918"><!--VMID (Virtual Machine
Identifier)--></fo:wrapper>Virtual Machine Identifier (VMID).
For more<fo:wrapper id="jakartackbk-CHP-1-ITERM-1919"><!--Virtual Machine
Identifier--></fo:wrapper> information about
this class, which is associated with <fo:wrapper id="jakartackbk-CHP-1-ITERM-1920"><!--remote
method invocation (RMI)--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1921"><!--RMI
(remote method invocation)--></fo:wrapper>remote
method<fo:wrapper id="jakartackbk-CHP-1-ITERM-1922"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1923"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1924"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1925"><!----></fo:wrapper> invocation (RMI), see the Javadoc
at <fo:inline font-family="monospace" font-size="0.8em">http://java.sun.com/j2se/1.4.2/docs/api/java/rmi/dgc/VMID.html</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-18"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Validation of Method Parameters</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.18. Validation of Method Parameters</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-18.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.18.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to validate parameters <fo:wrapper id="jakartackbk-CHP-1-ITERM-1926"><!--parameters, validation--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1927"><!--validation, parameters--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1928"><!--testing, parameters--></fo:wrapper>passed
to a method. You would prefer one line of code to test that a method
parameter is valid.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-18.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.18.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">Validate</fo:inline> to check method parameters.
<fo:inline font-family="monospace" font-size="0.8em">Validate</fo:inline> can check for empty or
<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> parameters, as well as evaluate any logical
conditions. <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-18" text-decoration="underline" color="blue">Example 1-18</fo:basic-link> demonstrates the use of
<fo:inline font-family="monospace" font-size="0.8em">Validate</fo:inline> to perform a few simple validations.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-EX-18"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 1-18. Using Validate to perform simple validations</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e4515">import org.apache.commons.lang.Validate;

public doSomething( int param1, Object[] param2, Collection param3 ) {

    Validate.isTrue( param1 &gt; 0, "param must be greater than zero" );
    Validate.notEmpty( param2, "param2 must not be empty" );
    Validate.notEmpty( param3, "param3 must not be empty" );
    Validate.noNullElements( param3, "param3 cannot contain null elements" );

    // do something complex and interesting
}</fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-18.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.18.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Write finicky methods. Don't just work with any
input, have some standards. Don't hang around with
garbage or <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>s—clean up your act, and use
<fo:inline font-family="monospace" font-size="0.8em">Validate</fo:inline>. Methods in <fo:inline font-family="monospace" font-size="0.8em">Validate</fo:inline>
throw an <fo:inline font-family="monospace" font-size="0.8em">IllegalArgumentException</fo:inline> if invalid
parameters are encountered. <fo:inline font-family="monospace" font-size="0.8em">Validate.notEmpty( )</fo:inline>
will throw an exception if the parameter is <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>
or empty, and <fo:inline font-family="monospace" font-size="0.8em">Validate.isTrue( )</fo:inline> takes a logical
expression that must evaluate to true. <fo:basic-link internal-destination="jakartackbk-CHP-1-TABLE-5" text-decoration="underline" color="blue">Table 1-5</fo:basic-link>
lists a number of static methods of <fo:inline font-family="monospace" font-size="0.8em">Validate</fo:inline>.</fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-TABLE-5"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 1-5. Available static methods on Validate</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-left-style="solid" border-right-style="solid" border-top-style="solid" border-bottom-style="solid" border-left-width="0.1pt" border-right-width="0.1pt" border-top-width="0.1pt" border-bottom-width="0.1pt" border-left-color="black" border-right-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="17.4cm"><fo:table-column column-number="1"/><fo:table-column column-number="2"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Validate method</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Description</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">isTrue(boolean expr)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Fails if expression evaluates to false</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">isTrue(boolean expr, String msg)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Same as above; constructs exception with a message</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">noNullElements(Collection col)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Fails if collection contains a null</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">noNullElements(Object[] array)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Fails if array contains a null</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">notEmpty(Collection col)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Fails if collection is empty</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">notEmpty(Map map)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Fails if map is empty</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">notEmpty(Object[] array)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Fails if array is empty</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">notNull(Object obj)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Fails if object is null</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Well-written code tests input and parameters. Is the number within a
given range? Has the user supplied an index that is out of bounds for
this array? Unless you want your applications to break down and throw
exceptions, make sure that you are not trying to access the 15th
element of a 10-element array; your code should be skeptical of
parameters and refuse to run if it doesn't get its
way. In fragile systems, parameter validation is not a top priority;
errors are dealt with as different application layers throw a
potpourri of exceptions. Other, more unstable, systems will pass a
<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> all the way down the call stack until the
lowest level blows up and spits back a
<fo:inline font-family="monospace" font-size="0.8em">NullPointerException</fo:inline>—with a long-winded
stack trace. Don't play around with
<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>—avoid it, test your system
exhaustively, and throw an
<fo:inline font-family="monospace" font-size="0.8em">IllegalArgumentException</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Consider the following method, which takes a latitude, longitude, and
mode parameter. Both the latitude and longitude must fall within a
valid range, and this method should throw an
<fo:inline font-family="monospace" font-size="0.8em">IllegalArgumentException</fo:inline> if it encounters an
unrealistic latitude, an unrealistic longitude, or an empty mode
parameter. The <fo:inline font-family="monospace" font-size="0.8em">Validate</fo:inline> utility used in
conjunction with a <fo:inline font-family="monospace" font-size="0.8em">DoubleRange</fo:inline> object can reduce
the amount of code dedicated to range checking and method parameter
validation. To test the validity of the coordinates, two constant
<fo:inline font-family="monospace" font-size="0.8em">DoubleRange</fo:inline> objects are created outside of the
method. <fo:inline font-family="monospace" font-size="0.8em">DoubleRange.includesDouble(double</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">d)</fo:inline> returns true if the number falls within the
defined range—<fo:inline font-family="monospace" font-size="0.8em">if x &lt;= rangeMax &amp;&amp; x &gt;=
rangeMin</fo:inline>. (See <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-19" text-decoration="underline" color="blue">Example 1-19</fo:basic-link>.)</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-EX-19"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 1-19. Using the Validator and the DoubleRange to validate method parameters</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e4723">public static final DoubleRange LAT_RANGE = new DoubleRange(  -90.0,  90.0 );
public static final DoubleRange LON_RANGE = new DoubleRange( -180.0, 180.0 );

public double elevation( double latitude, 
                         double longitude,
                         String mode ) {
    Validate.notEmpty( mode, "Mode cannot be empty or null" );
    Validate.isTrue( LAT_RANGE.includesDouble( latitude ),
                      "Lat not in range " + latRange, latitude );
    Validate.isTrue( LON_RANGE.includesDouble( longitude ),
                      "Lon not in range " + lonRange, longitude );

    double elevation = 0.0;
    // code to implement the elevation method
    return elevation;
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">It takes a fair amount of institutional discipline to make sure that
a code base has a sufficient amount of validation, and it is
surprising how often systems scale to thousands of lines without it.
Systems without good internal validation and sanity checks are
characterized by frequent occurrences of
<fo:inline font-family="monospace" font-size="0.8em">NullPointerException</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">RuntimeException</fo:inline>. Throwing
<fo:inline font-family="monospace" font-size="0.8em">RuntimeException</fo:inline> in the form of
<fo:inline font-family="monospace" font-size="0.8em">IllegalArgumentException</fo:inline> might seem like an odd
recipe for increasing overall stability. But, if you actively throw
exceptions and test exhaustively, it will be less toil and trouble to
identify and fix defects—your application will fail sooner, and
you will have short stack traces and well-defined problems.
Performing rigorous parameter validation alone will not create a
stable system, but it is part of a larger equation, which involves
unit testing and validation.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In addition to parameter validation, you should be writing unit tests
that test this validation. If you write good unit tests using JUnit
and then measure your test coverage with a tool like Clover or
JCoverage, you can save yourself an amazing amount of grief fixing
unanticipated defects. Your unit tests should be covering close to
100% of your code, and they should throw curveballs.
Don't just test the expected situation—if your
method takes a double, see what it does with
<fo:inline font-family="monospace" font-size="0.8em">Double.POSITIVE_INFINITY</fo:inline>; and if your method takes
an array, pass it a <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>. Test the unexpected; if
you find that your method melts down with a <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>,
check the parameter with <fo:inline font-family="monospace" font-size="0.8em">Validate</fo:inline>. 100% test
coverage is not an unrealistic ideal; it will drive your validation
code. More test coverage always leads to a higher level of system
quality.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-18.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.18.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-8" text-decoration="underline" color="blue">Chapter 8</fo:basic-link> discusses
<fo:inline font-family="monospace" font-size="0.8em">DoubleRange</fo:inline> and other utilities for capturing a
range of numbers.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Chapters 4 to Chapter 7 of the <fo:inline font-style="italic">Java Extreme Programming
Cookbook</fo:inline> by Eric Burke and Brian Coyner
(O'Reilly) are great introductions to unit testing
tools and concepts. Read this book for an introduction to JUnit,
HttpUnit, mock objects, and the idea of unit testing. Think of
<fo:inline font-family="monospace" font-size="0.8em">Validate</fo:inline> as a runtime test for a method; the
methods on <fo:inline font-family="monospace" font-size="0.8em">Validate</fo:inline> are analogous to the
<fo:inline font-family="monospace" font-size="0.8em">assert( )</fo:inline> methods in JUnit's
<fo:inline font-family="monospace" font-size="0.8em">TestCase</fo:inline> class.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you are interested in measuring code coverage of unit tests, take
some time to look at Clover from Cortex eBusiness. Cortex eBusiness
offers a free license to Open Source projects, but if you are using
the product in a commercial environment, it is around $250. More
information about Clover is available at <fo:inline font-family="monospace" font-size="0.8em">http://www.thecortex.net/clover/</fo:inline>. Other than
Clover, there is another tool named JCoverage, which can also be used
to measure test coverage. More information about JCoverage is
available at <fo:inline font-family="monospace" font-size="0.8em">http://www.jcoverage.com/</fo:inline>. For more
information <fo:wrapper id="jakartackbk-CHP-1-ITERM-1929"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1930"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1931"><!----></fo:wrapper>about JUnit, go to <fo:inline font-family="monospace" font-size="0.8em">http://www.junit.org/</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-19"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Measuring Time</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.19. Measuring Time</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-19.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.19.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to determine how much<fo:wrapper id="jakartackbk-CHP-1-ITERM-1932"><!--measuring, time--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1933"><!--time,
measuring--></fo:wrapper> time has elapsed during the execution
of a block of code.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-19.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.19.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use
<fo:inline font-family="monospace" font-size="0.8em">StopWatch</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1934"><!--StopWatch--></fo:wrapper>
to measure the time it takes to execute a section of code. <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-20" text-decoration="underline" color="blue">Example 1-20</fo:basic-link> demonstrates the use of this class to measure
the time it takes to perform simple arithmetic operations.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-EX-20"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 1-20. Using StopWatch to measure time</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e4834">import org.apache.commons.lang.time.StopWatch;

StopWatch clock = new StopWatch( );
        
System.out.println("Time to Math.sin(0.34) ten million times?" );
clock.start( );
for( int i = 0; i &lt; 100000000; i++ ) {
    Math.sin( 0.34 );
}
clock.stop( );
System.out.println( "It takes " + clock.getTime( ) + " milliseconds" );

clock.reset( );
System.out.println( "How long to multiply 2 doubles one billion times?" );

clock.start( );
for( int i = 0; i &lt; 1000000000; i++) {
    double result = 3423.2234 * 23e-4;
}
clock.stop( );
System.out.println( "It takes " + clock.getTime( ) + " milliseconds." );</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example measures execution time with
<fo:inline font-family="monospace" font-size="0.8em">StopWatch</fo:inline> and produces the following output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt47">Time to Math.sin(0.34) ten million times?
It takes 6865 milliseconds

How long to multiply 2 doubles one billion times?
It takes 1992 milliseconds.</fo:block></fo:block><fo:block id="jakartackbk-CHP-1-SECT-19.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">1.19.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">StopWatch</fo:inline> performs the same functions as a
physical stop watch; you can start, stop, pause, resume, reset, and
split the clock. The name of this utility conveys unmistakable
meaning: starting, stopping, pausing, and resuming a clock are
methods that need no explanation, and resetting an instance of
<fo:inline font-family="monospace" font-size="0.8em">StopWatch</fo:inline> simply resets the elapsed time to zero.
When a <fo:inline font-family="monospace" font-size="0.8em">StopWatch</fo:inline> is
"split" the clock continues to
tick, but every call to <fo:inline font-family="monospace" font-size="0.8em">StopWatch.getTime()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1935"><!--StopWatch.getTime( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1936"><!--methods, StopWatch.getTime(
)--></fo:wrapper> will return the time at which
<fo:inline font-family="monospace" font-size="0.8em">split( )</fo:inline> was invoked. This is analogous to the
"lap" button on a real stop watch;
the <fo:inline font-family="monospace" font-size="0.8em">StopWatch.split( )</fo:inline> causes
<fo:inline font-family="monospace" font-size="0.8em">StopWatch.getTime( )</fo:inline> to return
"lap time." When a runner completes
a lap, you can "freeze" the lap
time while the clock continues to count seconds. Once you split a
<fo:inline font-family="monospace" font-size="0.8em">StopWatch</fo:inline>, you will need to invoke the
<fo:inline font-family="monospace" font-size="0.8em">StopWatch.unsplit(
)</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1937"><!--StopWatch.unsplit( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1938"><!--methods, StopWatch.unsplit(
)--></fo:wrapper> method to measure the total time elapsed
since the clock was started.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-1-EX-21" text-decoration="underline" color="blue">Example 1-21</fo:basic-link> demonstrates the <fo:inline font-family="monospace" font-size="0.8em">split()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1939"><!--split( ) method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1940"><!--methods, split(
)--></fo:wrapper> method on <fo:inline font-family="monospace" font-size="0.8em">StopWatch</fo:inline>. The
clock continues to tick for three seconds, and after one second the
<fo:inline font-family="monospace" font-size="0.8em">StopWatch</fo:inline> is split. Calling <fo:inline font-family="monospace" font-size="0.8em">getTime()</fo:inline> between the split and unsplit times will return one
second. After three seconds, the <fo:inline font-family="monospace" font-size="0.8em">unsplit( )</fo:inline> method
is invoked, and calling <fo:inline font-family="monospace" font-size="0.8em">getTime(
)</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1941"><!--getTime( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1942"><!--methods, getTime(
)--></fo:wrapper> returns three seconds. <fo:basic-link internal-destination="jakartackbk-CHP-1-FIG-1" text-decoration="underline" color="blue">Figure 1-1</fo:basic-link> shows a timeline for this example.</fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-FIG-1"><fo:block id="I_1_tt48"><fo:external-graphic src="/Users/tobrien/Library/Code/common-java-cookbook/content/target/classes/docbook/figs/print/jccb_0101.pdf" width="182px" height="53px" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:application/pdf"/></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-previous.within-column="always">Figure 1-1. Timeline of StopWatch.split( ) and unsplit( )</fo:block></fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-1-EX-21"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 1-21. Using the StopWatch.split( ) and StopWatch.unsplit( ) methods</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e4952">import org.apache.commons.lang.time.StopWatch;

System.out.println( "Testing the split( ) method." );

clock.reset( );
clock.start( );
try { Thread.sleep(1000); } catch( Exception e ) {}

clock.split( );
System.out.println( "Split Time after 1 sec: " + clock.getTime( ) );

try { Thread.sleep(1000); } catch( Exception e ) {}
System.out.println( "Split Time after 2 sec: " + clock.getTime( ) );

clock.unsplit( );
try { Thread.sleep(1000); } catch( Exception e ) {}
System.out.println( "Time after 3 sec: " + clock.getTime( ) );</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example produces the following output, which shows that a split
at one second resulted in 1001 being returned by the
<fo:inline font-family="monospace" font-size="0.8em">StopWatch</fo:inline> after two seconds:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_1_tt49">Split Time after 1 sec: 1001
Split Time after 2 sec: 1001
Time after 3 sec: 3004</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The same requirements are easily fulfilled without the use of the
<fo:inline font-family="monospace" font-size="0.8em">StopWatch</fo:inline> class. A program can measure time by
calling <fo:inline font-family="monospace" font-size="0.8em">System.currentTimeMillis( )</fo:inline> and
subtracting the time after a section of code from a time measured
before that same section of code; this yields the number of
milliseconds elapsed. But the real benefit of using this little
Commons Lang utility is to the readability and maintainability of a
system. Writing good code is similar to writing a well-written essay,
and <fo:inline font-family="monospace" font-size="0.8em">StopWatch</fo:inline> is a clear and concise noun that
conveys direct meaning; it is a tangible analogy to a familiar
object. In the previous example, the execution time of a block of
code was obtained without adding clutter. Statements like
<fo:inline font-family="monospace" font-size="0.8em">clock.start( )</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">clock.stop()</fo:inline> are more apparent than <fo:inline font-family="monospace" font-size="0.8em">long time1 =
System.currentTimeMillis(
)</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1943"><!--System.currentTimeMillis( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1944"><!--methods, System.currentTimeMillis(
)--></fo:wrapper> and <fo:inline font-family="monospace" font-size="0.8em">long time2</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">= System.currentTimeMillis( )</fo:inline>. And, for the same
reasons, <fo:inline font-family="monospace" font-size="0.8em">clock.getTime()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1945"><!--clock.getTime( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1946"><!--methods, clockgetTime(
)--></fo:wrapper> conveys a stronger message <fo:wrapper id="jakartackbk-CHP-1-ITERM-1947"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-1-ITERM-1948"><!----></fo:wrapper>than
<fo:inline font-family="monospace" font-size="0.8em">long timeElapsed = time2</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">-
time1</fo:inline>.</fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="false" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>Manipulating Text</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>Manipulating Text</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"/></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif" margin-left="0pc"/></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block id="jakartackbk-CHP-2"><fo:block font-family="serif"><fo:block margin-left="0pc"><fo:block text-align="left" font-weight="bold" font-size="21.6pt"><fo:block keep-with-next.within-column="always" space-before.optimum="12pt" space-before.minimum="12pt * 0.8" space-before.maximum="12pt * 1.2" hyphenate="false" text-align="left" start-indent="0pc" word-spacing="-0.1em" letter-spacing="-0.05em" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 2. Manipulating Text</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="ch02-2-fm2xml"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Introduction</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.1. Introduction</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Parsing text fell out of fashion when Extensible Markup Language
(XML) came to town. Java's text manipulation
capabilities have only recently received some badly overdue
attention, with the addition of regular expressions and numerous
improvements in Java 1.5. Despite the improvements, using Java
to<fo:wrapper id="jakartackbk-CHP-2-ITERM-1949"><!--plain text--></fo:wrapper> manipulate
<fo:wrapper id="jakartackbk-CHP-2-ITERM-1950"><!--plain text--></fo:wrapper>plain text can
inspire frustration. Hand a developer a fixed-length text file format
to parse, and you will hear the groans—"Why
can't we use something
`modern' like XML? I
don't want to parse text." And
while parsing and manipulating text may not build you a sexy resume,
there is still a need to work with text in any program. For every
snazzy XML file format, there is a widely accepted text file format
with fixed-length fields; and for every XML web service, a vendor
sends a proprietary feed that must be parsed character by character.
Text manipulation is a must, but the Java 2 Standard Edition (J2SE)
leaves developers wanting for more convenient ways to slice, dice,
chomp, and manipulate text. This chapter introduces some simple
utilities, which fill a few of Java's many gaps.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The recipes in this chapter deal with a collection of static methods
on two classes in Jakarta Commons
Lang—<fo:inline font-family="monospace" font-size="0.8em">StringUtils</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">WordUtils</fo:inline>. Some of the methods on
<fo:inline font-family="monospace" font-size="0.8em">StringUtils</fo:inline> have been made obsolete by changes
introduced in Java 1.4 and Java 1.5, but, regardless, there are times
when you will want to split a string without regular expressions.
Using <fo:inline font-family="monospace" font-size="0.8em">StringUtils.chomp( )</fo:inline> achieves more readable
logic than writing the equivalent logic using the
<fo:inline font-family="monospace" font-size="0.8em">String.indexOf( )</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">String.substring()</fo:inline> methods. These recipes will not change the basic
architecture of a system with new, groundbreaking technology, but
they are valuable "shortcuts" whose
benefits will add up over time. Simple solutions to common tasks will
save minutes of coding and hours of maintenance in the long run. Over
time, many grow so accustomed to the efficiencies gained with Commons
Lang, they consider it an indispensable supplement to the Java
language.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Read the recipes in this chapter, and take some time to read the
Javadoc for <fo:inline font-family="monospace" font-size="0.8em">StringUtils</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">WordUtils</fo:inline>. These utility classes provide some
common string operations missing in Java, and they are simple and
well-documented. These utilities are so simple that, throughout this
chapter, you will notice recipes without a Discussion or See Also
section—it's just not needed! These simple
recipes have relevance to all skill levels; even if you are an
experienced developer, you may be surprised at what Commons Lang
string manipulation has to offer.</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Setting Up StringUtils and WordUtils</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.1. Setting Up StringUtils and WordUtils</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-1.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.1.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You want the ability to use
<fo:inline font-family="monospace" font-size="0.8em">StringUtils</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1951"><!--StringUtils
class, configuration--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1952"><!--classes, StringUtils--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1953"><!--WordUtils
class, configuration--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1954"><!--classes, WordUtils--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1955"><!--configuration, WordUtils
class--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1956"><!--configuration, StringUtils
class--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1957"><!--text, WordUtils
class--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1958"><!--text, StringUtils
class--></fo:wrapper> and <fo:inline font-family="monospace" font-size="0.8em">WordUtils</fo:inline> to
manipulate text.</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-1.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.1.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">To download the latest version of Commons Lang, refer to the steps
outlined in <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1" text-decoration="underline" color="blue">Recipe 1.1</fo:basic-link>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-1.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.1.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This chapter focuses on a very small subset of the Commons Lang
project—<fo:inline font-family="monospace" font-size="0.8em">StringUtils</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">WordUtils</fo:inline>. To use either
<fo:inline font-family="monospace" font-size="0.8em">StringUtils</fo:inline> or <fo:inline font-family="monospace" font-size="0.8em">WordUtils</fo:inline> in a
Java class, add the following lines to your import statements:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt50">import org.apache.commons.lang.StringUtils;
import org.apache.commons.lang.WordUtils;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Recipes that use <fo:inline font-family="monospace" font-size="0.8em">StringUtils</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">WordUtils</fo:inline> in this chapter will omit these import
statements in code fragments. When <fo:inline font-family="monospace" font-size="0.8em">StringUtils</fo:inline> or
<fo:inline font-family="monospace" font-size="0.8em">WordUtils</fo:inline> appears in an example, assume that it
has already been imported.</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-1.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.1.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you have questions about these utilities, join the Jakarta Commons
User mailing list; see <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-2" text-decoration="underline" color="blue">Recipe 1.2</fo:basic-link>. To
download the source for Commons Lang, see <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-3" text-decoration="underline" color="blue">Recipe 1.3</fo:basic-link>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Checking for an Empty String</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.2. Checking for an Empty String</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-2.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.2.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to test for an empty or<fo:wrapper id="jakartackbk-CHP-2-ITERM-1959"><!--text, StringUtils
class, testing empty
strings--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1960"><!--StringUtils
class, text, testing empty
strings--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1961"><!--testing, empty
strings--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1962"><!--empty strings,
testing--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1963"><!--strings, empty,
testing--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1964"><!--null strings,
testing--></fo:wrapper> 
               <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> string.</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-2.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.2.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">StringUtils.isBlank()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1965"><!--StringUtils.isBlank( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1966"><!--methods, StringUtils.isBlank(
)--></fo:wrapper>. This method will return true if it is
supplied with an empty, zero length, or whitespace-only string. This
method gracefully handles a <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> input by
returning true. The following example demonstrates <fo:inline font-family="monospace" font-size="0.8em">isBlank(
)</fo:inline> with four strings:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt51">String test = "";
String test2 = "\n\n\t";
String test3 = null;
String test4 = "Test";

System.out.println( "test blank? " + StringUtils.isBlank( test ) );
System.out.println( "test2 blank? " + StringUtils.isBlank( test2 ) );
System.out.println( "test3 blank? " + StringUtils.isBlank( test3 ) );
System.out.println( "test4 blank? " + StringUtils.isBlank( test4 ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">All four strings are tested, and the following output is produced:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt52">test blank? true
test2 blank? true
test3 blank? true
test4 blank? false</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-2.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.2.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Checking for nonblank strings is just as easy;
<fo:inline font-family="monospace" font-size="0.8em">StringUtils.isNotBlank( )</fo:inline> will return the
compliment of <fo:inline font-family="monospace" font-size="0.8em">isBlank( )</fo:inline>. If a string is empty,
contains only whitespace, or is <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>, the
<fo:inline font-family="monospace" font-size="0.8em">StringUtils.isNotBlank( )</fo:inline> method will return
false. This method comes in handy when a process expects a certain
string to have content, and it gracefully handles a
<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> input by returning false:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt53">String test = "\t\t";
String test2 = "Test";

System.out.println( "test is not blank? " + StringUtils.isNotBlank( test ) );
System.out.println( "test2 is not blank? " + StringUtils.isNotBlank( test2 ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This produces the following output, which shows that a string
containing only whitespace is considered blank:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt54">test is not blank? false
test2 is not blank? true</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Another method to test for an empty string is to
"trim" a string to
<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> if it contains only whitespace, and then test
to see if the trimmed result is <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>. Use
<fo:inline font-family="monospace" font-size="0.8em">StringUtils.trimToNull( )</fo:inline> to transform empty
strings to <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>. This method handles a
<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> parameter value by returning
<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>.</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt55">String test1 = "\t";
String test2 = "Test";
String test3 = null;

System.out.println( "test1 trimToNull: " + StringUtils.trimToNull( test1 ) );
System.out.println( "test2 trimToNull: " + StringUtils.trimToNull( test2 ) );
System.out.println( "test3 trimToNull: " + StringUtils.trimToNull( test3 ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This produces the following output, which shows that a string
containing only whitespace is trimmed to <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt56">test1 trimToNull: null
test2 trimToNull: Test
test3 trimToNull: null</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">These three methods are laughably simple, but they will serve to
reduce the amount of complexity in a system that needs to test
strings. Use the methods from this recipe to avoid writing code to
test for a <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>, and check the length of a string:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt57">if( variable != null &amp;&amp; 
    variable.length( ) &gt; 0 &amp;&amp; 
    !variable.trim( ).equals("") ) {
        // Do something
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The code above can be rewritten with one call to
<fo:inline font-family="monospace" font-size="0.8em">StringUtils.isNotBlank( )</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt58">if( StringUtils.isNotBlank( variable ) ) {
    // Do something
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">It is good practice to avoid using <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> whenever
possible; code that uses <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> to signify emptiness
or an error condition is harder to maintain and more likely to throw
a nasty <fo:inline font-family="monospace" font-size="0.8em">NullPointerException</fo:inline>. Worse yet are
methods that return a <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> whenever a problem
occurs or an exception is thrown. While <fo:inline font-family="monospace" font-size="0.8em">trimToNull()</fo:inline> can accomplish the goal, it does increase the occurrence
of <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>s in code; <fo:wrapper id="jakartackbk-CHP-2-ITERM-1967"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1968"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1969"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1970"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1971"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1972"><!----></fo:wrapper>use <fo:inline font-family="monospace" font-size="0.8em">isBlank( )</fo:inline>
and <fo:inline font-family="monospace" font-size="0.8em">isNotBlank( )</fo:inline> to excise dangerous
<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>s from your code.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Abbreviating Strings</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.3. Abbreviating Strings</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-3.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.3.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You want to abbreviate a string.</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-3.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.3.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">StringUtils.abbreviate()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1973"><!--StringUtils.abbreviate( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1974"><!--methods, StringUtils.abbreviate(
)--></fo:wrapper>.
Supply<fo:wrapper id="jakartackbk-CHP-2-ITERM-1975"><!--text, StringUtils
class, abbreviating
strings--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1976"><!--StringUtils
class, text, abbreviating
strings--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1977"><!--abbreviating
strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1978"><!--strings, abbreviating--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1979"><!--characters, abbreviating--></fo:wrapper>
the string to abbreviate, and the maximum allowed length for the
abbreviation. The following example will abbreviate the supplied text
messages to 10 characters:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt59">String test = "This is a test of the abbreviation."
String test2 = "Test"

System.out.println( StringUtils.abbreviate( test, 10 ) );
System.out.println( StringUtils.abbreviate( test2, 10 ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Here is the output of two string abbreviations:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt60">This is...
Test</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-3.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.3.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">StringUtils.abbreviate( )</fo:inline> takes a string and
abbreviates it, if necessary. When abbreviating to 20 characters, if
the text is less than 20 characters, the method simply returns the
original text. If the text is greater than 20 characters, the method
displays 17 characters followed by three ellipses. Abbreviating a
piece of text to 20 characters guarantees that the text will occupy
20 characters or less:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt61">String message = "Who do you think you are?";
String abbrev = StringUtils.abbreviate( message, 20 );
String message2 = "Testing";
String abbrev2 = StringUtils.abbreviate( message, 40 );
System.out.println( "Subject: " + message );
System.out.println( "Subject2: " + messages2);</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This simple example abbreviates the first message variable,
<fo:inline font-family="monospace" font-size="0.8em">message</fo:inline>, to "Who do you
think...?" The second message variable,
<fo:inline font-family="monospace" font-size="0.8em">message2</fo:inline>, is not affected by the abbreviation
because it is less than 40 characters long;
<fo:inline font-family="monospace" font-size="0.8em">abbrev2</fo:inline> will equal the contents of
<fo:inline font-family="monospace" font-size="0.8em">message2</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">StringUtils.abbreviate( )</fo:inline> can also abbreviate text
at an offset within a string. If you are writing an application that
searches for a given word and prints that word out in context, you
can use the <fo:inline font-family="monospace" font-size="0.8em">StringUtils.abbreviate( )</fo:inline> method to
print the context in which a word appears:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt62">String message = "There was a palpable sense that the rest of the world " +
                 "might, one day, cease to exist. In the midst of the " +
                 "confusion - the absence of firm ground - something would " +
                 "fail to recover. The whole city is still, in a way, " +
                 "holding it's breath, hoping the the worst has come and " +
                 "gone.";
int index = message.indexOf( "ground" );
int offset = index - 20;
int width = 20 + message.length( );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">String context = StringUtils.abbreviate(message, offset, width); </fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">System.out.println( "The word 'ground' in context: " + context );</fo:inline>
            </fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The output of this example is:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt63">The word 'ground' in context: ... absence of firm ground, something would...</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This code attempts to locate
"ground." Once the index of the
word has been located, an offset abbreviation is used to show the
context of the word. The <fo:inline font-family="monospace" font-size="0.8em">offset</fo:inline> parameter tells
<fo:inline font-family="monospace" font-size="0.8em">StringUtils.abbreviate( )</fo:inline> to start at a specific
index in the string. Once the index of
"ground" has been found, an offset
and a width are computed to print 20 characters before and after the
word "ground."</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If an offset is less than four, output will start from the beginning
of a string. If the offset is greater than four, the first three
characters will be ellipses.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-CHP-2-NOTE-51"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/warning.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Warning</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If a width less than four is specified, <fo:inline font-family="monospace" font-size="0.8em">abbreviate()</fo:inline> will throw an
<fo:inline font-family="monospace" font-size="0.8em">IllegalArgumentException</fo:inline>. A width less than four
does not give the <fo:inline font-family="monospace" font-size="0.8em">abbreviate( )</fo:inline> method enough room
to print ellipses and content.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Splitting a String</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.4. Splitting a String</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-4.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.4.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You want to split a string on
a<fo:wrapper id="jakartackbk-CHP-2-ITERM-1980"><!--text, StringUtils
class, splitting strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1981"><!--StringUtils
class, text, splitting
strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1982"><!--splitting, strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1983"><!--strings, splitting--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1984"><!--characters, splitting--></fo:wrapper>
number of different character delimiters.</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-4.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.4.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">StringUtils.split()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1985"><!--StringUtils.split( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1986"><!--methods, StringUtils.split(
)--></fo:wrapper>, and supply a series of characters to split
upon. The following example demonstrates splitting strings of a comma
and a space:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt64">import org.apache.commons.lang.ArrayUtils;

String input = "Frantically oblong";
String input2 = "Pharmacy, basketball,funky";
 
String[] array1 = StringUtils.split( input, " ,", 2 );
String[] array2 = StringUtils.split( input2, " ,", 2 );

System.out.println( ArrayUtils.toString( array1 ) );
System.out.println( ArrayUtils.toString( array2 ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This produces the output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt65">{ "Frantically", "oblong" }
{ "Pharmacy", "basketball" }</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-4.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.4.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">StringUtils.split( )</fo:inline> function does not return
empty strings for adjacent delimiters. A number of different
delimiters can be specified by passing in a string with a space and a
comma. This last example limited the number of tokens returned by
split with a third parameter to <fo:inline font-family="monospace" font-size="0.8em">StringUtils.split()</fo:inline>. The <fo:inline font-family="monospace" font-size="0.8em">input2</fo:inline> variable contains three
possible tokens, but the split function only returns an array of two
elements.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The most recent version of J2SE 1.4 has a <fo:inline font-family="monospace" font-size="0.8em">String.split()</fo:inline> method, but the lack of <fo:inline font-family="monospace" font-size="0.8em">split( )</fo:inline> in
previous versions was an annoyance. To split a string in the old
days, one had to instantiate a <fo:inline font-family="monospace" font-size="0.8em">StringTokenizer</fo:inline>,
and iterate through an <fo:inline font-family="monospace" font-size="0.8em">Enumeration</fo:inline> to get the
components of a delimited string. Anyone who has programmed in Perl
and then had to use the <fo:inline font-family="monospace" font-size="0.8em">StringTokenizer</fo:inline> class will
tell you that programming without <fo:inline font-family="monospace" font-size="0.8em">split( )</fo:inline> is time
consuming and frustrating. If you are stuck with an older Java
Development Kit (JDK), <fo:inline font-family="monospace" font-size="0.8em">StringUtils</fo:inline> adds a split
function that returns an <fo:inline font-family="monospace" font-size="0.8em">Object</fo:inline> array. Keep this
in mind when you question the need for <fo:inline font-family="monospace" font-size="0.8em">StringUtils.split()</fo:inline>; there are still applications and platforms that do not
have a stable 1.4 virtual machine.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The J2SE 1.4 <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> class has a <fo:inline font-family="monospace" font-size="0.8em">split()</fo:inline> method, but it takes a regular expression. Regular
expressions are exceedingly powerful tools, but, for some tasks,
regular expressions are needlessly complex. One regular expression to
match either a space character or a comma character is <fo:inline font-family="monospace" font-size="0.8em">['
'',']</fo:inline>. I'm sure there are a thousand other
ways to match a space or a comma in a regular expression, but, in
this example, you simply want to split a string on one of two
characters:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt66">String test = "One, Two Three, Four Five";
String[] tokens = test.split( "[' '',']" );

System.out.println( ArrayUtils.toString( tokens );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example prints out the tokens array:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt67">{ "One", "", "Two", "Three", "", "Four", "Five" }</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The array the previous example returns has blanks; the
<fo:inline font-family="monospace" font-size="0.8em">String.split( )</fo:inline> method returns empty strings for
adjacent delimiters. This example also uses a rather ugly regular
expression involving brackets and single quotes.
Don't get me wrong, regular expressions are a
welcome addition in Java 1.4, but the same requirements can be
satisfied using <fo:inline font-family="monospace" font-size="0.8em">StringUtils.split(" .")</fo:inline>—a
simpler way to split a piece of text.</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-4.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.4.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Note the use of <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toString( )</fo:inline> in the
solution section. See <fo:basic-link internal-destination="jakartackbk-CHP-1" text-decoration="underline" color="blue">Chapter 1</fo:basic-link> for more
information about <fo:inline font-family="monospace" font-size="0.8em">ArrayUtils</fo:inline> in Commons Lang.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-5"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Finding Nested Strings</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.5. Finding Nested Strings</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-5.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.5.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You want to locate strings nested
<fo:wrapper id="jakartackbk-CHP-2-ITERM-1987"><!--text, StringUtils
class, searching nested
strings--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1988"><!--StringUtils
class, text, searching nested
strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1989"><!--searching, strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1990"><!--strings, searching--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1991"><!--nested strings,
searching--></fo:wrapper>within other strings.</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-5.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.5.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">StringUtils.substringBetween( )</fo:inline>. This method
will return a string surrounded by two strings, which are supplied as
parameters. The following example demonstrates the use of this method
to extract content from HTML:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt68">String htmlContent = "&lt;html&gt;\n" +
                     "  &lt;head&gt;\n" +
                     "    &lt;title&gt;Test Page&lt;/title&gt;\n" +
                     "  &lt;/head&gt;\n" +
                     "  &lt;body&gt;\n" +
                     "    &lt;p&gt;This is a TEST!&lt;/p&gt;\n" +
                     "  &lt;/body&gt;\n" +
                     "&lt;/html&gt;";

// Extract the title from this XHTML content 
<fo:inline font-weight="bold">String title = StringUtils.substringBetween(htmlContent, "&lt;title&gt;", 
"&lt;/title&gt;");</fo:inline>

System.out.println( "Title: " + title );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This code extracts the title from this HTML document and prints the
following:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt69">Title: Test Page</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-5.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.5.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In the Solution section, the <fo:inline font-family="monospace" font-size="0.8em">substringBetween()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1992"><!--substringBetween( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1993"><!--methods, substringBetween(
)--></fo:wrapper> method returns the first string between the
<fo:inline font-family="monospace" font-size="0.8em">open</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">close</fo:inline>
strings—the title of an HTML document. The previous example
only contained one nested element, but what happens when a string
contains multiple elements nested in the same two strings? In the
following example, three variables are extracted from a string using
<fo:inline font-family="monospace" font-size="0.8em">substringBetween( )</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt70">String variables = "{45}, {35}, {120}" ;
List numbers = new ArrayList( );

String variablesTemp = variables;
while( StringUtils.substringBetween( variablesTemp, "{", "}" ) != null ) {
    String numberStr = StringUtils.substringBetween( variables, "{", "}" );
    Double number = new Double( numberStr );
    numbers.add( number );
    variablesTemp = variablesTemp.substring( variablesTemp.indexOf(",") );
}

double sum = StatUtil.sum( ArrayUtils.toPrimitive( numbers.toArray( ) ) );
System.out.println( "Variables: " + variables + ", Sum: " + sum );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The output of this example is:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt71">Variable: {45}, {35}, {120}, Sum: 200</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">After each number is extracted from the curly braces, the system
finds the index of the next comma and reduces the size of the string
to search for the next call to <fo:inline font-family="monospace" font-size="0.8em">StringUtils</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">StringUtils.substringBetween( )</fo:inline> can also find text
that is delimited by the same character:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt72">String message = "|TESTING| BOUNDARYExampleBOUNDARY";
String first = StringUtils.substringBetween( message, "|"); 
String second = StringUtils.substringBetween( message, "BOUNDARY");</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The first string would return
"TESTING" as it is between the
<fo:inline font-family="monospace" font-size="0.8em">|</fo:inline> characters, and the second string would contain
"Example."</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-6"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Stripping and Trimming a String</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.6. Stripping and Trimming a String</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-6.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.6.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to strip or trim a
string<fo:wrapper id="jakartackbk-CHP-2-ITERM-1994"><!--text, StringUtils
class, stripping strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1995"><!--StringUtils
class, text, stripping
strings--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1996"><!--stripping
strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1997"><!--strings, stripping--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1998"><!--whitespace, stripping--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-1999"><!--characters, stripping--></fo:wrapper>
of extraneous
<fo:wrapper id="jakartackbk-CHP-2-ITERM-2000"><!--text, StringUtils
class, trimming strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2001"><!--StringUtils
class, text, trimming
strings--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2002"><!--trimming
strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2003"><!--strings, trimming--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2004"><!--whitespace, trimming--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2005"><!--characters, trimming--></fo:wrapper>whitespace,
control characters, or other specified characters.</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-6.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.6.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">StringUtils.trim()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2006"><!--StringUtils.trim( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2007"><!--methods, StringUtils.trim(
)--></fo:wrapper> takes a string and removes every whitespace
and control character from the beginning and the end:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt73">String test1 = " \a\r Testing 1 2 3 ";
String test2 = " \r\n ";
 
String trimTest1 = StringUtils.trim( test1 );
String trimTest2 = StringUtils.trimToNull( test2 );

System.out.println( trimTest1 );
System.our.println( trimTest2 );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This code produces the following result. The <fo:inline font-family="monospace" font-size="0.8em">test1</fo:inline>
variable is trimmed of leading and trailing whitespace, and the
<fo:inline font-family="monospace" font-size="0.8em">test2</fo:inline> variable is trimmed to
<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt74">Testing 1 2 3
null</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-6.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.6.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A <fo:inline font-family="monospace" font-size="0.8em">control character</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2008"><!--control
characters--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2009"><!--characters, control--></fo:wrapper>
is defined as all characters below 32 on the ASCII
table—everything from <fo:inline font-family="monospace" font-size="0.8em">0</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">(NUL)</fo:inline> to <fo:inline font-family="monospace" font-size="0.8em">31</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">(unit</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">separator)</fo:inline>.
<fo:inline font-family="monospace" font-size="0.8em">StringUtils.trim( )</fo:inline> delegates to the
<fo:inline font-family="monospace" font-size="0.8em">trim( )</fo:inline> function on <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> and
gracefully handles <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>. When you pass a
<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> to <fo:inline font-family="monospace" font-size="0.8em">StringUtils.trim( )</fo:inline>, it
returns a <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>.</fo:block><fo:block id="jakartackbk-CHP-2-SECT-6.3.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:block font-size="12pt" space-before.optimum="0.4em" space-before.minimum="0.4em" space-before.maximum="0.4em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.6.3.1. Stripping a string</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If a string contains leading and trailing characters to be removed,
you can remove them with <fo:inline font-family="monospace" font-size="0.8em">StringUtils.strip( )</fo:inline>. The
<fo:inline font-family="monospace" font-size="0.8em">strip( )</fo:inline> method differs from <fo:inline font-family="monospace" font-size="0.8em">trim(
)</fo:inline> in that you can specify a set of characters to strip from
the beginning and end of a string. In this example, dashes and
asterisks are stripped from the start and end of a string:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt75">String original = "-------***---SHAZAM!---***-------";
String stripped = StringUtils.strip( original, "-*" );

System.out.println( "Stripped: " + stripped )</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This produces the following output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt76">Stripped: SHAZAM!</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-6.3.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:block font-size="12pt" space-before.optimum="0.4em" space-before.minimum="0.4em" space-before.maximum="0.4em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.6.3.2. Trimming to null</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">trimToNull( )</fo:inline>
                  <fo:wrapper id="jakartackbk-CHP-2-ITERM-2010"><!--trimToNull( )
method--></fo:wrapper>
                  <fo:wrapper id="jakartackbk-CHP-2-ITERM-2011"><!--methods, trimToNull(
)--></fo:wrapper>
                  <fo:wrapper id="jakartackbk-CHP-2-ITERM-2012"><!--nulls, trimming
to--></fo:wrapper> to test if a given parameter is present.
Take the following servlet code as an example:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt77">public void doGet(HttpServletRequest request, HttpServletResponse response)
    throws IOException, ServletException {

    String companyName = 
        StringUtils.trimToNull( request.getParameter("companyName") );
    if( companyName != null ) {
        response.getWriter( ).write( "You supplied a company name!" );
    }
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Using <fo:inline font-family="monospace" font-size="0.8em">StringUtils</fo:inline> reduces code complexity
incrementally—four or five lines of code at a time. Testing for
the absence or emptiness of a string usually entails checking to see
if a string is empty or of zero length, and because a string could be
<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>, you always need to check for
<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> to avoid throwing a
<fo:inline font-family="monospace" font-size="0.8em">NullPointerException</fo:inline>. In this last example, empty
has the same meaning as <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>—the
<fo:inline font-family="monospace" font-size="0.8em">StringUtils.trimToNull( )</fo:inline> method takes a string as
a parameter, and if it is <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> or empty, the
method returns a <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>.</fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-7"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Chomping a String</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.7. Chomping a String</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-7.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.7.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to remove
a<fo:wrapper id="jakartackbk-CHP-2-ITERM-2013"><!--text, StringUtils
class, chomping strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2014"><!--StringUtils
class, text, chomping
strings--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2015"><!--chomping
strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2016"><!--strings, chomping--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2017"><!--deleting, newlines--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2018"><!--newlines, deleting--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2019"><!--carriage returns, deleting--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2020"><!--deleting, carriage
returns--></fo:wrapper> trailing <fo:wrapper id="jakartackbk-CHP-2-ITERM-2021"><!--trailing
newlines, deleting--></fo:wrapper>newline or carriage return
from a string.</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-7.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.7.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use<fo:wrapper id="jakartackbk-CHP-2-ITERM-2022"><!--StringUtils.chomp( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2023"><!--methods, StringUtils.chomp(
)--></fo:wrapper> 
               <fo:inline font-family="monospace" font-size="0.8em">StringUtils.chomp( )</fo:inline> to
remove the last line termination sequence from a string:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt78">String input = "Hello\n";
String chomped = StringUtils.chomp( input );
// chomped equals "Hello"

String input2 = "Another test\r\n";
String chomped2 = StringUtils.chomp( input2 );
// chomped2 equals "Another test";</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-8"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Creating an Emphasized Header</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.8. Creating an Emphasized Header</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-8.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.8.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You would like to print an
<fo:wrapper id="jakartackbk-CHP-2-ITERM-2024"><!--text, StringUtils
class, printing headers--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2025"><!--StringUtils
class, text, printing
headers--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2026"><!--headers, printing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2027"><!--printing, headers--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2028"><!--emphasized headers,
creating--></fo:wrapper>attention-grabbing header.</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-8.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.8.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Combine the powers of <fo:inline font-family="monospace" font-size="0.8em">StringUtils.repeat()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2029"><!--StringUtils.repeat( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2030"><!--methods, StringUtils.repeat(
)--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2031"><!--StringUtils.center( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2032"><!--methods, StringUtils.center(
)--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2033"><!--StringUtils.join( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2034"><!--methods, StringUtils.join(
)--></fo:wrapper>, <fo:inline font-family="monospace" font-size="0.8em">StringUtils.center( )</fo:inline>,
and <fo:inline font-family="monospace" font-size="0.8em">StringUtils.join( )</fo:inline> to create a textual
header. The following example demonstrates the use of these three
methods to create a header:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt79">public String createHeader( String title ) {
    int width = 30;
    // Construct heading using StringUtils: repeat( ), center( ), and join( )
    String stars = StringUtils.repeat( "*", width);
    String centered = StringUtils.center( title, width, "*" );
    String heading = 
        StringUtils.join(new Object[]{stars, centered, stars}, "\n");
    return heading;
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Here's the output of
<fo:inline font-family="monospace" font-size="0.8em">createHeader("TEST")</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt80">******************************
************ TEST ************
******************************</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-8.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.8.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In the example, <fo:inline font-family="monospace" font-size="0.8em">StringUtils.repeat( )</fo:inline> creates the
top and bottom rows with <fo:inline font-family="monospace" font-size="0.8em">StringUtils.repeat("*",
30)</fo:inline>, creating a string with 30 consecutive
<fo:inline font-family="monospace" font-size="0.8em">*</fo:inline> characters. Calling
<fo:inline font-family="monospace" font-size="0.8em">StringUtils.center(title, width, "*")</fo:inline> creates a
middle line with the header title centered and surrounded by
<fo:inline font-family="monospace" font-size="0.8em">*</fo:inline> characters. <fo:inline font-family="monospace" font-size="0.8em">StringUtils.join()</fo:inline> joins the lines together with the newline characters, and
out pops a header.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-9"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Reversing a String</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.9. Reversing a String</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-9.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.9.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to
reverse<fo:wrapper id="jakartackbk-CHP-2-ITERM-2035"><!--text, StringUtils
class, reversing strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2036"><!--StringUtils
class, text, reversing
strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2037"><!--reversing, strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2038"><!--strings, reversing--></fo:wrapper>
a string.</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-9.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.9.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use<fo:wrapper id="jakartackbk-CHP-2-ITERM-2039"><!--StringUtils.reverse( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2040"><!--methods, StringUtils.reverse(
)--></fo:wrapper> 
               <fo:inline font-family="monospace" font-size="0.8em">StringUtils.reverse( )</fo:inline>.
Supply a string parameter to this method, and it will return a
reversed copy. The following example reverses two strings:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt81">String original = "In time, I grew tired of his babbling nonsense.";
String reverse = StringUtils.reverse( original );
String originalGenes = "AACGTCCCTTGGTTTCCCAAAGTTTCCCTTTGAAATATATGCCCGCG";
String reverseGenes = StringUtils.reverse( originalGenes );

System.out.println( "Original: " + original );
System.out.println( "Reverse: " + reverse );
System.out.println( "\n\nOriginal: " + originalGenes );
System.out.println( "Reverse: " + reverseGenes );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The output contains a reversed string along with an original string:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt82">Original: In time, I grew tired of his babbling nonsense.
Reverse: .esnesnon gnilbbab sih fo derit werg I ,emit nI

Original: AACGTCCCTTGGTTTCCCAAAGTTTCCCTTTGAAATATATGCCCGCG
Reverse: GCGCCCGTATATAAAGTTTCCCTTTGAAACCCTTTGGTTCCCTGCAA</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-9.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.9.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Reversing a <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> is easy, but how would you
rearrange the words in a sentence?
<fo:inline font-family="monospace" font-size="0.8em">StringUtils.reverseDelimited( )</fo:inline> can reverse a
string of tokens delimited by a character, and a sentence is nothing
more than a series of tokens separated by whitespace and punctuation.
To reverse a simple sentence, chop off the final punctuation mark,
and then reverse the order of words delimited by spaces. The
following example reverses an unrealistically simple English
sentence:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt83">public Sentence reverseSentence(String sentence) {
    String reversed = StringUtils.chomp( sentence, "." );
    reversed = StringUtils.reverseDelimited( reversed, ' ' );
    reversed = reversed + ".";
    return reversed;
} 

....

String sentence = "I am Susan."
String reversed = reverseSentence( sentence ) );
System.out.println( sentence );
System.out.println( reversed );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The sentence is reversed and printed alongside the original:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt84">I am Susan.
Susan am I.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Here, the order of the characters within each delimited token is
preserved. Notice that this example includes
<fo:inline font-family="monospace" font-size="0.8em">StringUtils.chomp( )</fo:inline> with two parameters, the last
specifying the character to chomp from the string. Instead of
chomping a newline, in this example, the period is chomped off of the
sentence before performing the delimited reversal.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-10"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Wrapping Words</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.10. Wrapping Words</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-10.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.10.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You want to wrap
<fo:wrapper id="jakartackbk-CHP-2-ITERM-2041"><!--text, wrapping--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2042"><!--WordUtils class, text,
wrapping--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2043"><!--wrapping, words--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2044"><!--words, wrapping--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2045"><!--lines, formatting--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2046"><!--formatting, lines--></fo:wrapper>lines
of text using different line widths and various line termination
sequences.</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-10.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.10.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">WordUtils</fo:inline> to wrap words. Supply the number of
columns and a line termination string, and
<fo:inline font-family="monospace" font-size="0.8em">WordUtils</fo:inline> will wrap text. The following example
wraps a small string to 20 columns:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt85">// Define original String
String message = "One Two Three Four Five";

// Wrap the text.
String wrappedString = 
    WordUtils.wrapText( message, 20, "\n", false );

System.out.println( "Wrapped Message:\n\n" + wrappedString );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This produces the following output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt86">Wrapped Message:

One Two Three Four 
Five</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-10.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.10.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">When <fo:inline font-family="monospace" font-size="0.8em">WordUtils</fo:inline> wraps a string, it takes a
user-supplied line termination sequence like <fo:inline font-family="monospace" font-size="0.8em">\n</fo:inline> or
<fo:inline font-family="monospace" font-size="0.8em">\r\n</fo:inline> and inserts this line termination sequence
after a specified number of characters, without splitting a word. In
the next example, if the user is using a hand-held device, the number
of columns in the display is 40, and a new line is represented by the
sequence <fo:inline font-family="monospace" font-size="0.8em">\r\n</fo:inline>. On a workstation, the number of
available columns is 80, and a new line is a single
<fo:inline font-family="monospace" font-size="0.8em">\n</fo:inline> character. The platform is available as the
System property <fo:inline font-family="monospace" font-size="0.8em">application.platform</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt87">String message = "Four score and seven years ago, our fathers " +
                 "brought forth upon this continent a new nation: " +
                 "conceived in liberty, and dedicated to the proposition " +
                 "that all men are created equal. ";

// Define variables to hold two parameters to word wrapping 
int cols; 
String lineSeparator = "";

// Retrieve the platform property from System 
String platform = System.getProperty("application.platform");
if( platform.equals( "Handheld" ) ) {
    cols = 40;
    lineSeparator = "\r\n";
} else if( platform.equals( "Workstation" ) {
    cols = 80;
    lineSeparator = "\n";
}

// Wrap the text.
String wrappedString = 
    WordUtils.wrapText( message, cols, lineSeparator, true );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Depending on the platform, the <fo:inline font-family="monospace" font-size="0.8em">wrappedString</fo:inline>
variable now holds the initial paragraph of the Gettysburg Address
wrapped to fit either a 40-column handheld device or an application
running on a workstation with an 80-column display.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">To wrap text for presentation on the Web, use the line termination
sequence <fo:inline font-family="monospace" font-size="0.8em">&lt;br/&gt;</fo:inline> to add an HMTL line break.
The following example wraps text with <fo:inline font-family="monospace" font-size="0.8em">&lt;br/&gt;</fo:inline>,
and introduces an option to prevent <fo:inline font-family="monospace" font-size="0.8em">WordUtils</fo:inline> from
wrapping larger words:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt88">String message = "Four score and seven years ago, our fathers " +
                 "brought forth upon this continent a new nation: conceived " +
                 "in liberty, and dedicated to the proposition that all men " +
                 "are created equal. <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">http://www.oreilly.com/Gettysburg</fo:inline> ";

// Wrap the text.
String wrappedString = WordUtils.wrap( message, 40, "&lt;br/&gt;", false );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In this example, the Gettysburg Address is formatted to fit into 40
columns in an HTML document. The final parameter to the
<fo:inline font-family="monospace" font-size="0.8em">WordUtils.wrap( )</fo:inline> method tells the wrapping
algorithm not to bother wrapping large words, such as the long URL at
the end of the text. Wrapping a long word would prevent people from
being able to copy this URL correctly.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-11"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Testing the Contents of a String</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.11. Testing the Contents of a String</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-11.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.11.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to make sure a
string<fo:wrapper id="jakartackbk-CHP-2-ITERM-2047"><!--text, StringUtils
class, testing strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2048"><!--StringUtils
class, text, testing
strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2049"><!--testing, strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2050"><!--strings, testing--></fo:wrapper>
contains only numbers, letters, or a combination of both.</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-11.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.11.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use the various <fo:inline font-family="monospace" font-size="0.8em">StringUtils</fo:inline> methods to validate
user input; <fo:inline font-family="monospace" font-size="0.8em">isNumeric(
)</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2051"><!--isNumeric( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2052"><!--methods, isNumeric(
)--></fo:wrapper>, <fo:inline font-family="monospace" font-size="0.8em">isAlpha()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2053"><!--isAlpha( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2054"><!--methods, isAlpha(
)--></fo:wrapper>, <fo:inline font-family="monospace" font-size="0.8em">isAlphanumeric()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2055"><!--isAlphanumeric( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2056"><!--methods, isAlphanumeric(
)--></fo:wrapper>, and <fo:inline font-family="monospace" font-size="0.8em">isAlphaSpace()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2057"><!--isAlphaSpace( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2058"><!--methods, isAlphaSpace(
)--></fo:wrapper> verify that a string does not contain any
undesired characters:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt89">String state = "Virginia"

System.our.println( "Is state number? " + 
                    StringUtils.isNumeric( state ) );
System.our.println( "Is state alpha? " + 
                    StringUtils.isAlpha( state ) );
System.our.println( "Is state alphanumeric? " + 
                    StringUtils.isAlphanumeric( state ) );
System.our.println( "Is state alphaspace? " + 
                    StringUtils.isAlphaspace( state ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This code tests the string
"Virginia" against four validation
methods, producing the following output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt90">Is state a number? false
Is state alpha? true
Is state alphanumeric? true
Is state alphaspace? true</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-11.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.11.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">StringUtils.isNumeric( )</fo:inline> returns true if the
string being tested contains only digits from 0 to 9. If you are
asking a user to input a numerical value, such as year or age, you
need to have a way to ensure that the input supplied is, in fact, a
numeric value:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt91">String test1 = "1976";
String test2 = "Mozart";

boolean t1val = StringUtils.isNumeric( test1 );
boolean t2val = StringUtils.isNumeric( test2 ); 

System.out.println( "Is " + test1 + " a number? " + t1val );
System.out.println( "Is " + test2 + " a number? " + t2val );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This code tests two strings and produces the following output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt92">Is 1976 a number? true
Is Mozart a number? false</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You can use the following code to see if a string contains only
letters or a combination of letters and numbers:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt93">String test1 = "ORANGE";
String test2 = "ICE9";
String test3 = "ICE CREAM";
String test4 = "820B Judson Avenue";

boolean t1val = StringUtils.isAlpha( test1 ); // returns true
boolean t2val = StringUtils.isAlphanumeric( test2 ); // returns true
boolean t3val = StringUtils.isAlphaSpace( test3 ); // returns true
boolean t4val = 
    StringUtils.isAlphanumericSpace( test4 ); // returns true</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">User supplied input can rarely be trusted. If you have asked the user
to supply an age, a year, or a day of the week, you will need to then
validate that input. Or, if you have asked the user to type in a
name, you will want to make sure that the supplied name contains only
letters and acceptable punctuation. An application with inadequate
input validation will frequently fail, and produce unsightly stack
traces caused by either <fo:inline font-family="monospace" font-size="0.8em">NumberFormatException</fo:inline>s or
<fo:inline font-family="monospace" font-size="0.8em">NullPointerException</fo:inline>s. An application should be
able to gracefully handle the most nonsensical input without missing
a beat, and prompt the user for a valid input. Tools such as Jakarta
Commons Validator provide a framework to validate the contents of a
JavaBean, but at a much lower level, the
<fo:inline font-family="monospace" font-size="0.8em">StringUtils</fo:inline> class in Commons Lang provides some
useful utilities for examining the contents of a string.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Input forms frequently need to validate a user's
name. In this case, it is important to remember that certain names
have apostrophes and dashes. If you are validating a name, always
make sure that you allow for names with punctuation. Here is an
example that validates a name with a dash, an apostrophe, and a
period:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt94">String name1 = "Tim O'Reilly";
String name2 = "Mr. Mason-Dixon!";

String punctuation = ".-'";
String name1Temp = StringUtils.replaceChars( name1, punctuation, "");
String name2Temp = StringUtils.replaceChars( name1, punctuation, "");

boolean t1val = StringUtils.isAlpha( name1Temp ); // returns true
boolean t2val = StringUtils.isAlpha( name2Temp ); // returns false</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">"Tim O'Reilly" is
a valid name, but you need to use the
<fo:inline font-family="monospace" font-size="0.8em">StringUtils.replaceChars( )</fo:inline> method to throw out
punctuation before you can pass both of the names to the
<fo:inline font-family="monospace" font-size="0.8em">StringUtils.isAlpha( )</fo:inline> method.
"Mr. Mason-Dixon!" is not a valid
name, because an exclamation point is not on the list of valid name
punctuation. As an Irishman, I encourage you to always check your
name validation with names like
"O'Toole" or
"O'Brien," and, as
the world continues to shrink, more exceptions to the rule, like
"Al-Sa'ud," will
become more prevalent; your system should not force someone to change
their name. Speaking from personal experience, it is insulting when a
web site or an application forces you to change your name, and it is
a quick way to alienate your customers. I cannot begin to tell you
how many web sites have shown me a nasty Open Database Connectivity
(ODBC) error page or stack trace after I've told
them my last name—it is frustrating.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-12"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Measuring the Frequency of a String</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.12. Measuring the Frequency of a String</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-12.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.12.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to find out how many times
a<fo:wrapper id="jakartackbk-CHP-2-ITERM-2059"><!--text, StringUtils
class, measuring string
frequency--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2060"><!--StringUtils
class, text, measuring string
frequency--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2061"><!--strings, measuring
frequency--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2062"><!--frequency,
measuring strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2063"><!--measuring, frequency of
strings--></fo:wrapper> certain word or piece of text occurs
in a string.</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-12.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.12.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">StringUtils.countMatches()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2064"><!--StringUtils.countMatches( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2065"><!--methods, StringUtils.countMatches(
)--></fo:wrapper> returns the frequency of a piece of text
within another string:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt95">File manuscriptFile = new File("manuscript.txt");
Reader reader = new FileReader( manuscriptFile );
StringWriter stringWriter = new StringWriter( );
while( reader.ready( ) ) { writer.write( reader.read( ) ); }
String manuscript = stringWriter.toString( );

// Convert string to lowercase
manuscript = StringUtils.lowerCase(manuscript);

// count the occurrences of "futility"
int numFutility = StringUtils.countMatches( manuscript, "futility" );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Converting the entire string to lowercase ensures that all
occurrences of the word "futility"
are counted, regardless of capitalization. This code executes and
<fo:inline font-family="monospace" font-size="0.8em">numFutility</fo:inline> will contain the number of occurrences
of the word "futility."</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-12.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.12.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If the <fo:inline font-family="monospace" font-size="0.8em">manuscript.txt</fo:inline> file is large, it makes
more sense to search this file one line at a time, and sum the number
of matches as each line is read. A more efficient implementation of
the previous example would look like this:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt96">File manuscriptFile = new File("manuscript.txt");
Reader reader = new FileReader( manuscriptFile );
LineNumberReader lineReader = new LineNumberReader( reader );
int numOccurences = 0;

while( lineReader.ready( ) ) { 
    String line = StringUtils.lowerCase( lineReader.readLine( ) );
    numOccurences += StringUtils.countMatches( , "futility" );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Your random access memory will thank you for this implementation.
Java programmers are often lulled into a sense of false security
knowing that they do not have to worry about memory management. Poor
design decisions and inefficient implementation often lead to slow
running or hard-to-scale applications. Just because you
don't have to allocate and deallocate memory does
not mean that you should stop thinking about efficient memory use. If
you are trying to search for the frequency of a word in a 20 megabyte
file, please try not to read the entire file into memory before
searching. Performing a linear search on a large string is an
inappropriate way to search a large database of documents. When
searching large amounts of text, it is more efficient to create an
index of terms than to perform a linear search over a large string. A
method for indexing and searching documents using Jakarta Lucene and
Jakarta Commons Digester will be discussed in a later chapter.</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-12.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.12.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-12" text-decoration="underline" color="blue">Chapter 12</fo:basic-link> contains a number of recipes devoted
to searching and filtering content. If you are creating a system that
needs to search a large collection of documents, consider using
Jakarta Lucene (<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/lucene</fo:inline>) to index
your content.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-13"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Parsing Formatted Strings</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.13. Parsing Formatted Strings</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-13.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.13.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to parse a string containing <fo:wrapper id="jakartackbk-CHP-2-ITERM-2066"><!--text, StringUtils
class, parsing strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2067"><!--StringUtils
class, text, parsing
strings--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2068"><!--parsing, strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2069"><!--strings, parsing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2070"><!--formatting, strings,
parsing--></fo:wrapper>control characters and the delimiters
<fo:inline font-family="monospace" font-size="0.8em">(</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">[</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">)</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">]</fo:inline>, and ,.</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-13.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.13.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use variations of <fo:inline font-family="monospace" font-size="0.8em">substring()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2071"><!--substring( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2072"><!--methods, substring(
)--></fo:wrapper> from <fo:inline font-family="monospace" font-size="0.8em">StringUtils</fo:inline>. This
next example parses a string that contains five numbers delimited by
parentheses, brackets, and a pipe symbol
(<fo:inline font-family="monospace" font-size="0.8em" font-style="italic">N0</fo:inline> *
(<fo:inline font-family="monospace" font-size="0.8em" font-style="italic">N1</fo:inline>,<fo:inline font-family="monospace" font-size="0.8em" font-style="italic">N2</fo:inline>)
[<fo:inline font-family="monospace" font-size="0.8em" font-style="italic">N3</fo:inline>,<fo:inline font-family="monospace" font-size="0.8em" font-style="italic">N4</fo:inline>] |
<fo:inline font-family="monospace" font-size="0.8em" font-style="italic">N5</fo:inline>):</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt97">String formatted = " 25 * (30,40) [50,60] | 30"

PrintWriter out = System.out;
out.print("N0: " + StringUtils.substringBeforeLast( formatted, "*" ) );
out.print(", N1: " + StringUtils.substringBetween( formatted, "(", "," ) );
out.print(", N2: " + StringUtils.substringBetween( formatted, ",", ")" ) );
out.print(", N3: " + StringUtils.substringBetween( formatted, "[", "," ) );
out.print(", N4: " + StringUtils.substringBetween( formatted, ",", "]" ) );
out.print(", N5: " + StringUtils.substringAfterLast( formatted, "|" ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This parses the formatted text and prints the following output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt98">N0: 25, N1: 30, N2: 40, N3: 50, N4: 60, N5: 30</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-13.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.13.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The following public static methods come in handy when trying to
extract information from a formatted string:</fo:block><fo:block space-before.optimum="0em" space-before.minimum="0em" space-before.maximum="0em" space-after.optimum="0em" space-after.minimum="0em" space-after.maximum="0em" margin-left="1.0em" id="d0e6716"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e6717" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                     <fo:inline font-family="monospace" font-size="0.8em">StringUtils.substringBetween( )</fo:inline>
                  </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>Captures content between two strings</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e6726" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                     <fo:inline font-family="monospace" font-size="0.8em">StringUtils.substringAfter( )</fo:inline>
                  </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>Captures content that occurs after the specified string</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e6735" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                     <fo:inline font-family="monospace" font-size="0.8em">StringUtils.substringBefore( )</fo:inline>
                  </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>Captures content that occurs before a specified string</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e6744" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                     <fo:inline font-family="monospace" font-size="0.8em">StringUtils.substringBeforeLast( )</fo:inline>
                  </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>Captures content after the last occurrence of a specified string</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e6753" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                     <fo:inline font-family="monospace" font-size="0.8em">StringUtils.substringAfterLast( )</fo:inline>
                  </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>Captures content before the last occurrence of a specified string</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">To illustrate the use of these methods, here is an example of a feed
of sports scores. Each record in the feed has a defined format, which
resembles this feed description:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt99">\(SOT)&lt;sport&gt;[&lt;team1&gt;,&lt;team2&gt;] (&lt;score1&gt;,&lt;score2&gt;)\(ETX) 

Notes:
 \(SOT) is ASCII character 2 "Start of Text",
 \(ETX) is ASCII character 4 "End of Transmission". 

Example:
 \(SOT)Baseball[BOS,SEA] (24,22)\(ETX)
 \(SOT)Basketball[CHI,NYC] (29,5)\(ETX)</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The following example parses this feed using
<fo:inline font-family="monospace" font-size="0.8em">StringUtils</fo:inline> methods <fo:inline font-family="monospace" font-size="0.8em">trim( )</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">substringBetween( )</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">substringBefore(
)</fo:inline>. The <fo:inline font-family="monospace" font-size="0.8em">boxScore</fo:inline> variable holds a test
string to parse, and, once parsed, this code prints out the game
score:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt100">// Create a formatted string to parse - get this from a feed
char SOT = '\u0002';
char ETX = '\u0004';
String boxScore = SOT + "Basketball[CHI,BOS](69,75)\r\n" + ETX;

// Get rid of the archaic control characters
boxScore = StringUtils.trim( boxScore ); 

// Parse the score into component parts 
String sport = StringUtils.substringBefore( boxScore, "[" );
String team1 = StringUtils.substringBetween( boxScore, "[", "," );
String team2 = StringUtils.substringBetween( boxScore, ",", "]" );
String score1 = StringUtils.substringBetween( boxScore, "(", "," );
String score2 = StringUtils.substringBetween( boxScore, ",", ")" );

PrintWriter out = System.out
out.println( "**** " + sport + " Score" );
out.println( "\t" + team1 + "\t" + score1 );
out.println( "\t" + team2 + "\t" + score2 );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This code parses a score, and prints the following output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt101">**** Basketball
 CHI 69
 BOS 75</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In the previous example, <fo:inline font-family="monospace" font-size="0.8em">StringUtils.trim( )</fo:inline> rids
the text of the <fo:inline font-family="monospace" font-size="0.8em">SOT</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">ETX</fo:inline>
control characters. <fo:inline font-family="monospace" font-size="0.8em">StringUtils.substringBefore( )</fo:inline>
then reads the sport
name—"Basketball"—and
<fo:inline font-family="monospace" font-size="0.8em">substringBetween( )</fo:inline> is used to retrieve the teams
and scores.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">At first glance, the value of these <fo:inline font-family="monospace" font-size="0.8em">substring( )</fo:inline>
variations is not obvious. The previous example parsed this simple
formatted string using three static methods on
<fo:inline font-family="monospace" font-size="0.8em">StringUtils</fo:inline>, but how difficult would it have been
to implement this parsing without the aid of Commons Lang? The
following example parses the same string using only methods available
in the Java 1.4 J2SE:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt102">// Find the sport name without using StringUtils
boxScore = boxScore.trim( );

int firstBracket = boxScore.indexOf( "[" );
String sport = boxScore.substring( 0, firstBracket );

int firstComma = boxScore.indexOf( "," );
String team1 = boxScore.substring( firstBracket + 1, firstComma );

int secondBracket = boxScore.indexOf( "]" );
String team2 = boxScore.substring( firstComma + 1, secondBracket );

int firstParen = boxScore.indexOf( "(" );
int secondComma = boxScore.indexOf( ",", firstParen );
String score1 = boxScore.substring( firstParen + 1, secondComma );

int secondParen = boxScore.indexOf( ")" );
String score2 = boxScore.substring( secondComma + 1, secondParen );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This parses the string in a similar number of lines, but the code is
less straightforward and much more difficult to maintain. Instead of
simply calling a <fo:inline font-family="monospace" font-size="0.8em">substringBetween( )</fo:inline> method, the
previous example calls <fo:inline font-family="monospace" font-size="0.8em">String.indexOf( )</fo:inline> and
performs arithmetic with an index while calling
<fo:inline font-family="monospace" font-size="0.8em">String.substring( )</fo:inline>. Additionally, the
<fo:inline font-family="monospace" font-size="0.8em">substring( )</fo:inline> methods on
<fo:inline font-family="monospace" font-size="0.8em">StringUtils</fo:inline> are <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>-safe; the
Java 1.4 example could throw a
<fo:inline font-family="monospace" font-size="0.8em">NullPointerException</fo:inline> if
<fo:inline font-family="monospace" font-size="0.8em">boxScore</fo:inline> was <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">String.trim( )</fo:inline> has the same behavior as
<fo:inline font-family="monospace" font-size="0.8em">StringUtils.trim( )</fo:inline>, stripping the string of all
whitespace and ASCII control characters. <fo:inline font-family="monospace" font-size="0.8em">StringUtils.trim()</fo:inline> is simply a wrapper for the <fo:inline font-family="monospace" font-size="0.8em">String.trim(
)</fo:inline> method, but the <fo:inline font-family="monospace" font-size="0.8em">StringUtils.trim( )</fo:inline>
method can gracefully handle a <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> input. If a
<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> value is passed to <fo:wrapper id="jakartackbk-CHP-2-ITERM-2073"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2074"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2075"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2076"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2077"><!----></fo:wrapper>
               <fo:inline font-family="monospace" font-size="0.8em">StringUtils.trim()</fo:inline>, a <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> value is returned.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-14"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Calculating String Difference</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.14. Calculating String Difference</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-14.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.14.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Your application needs to
compare<fo:wrapper id="jakartackbk-CHP-2-ITERM-2078"><!--text, StringUtils
class, comparing strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2079"><!--StringUtils
class, text, comparing
strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2080"><!--comparing, strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2081"><!--strings, comparing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2082"><!--printing, strings--></fo:wrapper>
two strings and print out the difference.</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-14.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.14.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">StringUtils.difference( )</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">StringUtils.indexOfDifference( )</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">StringUtils.getLevenshteinDistance( )</fo:inline>.
<fo:inline font-family="monospace" font-size="0.8em">StringUtils.difference( )</fo:inline> prints out the
difference between two strings,
<fo:inline font-family="monospace" font-size="0.8em">StringUtils.indexOfDifference( )</fo:inline> returns the index
at which two strings begin to differ, and
<fo:inline font-family="monospace" font-size="0.8em">StringUtils.getLevenshteinDistance( )</fo:inline> returns the
"edit distance" between two
strings. The following example demonstrates all three of these
methods:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt103">int dist = StringUtils.getLevenshteinDistance( "Word", "World" );
String diff = StringUtils.difference( "Word", "World" );
int index = StringUtils.indexOfDifference( "Word", "World" );

System.out.println( "Edit Distance: " + dist );
System.out.println( "Difference: " + diff );
System.out.println( "Diff Index: " + index );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This code compares the strings
"Word" and
"World," producing the following
output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt104">Edit Distance: 2
Difference: ld
Diff Index: 3</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-14.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.14.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">StringUtils.difference()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2083"><!--StringUtils.difference( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2084"><!--methods, StringUtils.difference(
)--></fo:wrapper> returns the difference between two strings,
returning the portion of the second string, which starts to differ
from the first. <fo:inline font-family="monospace" font-size="0.8em">StringUtils.indexOfDifference()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2085"><!--StringUtils.indexOfDifference( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2086"><!--methods, StringUtils.indexOfDifference(
)--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2087"><!--indexes, comparing--></fo:wrapper>
returns the index at which the second string starts to diverge from
the first. The difference between
"ABC" and
"ABE" is
"E," and the index of the
difference is 2. Here's a more complex example:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt105">String a = "Strategy";
String b = "Strategic";

String difference = StringUtils.difference( a, b );
int differenceIndex = StringUtils.indexOfDifference( a, b );

System.out.println( "difference(Strategy, Strategic) = " +
                    difference );
System.out.println( "index(Strategy, Strategic) = " +
                    differenceIndex );

a = "The Secretary of the UN is Kofi Annan."
b = "The Secretary of State is Colin Powell."

difference = StringUtils.difference( a, b );
differenceIndex = StringUtils.indexOfDifference( a, b );

System.out.println( "difference(..., ...) = " +
                    difference );
System.out.println( "index(..., ...) = " +
                    differenceIndex );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This produces the following output, showing the differences between
two strings:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt106">difference(Strategy, Strategic) = ic
index(Strategy, Strategic) = 7
difference(...,...) = State is Colin Powell.
index(...,...) = 17</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The Levenshtein distance is calculated as the number of insertions,
deletions, and replacements it takes to get from one string to
another. The distance between
"Boat" and
"Coat" is a one letter replacement,
and the distance between "Remember"
and "Alamo" is 8—five letter
replacements and three deletions. Levenshtein distance is also known
as the <fo:inline font-family="monospace" font-size="0.8em">edit distance</fo:inline>, which is the number of
changes one needs to make to a string to get from string A to string
B. The following example demonstrates the
<fo:inline font-family="monospace" font-size="0.8em">getLevenshteinDistance( )</fo:inline> method:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt107">int distance1 = 
    StringUtils.getLevenshteinDistance( "Boat", "Coat" );
int distance2 = 
    StringUtils.getLevenshteinDistance( "Remember", "Alamo" );
int distance3 = 
    StringUtils.getLevenshteinDistance( "Steve", "Stereo" );

System.out.println( "distance(Boat, Coat): " + distance1 );
System.out.println( "distance(Remember, Alamo): " + distance2 );
System.out.println( "distance(Steve, Stereo): " + distance3 );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This produces the following output, showing the Levenshtein (or edit)
distance between various strings:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt108">distance(Boat, Coat): 1
distance(Remember, Alamo): 8
distance(Steve, Stereo): 3</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-14.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.14.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The Levenshtein distance has a number of different applications,
including pattern recognition and correcting spelling mistakes. For
more information about the Levenshtein distance, see <fo:inline font-family="monospace" font-size="0.8em">http://www.merriampark.com/ld.htm</fo:inline>, which
explains the algorithm and provides links to implementations of this
algorithm in 15 different languages.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-15"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Using Commons Codec</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.15. Using Commons Codec</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-15.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.15.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You want to use <fo:wrapper id="jakartackbk-CHP-2-ITERM-2088"><!--Commons
Codec--></fo:wrapper>Commons Codec.</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-15.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.15.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You must download the latest version of Jakarta Commons Codec, and
place the Commons Codec JAR<fo:inline font-family="monospace" font-size="0.8em"> </fo:inline>in your
project's classpath. Follow the steps outlined in
<fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1" text-decoration="underline" color="blue">Recipe 1.1</fo:basic-link>, downloading Commons Codec 1.2
instead of Commons Lang.</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-15.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.15.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:wrapper id="jakartackbk-CHP-2-ITERM-2089"><!--libraries, Commons
Codec--></fo:wrapper>Commons Codec library is a small
library, which includes encoders and decoders for common encoding
algorithms, such as <fo:inline font-family="monospace" font-size="0.8em">Hex</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">Base64</fo:inline>; and phonetic encoders, such as
<fo:inline font-family="monospace" font-size="0.8em">Metaphone</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">DoubleMetaphone</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">Soundex</fo:inline>. This tiny component was created to
provide a definitive implementation of <fo:inline font-family="monospace" font-size="0.8em">Base64</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">Hex</fo:inline>, encouraging reuse and reducing the amount of
code duplication between various Apache projects.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you have a Maven project that needs to use Commons Codec, add a
dependency on Commons Codec 1.2 with the following section in
<fo:inline font-family="monospace" font-size="0.8em">project.xml</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt109">&lt;dependencies&gt;
  &lt;dependency&gt;
    &lt;id&gt;commons-codec&lt;/id&gt;
    &lt;version&gt;1.2&lt;/version&gt;
  &lt;/dependency&gt;

  ....other dependencies...
&lt;/dependencies&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-15.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.15.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For information on obtaining the source code for Commons Codec, see
<fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-16" text-decoration="underline" color="blue">Recipe 2.16</fo:basic-link>. To learn more about Commons
Codec, visit the Jakarta Commons Codec web site at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/codec/</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-16"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Getting the Commons Codec Source Code</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.16. Getting the Commons Codec Source Code</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-16.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.16.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You want the source code for the <fo:wrapper id="jakartackbk-CHP-2-ITERM-2090"><!--Commons
Codec, source code--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2091"><!--code, Commons
Codec--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2092"><!--source
code, Commons Codec--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2093"><!--programming, Commons
Codec--></fo:wrapper>Commons Codec project.</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-16.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.16.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Download the source from <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/site/sourceindex.cgi</fo:inline>.
Follow the same procedure as outlined in <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1" text-decoration="underline" color="blue">Recipe 1.1</fo:basic-link>. Download a file named
<fo:inline font-family="monospace" font-size="0.8em">commons-codec-1.2-src.zip</fo:inline> (or
<fo:inline font-family="monospace" font-size="0.8em">commons-lang-1.2-src.tar.gz</fo:inline>), and once you unzip
this file, you will have the source to Commons Codec in
<fo:inline font-family="monospace" font-size="0.8em">./commons-codec-1.2-src/src</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-16.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.16.3. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Most Commons components follow a similar convention for the layout of
binary and source distributions. For more information about the
contents layout of the Codec source distribution, see <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-3" text-decoration="underline" color="blue">Recipe 1.3</fo:basic-link>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For information on obtaining the binary
<fo:wrapper id="jakartackbk-CHP-2-ITERM-2094"><!--words--></fo:wrapper>distribution for Commons
Codec, see <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-15" text-decoration="underline" color="blue">Recipe 2.15</fo:basic-link>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-17"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Calculating Soundex</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.17. Calculating Soundex</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-17.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.17.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need the<fo:wrapper id="jakartackbk-CHP-2-ITERM-2095"><!--Commons
Codec, Soundex--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2096"><!--Soundex--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2097"><!--code, Soundex--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2098"><!--source
code, Soundex--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2099"><!--programming, Soundex--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2100"><!--calculations, Soundex--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2101"><!--names, Soundex--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-2-ITERM-2102"><!--words, Soundex--></fo:wrapper>
               <fo:inline font-family="monospace" font-size="0.8em">Soundex</fo:inline> code of a word or a name.</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-17.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.17.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use Jakarta Commons Codec's
<fo:inline font-family="monospace" font-size="0.8em">Soundex</fo:inline>. Supply a surname or a word, and
<fo:inline font-family="monospace" font-size="0.8em">Soundex</fo:inline> will produce a phonetic encoding:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt110">// Required import declaration
import org.apache.commons.codec.language.Soundex;

// Code body
Soundex soundex = new Soundex( );
String obrienSoundex = soundex.soundex( "O'Brien" );
String obrianSoundex = soundex.soundex( "O'Brian" );
String obryanSoundex = soundex.soundex( "O'Bryan" );

System.out.println( "O'Brien soundex: " + obrienSoundex );
System.out.println( "O'Brian soundex: " + obrianSoundex );
System.out.println( "O'Bryan soundex: " + obryanSoundex );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This will produce the following output for three similar surnames:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_2_tt111">O'Brien soundex: O165
O'Brian soundex: O165
O'Bryan soundex: O165</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-17.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.17.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">Soundex.soundex( )</fo:inline> takes a string, preserves the
first letter as a letter code, and proceeds to calculate a code based
on consonants contained in a string. So, names such as
"O'Bryan,"
"O'Brien," and
"O'Brian," all
being common variants of the Irish surname, are given the same
encoding: "O165." The 1 corresponds
to the B, the 6 corresponds to the R, and the 5 corresponds to the N;
vowels are discarded from a string before the
<fo:inline font-family="monospace" font-size="0.8em">Soundex</fo:inline> code is generated.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">Soundex</fo:inline> algorithm can be used in a number of
situations, but <fo:inline font-family="monospace" font-size="0.8em">Soundex</fo:inline> is usually associated with
surnames, as the United States historical census records are indexed
using <fo:inline font-family="monospace" font-size="0.8em">Soundex</fo:inline>. In addition to the role
<fo:inline font-family="monospace" font-size="0.8em">Soundex</fo:inline> plays in the census,
<fo:inline font-family="monospace" font-size="0.8em">Soundex</fo:inline> is also used in the health care industry
to index medical records and report statistics to the government. A
system to access individual records should allow a user to search for
a person by the <fo:inline font-family="monospace" font-size="0.8em">Soundex</fo:inline> code of a surname. If a
user types in the name "Boswell" to
search for a patient in a hospital, the search result should include
patients named "Buswell" and
"Baswol;" you can use
<fo:inline font-family="monospace" font-size="0.8em">Soundex</fo:inline> to provide this capability if an
application needs to locate individuals by the sound of a surname.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">Soundex</fo:inline> of a word or name can also be used as
a primitive method to find out if two small words rhyme. Commons
Codec contains other phonetic encodings, such as
<fo:inline font-family="monospace" font-size="0.8em">RefinedSoundex</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">Metaphone</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">DoubleMetaphone</fo:inline>. All of these alternatives solve
similar problems—capturing the <fo:inline font-style="italic">phonemes</fo:inline>
or sounds contained in a word.</fo:block></fo:block><fo:block id="jakartackbk-CHP-2-SECT-17.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">2.17.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information on the <fo:inline font-family="monospace" font-size="0.8em">Soundex</fo:inline> encoding, take
a look at the Dictionary of Algorithms and Data Structures at the
National Institute of Standards and Technology (NIST), <fo:inline font-family="monospace" font-size="0.8em">http://www.nist.gov/dads/HTML/soundex.html</fo:inline>.
There you will find links to a C implementation of the
<fo:inline font-family="monospace" font-size="0.8em">Soundex</fo:inline> algorithm.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about alternatives to <fo:inline font-family="monospace" font-size="0.8em">Soundex</fo:inline>
encoding, read "The Double Metaphone Search
Algorithm" by Lawrence Philips (<fo:inline font-family="monospace" font-size="0.8em">http://www.cuj.com/documents/s=8038/cuj0006philips/</fo:inline>).
Or take a look at one of Lawrence Philips's original
Metaphone algorithm implementations at <fo:inline font-family="monospace" font-size="0.8em">http://aspell.sourceforge.net/metaphone/</fo:inline>.
Both the Metaphone and Double Metaphone algorithms capture the sound
of an English word; implementations of these algorithms are available
in Commons Codec as <fo:inline font-family="monospace" font-size="0.8em">Metaphone</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">DoubleMetaphone</fo:inline>.</fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="false" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>JavaBeans</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>JavaBeans</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"/></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif" margin-left="0pc"/></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block id="jakartackbk-CHP-3"><fo:block font-family="serif"><fo:block margin-left="0pc"><fo:block text-align="left" font-weight="bold" font-size="21.6pt"><fo:block keep-with-next.within-column="always" space-before.optimum="12pt" space-before.minimum="12pt * 0.8" space-before.maximum="12pt * 1.2" hyphenate="false" text-align="left" start-indent="0pc" word-spacing="-0.1em" letter-spacing="-0.05em" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 3. JavaBeans</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="ch03-2-fm2xml"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Introduction</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.1. Introduction</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Beans are everywhere, popping up in web-application frameworks,
enterprise applications, Swing Graphical User Interface (GUIs),
templating engines, and object-relational mapping (ORM) tools. Most
systems have some sort of object model; for example, an electronic
commerce application would have an object model involving an
<fo:inline font-family="monospace" font-size="0.8em">Invoice</fo:inline>, which relates to a
<fo:inline font-family="monospace" font-size="0.8em">Customer</fo:inline>; or a sports news web site would have
related <fo:inline font-family="monospace" font-size="0.8em">Athlete</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">Sport</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">Team</fo:inline> objects. Frequently, objects in these object
models are beans—simple objects with properties, encapsulating
access to these properties via public getter and setter methods.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In 1997, Sun Microsystems published Version 1.01 of the
<fo:wrapper id="jakartackbk-CHP-3-ITERM-2103"><!--JavaBeans--></fo:wrapper>JavaBeans©
specification. Initially, Sun offered beans as visual components for
graphical user interfaces; JavaBeans were to be the equivalent of
Microsoft's ActiveX controls—a framework and
set of interfaces for creating reusable and pluggable GUI components.
Used as components, which exposed states through a series of accessor
and mutator (<fo:inline font-family="monospace" font-size="0.8em">getX( )</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">setX()</fo:inline>) methods, a developer would develop a GUI Java
application by creating a visual layout using an IDE like Visual Cafe
or JBuilder. If you've ever developed with Microsoft
tools, you'll know exactly what this
means—Java was going to unseat Visual Basic, and GUI
development was going to be easier than easy. According to the
JavaBeans Specification Version 1.01 from 1997:</fo:block><fo:block margin-left="0.5in" margin-right="0.5in" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em"><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A Java Bean is a reusable software component that can be manipulated
visually in a builder tool.</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Don't be misled; 1997 was ages ago, and the concept
of the bean has evolved. In the last seven years, Java has become a
dominant technology for server-side applications; impressive Swing
applications do exist, but Java has not been an attractive platform
for desktop application development due to reasons technical,
economic, and judicial.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Don't be confused by the 1997 JavaBeans
specification, either; it is still relevant, but, when used in the
context of this book, the term <fo:inline font-family="monospace" font-size="0.8em">bean</fo:inline> is any
object with a no-argument constructor, which encapsulates access to
private member variables via getter and setter methods. <fo:basic-link internal-destination="jakartackbk-CHP-3-EX-1" text-decoration="underline" color="blue">Example 3-1</fo:basic-link> defines a bean,
<fo:inline font-family="monospace" font-size="0.8em">SimpleBean</fo:inline>
            <fo:wrapper id="jakartackbk-CHP-3-ITERM-2104"><!--SimpleBean--></fo:wrapper>,
which contains two bean properties—<fo:inline font-family="monospace" font-size="0.8em">name1</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">name2</fo:inline>.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-3-EX-1"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3-1. Sample bean</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e7384">package org.test.bean;

public class SimpleBean {
    private String name1;
    private String name2;

    public SimpleBean( ) {}

    public String getName1( ) { return name1; }
    public void setName1(String name1) { this.name1 = name1; }

    public String getName2( ) { return name2; }
    public void setName2(String name2) { this.name2 = name2; }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The presence of the public methods <fo:inline font-family="monospace" font-size="0.8em">getName1( )</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">getName2( )</fo:inline> make the bean properties
<fo:inline font-family="monospace" font-size="0.8em">name1</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">name2</fo:inline> readable, and
the public methods <fo:inline font-family="monospace" font-size="0.8em">setName1( )</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">setName2( )</fo:inline> make these properties writable. A bean
should also have a public no-argument constructor; other constructors
are not prohibited, but, since many tools need to dynamically create
and populate beans, a no-argument constructor is required.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The original JavaBeans specification is available at <fo:inline font-family="monospace" font-size="0.8em">http://java.sun.com/products/javabeans/docs/spec.html</fo:inline>.
The JavaBeans specification still exists and features have been added
to the Java 1.4 release to support reading and writing JavaBeans to
Extensible Markup Language (XML) documents. More information about
more modern additions to the JavaBeans specification can be found at
<fo:inline font-family="monospace" font-size="0.8em">http://java.sun.com/j2se/1.4.2/docs/guide/beans/changes14.html</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Representing Beans Graphically</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.1. Representing Beans Graphically</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-1.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.1.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to draw a diagram of<fo:wrapper id="jakartackbk-CHP-3-ITERM-2105"><!--JavaBeans, relationships,
diagramming--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2106"><!--beans, relationships,
diagramming--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2107"><!--relationships, diagramming--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2108"><!--diagramming
relationships--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2109"><!--objects, JavaBeans,
diagramming--></fo:wrapper> a simple bean that shows the
relationships between different objects.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-1.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.1.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use a simplified variant of a <fo:wrapper id="jakartackbk-CHP-3-ITERM-2110"><!--Unified Modeling
Language--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2111"><!--UML
(Unified Modeling
Language), diagrams--></fo:wrapper>Unified
Modeling Language (UML) class diagram that contains only class names,
attribute names, and attribute types. <fo:basic-link internal-destination="jakartackbk-CHP-3-FIG-1" text-decoration="underline" color="blue">Figure 3-1</fo:basic-link>
describes two related beans—<fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">Job</fo:inline>.</fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-3-FIG-1"><fo:block id="I_3_tt112"><fo:external-graphic src="/Users/tobrien/Library/Code/common-java-cookbook/content/target/classes/docbook/figs/print/jccb_0301.pdf" width="193px" height="59px" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:application/pdf"/></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-previous.within-column="always">Figure 3-1. Structure of Person and Job beans</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-1.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.1.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Many of the recipes in this book deal with an object model consisting
of JavaBeans, and, to save paper, I've devised this
simple shorthand for describing a collection of related beans. Every
time you see a diagram like <fo:basic-link internal-destination="jakartackbk-CHP-3-FIG-1" text-decoration="underline" color="blue">Figure 3-1</fo:basic-link>, mentally
translate it to a set of classes, one for each box; each class
attribute in that box is a private member variable, with a getter
method and a setter method. The beans represented by these diagrams
are simply objects with attributes, and the only operations on a bean
are getter and setter methods and no-argument constructors. To help
you get used to translating these diagrams into code, the
<fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">Job</fo:inline> classes are
defined in Examples <fo:basic-link internal-destination="jakartackbk-CHP-3-EX-2" text-decoration="underline" color="blue">Example 3-2</fo:basic-link> and <fo:basic-link internal-destination="jakartackbk-CHP-3-EX-3" text-decoration="underline" color="blue">Example 3-3</fo:basic-link>.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-3-EX-2"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3-2. The Person bean</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e7507">public class Person {
    private String name;
    private Integer age;
    private Job job;

    public String getName( ) { return name; }
    public void setName(String name) { this.name = name; }

    public Integer getAge( ) { return age; }
    public void setAge(Integer age) { this.age = age; }

    public Job getJob( ) { return job; }
    public void setJob(Job job) { this.job = job; }
}</fo:block></fo:block></fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-3-EX-3"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3-3. The Job bean</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e7512">public class Job {
    private String title;
    private BigDecimal salary;

    public String getTitle( ) { return title; }
    public void setTitle(String title) { this.title = title; }

    public BigDecimal getSalary( ) { return salary; }
    public void setSalary(BigDecimal salary) { this.salary = salary; }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">When an object contains an attribute of type <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline>,
it is helpful to know the type of object that <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline>
contains. To convey the type of object contained in a
<fo:inline font-family="monospace" font-size="0.8em">List</fo:inline>, every list attribute will be followed by the
type it is intended to contain surrounded by brackets:
<fo:inline font-family="monospace" font-size="0.8em">List&lt;Integer&gt;</fo:inline>. Similarly, if an object
contains a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>, the type of the key and value will
be separated by a comma and surrounded by brackets:
<fo:inline font-family="monospace" font-size="0.8em">Map&lt;String,Integer&gt;</fo:inline>. If the
<fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> object had contained a list of
<fo:inline font-family="monospace" font-size="0.8em">Job</fo:inline> objects instead of a single Job object, the
attribute type would be written <fo:inline font-family="monospace" font-size="0.8em">List&lt;Job&gt;</fo:inline>,
as in <fo:basic-link internal-destination="jakartackbk-CHP-3-FIG-2" text-decoration="underline" color="blue">Figure 3-2</fo:basic-link>.</fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-3-FIG-2"><fo:block id="I_3_tt113"><fo:external-graphic src="/Users/tobrien/Library/Code/common-java-cookbook/content/target/classes/docbook/figs/print/jccb_0302.pdf" width="193px" height="59px" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:application/pdf"/></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-previous.within-column="always">Figure 3-2. Representing a list of Job objects</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-CHP-3-NOTE-53"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/tip.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Tip</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The angle bracket syntax is actually the standard means of
representing these objects in the newest version of Java, JDK 1.5.
For more on JDK 1.5, check out <fo:inline font-style="italic">Java 1.5 Tiger: A
Developer's Notebook</fo:inline>, by David Flanagan
and Brett McLaughlin(O'Reilly).</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-1.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.1.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Don't confuse UML with object-oriented design, as
this is a mistake all too often made; UML captures the form and
function of a system, but it is no substitute for a good design. All
the drawings in the world won't make a bad design
good, and spending a day drawing a big UML diagram is simply a
creative form of procrastination. That said, if you insist on drawing
UML diagrams, check out some of the following tools:</fo:block><fo:block space-before.optimum="0em" space-before.minimum="0em" space-before.maximum="0em" space-after.optimum="0em" space-after.minimum="0em" space-after.maximum="0em" margin-left="1.0em" id="d0e7565"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e7566" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>ArgoUML</fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>
                        <fo:wrapper id="jakartackbk-CHP-3-ITERM-2112"><!--ArgoUML--></fo:wrapper>ArgoUML is a UML
<fo:wrapper id="jakartackbk-CHP-3-ITERM-2113"><!--editors, UML--></fo:wrapper>
                        <fo:wrapper id="jakartackbk-CHP-3-ITERM-2114"><!--UML (Unified Modeling
Language), editors--></fo:wrapper>editor
from Tigris.org, an open source community hosted by CollabNet
(<fo:inline font-family="monospace" font-size="0.8em">http://www.collabnet.com</fo:inline>).
ArgoUML supports reverse engineering and code generation to Java,
C++, C#, and PHP. For more information about ArgoUML, see the project
page at <fo:inline font-family="monospace" font-size="0.8em">http://argouml.tigris.org/</fo:inline>. To launch ArgoUML
via Java Web Start, click on <fo:inline font-family="monospace" font-size="0.8em">http://argouml.tigris.org/files/documents/4/383/ArgoUML-stable.jnlp</fo:inline>.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e7595" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>Poseidon for UML</fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>
                        <fo:wrapper id="jakartackbk-CHP-3-ITERM-2115"><!--Gentleware AG--></fo:wrapper>Gentleware AG
has taken ArgoUML and extended it, providing additional features,
such as language export options and improved usability. A community
edition is free to download and use. For more information about this
product, see the Gentleware AG site at <fo:inline font-family="monospace" font-size="0.8em">http://www.gentleware.com</fo:inline>. If you have Java
Web Start installed, you can launch the community edition of
<fo:wrapper id="jakartackbk-CHP-3-ITERM-2116"><!--Poseidon--></fo:wrapper>Poseidon through a
browser by clicking on <fo:inline font-family="monospace" font-size="0.8em">http://www.gentleware.com/products/webstart.php4</fo:inline>.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e7615" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>SmartDraw</fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>
                        <fo:wrapper id="jakartackbk-CHP-3-ITERM-2117"><!--SmartDraw--></fo:wrapper>SmartDraw, from
SmartDraw.com, offers a very usable general purpose tool for creating
diagrams. This tool stands out from the rest because it is simple,
and, unlike other tools, it is solely concerned with the creation of
diagrams; it makes no attempt to get involved with your application,
and it has an attractive price of around $129. Details are at
<fo:inline font-family="monospace" font-size="0.8em">http://www.smartdraw.com</fo:inline>.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e7628" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>Other Tools</fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>It seem that almost
every<fo:wrapper id="jakartackbk-CHP-3-ITERM-2118"><!--tools, UML
editors--></fo:wrapper> software company has attempted to
create a UML modeling tool, some of the well-known commercial
products are IBM's Rational Rose,
Microsoft's Visio, and Borland's
Together. The URL <fo:inline font-family="monospace" font-size="0.8em">http://www.objectsbydesign.com/tools/umltools_byCompany.html</fo:inline>
contains<fo:wrapper id="jakartackbk-CHP-3-ITERM-2119"><!----></fo:wrapper> 
                        <fo:wrapper id="jakartackbk-CHP-3-ITERM-2120"><!----></fo:wrapper> 
                        <fo:wrapper id="jakartackbk-CHP-3-ITERM-2121"><!----></fo:wrapper> 
                        <fo:wrapper id="jakartackbk-CHP-3-ITERM-2122"><!----></fo:wrapper> 
                        <fo:wrapper id="jakartackbk-CHP-3-ITERM-2123"><!----></fo:wrapper> an exhaustive list of other UML
tools.</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Obtaining Commons BeanUtils</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.2. Obtaining Commons BeanUtils</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-2.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.2.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You want to use Jakarta <fo:wrapper id="jakartackbk-CHP-3-ITERM-2124"><!--Commons
BeanUtils, downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2125"><!--downloading, Commons
BeanUtils--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2126"><!--beans, Commons
BeanUtils, downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2127"><!--JavaBeans, Commons
BeanUtils, downloading--></fo:wrapper>Commons
BeanUtils to manipulate and access simple, indexed, and nested bean
properties.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-2.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.2.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You must download the latest version of Commons BeanUtils, and place
the Commons BeanUtils JAR in your project's
classpath. Following the steps outlined in <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1" text-decoration="underline" color="blue">Recipe 1.1</fo:basic-link>, download Commons BeanUtils 1.7 instead of
Commons Lang.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Commons BeanUtils depends on Commons Logging 1.0.3 and Commons
Collections 3.0; both of these can be downloaded from the same
location as Commons BeanUtils.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-2.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.2.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Commons BeanUtils is a collection of utilities that makes working
with beans and bean properties much easier. This project contains
utilities that allow one to retrieve a bean property by name, sort
beans by a property, translate beans to maps, and more. BeanUtils is
simple and straightforward, and, as such, you will find that it is
one of the most widely used and distributed libraries in open source
Java. Along with Commons Lang and Commons Collections, Commons
BeanUtils is part of the core of Jakarta Commons. Unless specified
otherwise, every utility mentioned in this chapter is from Commons
BeanUtils.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you have a Maven project that needs to use Commons BeanUtils, add
a dependency on Commons BeanUtils 1.7 with the following section in
<fo:inline font-family="monospace" font-size="0.8em">project.xml</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt114">&lt;dependencies&gt;
  &lt;dependency&gt;
    &lt;id&gt;commons-beanutils&lt;/id&gt;
    &lt;version&gt;1.7&lt;/version&gt;
  &lt;/dependency&gt;

  ....other dependencies...
&lt;/dependencies&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The rest of this chapter focuses on Commons BeanUtils.</fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" border-style="solid" border-width="1pt" border-color="black" background-color="#DDDDDD" padding-left="12pt" padding-right="12pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pt" margin-right="0pt" id="jakartackbk-CHP-3-SIDEBAR-1"><fo:block><fo:block><fo:block font-family="serif" font-weight="bold"><fo:block font-weight="bold" hyphenate="false" text-align="start" keep-with-next.within-column="always">In the Beginning...</fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">BeanUtils was originally a part of Jakarta Struts, a widely used
<fo:wrapper id="jakartackbk-CHP-3-ITERM-2128"><!--Model-View-Controller (MVC)--></fo:wrapper>
                  <fo:wrapper id="jakartackbk-CHP-3-ITERM-2129"><!--MVC (Model-View-Controller)--></fo:wrapper>
                  <fo:wrapper id="jakartackbk-CHP-3-ITERM-2130"><!--form beans--></fo:wrapper>
                  <fo:wrapper id="jakartackbk-CHP-3-ITERM-2131"><!--beans, form--></fo:wrapper>Model-View-Controller
(MVC) framework for web applications, which originated in the Jakarta
project. The Struts framework hinges upon <fo:inline font-family="monospace" font-size="0.8em">form
beans</fo:inline>, which are used to present and communicate user
input to and from a Struts action. The Struts
<fo:inline font-family="monospace" font-size="0.8em">ActionServlet</fo:inline> and the bean JavaServer Pages (JSP)
tag libraries use the <fo:inline font-family="monospace" font-size="0.8em">BeanUtils</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">PropertyUtils</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">ConvertUtils</fo:inline>
classes to populate and manipulate beans. Refactoring BeanUtils from
Struts has created new possibilities of reuse throughout the Jakarta
project and the larger open source Java community.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-2.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.2.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about downloading Commons Logging 1.0.3, see
<fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-9" text-decoration="underline" color="blue">Recipe 7.9</fo:basic-link>. For more information about
downloading Commons Collections, see <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-1" text-decoration="underline" color="blue">Recipe 4.1</fo:basic-link>. For information on obtaining the source
code for Commons BeanUtils, see <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-3" text-decoration="underline" color="blue">Recipe 3.3</fo:basic-link>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">To learn more about Commons BeanUtils, visit the Commons BeanUtils
web site: <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/beanutils/</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you have questions about how to use Commons BeanUtils, you can
join the <fo:inline font-family="monospace" font-size="0.8em"><fo:inline keep-together.within-line="always" hyphenate="false">&lt;commons-user@jakarta.apache.org&gt;</fo:inline></fo:inline> mailing list. Refer to <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-2" text-decoration="underline" color="blue">Recipe 1.2</fo:basic-link> for instructions on joining the
Commons-user mailing list.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Getting the Commons BeanUtils Source Code</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.3. Getting the Commons BeanUtils Source Code</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-3.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.3.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need the source code<fo:wrapper id="jakartackbk-CHP-3-ITERM-2132"><!--Commons
BeanUtils, source code--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2133"><!--source code, Commons
BeanUtils--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2134"><!--beans, Commons
BeanUtils, source code--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2135"><!--JavaBeans, Commons
BeanUtils, source code--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2136"><!--code, Commons
BeanUtils--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2137"><!--programming, Commons
BeanUtils--></fo:wrapper> for the Commons BeanUtils project.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-3.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.3.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Download the source from <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/site/sourceindex.cgi</fo:inline>,
following the same procedure as outlined in <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1" text-decoration="underline" color="blue">Recipe 1.1</fo:basic-link>. Download a file named
<fo:inline font-family="monospace" font-size="0.8em">commons-beanutils-1.7-src.zip</fo:inline> (or
<fo:inline font-family="monospace" font-size="0.8em">commons-beanutils-1.7-src.tar.gz</fo:inline>); once you
unzip this archive, you will have the source to Commons BeanUtils in
<fo:inline font-family="monospace" font-size="0.8em">./commons-beanutils-1.7-src/src</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-3.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.3.3. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Most Commons components follow a similar convention for the layout of
binary and source distributions. For more information about the
layout of the BeanUtils source distribution, see <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-3" text-decoration="underline" color="blue">Recipe 1.3</fo:basic-link>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For information on obtaining the binary distribution for Commons
BeanUtils, see <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-2" text-decoration="underline" color="blue">Recipe 3.2</fo:basic-link>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Accessing Simple Bean Properties</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.4. Accessing Simple Bean Properties</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-4.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.4.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to access a simple <fo:wrapper id="jakartackbk-CHP-3-ITERM-2138"><!--JavaBeans, properties, accessing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2139"><!--beans, properties, accessing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2140"><!--properties, beans, accessing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2141"><!--access, properties, beans--></fo:wrapper>bean
property by name.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-4.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.4.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.getSimpleProperty()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2142"><!--PropertyUtils.getSimpleProperty( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2143"><!--methods, PropertyUtils.getSimpleProperty(
)--></fo:wrapper> to access a bean property by
<fo:wrapper id="jakartackbk-CHP-3-ITERM-2144"><!--names, bean
properties--></fo:wrapper>name; this method takes the name of
a property and returns the value of that property. The following
example uses this method to retrieve the <fo:inline font-family="monospace" font-size="0.8em">name</fo:inline>
property from a <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> bean:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt115">import org.apache.commons.beanutils.PropertyUtils;

Person person = new Person( );
person.setName( "Alex" );    

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">String name = (String) PropertyUtils.getSimpleProperty( person, "name" );</fo:inline>
System.out.println( name );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.getSimpleProperty( )</fo:inline> invokes the
public method <fo:inline font-family="monospace" font-size="0.8em">getName(
)</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2145"><!--getName( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2146"><!--methods, getName(
)--></fo:wrapper> on an
instance of <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline>, returning the value of the
<fo:inline font-family="monospace" font-size="0.8em">name</fo:inline> property. The previous example executes and
prints out the name "Alex."</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-4.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.4.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A simple bean property is a private member variable that can be
accessed with a getter method. If a property can be read via a getter
method, that getter method is said to be the<fo:wrapper id="jakartackbk-CHP-3-ITERM-2147"><!--read
methods--></fo:wrapper> 
               <fo:inline font-family="monospace" font-size="0.8em">read method</fo:inline> for
the named property. If the property can be modified with a setter
method, that setter method is said to be the <fo:inline font-family="monospace" font-size="0.8em">write method
</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2148"><!--write methods--></fo:wrapper>for
the named property. The <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> bean in <fo:basic-link internal-destination="jakartackbk-CHP-3-EX-4" text-decoration="underline" color="blue">Example 3-4</fo:basic-link> defines two simple bean properties,
<fo:inline font-family="monospace" font-size="0.8em">name</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">favoriteColor</fo:inline>.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-3-EX-4"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3-4. A Person bean with two simple properties</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e7992">package com.discursive.jccook.bean;

public class Person {
    private String name;
    private String favoriteColor;

    public Person( ) {}

    public String getName( ) { return name; }
    public void setName(String name) { 
        this.name = name; 
    }

    public String getFavoriteColor( ) { return favoriteColor; }
    public void setFavoriteColor(String favoriteColor) { 
        this.favoriteColor = favoriteColor;
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The class defined in <fo:basic-link internal-destination="jakartackbk-CHP-3-EX-4" text-decoration="underline" color="blue">Example 3-4</fo:basic-link> is used in the
following sample code, which creates a <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline>
object, sets the <fo:inline font-family="monospace" font-size="0.8em">name</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">favoriteColor</fo:inline> properties, and demonstrates the use
of <fo:inline font-family="monospace" font-size="0.8em">Property.getSimpleProperty( )</fo:inline> to retrieve both
properties by name:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt116">import org.apache.commons.beanutils.PropertyUtils;

// Create a person
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Person person = new Person( );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">person.setName( "Alex Wolfe" );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">person.setFavoriteColor( "Green" );</fo:inline>

try {
    <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">String name = (String) PropertyUtils.getSimpleProperty( person, "name" );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    String favoriteColor =</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        (String) PropertyUtils.getSimpleProperty( person, "favoriteColor" );</fo:inline>
    System.out.println( "The Person: " + name + " likes " + favoriteColor );
} catch (IllegalAccessException e) {
    System.out.println( "You are not allowed to access a property!" );
} catch (InvocationTargetException e) {
    System.out.println( "There was a problem invoking the method." );
} catch (NoSuchMethodException e) {
    System.out.println( "There is no method to get a property." );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Take note of the extensive exception handling required to retrieve
two bean properties; three separate exceptions can be thrown by
<fo:inline font-family="monospace" font-size="0.8em">getSimpleProperty( )</fo:inline>. The first,
<fo:inline font-family="monospace" font-size="0.8em">IllegalAccessException</fo:inline>, is thrown if the getter
method is not accessible (not public).
<fo:inline font-family="monospace" font-size="0.8em">InvocationTargetException</fo:inline> is thrown if the getter
method throws an exception, and
<fo:inline font-family="monospace" font-size="0.8em">NoSuchMethodException</fo:inline> is thrown if you specify a
bean property that does not exist on an object; for example,
attempting to retrieve the <fo:inline font-family="monospace" font-size="0.8em">numberOfDoors</fo:inline> property
from the <fo:inline font-family="monospace" font-size="0.8em">person</fo:inline> object above would throw a
<fo:inline font-family="monospace" font-size="0.8em">NoSuchMethodException</fo:inline> because there is no
<fo:inline font-family="monospace" font-size="0.8em">getNumberOfDoors( )</fo:inline> method.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-CHP-3-NOTE-54"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/tip.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Tip</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">To simplify the examples in this chapter, most examples will omit the
<fo:inline font-family="monospace" font-size="0.8em">try</fo:inline>/<fo:inline font-family="monospace" font-size="0.8em">catch</fo:inline> or catch the general
<fo:inline font-family="monospace" font-size="0.8em">Exception</fo:inline>—to do otherwise would be a
needless waste of paper. As a general programming practice, catching
the general <fo:inline font-family="monospace" font-size="0.8em">Exception</fo:inline> should be avoided;
well-written code usually catches individual, specific exceptions.
But, in this case, catching the general <fo:inline font-family="monospace" font-size="0.8em">Exception</fo:inline>
may save you a great deal of hassle.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Using <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.getSimpleProperty( )</fo:inline> when you
could simply call a get method might seem like an unwieldy solution
to a very simple problem, but the alternative—calling a getter
method—locks you into a specific bean property at compile time.
This may be unacceptable if you are designing something generic like
a templating system or an expression language interpreter; you may
need to access an arbitrary property of an arbitrary object known
only at runtime. The ability to retrieve the value of a bean property
by name lies at the heart of a number of important tools, such as
Struts, Jakarta Velocity, Jakarta Commons JEXL, and utilities from
Jakarta Commons Collections. Accessing bean properties by name is an
appropriate solution for a system that needs a high level of
flexibility.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-4.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.4.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The next three recipes focus on accessing different types of bean
properties: nested, indexed, and mapped. Simple properties may also
be retrieved with <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.getProperty( )</fo:inline>;
this method is described in <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-8" text-decoration="underline" color="blue">Recipe 3.8</fo:basic-link>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This recipe<fo:wrapper id="jakartackbk-CHP-3-ITERM-2149"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2150"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2151"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2152"><!----></fo:wrapper> mentions Struts, a web application
MVC framework. For more information about the Struts project, see
<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/struts</fo:inline>.
Jakarta Velocity and Jakarta Commons JEXL are discussed in <fo:basic-link internal-destination="jakartackbk-CHP-9" text-decoration="underline" color="blue">Chapter 9</fo:basic-link>, and Commons Collections is discussed in
<fo:basic-link internal-destination="jakartackbk-CHP-5" text-decoration="underline" color="blue">Chapter 5</fo:basic-link>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-5"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Accessing Nested Bean Properties</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.5. Accessing Nested Bean Properties</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-5.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.5.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to access a nested <fo:wrapper id="jakartackbk-CHP-3-ITERM-2153"><!--JavaBeans, properties, nested
bean access--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2154"><!--beans, properties, nested
access--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2155"><!--properties, beans, nested
access--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2156"><!--access, properties, nested
beans--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2157"><!--nested
beans--></fo:wrapper>bean property.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-5.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.5.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.getNestedProperty()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2158"><!--PropertyUtils.getNestedProperty( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2159"><!--methods, PropertyUtils.getNestedProperty(
)--></fo:wrapper> to retrieve a nested bean property. Use a
period as a delimiter to identify nested bean properties;
<fo:inline font-family="monospace" font-size="0.8em">one.two.three.four</fo:inline> refers to a property nested
three levels deep—the <fo:inline font-family="monospace" font-size="0.8em">four</fo:inline> property of the
<fo:inline font-family="monospace" font-size="0.8em">three</fo:inline> property of the <fo:inline font-family="monospace" font-size="0.8em">two</fo:inline>
property of the <fo:inline font-family="monospace" font-size="0.8em">one</fo:inline> property. The following
example accesses a nested bean property on a
<fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> bean, <fo:inline font-family="monospace" font-size="0.8em">author.name</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt117">import org.apache.commons.beanutils.PropertyUtils;

Book book = new Book( );
book.setName( "Emerson's Essays" );

Person author = new Person( );
author.setName( "Ralph Waldo Emerson" );
book.setAuthor( author );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">String authorName = (String) PropertyUtils.getNestedProperty(book, 
"author.name");</fo:inline>
System.out.println( "authorName" );This example retrieves the name 
property of the author property on the Book object, printing "Ralph 
Waldo Emerson".</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-5.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.5.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">author</fo:inline> property of <fo:inline font-family="monospace" font-size="0.8em">Book</fo:inline> is
a <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> bean with a <fo:inline font-family="monospace" font-size="0.8em">name</fo:inline>
property; calling <fo:inline font-family="monospace" font-size="0.8em">getNestedProperty( )</fo:inline> with
<fo:inline font-family="monospace" font-size="0.8em">author.name</fo:inline> retrieves the simple property
<fo:inline font-family="monospace" font-size="0.8em">author</fo:inline> from <fo:inline font-family="monospace" font-size="0.8em">Book</fo:inline> and the
property <fo:inline font-family="monospace" font-size="0.8em">name</fo:inline>, which is nested in the
<fo:inline font-family="monospace" font-size="0.8em">author</fo:inline> property. <fo:basic-link internal-destination="jakartackbk-CHP-3-FIG-3" text-decoration="underline" color="blue">Figure 3-3</fo:basic-link>
shows the <fo:inline font-family="monospace" font-size="0.8em">Book</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> beans
that were used in the previous example.</fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-3-FIG-3"><fo:block id="I_3_tt118"><fo:external-graphic src="/Users/tobrien/Library/Code/common-java-cookbook/content/target/classes/docbook/figs/print/jccb_0303.pdf" width="193px" height="46px" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:application/pdf"/></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-previous.within-column="always">Figure 3-3. Structure of two simple beans: Book and Person</fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The following example demonstrates a combination of
<fo:inline font-family="monospace" font-size="0.8em">getSimpleProperty( )</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">getNestedProperty( )</fo:inline>, retrieving a book name and
an author name:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt119">General Exception is caught.

import org.apache.commons.beanutils.PropertyUtils;

// Create an author
Person author = new Person( );
author.setName( "Chaucer" );

Book book = new Book( );
book.setName( "The Canterbury Tales" );
book.setAuthor( author );

try {
   <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold"> String bookName = (String) PropertyUtils.getSimpleProperty( book, "name" );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    String authorName = </fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        (String) PropertyUtils.getNestedProperty( book, "author.name" );</fo:inline>

    System.out.println( "The book is " + bookName );
    System.out.println( "The author is " + authorName );

} catch (Exception e) {
    System.out.println( "There was a problem getting a bean property." );
    e.printStackTrace( );
}</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-CHP-3-NOTE-55"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/tip.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Tip</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">To reduce the size of the example code, only the general
<fo:inline font-family="monospace" font-size="0.8em">Exception</fo:inline> is caught.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">When using <fo:inline font-family="monospace" font-size="0.8em">getNestedProperty( )</fo:inline>, there is no limit
to the number of nesting levels for a property; demonstrating the
retrieval of a deeply nested property, the following example
retrieves the <fo:inline font-family="monospace" font-size="0.8em">name</fo:inline> property from the
<fo:inline font-family="monospace" font-size="0.8em">state</fo:inline> property of the <fo:inline font-family="monospace" font-size="0.8em">address</fo:inline>
property of a <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> object:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt120">String propertyName = "address.state.name";

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">String stateName =</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    (String) PropertyUtils.getNestedProperty( person,  propertyName );</fo:inline>
            </fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example assumes that the <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> class has
a<fo:wrapper id="jakartackbk-CHP-3-ITERM-2160"><!--getAddress( ) method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2161"><!--methods, getAddress(
)--></fo:wrapper> 
               <fo:inline font-family="monospace" font-size="0.8em">getAddress( )</fo:inline> method
that returns an <fo:inline font-family="monospace" font-size="0.8em">Address</fo:inline> object with a
<fo:inline font-family="monospace" font-size="0.8em">getState( )</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2162"><!--getState( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2163"><!--methods, getState(
)--></fo:wrapper> method and returns a
<fo:inline font-family="monospace" font-size="0.8em">State</fo:inline> object with a <fo:inline font-family="monospace" font-size="0.8em">getName()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2164"><!--getName( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2165"><!--methods, getName(
)--></fo:wrapper> method. The emphasized code in <fo:wrapper id="jakartackbk-CHP-3-ITERM-2166"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2167"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2168"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2169"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2170"><!----></fo:wrapper>the previous
example is the equivalent of the following three lines of code:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt121">Address address = person.getAddress( );
State state = address.getState( );
String stateName = state.getName( );</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-6"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Accessing Indexed Bean Properties</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.6. Accessing Indexed Bean Properties</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-6.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.6.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to access the nth
<fo:wrapper id="jakartackbk-CHP-3-ITERM-2171"><!--JavaBeans, properties, indexed
bean access--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2172"><!--beans, properties, indexed
access--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2173"><!--properties, beans, indexed
access--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2174"><!--access, properties, indexed
beans--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2175"><!--indexes, bean
properties--></fo:wrapper>element of a bean property, which
is an array or a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-6.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.6.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.getIndexed()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2176"><!--PropertyUtils.getIndexed( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2177"><!--methods, PropertyUtils.getIndexed(
)--></fo:wrapper> to retrieve an element at a specific index
of an array or a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> property. Assuming that the
<fo:inline font-family="monospace" font-size="0.8em">chapters</fo:inline> property of the <fo:inline font-family="monospace" font-size="0.8em">Book</fo:inline>
object is an instance of <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline>, the following
demonstrates the use of <fo:inline font-family="monospace" font-size="0.8em">getIndexedProperty( )</fo:inline> to
access the first element of the list of chapters.</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt122">import org.apache.commons.beanutils.PropertyUtils;

// Create a new Book
Book book = new Book( );

// Create a list of Chapters
Chapter chapter1 = new Chapter( );
Chapter chapter2 = new Chapter( );
book.getChapters( ).add( chapter1 );
book.getChapters( ).add( chapter2 );

// Retrieve the first Chapter via a property name and an index.
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Chapter chapter = </fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    (Chapter) PropertyUtils.getIndexedProperty(book, "chapters[0]");</fo:inline>
            </fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-6.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.6.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">There are two ways of accessing an indexed property via
<fo:inline font-family="monospace" font-size="0.8em">PropertyUtils</fo:inline>: the index can be specified in the
name, or it can be specified as a third parameter. The following code
uses both versions of <fo:inline font-family="monospace" font-size="0.8em">getIndexedProperty( )</fo:inline> to
retrieve the first chapter from the list of chapters:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt123">import org.apache.commons.beanutils.PropertyUtils;

Book book = new Book( );

Chapter chapter1 = new Chapter( );
Chapter chapter2 = new Chapter( );
List chapters = new ArrayList( );
chapters.add( chapter1 );
chapters.add( chapter2 );

book.setChapters( chapters );

// You can retrieve the first chapters like this...
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Chapter chapterOne = </fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    (Chapter) PropertyUtils.getIndexedProperty( book, "chapters[0]" );</fo:inline>

// Or... you can retrieve the first chapter like this...
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">chapterOne =</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    (Chapter) PropertyUtils.getIndexedProperty( book, "chapters", 0 );</fo:inline>
            </fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In the previous example, the first version of
<fo:inline font-family="monospace" font-size="0.8em">getIndexedProperty( )</fo:inline> accepts a string specifying
an indexed bean property—<fo:inline font-family="monospace" font-size="0.8em">chapters[0]</fo:inline>. If
this string is not well-formed, <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils</fo:inline> will
throw an <fo:inline font-family="monospace" font-size="0.8em">IllegalArgumentException</fo:inline>;
<fo:inline font-family="monospace" font-size="0.8em">chapters[zero]</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">chapters['zero']</fo:inline> will cause an exception because
neither index is an integer value, and <fo:inline font-family="monospace" font-size="0.8em">chapters]0[</fo:inline>
will cause an exception because the brackets are transposed. The
second call to <fo:inline font-family="monospace" font-size="0.8em">getIndexedProperty( )</fo:inline> is preferred
because there is less risk that a parsing error will throw an
<fo:inline font-family="monospace" font-size="0.8em">IllegalArgumentException</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-7"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Accessing Mapped Bean Properties</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.7. Accessing Mapped Bean Properties</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-7.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.7.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to retrieve values <fo:wrapper id="jakartackbk-CHP-3-ITERM-2178"><!--JavaBeans, properties, mapped
bean access--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2179"><!--beans, properties, mapped
access--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2180"><!--properties, beans, mapped
access--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2181"><!--access, properties, mapped
beans--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2182"><!--mapping, bean
property access--></fo:wrapper>from a bean property of type
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-7.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.7.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.getMappedProperty()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2183"><!--PropertyUtils.getMappedProperty( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2184"><!--methods, PropertyUtils.getMappedProperty(
)--></fo:wrapper> to obtain values from a map property. The
code here retrieves the value corresponding to the key
"Dining Room" from the
<fo:inline font-family="monospace" font-size="0.8em">room</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">map</fo:inline> property of the
<fo:inline font-family="monospace" font-size="0.8em">Apartment</fo:inline> bean:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt124">import org.apache.commons.beanutils.PropertyUtils;

Room dining = new Room( );
dining.setArea( 20 );
dining.setCarpeted( true );
dining.setFurnished( true );

Map rooms = new HashMap( );
rooms.put( "Dining Room", dining );

Apartment apartment = new Apartment( );
apartment.setRooms( rooms );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">// Retrieve the Dining Room object</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Room room = </fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    PropertyUtils.getMappedProperty( apartment, "rooms(Dining Room)" );</fo:inline>
            </fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-7.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.7.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The code shown in the Solution section retrieves the value from the
<fo:inline font-family="monospace" font-size="0.8em">rooms</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">map</fo:inline> corresponding to the
key "Dining
Room"—<fo:inline font-family="monospace" font-size="0.8em">rooms(Dining</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">Room)</fo:inline>. The call to <fo:inline font-family="monospace" font-size="0.8em">getMappedProperty(
)</fo:inline> is the equivalent of calling <fo:inline font-family="monospace" font-size="0.8em">apartment.getRooms(
).get("Dining</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">Room")</fo:inline>. <fo:basic-link internal-destination="jakartackbk-CHP-3-FIG-4" text-decoration="underline" color="blue">Figure 3-4</fo:basic-link> illustrates the structure and relationship of
these two beans used, <fo:inline font-family="monospace" font-size="0.8em">Apartment</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">Room</fo:inline>.</fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-3-FIG-4"><fo:block id="I_3_tt125"><fo:external-graphic src="/Users/tobrien/Library/Code/common-java-cookbook/content/target/classes/docbook/figs/print/jccb_0304.pdf" width="235px" height="60px" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:application/pdf"/></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-previous.within-column="always">Figure 3-4. Diagram of the Apartment and Room beans</fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">getMappedProperty( )</fo:inline> works only if the specified
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> has <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> keys.
<fo:inline font-family="monospace" font-size="0.8em">getMappedProperty( )</fo:inline> takes the string between
<fo:inline font-family="monospace" font-size="0.8em">(</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">)</fo:inline> and retrieves the value
corresponding to this string.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">There is another version of <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.getMappedProperty()</fo:inline> that takes a third argument, allowing you to specify the
map property in the second argument and the key in the third
argument. The code here uses two different versions of
<fo:inline font-family="monospace" font-size="0.8em">getMappedProperty( )</fo:inline> to retrieve the same value
from the <fo:inline font-family="monospace" font-size="0.8em">rooms</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">map</fo:inline> property:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt126">import java.util.Map;
import java.util.HashMap;
import org.apache.commons.beanutils.PropertyUtils;

Room dining = new Room( );
dining.setArea( 20 );
dining.setCarpeted( true );
dining.setFurnished( true );

Map rooms = new HashMap( );
rooms.put( "Dining Room", dining );

Apartment apartment = new Apartment( );
apartment.setRooms( rooms );

// Retrieve the livingRoom key
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Room room = </fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    (Room) PropertyUtils.getMappedProperty( apartment, 
     "rooms(Dining Room)" );</fo:inline>

// Or.. retrieve the livingRoom key with 3 parameters - 
// equivalent to previous
room = 
   <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold"> (Room) PropertyUtils.getMappedProperty( apartment, "rooms", 
   "Dining Room" ); </fo:inline>
            </fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">What was true for <fo:inline font-family="monospace" font-size="0.8em">getIndexedProperty( )</fo:inline> is also
true for <fo:inline font-family="monospace" font-size="0.8em">getMappedProperty( )</fo:inline>. In the previous
example, the first call to <fo:inline font-family="monospace" font-size="0.8em">getMappedProperty( )</fo:inline>
specifies a key with a string—<fo:inline font-family="monospace" font-size="0.8em">rooms(Dining
Room)</fo:inline>. If <fo:inline font-family="monospace" font-size="0.8em">getMappedProperty( )</fo:inline> is unable
to parse this string, an <fo:inline font-family="monospace" font-size="0.8em">IllegalArgumentException</fo:inline>
will be thrown; <fo:inline font-family="monospace" font-size="0.8em">rooms[DiningRoom)</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">rooms((DiningRoom)</fo:inline> will both throw
<fo:inline font-family="monospace" font-size="0.8em">IllegalArgumentException</fo:inline> because the property
string is not well-formed. The second call to
<fo:inline font-family="monospace" font-size="0.8em">getMappedProperty( )</fo:inline> reduces the risk of a
property string parsing error because the key <fo:wrapper id="jakartackbk-CHP-3-ITERM-2185"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2186"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2187"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2188"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2189"><!----></fo:wrapper>is specified in
a third parameter.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-8"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Accessing a Simple, Nested, Indexed, and Mapped Bean Property</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.8. Accessing a Simple, Nested, Indexed, and Mapped Bean Property</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-8.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.8.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to access a nested,<fo:wrapper id="jakartackbk-CHP-3-ITERM-2190"><!--JavaBeans, properties, accessing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2191"><!--beans, properties, accessing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2192"><!--properties, beans, accessing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2193"><!--access, properties, beans--></fo:wrapper>
indexed, and mapped bean property by name.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-8.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.8.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.getProperty()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2194"><!--PropertyUtils.getProperty( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2195"><!--methods, PropertyUtils.getProperty(
)--></fo:wrapper> to access any bean property. This single
utility can be used to access any bean property be it simple, nested,
indexed, mapped, or any combination thereof. The following example
accesses a simple property, <fo:inline font-family="monospace" font-size="0.8em">population</fo:inline>, of a
nested mapped property, <fo:inline font-family="monospace" font-size="0.8em">cities</fo:inline>, on an indexed
property, <fo:inline font-family="monospace" font-size="0.8em">regions</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt127">import java.util.*;
import org.apache.commons.beanutils.PropertyUtils;

// Create a series of nested beans
City richmond = new City( );
richmond.setName( "Richmond" );
richmond.setPopulation( new Long(500000) );

Map cities = new HashMap( );
cities.put( "richmond", richmond );

Region midAtlantic = new Region( );
midAtlantic.setName( "Mid-Atlantic" );
midAtlantic.setCities( cities );

List regions = new ArrayList( );
regions.add( midAtlantic );

Country country = new Country( );
country.setName( "United States" );
country.setRegions( regions );

// Retrieve the population of Richmond
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Long population =</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    (Long) PropertyUtils.getProperty( country, </fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">                                "regions[0].cities(richmond).population" );</fo:inline>
            </fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Most of this code sets up a complex nested object hierarchy to be
queried by <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.getProperty( )</fo:inline>.
Retrieving the
<fo:inline font-family="monospace" font-size="0.8em">regions[0].cities(richmond).population</fo:inline> property is
the equivalent of traversing down a tree of objects and retrieving
the bottom-most element—<fo:inline font-family="monospace" font-size="0.8em">population</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-8.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.8.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The emphasized code retrieves the <fo:inline font-family="monospace" font-size="0.8em">population</fo:inline> of
the <fo:inline font-family="monospace" font-size="0.8em">City</fo:inline> object <fo:inline font-family="monospace" font-size="0.8em">richmond</fo:inline>; it is
equivalent to the following code excerpt:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt128">Region region = (Region) country.getRegions( ).get(0);
City city = (City) region.getCities( ).get("Richmond");
Long population = city.getPopulation( );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-3-FIG-5" text-decoration="underline" color="blue">Figure 3-5</fo:basic-link> displays the structure of these three
beans: <fo:inline font-family="monospace" font-size="0.8em">Country</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">Region</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">City</fo:inline>.</fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-3-FIG-5"><fo:block id="I_3_tt129"><fo:external-graphic src="/Users/tobrien/Library/Code/common-java-cookbook/content/target/classes/docbook/figs/print/jccb_0305.pdf" width="334px" height="46px" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:application/pdf"/></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-previous.within-column="always">Figure 3-5. The Country, Region, and City beans</fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">When accessing a bean property, you can use
<fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.getProperty( )</fo:inline> in lieu of the
methods introduced in the previous four recipes. The
<fo:inline font-family="monospace" font-size="0.8em">getProperty( )</fo:inline> method parses the supplied property
name, splitting the name as the period character. Once this property
has been split, this utility parses each token and passes the string
to the appropriate method—<fo:inline font-family="monospace" font-size="0.8em">getSimpleProperty()</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">getNestedProperty( )</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">getIndexedProperty( )</fo:inline>, or
<fo:inline font-family="monospace" font-size="0.8em">getMappedProperty( )</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-8.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.8.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Bean properties may also be retrieved using a simple expression
language, such as <fo:wrapper id="jakartackbk-CHP-3-ITERM-2196"><!--Expression Language
(EL)--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2197"><!--EL (Expression
Language)--></fo:wrapper>Expression Language (EL) or
<fo:wrapper id="jakartackbk-CHP-3-ITERM-2198"><!--Java Expression Language
(JEXL)--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2199"><!--JEXL (Java
Expression Language)--></fo:wrapper>Java Expression Language
(JEXL). For more information about retrieving bean properties using
an expression language, see <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-1" text-decoration="underline" color="blue">Recipe 12.1</fo:basic-link>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Bean properties may also be<fo:wrapper id="jakartackbk-CHP-3-ITERM-2200"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2201"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2202"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2203"><!----></fo:wrapper> retrieved using an XPath
expression. For more information, see <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-1" text-decoration="underline" color="blue">Recipe 12.1</fo:basic-link>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-9"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Determining the Type of a Bean Property</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.9. Determining the Type of a Bean Property</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-9.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.9.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to determine
<fo:wrapper id="jakartackbk-CHP-3-ITERM-2204"><!--JavaBeans, properties, types
of--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2205"><!--beans, properties, types
of--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2206"><!--properties, beans, types
of--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2207"><!--types of bean
properties--></fo:wrapper>the type of a bean property.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-9.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.9.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.getPropertyType( )</fo:inline> to determine
the type of a bean property. This utility will return a
<fo:inline font-family="monospace" font-size="0.8em">Class</fo:inline> object that represents the return type of
the property's getter method. The following example
uses this method to obtain the return type for the
<fo:inline font-family="monospace" font-size="0.8em">author</fo:inline> property on the <fo:inline font-family="monospace" font-size="0.8em">Book</fo:inline>
bean:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt130">import org.apache.commons.beanutils.PropertyUtils

Book book = new Book( );

Class type = PropertyUtils.getPropertyType( book, "author" );

System.out.println( "book.author type: " + type.getName( ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example retrieves and displays the type of the
<fo:inline font-family="monospace" font-size="0.8em">author</fo:inline> property on <fo:inline font-family="monospace" font-size="0.8em">Book</fo:inline>, which
happens to be a <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> object. The type of the
property is returned and printed to the console:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt131">book.author type: org.test.Person</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-9.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.9.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.getPropertyType()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2208"><!--PropertyUtils.getPropertyType( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2209"><!--methods, PropertyUtils.getProperty(
)--></fo:wrapper> also works for a complex bean property.
Passing a nested, indexed, or mapped bean property to this utility
will return the type of the last property specified. The following
code retrieves the type of a nested, indexed
property—<fo:inline font-family="monospace" font-size="0.8em">chapters[0].name</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt132">import org.apache.commons.beanutils.PropertyUtils;

Chapter chapter = new Chapter( );
chapter.setName( "Chapter 3 BeanUtils" );
chapter.setLength( new Integer(40) );

List chapters = new ArrayList( );
chapters.add( chapter );

Book book = new Book( );
book.setName( "Jakarta Commons Cookbook" );
book.setAuthor( "Dude" );
book.setChapters( chapters );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">String property = "chapters[0].name";</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Class propertyType = PropertyUtils.getPropertyType(book, property);</fo:inline>

System.out.println( property + " type: " + propertyType.getName( ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This code retrieves the type of the <fo:inline font-family="monospace" font-size="0.8em">name</fo:inline> property
from an instance of the <fo:inline font-family="monospace" font-size="0.8em">Chapter</fo:inline> retrieved as an
indexed property, and it prints the following output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt133">chapters[0].name type: java.lang.String</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils</fo:inline> contains another method to retrieve
a <fo:inline font-family="monospace" font-size="0.8em">PropertyDescriptor-- PropertyUtils.getPropertyDescriptor(
)</fo:inline>. This method takes a reference to any bean property,
simple or complex, and returns an object describing the type of a
property and providing access to the read and write methods of a
property. The following code excerpt obtains the
<fo:inline font-family="monospace" font-size="0.8em">PropertyDescriptor</fo:inline> of a nested, indexed
property—<fo:inline font-family="monospace" font-size="0.8em">chapters[0].name</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt134">String property = "chapters[0].name";

PropertyDescriptor descriptor = 
    PropertyUtils.getPropertyDescriptor(book, property);

Class propertyType = descriptor.getPropertyType( ); 
Method writeMethod = descriptor.getWriteMethod( );
Method readMethod = descriptor.getReadMethod( );</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-10"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Comparing Beans</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.10. Comparing Beans</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-10.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.10.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to sort <fo:wrapper id="jakartackbk-CHP-3-ITERM-2210"><!--JavaBeans, properties, comparing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2211"><!--beans, properties, comparing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2212"><!--properties, beans, comparing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2213"><!--comparing, beans--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2214"><!--sorting, bean
properties--></fo:wrapper>or compare beans by a bean
property.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-10.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.10.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use
<fo:inline font-family="monospace" font-size="0.8em">BeanComparator</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2215"><!--BeanComparator--></fo:wrapper>
to compare two beans using a bean property, which can be simple,
nested, indexed, or mapped. <fo:inline font-family="monospace" font-size="0.8em">BeanComparator</fo:inline> obtains
the value of the same bean property from two objects and, by default,
compares the properties with a
<fo:inline font-family="monospace" font-size="0.8em">ComparableComparator</fo:inline>. The following example sorts
a list of <fo:inline font-family="monospace" font-size="0.8em">Country</fo:inline> objects using a
<fo:inline font-family="monospace" font-size="0.8em">BeanComparator</fo:inline> and the default
<fo:inline font-family="monospace" font-size="0.8em">ComparableComparator</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt135">import java.util.*;
import org.apache.commons.beanutils.BeanComparator;

Country country1 = new Country( );
country1.setName( "India" );

Country country2 = new Country( );
country2.setName( "Pakistan" );

Country country3 = new Country( );
country3.setName( "Afghanistan" );

// Create a List of Country objects
Country[] countryArray = new Country[] { country1, country2, country3 };
List countryList = Arrays.asList( countryArray );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">// Sort countries by name</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Comparator nameCompare = new BeanComparator( "name" );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Collections.sort( countryList, nameCompare );</fo:inline>

System.out.println( "Sorted Countries:" );
Iterator countryIterator = countryList.iterator( );
while( countryIterator.hasNext( ) ) {
    Country country = (Country) countryIterator.next( );
    System.out.println( "\tCountry: " + country.getName( ) );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This code creates three <fo:inline font-family="monospace" font-size="0.8em">Country</fo:inline> objects with
different names, places the <fo:inline font-family="monospace" font-size="0.8em">Country</fo:inline> objects into a
list, and sorts this list with a <fo:inline font-family="monospace" font-size="0.8em">BeanComparator</fo:inline>
configured to compare by the bean property <fo:inline font-family="monospace" font-size="0.8em">name</fo:inline>.
This code executes and prints the sorted list of countries:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt136">Sorted Countries:
    Country: Afghanistan
    Country: India
    Country: Pakistan</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-10.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.10.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous example demonstrated the default behavior of
<fo:inline font-family="monospace" font-size="0.8em">BeanComparator</fo:inline>; when a
<fo:inline font-family="monospace" font-size="0.8em">BeanComparator</fo:inline> is constructed with only one
parameter, it uses a <fo:inline font-family="monospace" font-size="0.8em">ComparableComparator</fo:inline> to
compare the values of the properties it retrieves. You can also
construct a <fo:inline font-family="monospace" font-size="0.8em">BeanComparator</fo:inline> with an instance of
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline>; in this case,
<fo:inline font-family="monospace" font-size="0.8em">BeanComparator</fo:inline> decorates another
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline>, retrieving the values of a property
and passing these values on to an instance of
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline>. The following example demonstrates the
use of <fo:inline font-family="monospace" font-size="0.8em">BeanComparator</fo:inline> with a custom
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> implementation. This example involves
two objects shown in <fo:basic-link internal-destination="jakartackbk-CHP-3-FIG-6" text-decoration="underline" color="blue">Figure 3-6</fo:basic-link>:
<fo:inline font-family="monospace" font-size="0.8em">ElectricVehicle</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">Engine</fo:inline>.</fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-3-FIG-6"><fo:block id="I_3_tt137"><fo:external-graphic src="/Users/tobrien/Library/Code/common-java-cookbook/content/target/classes/docbook/figs/print/jccb_0306.pdf" width="223px" height="88px" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:application/pdf"/></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-previous.within-column="always">Figure 3-6. Objects involved in a sorting example</fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">An application needs to sort <fo:inline font-family="monospace" font-size="0.8em">ElectricVehicle</fo:inline>
objects by efficiency, and, in this contrived example, efficiency is
defined as the number of miles per gallon times the percentage of
electric operation; an 80% electric hybrid vehicle is more efficient
than a 25% electric hybrid vehicle with the same mileage because of
reduced emissions. The code fragments shown in <fo:basic-link internal-destination="jakartackbk-CHP-3-EX-5" text-decoration="underline" color="blue">Example 3-5</fo:basic-link> sort a collection of beans by wrapping a
custom <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> with a
<fo:inline font-family="monospace" font-size="0.8em">BeanComparator</fo:inline>.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-3-EX-5"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3-5. Decorating a Comparator with a BeanComparator</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e9197">import java.util.*;
import org.apache.commons.beanutils.BeanComparator;

// Create Engines
Engine engine1 = new Engine( );
engine1.setMilesGallon( new Integer(60) );
engine1.setPercentElectric( new Integer(50) );

Engine engine2 = new Engine( );
engine2.setMilesGallon( new Integer(90) );
engine2.setPercentElectric( new Integer(50) );

Engine engine3 = new Engine( );
engine3.setMilesGallon( new Integer(65) );
engine3.setPercentElectric( new Integer(45) );

// Create Vehicles
ElectricVehicle vehicle1 = new ElectricVehicle( );
vehicle1.setMake( "Toy Yoda" );
vehicle1.setModel( "Electro" );
vehicle1.setYear( 2005 );
vehicle1.setEngine( engine1 );

ElectricVehicle vehicle2 = new ElectricVehicle( );
vehicle2.setMake( "Fjord" );
vehicle2.setModel( "Photon" );
vehicle2.setYear( 2004 );
vehicle2.setEngine( engine2 );

ElectricVehicle vehicle3 = new ElectricVehicle( );
vehicle3.setMake( "Ford" );
vehicle3.setModel( "Electric Pinto" );
vehicle3.setYear( 2005 );
vehicle3.setEngine( engine3 );

// Create List of Vehicles
List vehicles = new ArrayList( );
vehicle.add( vehicle1 );
vehicle.add( vehicle2 );
vehicle.add( vehicle3 );

// Define Engine Comparison Logic in an Anonymous inner class
// which implements the Comparator interface
Comparator engineCompare = new Comparator( ) {
    public int compare(Object o1, Object o2) {
        Engine engine1 = (Engine) o1;
        Engine engine2 = (Engine) o2;

        int engine1Temp = engine1.getMilesGallon( ).intValue( ) *
                        engine1.getPercentElectric( ).intValue( );
        int engine2Temp = engine2.getMilesGallon( ).intValue( ) *
                        engine2.getPercentElectric( ).intValue( );

        Integer engine1Factor = new Integer( engine1Temp );
        Integer engine2Factor = new Integer( engine2Temp );

        return engine1Factor.compareTo( engine2Factor );
    }
}

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Comparator vehicleCompare = new BeanComparator( "engine", engineCompare );</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Collections.sort( vehicles, vehicleCompare );</fo:inline>

// Print Sorted Results
System.out.println( "Vehicles Sorted by Efficiency:" );
Iterator vehicleIter = vehicles.iterator( );
while( vehicleIter.hasNext( ) ) {
    ElectricVehicle vehicle = (ElectricVehicle) vehicleIter.next( );
    System.out.println( "\tVehicle: " + vehicle.getModel( ) + ", " +
        vehicle.getEngine( ).getMilesGallon( ) + " MPG, " + 
        vehicle.getEngine( ).getPercentElectric( ) + "% Electric" );
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">engineCompare</fo:inline> contains the logic used to sort
vehicles by efficiency, and <fo:inline font-family="monospace" font-size="0.8em">BeanComparator</fo:inline>
supplies the <fo:inline font-family="monospace" font-size="0.8em">engine</fo:inline> properties to this
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> implementation. This previous example
creates three vehicles and sorts the vehicles in order of efficiency;
the following results are printed:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt138">Vehicles Sorted by Efficiency:
    Vehicle: Photon, 90 MPG, 50% Electric
    Vehicle: Electro, 60 MPG, 50% Electric
    Vehicle: Electric Pinto, 65 MPG, 45% Electric</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-10.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.10.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-4" text-decoration="underline" color="blue">Chapter 4</fo:basic-link> provides examples of various
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> implementations, which can be used to
decorate other comparators. One <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> in
particular is important if you plan to sort beans on a bean property,
which could be <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>. If a bean property could be
<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>, make sure to pass a
<fo:inline font-family="monospace" font-size="0.8em">NullComparator</fo:inline> to
<fo:inline font-family="monospace" font-size="0.8em">BeanComparator</fo:inline>; otherwise,
<fo:inline font-family="monospace" font-size="0.8em">ComparableComparator</fo:inline> will throw a
<fo:inline font-family="monospace" font-size="0.8em">NullPointerException</fo:inline> if a property value is
<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>. <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-5" text-decoration="underline" color="blue">Recipe 4.5</fo:basic-link>
discusses techniques for decorating a <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline>
with <fo:inline font-family="monospace" font-size="0.8em">NullComparator</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-15" text-decoration="underline" color="blue">Recipe 3.15</fo:basic-link> discusses a
<fo:inline font-family="monospace" font-size="0.8em">BeanPredicate</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2216"><!--BeanPredicate
object--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2217"><!--objects, BeanPredicate--></fo:wrapper>
object that can be used to validate beans. The
<fo:inline font-family="monospace" font-size="0.8em">BeanPredicate</fo:inline> is similar to the
<fo:inline font-family="monospace" font-size="0.8em">BeanComparator</fo:inline> as it decorates another instance of
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>, providing access to a<fo:wrapper id="jakartackbk-CHP-3-ITERM-2218"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2219"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2220"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2221"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2222"><!----></fo:wrapper> bean property.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-11"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Copying Bean Properties</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.11. Copying Bean Properties</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-11.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.11.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You have two instances of a
<fo:wrapper id="jakartackbk-CHP-3-ITERM-2223"><!--JavaBeans, properties, copying--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2224"><!--beans, properties, copying--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2225"><!--properties, beans, copying--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2226"><!--copying, bean
properties--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2227"><!--instances, beans, copying
properties--></fo:wrapper>bean, and you need to copy the
properties of one bean to another instance of the same class.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-11.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.11.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.copyProperties()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2228"><!--PropertyUtils.copyProperties( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2229"><!--methods, PropertyUtils.copyProperties(
)--></fo:wrapper> to copy the properties from one bean to
another. The first parameter is the destination bean, and the second
parameter is the bean to copy properties from:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt139">import org.apache.commons.beanutils.PropertyUtils;

Book book = new Book( );
book.setName( "Prelude to Foundation" );
book.setAuthorName( "Asimov" );

Book destinationBook = new Book( );

PropertyUtils.copyProperties( destinationBook, book );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">After executing this code, <fo:inline font-family="monospace" font-size="0.8em">destinationBook.getName()</fo:inline> should return "Prelude to
Foundation," and
<fo:inline font-family="monospace" font-size="0.8em">destinationBook.getAuthorName( )</fo:inline> should return
"Asimov"; the
<fo:inline font-family="monospace" font-size="0.8em">name</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">authorName</fo:inline> properties
of <fo:inline font-family="monospace" font-size="0.8em">book</fo:inline> were both copied to
<fo:inline font-family="monospace" font-size="0.8em">destinationBook</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-11.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.11.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.copyProperties( )</fo:inline> retrieves the
values of all properties from a source instance of a bean, assigning
the retrieved values to a matching property on a destination
instance. If the <fo:inline font-family="monospace" font-size="0.8em">Book</fo:inline> bean in the previous example
had an <fo:inline font-family="monospace" font-size="0.8em">author</fo:inline> property of type
<fo:inline font-family="monospace" font-size="0.8em">Author</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">copyProperties( )</fo:inline> would
have assigned the same reference object to the
<fo:inline font-family="monospace" font-size="0.8em">destinationBook</fo:inline>. In other words,
<fo:inline font-family="monospace" font-size="0.8em">copyProperties( )</fo:inline> does <fo:inline font-style="italic">not</fo:inline>
clone the values of the bean properties. The following example
demonstrates this explicitly:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt140">Author author = new Author( );
author.setName( "Zinsser" );

Book book = new Book( );
book.setName( "On Writing Well" );
book.setAuthor( author );

Book destinationBook = new Book( );

PropertyUtils.copyProperties( destinationBook, book );

// At this point book and destinationBook have the same author object
if( book.getAuthor( ) == destinationBook.getAuthor( ) ) {
    system.out.println( "Author objects identical" );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">author</fo:inline> properties of these two objects are now
identical references to the same instance of the
<fo:inline font-family="monospace" font-size="0.8em">Author</fo:inline> class. <fo:inline font-family="monospace" font-size="0.8em">copyProperties( )</fo:inline>
does not clone the values of bean properties.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">copyProperties( )</fo:inline> can also copy the contents of a
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> to a bean if the keys of a
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> correspond to names of simple bean properties
on the destination bean:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt141">Map mapProps = new HashMap( );
mapProps.put( "name", "The Art of Computer Programming" );
mapProps.put( "author", "Knuth" );

Book destinationBook = new Book( );

PropertyUtils.copyProperties( destinationBook, mapProps );</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-11.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.11.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you need to clone a bean, take a look at <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-12" text-decoration="underline" color="blue">Recipe 3.12</fo:basic-link>
            </fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-12"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Cloning a Bean</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.12. Cloning a Bean</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-12.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.12.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to clone a
bean.<fo:wrapper id="jakartackbk-CHP-3-ITERM-2230"><!--JavaBeans, properties, cloning--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2231"><!--beans, properties, cloning--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2232"><!--properties, beans, cloning--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2233"><!--cloning, properties--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2234"><!--instances, beans, cloning
properties--></fo:wrapper>
            </fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-12.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.12.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">BeanUtils.cloneBean()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2235"><!--BeanUtils.cloneBean( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2236"><!--methods, BeanUtils.cloneBean(
)--></fo:wrapper>. This method creates a new instance of a
bean with the default constructor, and it copies every property to
the new bean instance. The following instance creates a cloned
instance of a <fo:inline font-family="monospace" font-size="0.8em">Book</fo:inline> object:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt142">import org.apache.commons.beanutils.BeanUtils;

Book book1 = new Book( );
book1.setName( "Count of Monte Cristo" );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Book book2 = (Book) BeanUtils.cloneBean( book1 );</fo:inline>
            </fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-12.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.12.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">cloneBean( )</fo:inline> instantiates a new instance of the
bean to be cloned and calls <fo:inline font-family="monospace" font-size="0.8em">BeanUtils.copyProperties(
)</fo:inline> to transfer all readable bean properties to the newly
instantiated bean. The following code demonstrates the steps that
<fo:inline font-family="monospace" font-size="0.8em">cloneBean( )</fo:inline> is taking to clone an instance of a
bean:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt143">Book book1 = new Book( );
book1.setName( "Practical C Programming" );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Book book2 = book1.getClass( ).newInstance( );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">PropertyUtils.copyProperties( book2, book1 );</fo:inline>
            </fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-13"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Setting a Bean Property</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.13. Setting a Bean Property</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-13.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.13.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to set a simple, indexed, nested, or
<fo:wrapper id="jakartackbk-CHP-3-ITERM-2237"><!--JavaBeans, properties, setting--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2238"><!--beans, properties, setting--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2239"><!--properties, beans, setting--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2240"><!--setting bean properties--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2241"><!--configuration, bean
properties--></fo:wrapper>mapped bean property by name.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-13.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.13.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.setProperty()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2242"><!--PropertyUtils.setProperty( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2243"><!--methods, PropertyUtils.setProperty(
)--></fo:wrapper> to set any bean property: simple, nested,
indexed, or mapped. Pass the bean object to be modified, the name of
the property, and the value to <fo:inline font-family="monospace" font-size="0.8em">setProperty( )</fo:inline>;
this method will call the appropriate setter method on the supplied
object. The following example demonstrates the use of this method to
set two properties on a <fo:inline font-family="monospace" font-size="0.8em">Book</fo:inline> bean:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt144">import org.apache.commons.beanutils.PropertyUtils;

Person person1 = new Person( );
person1.setName( "Blah" );

Book book1 = new Book( );
book1.setName( "Blah" );
book1.setAuthor( "Blah" );

PropertyUtils.setProperty( book1, "name", "Some Apache Book" );
PropertyUtils.setProperty( book1, "author", new Person( ) );
PropertyUtils.setProperty( book1, "author.name", "Ken Coar" );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This code created an instance of the <fo:inline font-family="monospace" font-size="0.8em">Book</fo:inline> bean and
the <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> bean, and
<fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.setProperty( )</fo:inline> set both a simple and
a nested bean property.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-13.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.13.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In addition to simple and nested bean properties, this utility can
populate indexed and mapped properties. The following example
demonstrates the setting of mapped and indexed bean properties on a
<fo:inline font-family="monospace" font-size="0.8em">Book</fo:inline> object:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt145">Book book1 = new Book( );
book1.getChapters( ).add( new Chapter( ) );
book1.getChapters( ).add( new Chapter( ) );

PropertyUtils.setProperty( book1, "name", "Apache: The Definitive Guide" );
PropertyUtils.setProperty( book1, "author", new Person( ) );
PropertyUtils.setProperty( book1, "author.name", "Laurie" );
PropertyUtils.setProperty( book1, "chapters[0].name", "Introduction" );

Apartment apartment = new Apartment( );
apartment.getRooms( ).put( "livingRoom", new Room( ) );

PropertyUtils.setProperty( apartment, "rooms(livingRoom).length", 
                 new Integer(12) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Assume that the <fo:inline font-family="monospace" font-size="0.8em">Book</fo:inline> bean is associated with a
series of <fo:inline font-family="monospace" font-size="0.8em">Chapter</fo:inline> objects each of which have a
name property. The <fo:inline font-family="monospace" font-size="0.8em">Book</fo:inline> bean has a
<fo:inline font-family="monospace" font-size="0.8em">chapters</fo:inline> property, which is a list. The name of
the first chapter is set by referencing the
<fo:inline font-family="monospace" font-size="0.8em">chapters[0].name</fo:inline> property.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-14"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Testing Property Access</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.14. Testing Property Access</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-14.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.14.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to test a bean property
<fo:wrapper id="jakartackbk-CHP-3-ITERM-2244"><!--JavaBeans, properties, testing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2245"><!--beans, properties, testing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2246"><!--properties, beans, testing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2247"><!--testing, bean
properties--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2248"><!--access, beans--></fo:wrapper>to
see if it can be read from or written to.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-14.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.14.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.isReadable()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2249"><!--PropertyUtils.isReadable( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2250"><!--methods, PropertyUtils.isReadable(
)--></fo:wrapper> and <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.isWritable( )</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2251"><!--PropertyUtils.isWritable( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2252"><!--methods, PropertyUtils.isWritable(
)--></fo:wrapper>to see if a bean property is readable or
writable. The following code tests the <fo:inline font-family="monospace" font-size="0.8em">name</fo:inline>
property of the <fo:inline font-family="monospace" font-size="0.8em">Book</fo:inline> bean to see if it is readable
and writable:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt146">import org.apache.commons.beanutils.PropertyUtils;

// Create a Book demonstrating the getter and setter for "name"
Book book1 = new Book( );
book1.setName( "Blah" );
String name = book1.getName( );

// Can we read and write "name"
boolean nameReadable = PropertyUtils.isReadable( book, "name" );
boolean nameWritable = PropertyUtils.isWritable( book, "name" );

System.out.println( "Is name readable? " + nameReadable );
System.out.println( "Is name writable? " + nameWritable );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">name</fo:inline> property is both readable and writable,
so the <fo:inline font-family="monospace" font-size="0.8em">nameReadable</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">nameWritable</fo:inline> variables will both be true. The
output of this example is as follows:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt147">Is name readable? true
Is name writable? true</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-14.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.14.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In addition to working with simple properties, <fo:inline font-family="monospace" font-size="0.8em">isReadable()</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">isWritable( )</fo:inline> also work on nested,
indexed, and mapped properties. The following example demonstrates
the use of these methods to check access to the indexed,
quadruple-nested, mapped bean property <fo:inline font-family="monospace" font-size="0.8em">length</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt148">Book book1 = new Book( );
book1.getChapters( ).add( new Chapter( ) );

boolean isReadable =
    PropertyUtils.isReadable( book, 
        "chapters[0].author.apartment.rooms(livingRoom).length");

boolean isWritable =
    PropertyUtils.isWritable( book, 
        "chapters[0].author.apartment.rooms(livingRoom).length");</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.isReadable( )</fo:inline> returns true if a
specified bean property can be obtained via a public getter method,
and <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.isWritable( )</fo:inline> returns true if a
specified bean property corresponds to a public setter method. This
is an overly complex example, but it demonstrates the versatility of
<fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.isReadable( )</fo:inline> and of
<fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.isWritable( )</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-15"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Validating Beans with Predicates</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.15. Validating Beans with Predicates</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-15.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.15.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to test the state of a
<fo:wrapper id="jakartackbk-CHP-3-ITERM-2253"><!--JavaBeans, properties, validation--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2254"><!--beans, properties, validation--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2255"><!--properties, beans, validation--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2256"><!--validation, bean
properties--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2257"><!--predicates, bean
validation--></fo:wrapper>bean, testing for the presence or
absence of simple and nested bean properties.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-15.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.15.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use a
<fo:inline font-family="monospace" font-size="0.8em">BeanPredicate</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2258"><!--BeanPredicate--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2259"><!--interfaces, BeanPredicate--></fo:wrapper>
from Commons BeanUtils. A <fo:inline font-family="monospace" font-size="0.8em">BeanPredicate</fo:inline> is an
implementation of the <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> interface defined
in Commons Collections. As described in <fo:basic-link internal-destination="jakartackbk-CHP-4" text-decoration="underline" color="blue">Chapter 4</fo:basic-link>, a
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>'s <fo:inline font-family="monospace" font-size="0.8em">evaluate()</fo:inline> method takes an object and returns a
<fo:inline font-family="monospace" font-size="0.8em">boolean</fo:inline>; <fo:inline font-family="monospace" font-size="0.8em">BeanPredicate</fo:inline>
decorates another <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>, allowing that
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> to evaluate a bean property: simple,
nested, indexed, or mapped. The following code demonstrates the use
of <fo:inline font-family="monospace" font-size="0.8em">BeanPredicate</fo:inline> to validate the condition of a
bean:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt149">import org.apache.commons.beanutils.*;
import org.apache.commons.collections.*;

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">// A Predicate that returns true if the "name" property is not null</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Predicate teamNotNull = new BeanPredicate( "name", new NotNullPredicate( ) );</fo:inline>

               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">// A Predicate that returns true if the "coach.firstName" property</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">// is "Tom"</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Predicate coachFirstName = new BeanPredicate( "coach.firstName", </fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">                                              new EqualsPredicate("Tom") );</fo:inline>

               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">// Tie two Predicates together into an AndPredicate</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Predicate validateTeam = new AllPredicate( predicateArray );</fo:inline>

// Create Team Objects
Team fish = new Team( "Swordfish", new Coach( "Tom", "O'Connell") );
Team hens = new Team( "Hens", new Coach( "Bob", "McGarry") );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">boolean fishValid = validateTeam.evaluate( fish );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">boolean henValid = validateTeam.evaluate( hens );</fo:inline>

System.out.println( "Is Swordfish team valid? " + fishValid );
System.out.println( "Is Hens team valid? " + hensValid );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Assume that the two <fo:inline font-family="monospace" font-size="0.8em">Team</fo:inline> objects contain two
properties: <fo:inline font-family="monospace" font-size="0.8em">name</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">coach</fo:inline>. The
<fo:inline font-family="monospace" font-size="0.8em">coach</fo:inline> property on <fo:inline font-family="monospace" font-size="0.8em">Team</fo:inline> is a
<fo:inline font-family="monospace" font-size="0.8em">Coach</fo:inline> object with two properties:
<fo:inline font-family="monospace" font-size="0.8em">firstName</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">lastName</fo:inline>. The
first <fo:inline font-family="monospace" font-size="0.8em">BeanPredicate</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">teamNotNull</fo:inline>, uses a
<fo:inline font-family="monospace" font-size="0.8em">NotNullPredicate</fo:inline> to test the simple property
<fo:inline font-family="monospace" font-size="0.8em">name</fo:inline>. The second <fo:inline font-family="monospace" font-size="0.8em">BeanPredicate</fo:inline>
uses an <fo:inline font-family="monospace" font-size="0.8em">EqualPredicate</fo:inline> to test the nested property
<fo:inline font-family="monospace" font-size="0.8em">coach.firstName</fo:inline>. In the previous example, a
<fo:inline font-family="monospace" font-size="0.8em">Team</fo:inline> object is only valid if it has a name, and
the first name of the coach is
"Tom." Two teams are created and
the following output is printed:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt150">Is Swordfish team valid? true
Is Hens team valid? false</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-15.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.15.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A <fo:inline font-family="monospace" font-size="0.8em">BeanPredicate</fo:inline> obtains the value of the specified
bean property using <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils</fo:inline> and passes the
resulting property value to the <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> it was
constructed with; <fo:inline font-family="monospace" font-size="0.8em">BeanPredicate</fo:inline> decorates another
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>. The following example demonstrates the
use of <fo:inline font-family="monospace" font-size="0.8em">BeanPredicate</fo:inline>, wrapping an
<fo:inline font-family="monospace" font-size="0.8em">EqualPredicate</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">InstanceofPredicate</fo:inline>, and a composite
<fo:inline font-family="monospace" font-size="0.8em">AnyPredicate</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt151">import org.apache.commons.collections.Predicate;
import org.apache.commons.beanutils.BeanPredicate;
import org.apache.commons.collections.functors.AnyPredicate;
import org.apache.commons.collections.functors.EqualPredicate;
import org.apache.commons.collections.functors.InstanceofPredicate;
import org.apache.commons.collections.functors.OrPredicate;

// A predicate to validate the value of the age property
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Predicate example1 = new BeanPredicate( "age", </fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        new EqualPredicate( new Integer( 10 ) );</fo:inline>

// A predicate to validate the type of the title property
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Predicate example2 = new BeanPredicate( "book[4].title", </fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        new InstanceofPredicate( String.class ) );</fo:inline>

// A composite predicate definition
Predicate equalA = new EqualsPredicate("A");
Predicate equalB = new EqualsPredicate("B");
Predicate equalC = new EqualsPredicate("C");
Predicate eitherABC = 
    new AnyPredicate( new Predicate[] { equalA, equalB, equalC } );

// A predicate to validate the type of the title property
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Predicate example3 = new BeanPredicate( "mode", eitherABC );</fo:inline>
            </fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Predicate <fo:inline font-family="monospace" font-size="0.8em">example1</fo:inline> tests the
<fo:inline font-family="monospace" font-size="0.8em">age</fo:inline> property of a bean, passing the property value
to an <fo:inline font-family="monospace" font-size="0.8em">EqualPredicate</fo:inline>, which returns true if age is
10. Predicate <fo:inline font-family="monospace" font-size="0.8em">example2</fo:inline> tests the property
<fo:inline font-family="monospace" font-size="0.8em">title</fo:inline> from the fifth element in the
<fo:inline font-family="monospace" font-size="0.8em">book</fo:inline> property; if the book's
title property value is of type <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">example2</fo:inline> returns true. Predicate
<fo:inline font-family="monospace" font-size="0.8em">example3</fo:inline> tests the value of the
<fo:inline font-family="monospace" font-size="0.8em">mode</fo:inline> property of a bean, it evaluates to true if
<fo:inline font-family="monospace" font-size="0.8em">mode</fo:inline> equals "A,"
"B," or
"C." These three examples
demonstrate that a <fo:inline font-family="monospace" font-size="0.8em">BeanPredicate</fo:inline> is a simple
decorator, which allows one to apply any <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>
to a bean property.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-15.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.15.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-4" text-decoration="underline" color="blue">Chapter 4</fo:basic-link> contains more recipes focused on
using <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> implementations to perform complex
validation and to create intelligent, self-validating collections.
This recipe introduces two simple predicates;
<fo:inline font-family="monospace" font-size="0.8em">EqualPredicate</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">NotNullPredicate</fo:inline> are discussed in <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-7" text-decoration="underline" color="blue">Recipe 4.7</fo:basic-link>. For more information about using
predicates, see <fo:basic-link internal-destination="jakartackbk-CHP-4" text-decoration="underline" color="blue">Chapter 4</fo:basic-link> and the Commons
Collections project site at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/collections</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-16"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Creating a Map of Bean Properties</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.16. Creating a Map of Bean Properties</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-16.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.16.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to create a
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2260"><!--JavaBeans, properties, mapping--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2261"><!--beans, properties, mapping--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2262"><!--properties, beans, mapping--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2263"><!--mapping, beans
properties--></fo:wrapper> that contains every property in a
bean.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-16.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.16.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.describe()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2264"><!--PropertyUtils.describe( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2265"><!--methods, PropertyUtils.describe(
)--></fo:wrapper> to generate a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>
containing all of the readable bean properties from a bean instance.
Supply an instance of a bean and this method will return a
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> containing all readable bean properties. The
code shown here demonstrates the use of
<fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.describe( )</fo:inline> to describe a
<fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> bean:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt152">import java.util.*;
import org.apache.commons.beanutils.PropertyUtils;

// Create a Person and a Book bean instance
Person person = new Person( );
person.setName( "Some Dude" );

Book book = new Book( );
book.setName( "Some Silly Computer Book" );
book.setAuthor( person );

// Describe both beans with a Map
Map bookMap = PropertyUtils.describe( book );
Map authorMap = PropertyUtils.describe( bookMap.get("book") );

System.out.println( "Book Name: " + bookMap.get( "name" ) );
System.out.println( "Author Name: " + authorMap.get( "name" ) );</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-16.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.16.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous example involves a <fo:inline font-family="monospace" font-size="0.8em">Book</fo:inline> bean with a
<fo:inline font-family="monospace" font-size="0.8em">name</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">author</fo:inline> property; the
<fo:inline font-family="monospace" font-size="0.8em">author</fo:inline> property is a <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline>
bean with one property: <fo:inline font-family="monospace" font-size="0.8em">name</fo:inline>. The two maps,
<fo:inline font-family="monospace" font-size="0.8em">bookMap</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">authorMap</fo:inline>, contain
keys for every defined bean property, and two of those properties are
printed out:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt153">Book Name: Some Silly Computer Book
Author Name: Some Dude</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The map returned from <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.describe( )</fo:inline> is
a <fo:inline font-family="monospace" font-size="0.8em">HashMap</fo:inline> that contains every property from the
bean to be described. Internally, <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.describe()</fo:inline> uses <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.getPropertyDescriptors(
)</fo:inline> to obtain the list of properties to put into this map.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-16.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.16.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-17" text-decoration="underline" color="blue">Recipe 3.17</fo:basic-link> demonstrates the use of the
<fo:inline font-family="monospace" font-size="0.8em">BeanMap</fo:inline> to wrap a bean and expose a
bean's properties via the <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>
interface.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-17"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Wrapping a Bean with a Map</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.17. Wrapping a Bean with a Map</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-17.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.17.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to expose a bean's properties<fo:wrapper id="jakartackbk-CHP-3-ITERM-2266"><!--JavaBeans, properties, wrapping
maps--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2267"><!--beans, properties, wrapping
maps--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2268"><!--properties, beans, wrapping
maps--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2269"><!--wrapping, bean
properties--></fo:wrapper> as a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>, and
operate on the bean properties as if they were entries in a
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-17.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.17.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Wrap any bean in a
<fo:inline font-family="monospace" font-size="0.8em">BeanMap</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2270"><!--BeanMap--></fo:wrapper>.
This <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> implementation uses introspection to
provide access to bean properties as if they were key/value pairs in
a map. This code wraps a <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> bean with
<fo:inline font-family="monospace" font-size="0.8em">BeanMap</fo:inline>, iterating through every key and accessing
bean properties with <fo:inline font-family="monospace" font-size="0.8em">get( )</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt154">import java.util.*;
import org.apache.commons.collections.BeanMap;

Person person = new Person( );
person.setName( "Jim" );
person.setAge( new Integer( 28 ) );
person.setOccupation( "Developer" );

Map beanMap = new BeanMap( person );

Set keys = beanMap.keySet( );
Iterator keyIterator = keys.iterator( );
while( keyIterator.hasNext( ) ) {
   String propertyName = (String) keyIterator.next( );

   System.out.println( "Property: " + propertyName +
                       ", Value: " + beanMap.get( propertyName ) +
                       ", Type: " + beanMap.getType( propertyName ).
                       toString( ) );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> bean has the following properties:
<fo:inline font-family="monospace" font-size="0.8em">age</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">name</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">occupation</fo:inline>; an instance of this bean is created
and passed to the constructor of <fo:inline font-family="monospace" font-size="0.8em">BeanMap</fo:inline>. The
following output is created by iterating over the key set of
<fo:inline font-family="monospace" font-size="0.8em">beanMap</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt155">Property: Age, Value: 28, Type: java.lang.String
Property: Name, Value: Jim, Type: java.lang.Integer
Property: Occupation, Value: Developer, Type: java.lang.String</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-17.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.17.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous example demonstrates the use of
<fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.describe( )</fo:inline> to create a
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> containing bean properties.
<fo:inline font-family="monospace" font-size="0.8em">BeanMap</fo:inline> not only exposes bean properties with a
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> interface, it wraps a bean instance, allowing
you to alter the contents of the underlying bean via <fo:inline font-family="monospace" font-size="0.8em">put()</fo:inline>. In addition to implementing the <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>
interface, <fo:inline font-family="monospace" font-size="0.8em">BeanMap</fo:inline> provides a number of additional
methods for obtaining <fo:inline font-family="monospace" font-size="0.8em">Method</fo:inline> objects and the types
of bean properties. <fo:basic-link internal-destination="jakartackbk-CHP-3-TABLE-1" text-decoration="underline" color="blue">Table 3-1</fo:basic-link> describes
a<fo:wrapper id="jakartackbk-CHP-3-ITERM-2271"><!--methods, BeanMap--></fo:wrapper>
few of these methods.</fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-3-TABLE-1"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 3-1. Methods provided by BeanMap</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-left-style="solid" border-right-style="solid" border-top-style="solid" border-bottom-style="solid" border-left-width="0.1pt" border-right-width="0.1pt" border-top-width="0.1pt" border-bottom-width="0.1pt" border-left-color="black" border-right-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="17.4cm"><fo:table-column column-number="1"/><fo:table-column column-number="2"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Method</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Description</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">clear( )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Constructs a new instance of a bean using the no-argument constructor
of the class that corresponds to <fo:inline font-family="monospace" font-size="0.8em">getBean( ).getClass()</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">clone( )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If possible, creates another instance of <fo:inline font-family="monospace" font-size="0.8em">BeanMap</fo:inline>,
wrapping a copy of the wrapped bean</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">getBean( )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Returns the bean wrapped by this <fo:inline font-family="monospace" font-size="0.8em">BeanMap</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">setBean(Object bean)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Causes an instance of <fo:inline font-family="monospace" font-size="0.8em">BeanMap</fo:inline> to wrap the supplied
bean</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">getType(String name)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Retrieves the type of the specified bean property</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">getReadMethod(String name)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Retrieves a <fo:inline font-family="monospace" font-size="0.8em">Method</fo:inline> object for the read method (or
getter) of the specified property</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">getWriteMethod(String name)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Retrieves a <fo:inline font-family="monospace" font-size="0.8em">Method</fo:inline> object for the write method (or
setter) of the specified property</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-3-EX-6" text-decoration="underline" color="blue">Example 3-6</fo:basic-link> demonstrates the use of the methods
listed above to manipulate and alter properties of a
<fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> bean. Remember, when you alter a
<fo:inline font-family="monospace" font-size="0.8em">BeanMap</fo:inline>, you are modifying the underlying bean.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-3-EX-6"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3-6. BeanMap methods getBean( ), setBean( ), getType( ), getReadMethod( ), and getWriteMethod( )</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e10480">package com.discursive.jccook.collections;

import java.lang.reflect.Method;

import org.apache.commons.collections.BeanMap;

public class BeanMapExample {
    public static void main(String[] args) throws Exception {
        BeanMapExample example = new BeanMapExample( );
        example.start( );
    }

    public void start( ) throws Exception {

        // Create a Person bean
        Person person = new Person( );
        person.setName( "Todd" );
        person.setAge( new Integer( 45 ) );
        person.setOccupation( "Record Collector" );

        // Wrap person with a Map 
        BeanMap map = new BeanMap( person );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        // Set the age to 24 using a Method from this map</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        Method method = map.getWriteMethod( "age" );</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        method.invoke( person, new Integer(24) );        </fo:inline>

                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        // Set the name to "John" using map.put</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        map.put( "name", "John" );</fo:inline>

        // Create a Person bean
        Person person2 = new Person( );
        person2.setName( "Cindy" );
        person2.setAge( new Integer( 39 ) );
        person2.setOccupation( "Transcriptionist" );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        // Make the BeanMap operate on another bean</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        map.setBean( person2 );</fo:inline>

                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        // Get the type of the Age property</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        Class type = map.getType( "age" );</fo:inline>
    }
}</fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-17.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.17.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">BeanMap</fo:inline> provides a convenient shortcut for
accessing and manipulating beans, providing the same abilities that
are provided by <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils</fo:inline>. For more
information about accessing and manipulating <fo:wrapper id="jakartackbk-CHP-3-ITERM-2272"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2273"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2274"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2275"><!----></fo:wrapper>bean properties
with <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils</fo:inline>, see  <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-8" text-decoration="underline" color="blue">Recipe 3.8</fo:basic-link> and <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-13" text-decoration="underline" color="blue">Recipe 3.13</fo:basic-link>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-18"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Creating a Dynamic Bean</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.18. Creating a Dynamic Bean</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-18.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.18.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to be able to create a bean
<fo:wrapper id="jakartackbk-CHP-3-ITERM-2276"><!--JavaBeans, dynamic
beans--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2277"><!--beans, dynamic--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2278"><!--dynamic beans--></fo:wrapper>dynamically at
runtime.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-18.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.18.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use a <fo:inline font-family="monospace" font-size="0.8em">DynaBean</fo:inline>. You can create a
<fo:inline font-family="monospace" font-size="0.8em">DynaBean</fo:inline> with an arbitrary set of properties at
runtime, and the resulting <fo:inline font-family="monospace" font-size="0.8em">DynaBean</fo:inline> object will
function properly with all Commons BeanUtils utilities, such as
<fo:inline font-family="monospace" font-size="0.8em">PropertyUtils</fo:inline>. The following example demonstrates
the use of a <fo:inline font-family="monospace" font-size="0.8em">BasicDynaBean</fo:inline> to model a politician:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt156">import java.util.*;
import org.apache.commons.beanutils.*;

DynaProperty[] beanProperties = new DynaProperty[]{
    new DynaProperty("name", String.class),
    new DynaProperty("party", Party.class),
    new DynaProperty("votes", Long.class)
};

BasicDynaClass politicianClass = 
    new BasicDynaClass("politician", BasicDynaBean.class, props);

DynaBean politician = politicianClass.newInstance( );

<fo:inline font-weight="bold">// Set the properties via DynaBean</fo:inline>
politician.set( "name", "Tony Blair" );
politician.set( "party", Party.LABOUR );
politician.set( "votes", new Long( 50000000 ) );

<fo:inline font-weight="bold">// Set the properties with PropertyUtils</fo:inline>
PropertyUtils.setProperty( politician, "name", "John Major" );
PropertyUtils.setProperty( politician, "party", Party.TORY );
PropertyUtils.setProperty( politician, "votes", new Long( 50000000 ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In this code, the properties of the <fo:inline font-family="monospace" font-size="0.8em">politician</fo:inline>
bean are set using two different methods. The first method is to
manipulate properties via the
<fo:inline font-family="monospace" font-size="0.8em">DynaBean</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2279"><!--DynaBean
interface--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2280"><!--interfaces, DynaBean--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2281"><!--objects, DynaBean--></fo:wrapper>
interface, and the second method involves using
<fo:inline font-family="monospace" font-size="0.8em">PropertyUtils.setProperty( )</fo:inline>. Both regions of code
accomplish the same goal, and <fo:inline font-family="monospace" font-size="0.8em">PropertyUtils</fo:inline> was
included to emphasize the fact that most utilities in BeanUtils will
understand how to work with <fo:inline font-family="monospace" font-size="0.8em">DynaBean</fo:inline>
implementations.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-18.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.18.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">DynaBean</fo:inline> objects come in handy when your system
uses beans to represent a data model. Since a bean is just a
collection of properties, you can avoid having to maintain a bean
class by automatically generating a bean from a description of the
objects and properties; for example, a complex data model could be
described in an XML document, and a utility would parse such a
document and create a number of <fo:inline font-family="monospace" font-size="0.8em">DynaClass</fo:inline> objects
at runtime.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A <fo:inline font-family="monospace" font-size="0.8em">DynaBean</fo:inline> contains the methods listed in <fo:basic-link internal-destination="jakartackbk-CHP-3-TABLE-2" text-decoration="underline" color="blue">Table 3-2</fo:basic-link>. There are methods to get and set indexed and
mapped properties, and two operations—<fo:inline font-family="monospace" font-size="0.8em">remove()</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">contains( )</fo:inline>—allow you to
manipulate the contents of a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> property.</fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-3-TABLE-2"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 3-2. Methods available on a DynaBean</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-left-style="solid" border-right-style="solid" border-top-style="solid" border-bottom-style="solid" border-left-width="0.1pt" border-right-width="0.1pt" border-top-width="0.1pt" border-bottom-width="0.1pt" border-left-color="black" border-right-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="17.4cm"><fo:table-column column-number="1"/><fo:table-column column-number="2"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block font-weight="bold"><fo:wrapper id="jakartackbk-CHP-3-ITERM-2282"><!--methods, DynaBean--></fo:wrapper>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Method</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Description</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">get(String name)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Retrieves a simple bean property</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">get(String name, int i)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Retrieves an indexed been property</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">get(String name, String key)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Retrieves a mapped bean property</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">set(String name, Object value)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Sets a simple bean property</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">set(String name, int i, Object value)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Sets an indexed bean property</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">set(String name, String key, Object value)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Sets a mapped bean property</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">remove(String name, String key)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Removes a key from a mapped bean property</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">contains(String name, String key)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Tests a map property for the presence of a key</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-18.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.18.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-6" text-decoration="underline" color="blue">Chapter 6</fo:basic-link> combines the power of Commons
Digester and Commons BeanUtils to create a utility that reads in bean
definitions from an XML document. A data model is described using an
XML document, and it is realized into a set of
<fo:inline font-family="monospace" font-size="0.8em">DynaClass</fo:inline> objects.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-12" text-decoration="underline" color="blue">Chapter 12</fo:basic-link> discusses the power of Commons
BeanUtils as it relates to working with a database. A
<fo:inline font-family="monospace" font-size="0.8em">ResultSetDynaClass</fo:inline> enables you to wrap a JDBC
<fo:inline font-family="monospace" font-size="0.8em">ResultSet</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-19"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Getting and Setting Properties as Strings</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.19. Getting and Setting Properties as Strings</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-19.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.19.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to persist a bean to
a<fo:wrapper id="jakartackbk-CHP-3-ITERM-2283"><!--JavaBeans, properties, strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2284"><!--beans, properties, strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2285"><!--properties, beans, strings--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-3-ITERM-2286"><!--strings, beans
properties--></fo:wrapper> text file, or populate a
bean's properties from a <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-19.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.19.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">BeanUtils</fo:inline> to get and set bean properties with
strings. This utility contains many of the same functions as
<fo:inline font-family="monospace" font-size="0.8em">PropertyUtils</fo:inline> with one major exception; instead of
returning the <fo:inline font-family="monospace" font-size="0.8em">Object</fo:inline> value of the property,
<fo:inline font-family="monospace" font-size="0.8em">BeanUtils</fo:inline> returns and expects a string
representation of a value. The following code uses
<fo:inline font-family="monospace" font-size="0.8em">BeanUtils</fo:inline> to populate a bean that is dependent on
user input:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_3_tt157">import java.util.*;
import org.apache.commons.beanutils.*;

Person person = new Person( );
person.setAge( new Integer( 45 ) );
person.setName( "Donald" );
person.setOccupation( "Salesman" );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">// Get the Age as a String</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">String ageString = BeanUtils.getProperty( person, "age" );</fo:inline>

               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">// Set the Age from a String</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">BeanUtils.setProperty( person, "age", "50" );</fo:inline>
            </fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-19.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.19.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">BeanUtils</fo:inline> come in handy when a bean is populated
from a user-supplied input like standard input or the parameters of
an HTTP request. In fact, <fo:inline font-family="monospace" font-size="0.8em">BeanUtils</fo:inline> started as the
mechanism used to populate a Struts <fo:inline font-family="monospace" font-size="0.8em">ActionForm</fo:inline>
from the contents of an HTTP request. When the Struts
<fo:inline font-family="monospace" font-size="0.8em">ActionServlet</fo:inline> receives a request that is mapped to
an <fo:inline font-family="monospace" font-size="0.8em">Action</fo:inline>, the <fo:inline font-family="monospace" font-size="0.8em">ActionServlet</fo:inline>
calls a method in <fo:inline font-family="monospace" font-size="0.8em">RequestUtils</fo:inline>, which examines the
request and sets any properties on the relevant
<fo:inline font-family="monospace" font-size="0.8em">ActionForm</fo:inline>. Because the inner workings of Struts
are outside the scope of this book, <fo:basic-link internal-destination="jakartackbk-CHP-3-EX-7" text-decoration="underline" color="blue">Example 3-7</fo:basic-link>
takes a <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> input from
<fo:inline font-family="monospace" font-size="0.8em">System.in</fo:inline> and sets the <fo:inline font-family="monospace" font-size="0.8em">age</fo:inline>
property of <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline>.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-3-EX-7"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3-7. Using BeanUtils to populate

 a bean from user input</fo:block><fo:wrapper id="jakartackbk-CHP-3-ITERM-2287"><!--beans, populating--></fo:wrapper><fo:wrapper id="jakartackbk-CHP-3-ITERM-2288"><!--populating, beans--></fo:wrapper><fo:wrapper id="jakartackbk-CHP-3-ITERM-2289"><!--JavaBeans, populating--></fo:wrapper><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e10945">import java.io.*; 

public class ReadAge { 
    public static void main (String[] args) throw Exception { 
        //  Prompt for an Age
        System.out.print("Enter Age: "); 

        //  open up standard input 
        BufferedReader br = 
            new BufferedReader(new InputStreamReader(System.in)); 

        String ageString = null; 
        ageString = br.readLine( ); 

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        // Set the Integer property with a String</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        Person person = new Person( );</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        BeanUtils.setProperty( person, "age", ageString );</fo:inline>
   } 
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">When <fo:inline font-family="monospace" font-size="0.8em">BeanUtils</fo:inline> sets the <fo:inline font-family="monospace" font-size="0.8em">age</fo:inline>
property, it uses a set of registered <fo:inline font-family="monospace" font-size="0.8em">Converter</fo:inline>
instances that are available to translate between a
<fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> and an <fo:inline font-family="monospace" font-size="0.8em">Object</fo:inline>. Behind
the scenes, <fo:inline font-family="monospace" font-size="0.8em">BeanUtils</fo:inline> used the
<fo:inline font-family="monospace" font-size="0.8em">IntegerConverter</fo:inline> class to convert the
user-supplied <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> to an
<fo:inline font-family="monospace" font-size="0.8em">Integer</fo:inline> object. For a full list of converters,
read the documentation for the
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.beanutils.converters</fo:inline> package.</fo:block></fo:block><fo:block id="jakartackbk-CHP-3-SECT-19.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">3.19.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The BeanUtils Javadoc is available at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/beanutils/api/index.html</fo:inline>.</fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="false" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>Functors</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>Functors</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"/></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif" margin-left="0pc"/></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block id="jakartackbk-CHP-4"><fo:block font-family="serif"><fo:block margin-left="0pc"><fo:block text-align="left" font-weight="bold" font-size="21.6pt"><fo:block keep-with-next.within-column="always" space-before.optimum="12pt" space-before.minimum="12pt * 0.8" space-before.maximum="12pt * 1.2" hyphenate="false" text-align="left" start-indent="0pc" word-spacing="-0.1em" letter-spacing="-0.05em" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 4. Functors</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="ch04-2-fm2xml"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Introduction</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.1. Introduction</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The American Heritage Dictionary defines a
<fo:inline font-family="monospace" font-size="0.8em">functor</fo:inline>
            <fo:wrapper id="jakartackbk-CHP-4-ITERM-2290"><!--functors--></fo:wrapper>
as "one that performs an operation or a
function," and, in the context of programming, a
functor is an object that encapsulates "functional
logic"—a functional object. So with a
definition as abstract as "something that does
stuff," you won't find a lot of
satisfying, concise explanations of what a functor can do; in the
abstract, anything that performs an operation or function could be
considered a functor, and the process of drawing divisions between
what should and should not be implemented with functors becomes a
matter of personal preference. I'm not going to
attempt to give a well-polished, textbook definition of a functor;
this chapter simply demonstrates the set of basic functors from
Commons Collections. Functors are less of an impressive new
technology and are more of an approach to programming. Even if you
are unfamiliar with the term, you've likely used
functors without realizing it; two functors in common usage are
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">Iterator</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Both <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">Iterator</fo:inline>
serve to isolate an algorithm; <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline>
encapsulates logic to compare two objects, and
<fo:inline font-family="monospace" font-size="0.8em">Iterator</fo:inline> encapsulates logic used to iterate over a
collection of objects. Functors often lead to more code reuse and a
cleaner design because functional logic can be abstracted and
extracted out of logic dealing with a specific data structure. For
example, to compare two <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> beans, you could
make the <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> class implement
<fo:inline font-family="monospace" font-size="0.8em">Comparable</fo:inline> and provide a <fo:inline font-family="monospace" font-size="0.8em">compareTo()</fo:inline> method in the <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> class, or you
could write a <fo:inline font-family="monospace" font-size="0.8em">PersonComparator</fo:inline>, separating the
comparison logic from the <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> class. It is this
separation of functional logic and the ability to combine functors
together that make functors an interesting solution to a number of
problems, from the creation of a <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> pipeline
to a series of <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> objects used to model a
digital logic circuit.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Jakarta Commons Collections 3.0 introduces a set of functor
interfaces in the <fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.collections</fo:inline>
package: <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">Factory</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> objects. <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>
objects evaluate criteria or conditions, returning a
<fo:inline font-family="monospace" font-size="0.8em">boolean</fo:inline> result. <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>
objects create a new object based on an input object,
<fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> objects act on an input object, and
<fo:inline font-family="monospace" font-size="0.8em">Factory</fo:inline> objects create objects. The powerful part
of functors isn't that Commons Collections has
introduced a few new interfaces—the power is only evident once
you realize how they can be used in concert with other Jakarta
Commons utilities such as Commons BeanUtils and Commons Collections.
<fo:basic-link internal-destination="jakartackbk-CHP-5" text-decoration="underline" color="blue">Chapter 5</fo:basic-link> makes heavy use of the functors
introduced in this chapter, and <fo:basic-link internal-destination="jakartackbk-CHP-3" text-decoration="underline" color="blue">Chapter 3</fo:basic-link>
discusses a <fo:inline font-family="monospace" font-size="0.8em">BeanComparator</fo:inline> and a
<fo:inline font-family="monospace" font-size="0.8em">BeanPredicate</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This chapter focuses on the functors introduced in Commons
Collections 3.0 and also deals with improvements to the
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> interface. Commons Collections
introduces some improvements to the <fo:inline font-family="monospace" font-size="0.8em">Iterator</fo:inline>
interface, but, since people usually use <fo:inline font-family="monospace" font-size="0.8em">Iterator</fo:inline>
objects with <fo:inline font-family="monospace" font-size="0.8em">Collections</fo:inline>, recipes involving
<fo:inline font-family="monospace" font-size="0.8em">Iterator</fo:inline> objects are in the next chapter, which
covers Java Collections. Functors, part of Commons Collections, are
somewhat misplaced, and, even as this chapter is written, a Commons
Functor project is being finalized in the Jakarta Commons Sandbox. By
the time you read this chapter, the Commons Functor project may have
been released. This book assumes that you are using the functors
available in the 3.0 release of Commons Collections. The Commons
Functor release contains a number of changes and improvements to the
set of functors introduced in Commons Collections 3.0, and, when
possible, the See Also sections in each recipe discuss the relevant
class or interface in the fast-developing Commons Functor project.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Obtaining Commons Collections</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.1. Obtaining Commons Collections</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-1.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.1.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to use Jakarta <fo:wrapper id="jakartackbk-CHP-4-ITERM-2291"><!--Commons
Collections, downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2292"><!--downloading, Commons
Collections--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2293"><!--functors, Commons
Collections, downloading--></fo:wrapper>Commons
Collections because your system could benefit from the various
functor interfaces and implementations provided by this component.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-1.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.1.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You must download the latest version of Commons Collections and place
the Commons Collections JAR<fo:inline font-family="monospace" font-size="0.8em"> </fo:inline>in your
project's classpath. Following the steps outlined in
<fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1" text-decoration="underline" color="blue">Recipe 1.1</fo:basic-link>, download Commons Collections
3.0 instead of Commons Lang.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-1.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.1.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Commons Collections was introduced as a series of utilities that
augment the Java Collections API. Commons Collections contains
functors such as <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline>, utilities for filtering and selecting
elements in a collection, and some new collections:
<fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">Buffer</fo:inline>. Commons
Collections is as widely used as Commons BeanUtils and Commons Lang,
and with these two projects, it forms the core of the Jakarta Commons
components.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you have a Maven project that needs to use Commons Collections,
add a dependency on Commons Collections 3.0 with the following
section in <fo:inline font-family="monospace" font-size="0.8em">project.xml</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt158">&lt;dependencies&gt;
  &lt;dependency&gt;
    &lt;id&gt;commons-collections&lt;/id&gt;
    &lt;version&gt;3.0&lt;/version&gt;
  &lt;/dependency&gt;

  ....other dependencies...
&lt;/dependencies&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-1.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.1.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about the Commons Collections project, see the
project page at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/collections</fo:inline>.
If you have questions about using Commons Collections, feel free to
join the <fo:inline font-family="monospace" font-size="0.8em">commons-user@jakarta.apache.org</fo:inline> mailing list.
Instructions for joining the user mailing list can be found in
<fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-2" text-decoration="underline" color="blue">Recipe 1.2</fo:basic-link>. For information on obtaining the
source code for Commons Collections, see <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-2" text-decoration="underline" color="blue">Recipe 4.2</fo:basic-link>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Getting the Commons Collections Source Code</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.2. Getting the Commons Collections Source Code</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-2.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.2.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need the source code for the<fo:wrapper id="jakartackbk-CHP-4-ITERM-2294"><!--Commons
Collections, source code--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2295"><!--source code, Commons
Collections--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2296"><!--functors, Commons
Collections, source code--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2297"><!--code, Commons
Collections--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2298"><!--programming, Commons
Collections--></fo:wrapper> Commons Collections project.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-2.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.2.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Download the source from <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/site/sourceindex.cgi</fo:inline>.
Following the same procedure outlined in <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-3" text-decoration="underline" color="blue">Recipe 1.3</fo:basic-link>, download a file named
<fo:inline font-family="monospace" font-size="0.8em">commons-collections-3.0-src.zip</fo:inline> (or
<fo:inline font-family="monospace" font-size="0.8em">commons-collections-3.0-src.tar.gz</fo:inline>); once you
unzip this archive, you will have the source to Commons Collections
in <fo:inline font-family="monospace" font-size="0.8em">./commons-collections-3.0-src/src</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-2.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.2.3. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Most Commons components follow a similar convention for the layout of
binary and source distributions. For more information about the
layout of the Collections source distribution, see <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-3" text-decoration="underline" color="blue">Recipe 1.3</fo:basic-link>. For information on obtaining the binary
distribution for Commons Collections, see <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-1" text-decoration="underline" color="blue">Recipe 4.1</fo:basic-link>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Reversing a Comparator</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.3. Reversing a Comparator</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-3.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.3.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to reverse the effects <fo:wrapper id="jakartackbk-CHP-4-ITERM-2299"><!--functors, Comparators, reversing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2300"><!--reversing, Comparators--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2301"><!--Comparators, reversing--></fo:wrapper>of
a <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline>. You need to return less than when
this <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> returns greater than, and greater
than when it returns less than.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-3.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.3.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use
<fo:inline font-family="monospace" font-size="0.8em">ReverseComparator</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2302"><!--ReverseComparator--></fo:wrapper>
to reverse the effects of a <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline>. Supply an
existing <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> to the constructor of
<fo:inline font-family="monospace" font-size="0.8em">ReverseComparator</fo:inline>, and it reverses the effects of
that <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline>. The following example
demonstrates the use of <fo:inline font-family="monospace" font-size="0.8em">ReverseComparator</fo:inline> to
reverse the result of a custom <fo:inline font-family="monospace" font-size="0.8em">MyComparator</fo:inline>
instance:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt159">Comparator myComparator = new MyComparator( );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Comparator reverseComparator = new ReverseComparator( myComparator );</fo:inline>

Book book1 = new Book( );
Book book2 = new Book( );

int comparison = myComparator.compare( book1, book2 );
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">int reversedComparison = reverseComparator( book1, book2);</fo:inline>
            </fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The value of <fo:inline font-family="monospace" font-size="0.8em">reversedComparison</fo:inline> is simply the
negative of <fo:inline font-family="monospace" font-size="0.8em">comparison</fo:inline>; if
<fo:inline font-family="monospace" font-size="0.8em">MyComparator</fo:inline> decides that <fo:inline font-family="monospace" font-size="0.8em">book1</fo:inline>
is less than <fo:inline font-family="monospace" font-size="0.8em">book2</fo:inline>, the
<fo:inline font-family="monospace" font-size="0.8em">ReverseComparator</fo:inline> returns the opposite
result—greater than. <fo:inline font-family="monospace" font-size="0.8em">ReverseComparator</fo:inline>
simply wraps the original <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> and
multiplies the result by negative one.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-3.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.3.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-4-EX-1" text-decoration="underline" color="blue">Example 4-1</fo:basic-link> is an implementation of a
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> that is reversed using the
<fo:inline font-family="monospace" font-size="0.8em">ReverseComparator</fo:inline>. This
<fo:inline font-family="monospace" font-size="0.8em">BookComparator</fo:inline> compares two
<fo:inline font-family="monospace" font-size="0.8em">Book</fo:inline> objects by the <fo:inline font-family="monospace" font-size="0.8em">name</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">author</fo:inline> bean properties. Sorting a list of books
using this <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> results in a list sorted
alphabetically by book name and author name; if two books have the
same name, they are sorted by author name.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-4-EX-1"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4-1. A Comparator that compares Book objects by name and author</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e11400">package com.discursive.jccook.collections.compare;

import java.util.*;
import org.apache.commons.lang.StringUtils;
import org.apache.commons.collections.comparators.ReverseComparator;

public class BookComparator implements Comparator {
    
    public int compare(Object o1, Object o2) {
         int comparison = -1;

        if( o1 instanceof Book &amp;&amp; o2 instanceof Book ) {
            Book b1 = (Book) o1;
            Book b2 = (Book) o2;
        
             String b1Name = b1.getName( );
             String b2Name = b2.getName( );

             String b1Author = b1.getAuthor( );
             String b2Author = b2.getAuthor( );

            if( StringUtils.isNotEmpty( b1Name ) &amp;&amp;
                StringUtils.isNotEmpty( b2Name ) ) {
                comparison = b1Name.compareTo( b2Name );
            }

            if( comparison == 0 &amp;&amp;
                StringUtils.isNotEmpty( b1Author ) &amp;&amp;
                StringUtils.isNotEmpty( b2Author ) ) {
                comparison = b1Author.compareTo( b2Author );
            }   
        }
        return comparison;
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-4-EX-2" text-decoration="underline" color="blue">Example 4-2</fo:basic-link> sorts an array of
<fo:inline font-family="monospace" font-size="0.8em">Book</fo:inline> objects in reverse order.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-4-EX-2"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4-2. Using ReverseComparator to sort Book objects</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e11413">package com.discursive.jccook.collections.compare;

import java.util.*;
import org.apache.commons.collections.comparators.ReverseComparator;

public class ReverseExample {

    public static void main(String[] args) throws Exception {
        ReverseExample example = new ReverseExample( );
        example.start( );
    }
    
    public void start( ) throws Exception {

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        // Create a Reversed BookComparator</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        Comparator bookCompare = new BookComparator( );</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        Comparator reverseComparator = new ReverseComparator( bookComparator );</fo:inline>

        // Create a List of Book objects
        List books = new ArrayList( );

        Book book1 = new Book( );
        book1.setName( "TitleA" );
        book1.setAuthor( "John" );
        books.add( book1 );

        Book book2 = new Book( );
        book2.setName( "TitleB" );
        book2.setAuthor( "Donald" );
        books.add( book2 )

        Book book3 = new Book( );
        book3.setName( "TitleA" );
        book3.setAuthor( "Doug" );
        books.add( book3 );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        // Sort the List of Book objects with the Reversed BookComparator</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        Collections.sort( books, reverseComparator );</fo:inline>

    }    
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">After <fo:inline font-family="monospace" font-size="0.8em">Collections.sort( )</fo:inline>, the
<fo:inline font-family="monospace" font-size="0.8em">books</fo:inline> array is sorted in reverse alphabetical
order by book name and author name: "TitleB by
Donald" followed by "TitleA by
John" followed by "TitleA by
Doug."</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-3.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.3.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you were using a simple <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> to sort an
array, you could sort and reverse the resulting array with
<fo:inline font-family="monospace" font-size="0.8em">Arrays.reverse( )</fo:inline>, or you could reverse a
<fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> with <fo:inline font-family="monospace" font-size="0.8em">Collections.reverse(
)</fo:inline>. Wrapping a <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> in
<fo:inline font-family="monospace" font-size="0.8em">ReverseComparator</fo:inline> may help you avoid the call to
<fo:inline font-family="monospace" font-size="0.8em">reverse( )</fo:inline>, but the benefit is miniscule.
<fo:inline font-family="monospace" font-size="0.8em">ReverseComparator</fo:inline> makes more sense when used in
the context of a <fo:inline font-family="monospace" font-size="0.8em">ChainedComparator</fo:inline>; see
<fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-4" text-decoration="underline" color="blue">Recipe 4.4</fo:basic-link> for more information about the
<fo:inline font-family="monospace" font-size="0.8em">ChainedComparator</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Note that use of <fo:inline font-family="monospace" font-size="0.8em">StringUtils.isNotEmpty( )</fo:inline> is used
in <fo:inline font-family="monospace" font-size="0.8em">BookComparator</fo:inline> to check if either of the bean
properties are null or blank. This utility,<fo:wrapper id="jakartackbk-CHP-4-ITERM-2303"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2304"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2305"><!----></fo:wrapper> is from
<fo:inline font-family="monospace" font-size="0.8em">StringUtils</fo:inline>, and it is introduced in <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-2" text-decoration="underline" color="blue">Recipe 2.2</fo:basic-link>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Chaining Comparators</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.4. Chaining Comparators</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-4.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.4.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to sort a collection of objects by more<fo:wrapper id="jakartackbk-CHP-4-ITERM-2306"><!--functors, Comparators, chaining--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2307"><!--chaining, Comparators--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2308"><!--Comparators, chaining--></fo:wrapper>
than one property.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-4.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.4.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use
<fo:inline font-family="monospace" font-size="0.8em">ComparatorChain</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2309"><!--ComparatorChain--></fo:wrapper>
to create a series of <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> objects that
appear as a single <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline>. A
<fo:inline font-family="monospace" font-size="0.8em">ComparatorChain</fo:inline> compares two objects with each
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> in the chain until a
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> returns a nonzero value. If a
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> returns equality (zero), the
<fo:inline font-family="monospace" font-size="0.8em">ComparatorChain</fo:inline> then moves to the next
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> to obtain another comparison. The
following example demonstrates the use of chained
<fo:inline font-family="monospace" font-size="0.8em">BeanComparators</fo:inline>; if two <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline>
objects have the same <fo:inline font-family="monospace" font-size="0.8em">lastName</fo:inline>, the chain created
in this example tries to compare the objects by
<fo:inline font-family="monospace" font-size="0.8em">firstName</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt160">Person person1 = new Person( );
person1.setLastName( "Payne" );
person1.setFirstName( "James" );
person1.setAge( 21 );

Person person2 = new Person( );
person2.setLastName( "Payne" );
person2.setFirstName( "James" );
person2.setAge( 85 );

Person person3 = new Person( );
person3.setLastName( "Payne" );
person3.setFirstName( "Susan" );
person3.setAge( 29 );

Person[] persons = new Person[] { person1, person2, person3 };

ComparatorChain comparatorChain = new ComparatorChain( );
comparatorChain.addComparator( new BeanComparator( "lastName" ) );
comparatorChain.addComparator( new BeanComparator( "firstName" ) );
comparatorChain.addComparator( new BeanComparator( "age" ), true );

Arrays.sort( persons, comparatorChain );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example sorts an array of <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> objects: by
<fo:inline font-family="monospace" font-size="0.8em">lastName</fo:inline> ascending, <fo:inline font-family="monospace" font-size="0.8em">firstName</fo:inline>
ascending, and <fo:inline font-family="monospace" font-size="0.8em">age</fo:inline> descending. The sorted
<fo:inline font-family="monospace" font-size="0.8em">persons</fo:inline> array will be in the following order: the
older James Payne, the younger James Payne, followed by Susan Payne.
The <fo:inline font-family="monospace" font-size="0.8em">ChainedComparator</fo:inline> successfully sorts two
objects with the same first and last names—falling back to the
age to provide the correct sort order.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-4.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.4.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A <fo:inline font-family="monospace" font-size="0.8em">ComparatorChain</fo:inline> evaluates every
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> in the chain as needed. If the current
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> returns a zero, the next
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> is invoked until there are no more
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> objects left in the chain. If the final
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> returns a zero value, the
<fo:inline font-family="monospace" font-size="0.8em">ComparatorChain</fo:inline> returns a zero. The
<fo:inline font-family="monospace" font-size="0.8em">ComparatorChain</fo:inline> implements the
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> interface and is an aggregate of other
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> objects; it can be used wherever a
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> is used, including array sorting and as
a <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> for a tree-based
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> implementation.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">ReverseComparator</fo:inline> (introduced in <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-3" text-decoration="underline" color="blue">Recipe 4.3</fo:basic-link>) makes more sense in light of the
<fo:inline font-family="monospace" font-size="0.8em">ComparatorChain</fo:inline>. If you need to sort a collection
of objects for display, you might want to reverse a particular
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> in a
<fo:inline font-family="monospace" font-size="0.8em">ComparatorChain</fo:inline>. In the previous example, there
are two people named "James Payne":
one is 21 and the other is 85. Your application respects age and you
want to put the older James Payne in front of the younger James Payne
in the sorted list. Sorting by <fo:inline font-family="monospace" font-size="0.8em">lastName</fo:inline> ascending,
<fo:inline font-family="monospace" font-size="0.8em">firstName</fo:inline> ascending, and <fo:inline font-family="monospace" font-size="0.8em">age</fo:inline>
descending calls for the last <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> in the
chain to be reversed; the following code calls
<fo:inline font-family="monospace" font-size="0.8em">addComparator( )</fo:inline> with a second parameter,
<fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>, causing the
<fo:inline font-family="monospace" font-size="0.8em">BeanComparator</fo:inline> for <fo:inline font-family="monospace" font-size="0.8em">age</fo:inline> to be
reversed with <fo:inline font-family="monospace" font-size="0.8em">ReverseComparator</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt161">comparatorChain.addComparator( new BeanComparator( "age" ), true );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous statement is equivalent to the following code:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt162">
comparaterChain.addComparator( new ReverseComparator
                               (new BeanComparator("age") );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Using a <fo:inline font-family="monospace" font-size="0.8em">ComparatorChain</fo:inline> may remind you of the way
a result set is sorted in a SQL <fo:inline font-family="monospace" font-size="0.8em">SELECT</fo:inline> statement.
This recipe's Solution implements the following SQL
statement in a <fo:inline font-family="monospace" font-size="0.8em">ComparatorChain</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt163">SELECT * FROM person ORDER BY lastName ASC, firstName ASC, age DESC;</fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" border-style="solid" border-width="1pt" border-color="black" background-color="#DDDDDD" padding-left="12pt" padding-right="12pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pt" margin-right="0pt" id="jakartackbk-CHP-4-SIDEBAR-1"><fo:block><fo:block><fo:block font-family="serif" font-weight="bold"><fo:block font-weight="bold" hyphenate="false" text-align="start" keep-with-next.within-column="always">Where to Sort?</fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In many organizations, there is a debate
over<fo:wrapper id="jakartackbk-CHP-4-ITERM-2310"><!--sorting, Comparators--></fo:wrapper>
where to sort data in an application: should sorting be done in the
database or in an application server? The answer depends on a number
of factors, but, now that you have seen how a
<fo:inline font-family="monospace" font-size="0.8em">ComparatorChain</fo:inline> works, you can implement
<fo:inline font-style="italic">any</fo:inline> complex sort in Java. The use of a
<fo:inline font-family="monospace" font-size="0.8em">ComparatorChain</fo:inline> is especially relevant if you are
writing a web application that presents a sortable table and you have
decided to implement sorting logic in your presentation layer. If you
are sorting beans, load your data into a collection and use a
<fo:inline font-family="monospace" font-size="0.8em">ComparatorChain</fo:inline> made up of
<fo:inline font-family="monospace" font-size="0.8em">BeanComparators</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-4.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.4.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">BeanComparator</fo:inline> was introduced in the previous
chapter; for more information, see <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-10" text-decoration="underline" color="blue">Recipe 3.10</fo:basic-link>. The
<fo:inline font-family="monospace" font-size="0.8em">ReverseComparator</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2311"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2312"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2313"><!----></fo:wrapper> was introduced in <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-3" text-decoration="underline" color="blue">Recipe 4.3</fo:basic-link>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-5"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Comparing Nulls</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.5. Comparing Nulls</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-5.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.5.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to sort an object array
<fo:wrapper id="jakartackbk-CHP-4-ITERM-2314"><!--functors, nulls,
comparing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2315"><!--nulls, comparing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2316"><!--comparing, nulls--></fo:wrapper>that
contains <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> elements, and you want to have
control over whether the <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> values are at the
beginning or end of a sorted array.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-5.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.5.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Wrap your <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> in a
<fo:inline font-family="monospace" font-size="0.8em">NullComparator</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2317"><!--NullComparator--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2318"><!--Comparators, NullComparator--></fo:wrapper>
from Commons Collections. The <fo:inline font-family="monospace" font-size="0.8em">NullComparator</fo:inline> can
sort <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> values higher or lower than
non-<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> values, depending on options passed into
the constructor. The following example shows a custom
<fo:inline font-family="monospace" font-size="0.8em">BookComparator</fo:inline> wrapped with a
<fo:inline font-family="monospace" font-size="0.8em">NullComparator</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt164">import org.apache.commons.collections.comparators.NullComparator;
import java.util.*;

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Comparator bookComparator = new BookComparator( );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Comparator nullComparator = new NullComparator( BookComparator );</fo:inline>

Book[] bookArray = new Book[] { new Book( ), null, new Book( ) };

Arrays.sort( bookArray, nullComparator );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example sorts an array of <fo:inline font-family="monospace" font-size="0.8em">Book</fo:inline> objects,
placing <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> at the end of the sorted array; after
the sort, <fo:inline font-family="monospace" font-size="0.8em">bookArray</fo:inline> contains two
<fo:inline font-family="monospace" font-size="0.8em">Book</fo:inline> objects at index zero and index one and a
<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> reference at index two.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-CHP-4-NOTE-56"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/tip.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Tip</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If a <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> does not handle
<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> values gracefully, wrap it in a
<fo:inline font-family="monospace" font-size="0.8em">NullComparator</fo:inline> and avoid a
<fo:inline font-family="monospace" font-size="0.8em">NullPointerException</fo:inline>.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-5.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.5.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">To<fo:wrapper id="jakartackbk-CHP-4-ITERM-2319"><!--configuration, NullComparator--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2320"><!--NullComparator, configuration--></fo:wrapper>
configure <fo:inline font-family="monospace" font-size="0.8em">NullComparator</fo:inline> to sort <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>
values as less than non-<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> values,
pass <fo:inline font-family="monospace" font-size="0.8em">false</fo:inline> to the constructor of
<fo:inline font-family="monospace" font-size="0.8em">NullComparator</fo:inline>; to sort <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>
values as greater than non-<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> values, pass
<fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>. By default, <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> values
are sorted higher:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt165">// null is less than non-null
Comparator nullComparator = new NullComparator( bookComparator, false );

// null is greater than non-null (default)
Comparator nullComparator = new NullComparator( bookComparator, true );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">While the <fo:inline font-family="monospace" font-size="0.8em">NullComparator</fo:inline> usually decorates another
instance of <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline>, the
<fo:inline font-family="monospace" font-size="0.8em">NullComparator</fo:inline> can also be used by itself to
compare <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> and non-<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>
objects, as in the following example:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt166">Comparator nullHighComparator = new NullComparator( );
Comparator nullLowComparator = new NullComparator(false);

// Returns 1
nullHighComparator.compare( null, new Double(3.0) );

// Returns -1
nullLowComparator.compare( null, new Double(3.0) );

// Returns 0
nullLowComparator.compare( null, null );</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-5.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.5.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Both <fo:inline font-family="monospace" font-size="0.8em">ReverseComparator</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">NullComparator</fo:inline> are objects that decorate an
existing <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline>. Take note of the decorator
pattern as it is a common pattern used throughout Commons
Collections. For more information about the decorator design pattern,
read <fo:inline font-style="italic">Design Patterns: Elements of Reusable Object-Oriented
Software</fo:inline> (Addison Wesley).</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-6"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Fixed-Order Comparison</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.6. Fixed-Order Comparison</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-6.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.6.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to sort a collection <fo:wrapper id="jakartackbk-CHP-4-ITERM-2321"><!--functors, fixed
order comparisons--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2322"><!--fixed order
comparisons--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2323"><!--comparing, fixed
order comparisons--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2324"><!--Commons
Collections, FixedOrderComparator--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2325"><!--Comparators, FixedOrderComparator--></fo:wrapper>of
objects that have a preestablished order, such as the days of the
week or the order of planets in the solar system.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-6.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.6.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">FixedOrderComparator</fo:inline> in Jakarta Commons
Collections. When using <fo:inline font-family="monospace" font-size="0.8em">FixedOrderComparator</fo:inline>, you
supply an array of objects in a sorted order and the
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> returns comparison results based on the
order of the objects in this array. The following example uses a
fixed string array to compare different Olympic medals:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt167">import java.util.*;
import org.apache.commons.beanutils.BeanComparator;
import org.apache.commons.collections.comparators.FixedOrderComparator;

String[] medalOrder = {"tin", "bronze", "silver", "gold", "platinum"};

Comparator medalComparator = new FixedOrderComparator( medalOrder );
Comparator athleteComparator = new BeanComparator( "medal", medalComparator );

Athlete athlete1 = new Athlete( );
Athlete athlete2 = new Athlete( );

int compare = medalComparator.compare( athlete1.getMedal( ), 
athlete2.getMedal( ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In this code, a <fo:inline font-family="monospace" font-size="0.8em">FixedOrderComparator</fo:inline> compares two
<fo:inline font-family="monospace" font-size="0.8em">Athletes</fo:inline> by the value of the
<fo:inline font-family="monospace" font-size="0.8em">medal</fo:inline> property. The <fo:inline font-family="monospace" font-size="0.8em">medal</fo:inline>
property can be "tin,"
"bronze,"
"silver,"
"gold," or
"platinum," and a
<fo:inline font-family="monospace" font-size="0.8em">FixedOrderComparator</fo:inline> uses the order of the
<fo:inline font-family="monospace" font-size="0.8em">medalOrder</fo:inline> array to compare these values. The
<fo:inline font-family="monospace" font-size="0.8em">medalOrder</fo:inline> array establishes a fixed relationship
between the three medal types;
"bronze" is less than
"silver," which is less than
"gold."</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-6.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.6.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">FixedOrderComparator</fo:inline> when sorting an array or
a collection that contains values that are ordered in a
pre-determined fashion: days of the week, planets in the solar
system, colors in the spectrum, or hands dealt in a poker game. One
way to sort an array containing the days of the week would be to
assign a numerical value to each
day—"Monday" is one,
"Tuesday" is two,
"Wednesday" is three, etc. Then you
could sort the array with a <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> that takes
each day's name, sorting elements based on the
numerical value corresponding to a day's name. An
alternative is the use of <fo:inline font-family="monospace" font-size="0.8em">FixedOrderComparator</fo:inline>,
letting the comparator order objects based on the order of an array
of day names.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If a bean contains a property to be sorted according to a fixed-order
array, you can use the <fo:inline font-family="monospace" font-size="0.8em">BeanComparator</fo:inline> in
conjunction with <fo:inline font-family="monospace" font-size="0.8em">FixedOrderComparator</fo:inline>. The
following example sorts cards by value and suit using a
<fo:inline font-family="monospace" font-size="0.8em">FixedOrderComparator</fo:inline> and a
<fo:inline font-family="monospace" font-size="0.8em">BeanComparator</fo:inline>; A <fo:inline font-family="monospace" font-size="0.8em">PlayingCard</fo:inline>
object, defined in <fo:basic-link internal-destination="jakartackbk-CHP-4-EX-3" text-decoration="underline" color="blue">Example 4-3</fo:basic-link>, is sorted according
to the order of two arrays—one for the face value of the
<fo:inline font-family="monospace" font-size="0.8em">PlayingCard</fo:inline> and one for the suit of the
<fo:inline font-family="monospace" font-size="0.8em">PlayingCard</fo:inline>.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-4-EX-3"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4-3. A bean representing a playing card</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e12058">package org.discursive.jccook.collections.compare;

public class PlayingCard( ) {

    public static String JOKER_VALUE = null;
    public static String JOKER_SUIT = null;

    private String value;
    private String suit;

    public PlayingCard( ) {}
    public PlayingCard(String value, String suit) {
        this.value = value;
        this.suit = suit;
    }

    public String getValue( ) { return value; }
    public void setValue(String value) { this.value = value; }

    public String getSuit( ) { return suit; }
    public void setSuit(String suit) { this.suit = suit; }

    public String toString( ) {
        String cardString = "JOKER";
        if( value != null &amp;&amp; suit != null ) {
            cardString = value + suit;
        }
        return cardString;
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-4-EX-4" text-decoration="underline" color="blue">Example 4-4</fo:basic-link> creates a
<fo:inline font-family="monospace" font-size="0.8em">ComparatorChain</fo:inline> of
<fo:inline font-family="monospace" font-size="0.8em">BeanComparators</fo:inline>, which compares the
<fo:inline font-family="monospace" font-size="0.8em">value</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">suit</fo:inline> properties using
a <fo:inline font-family="monospace" font-size="0.8em">FixedOrderComparator</fo:inline>. Each
card's suit is compared first, and, if two cards
have the same suit, they are compared by face value. Jokers do not
have suits or a face value, and this example handles jokers with a
<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>-valued <fo:inline font-family="monospace" font-size="0.8em">suit</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">value</fo:inline> property by wrapping each
<fo:inline font-family="monospace" font-size="0.8em">FixedOrderComparator</fo:inline> with a
<fo:inline font-family="monospace" font-size="0.8em">NullComparator</fo:inline>.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-4-EX-4"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4-4. Combining FixedOrderComparator with BeanComparator, NullComparator, and ComparatorChain</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e12098">package com.discursive.jccook.collections.compare;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;

import org.apache.commons.beanutils.BeanComparator;

import org.apache.commons.collections.comparators.NullComparator;
import org.apache.commons.collections.comparators.FixedOrderComparator;
import org.apache.commons.collections.comparators.ComparatorChain;

public class FixedOrderExample {

    // Suit order "Spades", "Clubs", "Diamonds", "Hearts"
    private String[] suitOrder = { "S", "C", "D", "H" };

    private String[] valueOrder = { "2", "3", "4", "5", "6", "7", "8", 
                                    "9", "10", "J", "Q", "K", "A" };

    public static void main(String[] args) {
        FixedOrderExample example = new FixedOrderExample( );
        example.start( );
    }

    public void start( ) {

        List cards = new ArrayList( );
        cards.add( PlayingCard( "J", "C" ) );
        cards.add( PlayingCard( "2", "H" ) );
        cards.add( PlayingCard( PlayingCard.JOKER_VALUE, PlayingCard.
        JOKER_SUIT));
        cards.add( PlayingCard( "2", "S" ) );
        cards.add( PlayingCard( "Q", "S" ) );
        cards.add( PlayingCard( "4", "C" ) );
        cards.add( PlayingCard( "J", "D" ) );

         System.out.println( "Before sorting: " + printCards( cards ) );

        // Create a null-safe suit order comparator that will compare the
        // suit property of two Java beans
        Comparator suitComparator = new FixedOrderComparator( suitOrder );
        suitComparator = new NullComparator( suitComparator );
        suitComparator = new BeanComparator( "suit", suitComparator );

        // Create a null-safe value order comparator that will compare the
        // value property of two Java beans
        Comparator valueComparator = new FixedOrderComparator( valueOrder );
        valueComparator = new NullComparator( valueComparator );
        valueComparator = new BeanComparator( "value", valueComparator );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        // Create a chain of comparators to sort a deck of cards</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        Comparator cardComparator = new ComparatorChain( );</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        cardComparator.addComparator( suitComparator );</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        cardComparator.addComparator( valueComparator );</fo:inline>

                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        Collections.sort( cards, cardComparator );</fo:inline>

            System.out.println( "After sorting: " + printCards( cards ) );
    }

    private String printCards( List cards ) {
        StringBuffer resultBuffer = new StringBuffer( );
        Iterator cardIter = cards.iterator( );
        while( cardIter.hasNext( ) ) {
           PlayingCard card = (PlayingCard) cards.next( );
           resultBuffer.append( " " + card.toString( ) );
        }
        return resultBuffer.toString( );
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example sorts the <fo:inline font-family="monospace" font-size="0.8em">PlayingCard</fo:inline> objects and
produces the following output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt168">Before sorting: JC 2H JOKER 2S QS 4C JD
After sorting: 2S QS 4C JC JD 2H JOKER</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The list is sorted such that all the cards of a similar suit are
grouped together—spades are less than clubs, clubs are less
than diamonds, and diamonds are less than hearts. A sorted collection
of cards is grouped by suits, and, within each suit, cards are
organized according to face value—2 is low and aces is high.
The order used in the sorting is captured in two fixed-order arrays,
<fo:inline font-family="monospace" font-size="0.8em">suitOrder</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">faceOrder</fo:inline>. If a
shuffled deck were used in the example, it would end up as a
perfectly sorted deck of cards.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-4-EX-4" text-decoration="underline" color="blue">Example 4-4</fo:basic-link> ties a number of simple
<fo:inline font-family="monospace" font-size="0.8em">Comparators</fo:inline> together to perform a fairly complex
sort. A <fo:inline font-family="monospace" font-size="0.8em">FixedOrderComparator</fo:inline> is wrapped in a
<fo:inline font-family="monospace" font-size="0.8em">NullComparator</fo:inline>, which is then wrapped with a
<fo:inline font-family="monospace" font-size="0.8em">BeanComparator</fo:inline>. These
<fo:inline font-family="monospace" font-size="0.8em">BeanComparator</fo:inline> instances are then combined in a
<fo:inline font-family="monospace" font-size="0.8em">ComparatorChain</fo:inline>. The use of
<fo:inline font-family="monospace" font-size="0.8em">NullComparator</fo:inline> with a
<fo:inline font-family="monospace" font-size="0.8em">BeanComparator</fo:inline> is recommended to avoid a
<fo:inline font-family="monospace" font-size="0.8em">NullPointerException</fo:inline> from
<fo:inline font-family="monospace" font-size="0.8em">BeanComparator</fo:inline>; <fo:inline font-family="monospace" font-size="0.8em">BeanComparator</fo:inline>
is not designed to handle <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>-valued bean
properties, and it throws an exception if you ask it to play nice
with <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>s.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-6.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.6.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">BeanComparator</fo:inline> is discussed in <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-10" text-decoration="underline" color="blue">Recipe 3.10</fo:basic-link>. This helpful utility is indispensable if
you are working with systems that need to sort JavaBeans.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about the <fo:inline font-family="monospace" font-size="0.8em">ComparatorChain</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2326"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2327"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2328"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2329"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2330"><!----></fo:wrapper>object, see <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-4" text-decoration="underline" color="blue">Recipe 4.4</fo:basic-link>. For more information on the
<fo:inline font-family="monospace" font-size="0.8em">NullComparator</fo:inline>, see <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-5" text-decoration="underline" color="blue">Recipe 4.5</fo:basic-link>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-7"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Using Simple Predicates</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.7. Using Simple Predicates</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-7.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.7.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to perform logic that is predicated <fo:wrapper id="jakartackbk-CHP-4-ITERM-2331"><!--functors, predicates--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2332"><!--Commons
Collections, predicates--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2333"><!--predicates, Commons
Collections--></fo:wrapper>on a certain condition being
satisfied, and you want to encapsulate this condition in an object.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-7.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.7.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use a <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> to evaluate a criteria or a
condition. A <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> is an object that evaluates
another object and returns <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> or
<fo:inline font-family="monospace" font-size="0.8em">false</fo:inline>; predicates are used throughout the Commons
Collections packages for filtering, selecting, and validating the
contents of collections. This code demonstrates the use of simple
predicates to test the type and contents of an object:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt169">import org.apache.commons.collection.Predicate;
import org.apache.commons.collection.functors.*;

String name = "Tim";

Predicate nameJohn = new EqualPredicate( "John" );
Predicate nameTim = new EqualPredicate( "Tim" );

Predicate instanceString = new InstanceofPredicate( String.class );
Predicate instanceDouble = new InstanceofPredicate( Double.class );

// Testing all predicates for "Tim"
System.out.println( "Is Name John?: " + nameJohn.evaluate( name ) );
System.out.println( "Is Name Tim?: " + nameTim.evaluate( name ) );
System.out.println( "Is this a String?: " + instanceString.evaluate( name ) );
System.out.println( "Is this a Double?: " + instanceDouble.evaluate( name ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous example tests the <fo:inline font-family="monospace" font-size="0.8em">name</fo:inline> object against
a few <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> implementations producing the
following console output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt170">Is Name John?: false
Is Name Tim?: true
Is this a String?: true
Is this a Double?: false</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The string "Tim" is subjected to
various <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> tests. The first two
<fo:inline font-family="monospace" font-size="0.8em">EqualPredicate</fo:inline> objects test the contents of the
string, returning <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> if the object being
evaluated is equal to the object passed into the
<fo:inline font-family="monospace" font-size="0.8em">EqualPredicate</fo:inline>'s constructor. The
last two <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> objects are
<fo:inline font-family="monospace" font-size="0.8em">InstanceofPredicate</fo:inline> instances, which test the type
of object being evaluated; if an
<fo:inline font-family="monospace" font-size="0.8em">InstanceofPredicate</fo:inline> constructor is passed to the
<fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> class, it returns <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>
if the object being evaluated is a
<fo:inline font-family="monospace" font-size="0.8em">java.lang.String</fo:inline> type.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-7.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.7.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The simple <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> interface is central to a
number of utilities introduced in this chapter. To implement
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>, define an <fo:inline font-family="monospace" font-size="0.8em">evaluate()</fo:inline> method that returns a <fo:inline font-family="monospace" font-size="0.8em">boolean</fo:inline>; a
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> is a function object (or functor) that
captures a criteria in an object that can be created and altered at
runtime. Creating and evaluating a <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> is
just as valid as writing an <fo:inline font-family="monospace" font-size="0.8em">if</fo:inline> statement; for
example, the code in the Solution of this recipe could have been
implemented as a series of <fo:inline font-family="monospace" font-size="0.8em">if</fo:inline> statements:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt171">String name = "Tim";

if( name.equals( "John" ) ) {
        System.out.println( "The name is John." );
}

if( name.equals( "Tim" ) ) {
        System.out.println( "The name is Tim." );
}

if( name instanceof String ) ) {
        System.out.println( "name is as String object" );
}

if( name instanceof Double ) ) {
        System.out.println( "name is as Double object" );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> instances capture an
<fo:inline font-family="monospace" font-size="0.8em">if</fo:inline> statement in an object, and if you are going to
constantly change the behavior of your application, you might want to
consider placing conditional expressions in
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> instances. For example, if a system is
designed to classify a storm as being a hurricane, you may want to
capture all of your classification criteria in an XML
file—parsing this file at runtime and creating a series of
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> objects. A storm is a hurricane when the
winds exceed a certain value, and the barometric pressure falls below
a certain point. But, in a few years those criteria might change to
involve a new, or more complex, set of measurements. If your decision
logic is encapsulated in a <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> object, it
will be easier to upgrade the program to take new criteria into
account; all of this logic will be encapsulated in an instance of
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Commons Collections provides a number of basic predicates for common
situations, such as testing to see if an object equals another object
(<fo:inline font-family="monospace" font-size="0.8em">EqualPredicate</fo:inline>), or that an object is of a
certain type (<fo:inline font-family="monospace" font-size="0.8em">InstanceofPredicate</fo:inline>). <fo:basic-link internal-destination="jakartackbk-CHP-4-TABLE-1" text-decoration="underline" color="blue">Table 4-1</fo:basic-link> lists a number of simple
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> implementations.</fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-4-TABLE-1"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 4-1. Predicate implementations</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-left-style="solid" border-right-style="solid" border-top-style="solid" border-bottom-style="solid" border-left-width="0.1pt" border-right-width="0.1pt" border-top-width="0.1pt" border-bottom-width="0.1pt" border-left-color="black" border-right-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="17.4cm"><fo:table-column column-number="1"/><fo:table-column column-number="2"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block font-weight="bold"><fo:wrapper id="jakartackbk-CHP-4-ITERM-2334"><!--implementation, predicates--></fo:wrapper>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Name</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Description</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">EqualPredicate</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Compares each object to an object passed via a
constructor—returning true if the two are equal.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">IdentityPredicate</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Returns true if the object being evaluated is the same object
reference as the object passed to its constructor. The
<fo:inline font-family="monospace" font-size="0.8em">IdentityPredicate</fo:inline> uses the <fo:inline font-family="monospace" font-size="0.8em">==</fo:inline> operator
to compare two object references.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">NotPredicate</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Wraps a <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> and returns the opposite result.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">InstanceOfPredicate</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Returns <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> if the object being evaluated matches
the type passed into its constructor.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">NullPredicateNullIsTruePredicate</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Returns true if the object being evaluated is <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">NotNullPredicateNullIsFalsePredicate</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Returns true if the object being evaluated is not
<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">TruePredicate</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Always returns <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">FalsePredicate</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Always returns <fo:inline font-family="monospace" font-size="0.8em">false</fo:inline>.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">UniquePredicate</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Returns <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> if it is the first time a particular
object has been evaluated. The <fo:inline font-family="monospace" font-size="0.8em">UniquePredicate</fo:inline>
maintains a <fo:inline font-family="monospace" font-size="0.8em">HashSet</fo:inline> of objects it has evaluated;
if an object is already in that <fo:inline font-family="monospace" font-size="0.8em">HashSet</fo:inline>, this
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> returns <fo:inline font-family="monospace" font-size="0.8em">false</fo:inline>.
<fo:inline font-family="monospace" font-size="0.8em">UniquePredicate</fo:inline> can be used to select distinct
objects from a collection.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The following example demonstrates
simple<fo:wrapper id="jakartackbk-CHP-4-ITERM-2335"><!--objects, predicates--></fo:wrapper>
               <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> objects with a test for equality,
inequality, and equality by identity:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt172">import org.apache.commons.collections.Predicate;
import org.apache.commons.collections.functors.*;
...

String testName = "Ben";

Predicate equals = new EqualPredicate( testName );
Predicate notEquals = new NotPredicate( equals );
Predicate identity = new IdentityPredicate( testName );

System.out.println( "Does name equal 'Ben'? " + equals.evaluate( "Ben" ) );
System.out.println( "Is object 'Ben'? " + identity.evaluate( testName ) );
System.out.println( "Does name equal 'Tim'? " + equals.evaluate( "Tim" ) );
System.out.println( "Does name not equal 'Tim'? " + notEquals.
evaluate( "Tim" ) );
System.out.println( "Is object 'Tim'? " + identity.evaluate( "Tim" ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This code demonstrates the use of <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>
objects to determine if objects are equal or if two object references
reference the same instance. When executed, the following is output
to the console:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt173">Does name equal 'Ben'? true
Is object 'Ben'? true
Does name equal 'Tim'? false
Does name not equal 'Tim'? true
Is object 'Tim'? false</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The following code demonstrates simple predicates that test for the
presence or absence of <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> or if an object being
evaluated is of a certain type. The example also demonstrates the use
of a <fo:inline font-family="monospace" font-size="0.8em">UniquePredicate</fo:inline> that returns <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>
when it encounters an object for the first time:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt174">import org.apache.commons.collections.Predicate;
import org.apache.commons.collections.functors.*;

String nullString = null;
Double testDouble = new Double(3.4);

Predicate isString = new InstanceofPredicate( String.class );
Predicate isLong = new InstanceofPredicate( Long.class );
Predicate isNumber = new InstanceofPredicate( Number.class );

Predicate isNotNull = NotNullPredicate.INSTANCE;
Predicate isNull = NullPredicate.INSTANCE;

Predicate unique = new UniquePredicate( );

System.out.println("'nullString' not null?: " + isNotNull.
evaluate(nullString));
System.out.println("'nullString' null?: " + isNull.evaluate(nullString));

System.out.println("'testDouble' a String?: " + isString.
evaluate(testDouble));
System.out.println("'testDouble' a Long?: " + isLong.evaluate(testDouble));
System.out.println("'testDouble' a Number?: " + isNumber.
evaluate(testDouble));

System.out.println("'A' Unique?: " + unique.evaluate("A"));
System.out.println("'C' Unique?: " + unique.evaluate("C"));
System.out.println("'A' Unique?: " + unique.evaluate("A"));
System.out.println("'B' Unique?: " + unique.evaluate("B"));</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The sample evaluates objects against the
<fo:inline font-family="monospace" font-size="0.8em">InstanceofPredicate</fo:inline>, the
<fo:inline font-family="monospace" font-size="0.8em">NullPredicate</fo:inline>, the
<fo:inline font-family="monospace" font-size="0.8em">NotNullPredicate</fo:inline>, and the
<fo:inline font-family="monospace" font-size="0.8em">UniquePredicate</fo:inline>, and the following is output to
the console:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt175">'nullString' not null?: false
'nullString' null?: true

'testDouble' a String?: false
'testDouble' a Long?: false
'testDouble' a Number?: true

'A' Unique?: true
'C' Unique?: true
'A' Unique?: false
'B' Unique?: true</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">UniquePredicate</fo:inline> returns
<fo:inline font-family="monospace" font-size="0.8em">false</fo:inline> the second time it encounters
"A." The <fo:inline font-family="monospace" font-size="0.8em">Double</fo:inline>
object <fo:inline font-family="monospace" font-size="0.8em">testDouble</fo:inline> is shown to be a
<fo:inline font-family="monospace" font-size="0.8em">Number</fo:inline> object, and the
<fo:inline font-family="monospace" font-size="0.8em">nullString</fo:inline> is evaluated as
non-<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-7.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.7.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This recipe mentions function pointers in C and C++. Function
pointers are pointers to the address of a function, and they allow
for some interesting logical acrobatics. For more information about
function pointers in C and C++, see <fo:inline font-family="monospace" font-size="0.8em">http://www.function-pointer.org/</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> are all functor objects that are used
throughout the Commons Collections component. You may be familiar
with functors if you have used the Standard Template Library (STL) in
C++. STL documentation contains rigorous definitions for function
objects and<fo:wrapper id="jakartackbk-CHP-4-ITERM-2336"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2337"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2338"><!----></fo:wrapper> predicates. For more information
about functors in STL, see <fo:inline font-family="monospace" font-size="0.8em">http://www.sgi.com/tech/stl/functors.html</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-8"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Writing a Custom Predicate</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.8. Writing a Custom Predicate</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-8.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.8.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to evaluate an<fo:wrapper id="jakartackbk-CHP-4-ITERM-2339"><!--functors, predicates, customization--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2340"><!--Commons
Collections, predicates, customization--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2341"><!--predicates, Commons
Collections, customization--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2342"><!--customization, predicates--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2343"><!--interfaces, Predicate--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2344"><!--implementation, Predicate
interface--></fo:wrapper> object to see if it meets criteria,
and you want to capture these criteria in a custom
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-8.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.8.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Implement the <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> interface and capture your
logic in an <fo:inline font-family="monospace" font-size="0.8em">evaluate(
)</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2345"><!--evaluate( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2346"><!--methods, evaluate(
)--></fo:wrapper> method. <fo:basic-link internal-destination="jakartackbk-CHP-4-EX-5" text-decoration="underline" color="blue">Example 4-5</fo:basic-link> is a
simple <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> implementation that always
returns <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>; it is intended as a basic example of
how to implement the <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> interface.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-4-EX-5"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4-5. A simple Predicate implementation</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e12745">import org.apache.commons.collections.Predicate;

public class SimplePredicate implements Predicate {
    public boolean evaluate(Object object) {
        // do something.
        boolean result = true;
        return result;
    }
}</fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-8.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.8.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">Predicates</fo:inline> can be used in any number of
situations, such as validating user input, filtering a
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>, or just as a replacement for complex
conditional logic. A <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> can be as simple or
as complex as you need it to be; the only contract it must satisfy is
the production of a <fo:inline font-family="monospace" font-size="0.8em">boolean</fo:inline> result from an
<fo:inline font-family="monospace" font-size="0.8em">evaluate( )</fo:inline> method.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">To demonstrate the process of writing a fairly complex implementation
of the <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> interface, a contrived example is
developed in <fo:basic-link internal-destination="jakartackbk-CHP-4-EX-6" text-decoration="underline" color="blue">Example 4-6</fo:basic-link>. Your application evaluates
the condition of the space shuttle and makes a determination for
launch—go or no go. Some of the criteria include the
temperature of the launch pad, the status of the crew, and the
presence (or absence) of fuel. In the end, your boss is looking for
thumbs up or thumbs down, and you decide to write a program that
returns a <fo:inline font-family="monospace" font-size="0.8em">boolean</fo:inline> decision. This decision is
implemented in the <fo:inline font-family="monospace" font-size="0.8em">LaunchPredicate</fo:inline> class.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-4-EX-6"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4-6. Implementing the Predicate interface</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e12784">package com.discursive.jccook.collections.predicate;

import org.apache.commons.collections.Predicate;

public class LaunchPredicate implements Predicate {

    public LaunchPredicate( ) {}

    public boolean evaluate(Object object) {
        boolean launchGo = false;

        LaunchStats stats = (LaunchStats) object;

        boolean crewReady = stats.isCrewPresent( ) &amp;&amp; stats.isCrewHealthy( );
        boolean fueled = stats.isShuttleFueled( ) &amp;&amp; stats.
        isFuelIgnitionReady( );
        boolean withinLaunchWindow = stats.isLaunchWindowOpen( );

        boolean properWeather = 
                ( stats.temperature( ) &gt; 35 ) &amp;&amp; 
              ( !stats.isLightningDangerPresent( ) );

        // Check the crew, fuel, and launch time
            if( crewReady &amp;&amp; fueled &amp;&amp; withinLaunchWindow ) {
            launchGo = true;
        }

        // Override a GO decision if the weather is bad
        if( !properWeather ) {
            launchGo = false;
        }

        return launchGo;
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A shuttle launch is predicated on the presence and health of the
crew, the state of the fuel, and the time of the launch event. A
final weather check is performed to ensure that the temperature of
the shuttle is not below 35 degrees Fahrenheit. If this critical
temperature limit is not met, the <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>
overrides the previous decision to launch. Using a
<fo:inline font-family="monospace" font-size="0.8em">LaunchPredicate</fo:inline> encapsulates your decision logic
in one object, making it easier to upgrade, maintain, and test this
decision process. Your unit tests can pass a mock object to this
predicate, testing every possible permutation of possible inputs. The
following example demonstrates the use of the
<fo:inline font-family="monospace" font-size="0.8em">LaunchPredicate</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt176">LaunchPredicate launchDecision = new LaunchPredicate( );

LaunchStats stats = measureLaunchStatistics( );

if( launchDecision.evaluate( stats ) ) {
    System.out.println( "We are Go for Ignition." );
} else {
    System.out.println( "Abort mission." );
}</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-8.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.8.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The real Space Shuttle Launch Team has the outrageously complex job
of monitoring and controlling every aspect of launching a spacecraft,
and I'm sure that NASA doesn't
implement the <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> interface from Jakarta
Commons Collections. While it isn't related to the
topic of open source Java programming, it is a fascinatingly complex
piece of software that maintains a shuttle launch. It is written in
something called high-order assembly language/shuttle (HAL/S). If you
are interested in learning more about one of the most complex pieces
of software, take a look at NASA's Space Shuttle
Launch Team website at <fo:inline font-family="monospace" font-size="0.8em">http://science.ksc.nasa.gov/shuttle/countdown/launch-team.html</fo:inline>.
(Besides, I'm sure you are amused that NASA controls
spacecraft with an assembly language known as HAL.)</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This recipe mentions the use of a mock object to test a
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>. One of the attractions of using a
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> to encapsulate any complex condition is
the ability to write a test for this condition logic; <fo:inline font-family="monospace" font-size="0.8em">mock
objects</fo:inline> are a method of unit testing that involves passing
a mock implementation of an object to a class i<fo:wrapper id="jakartackbk-CHP-4-ITERM-2347"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2348"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2349"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2350"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2351"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2352"><!----></fo:wrapper>n a test. For
more information about mock objects, see <fo:inline font-family="monospace" font-size="0.8em">http://www.mockobjects.com/</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-9"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Creating Composite Predicates</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.9. Creating Composite Predicates</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-9.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.9.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to perform complex<fo:wrapper id="jakartackbk-CHP-4-ITERM-2353"><!--functors, predicates, combining--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2354"><!--Commons
Collections, predicates, combining--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2355"><!--predicates, Commons
Collections, combining--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2356"><!--combining
predicates--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2357"><!--multiple predicates,
combining--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2358"><!--conditions, combining
predicates--></fo:wrapper> conditional logic using multiple
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> objects, and you need to combine and
expose multiple criteria as one <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-9.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.9.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">To combine several <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> instances, create a
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> to capture each portion of a compound
condition, and combine each condition with
<fo:inline font-family="monospace" font-size="0.8em">AndPredicate</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">OrPredicate</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">AllPredicate</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">OnePredicate</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">AnyPredicate</fo:inline>, or <fo:inline font-family="monospace" font-size="0.8em">NonePredicate</fo:inline>.
All of these predicate implementations are used to combine the
results of multiple predicates—creating a compound predicate.
The following code demonstrates the use of the
<fo:inline font-family="monospace" font-size="0.8em">AndPredicate</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">OrPredicate</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">AllPredicate</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">OnePredicate</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt177">import org.apache.commons.collections.Predicate;
import org.apache.commons.collections.functors.*;

// Create Base Predicates
Predicate isTim = new EqualsPredicate("Tim");
Predicate isDouble = new InstanceOfPredicate( Double.class );
Predicate isNotNull = NotNullPredicate.INSTANCE;

Predicate[] predicates = new Predicate[] { isTim, isDouble, isNotNull };

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">// Create 2 argument logical predicate composites</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Predicate andPredicate = new AndPredicate( isTim, isNotNull );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Predicate orPredicate = new OrPredicate( isTim, isNotNull );</fo:inline>

               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">// Create n-argument logical predicate composites</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Predicate allPredicate = new AllPredicate( predicates );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Predicate onePredicate = new OnePredicate( predicates );</fo:inline>

System.out.println( "'Tim' and not null?: " + andPredicate.
evalute( "Tim" ) );
System.out.println( "'Tim' or not null?: " + andPredicate.
evalute(new Long(3))); 

System.out.println( "'Tim', not null, and Double?: " 
                        + allPredicate.evaluate( "Impossible" ) );
System.out.println( "XOR ('Tim', not null, or Double?): " 
                        + allPredicate.evaluate( "Impossible" ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example creates the following output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt178">'Tim' and not null?: true
'Tim' or not null?: true

'Tim', not null, and Double?: false
XOR('Tim', not null, or Double?): true</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-9.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.9.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">An <fo:inline font-family="monospace" font-size="0.8em">AndPredicate</fo:inline> returns <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> if
both predicates supplied to its constructor return
<fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>, and an <fo:inline font-family="monospace" font-size="0.8em">OrPredicate</fo:inline>
returns <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> if at least one of the two predicates
passed to its constructor returns <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>. An
<fo:inline font-family="monospace" font-size="0.8em">AllPredicate</fo:inline> takes an array of predicates, only
returning <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> if every predicate evaluates to
<fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>. The <fo:inline font-family="monospace" font-size="0.8em">OnePredicate</fo:inline> also
takes an array of predicates, only returning <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>
if exactly one predicate evaluates to <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In the code sample, the use of the second to last predicate,
<fo:inline font-family="monospace" font-size="0.8em">AllPredicate</fo:inline>, is impossible to satisfy; an object
can never be a <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> and a
<fo:inline font-family="monospace" font-size="0.8em">Double</fo:inline> at the same time. This example fails to
demonstrate <fo:inline font-family="monospace" font-size="0.8em">AnyPredicate</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">NonePredicate</fo:inline>—both take an array of
predicates. <fo:inline font-family="monospace" font-size="0.8em">AnyPredicate</fo:inline> returns
<fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> if any of the predicates evaluate to
<fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">NonePredicate</fo:inline> returns
<fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> only if none of the predicates evaluate to
<fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>. The behavior of these objects is easily
inferred from the names: And, Or, All, One, Any, or None.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Any logical expression can be modeled by connecting
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> objects together— similar to the
way that simple logic gates are connected to create complex digital
logic. Logical inputs (1 and 0) are routed to logic gates (AND, OR,
NOR, NAND, XOR, etc.), and the outputs of a logic circuit are a
result of stages that perform the same function as the
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> objects introduced in this recipe. In
the next example, a logic circuit will be used to demonstrate a
complex hierarchy of <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> objects; a circuit
diagram is drawn, and a series of predicates are developed to model
this circuit. <fo:basic-link internal-destination="jakartackbk-CHP-4-FIG-1" text-decoration="underline" color="blue">Figure 4-1</fo:basic-link> contains a logical
expression that is implemented with digital logic and
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> objects.</fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-4-FIG-1"><fo:block id="I_4_tt179"><fo:external-graphic src="/Users/tobrien/Library/Code/common-java-cookbook/content/target/classes/docbook/figs/print/jccb_0401.pdf" width="46px" height="17px" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:application/pdf"/></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-previous.within-column="always">Figure 4-1. Logical expression

 to be modeled with Predicate</fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Assuming that every letter corresponds to a
<fo:inline font-family="monospace" font-size="0.8em">boolean</fo:inline> variable, this expression corresponds to
the circuit diagram in <fo:basic-link internal-destination="jakartackbk-CHP-4-FIG-2" text-decoration="underline" color="blue">Figure 4-2</fo:basic-link>. Each gate can be
modeled as a composite <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>, and from <fo:basic-link internal-destination="jakartackbk-CHP-4-FIG-2" text-decoration="underline" color="blue">Figure 4-2</fo:basic-link> it is clear that this example will include two
<fo:inline font-family="monospace" font-size="0.8em">AndPredicates</fo:inline>, an <fo:inline font-family="monospace" font-size="0.8em">OrPredicate</fo:inline>,
and a <fo:inline font-family="monospace" font-size="0.8em">NotPredicate</fo:inline>. The
"AND" gate is modeled with an
<fo:inline font-family="monospace" font-size="0.8em">AndPredicate</fo:inline>, and an
"OR" gate with an
<fo:inline font-family="monospace" font-size="0.8em">OrPredicate</fo:inline>. The
"NAND" gate is transformed into a
three-input "AND" gate followed by
an inverter that is modeled with an <fo:inline font-family="monospace" font-size="0.8em">AllPredicate</fo:inline>
wrapped in a <fo:inline font-family="monospace" font-size="0.8em">NotPredicate</fo:inline>.</fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-4-FIG-2"><fo:block id="I_4_tt180"><fo:external-graphic src="/Users/tobrien/Library/Code/common-java-cookbook/content/target/classes/docbook/figs/print/jccb_0402.pdf" width="127px" height="84px" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:application/pdf"/></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-previous.within-column="always">Figure 4-2. Circuit representing logical expression</fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The system has five inputs, which will be stored in a
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> with five keys: A, B, C, D, and E. A simple
<fo:inline font-family="monospace" font-size="0.8em">InputPredicate</fo:inline> is developed to handle the inputs
to the system—a map of <fo:inline font-family="monospace" font-size="0.8em">Boolean</fo:inline> input objects
is passed to the top-level <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>. An
<fo:inline font-family="monospace" font-size="0.8em">InputPredicate</fo:inline> is configured to evaluate the input
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> and return the <fo:inline font-family="monospace" font-size="0.8em">boolean</fo:inline>
value of one of the inputs; in other words, an
<fo:inline font-family="monospace" font-size="0.8em">InputPredicate</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2362"><!--InputPredicate--></fo:wrapper>
selects a <fo:inline font-family="monospace" font-size="0.8em">boolean</fo:inline> value from a
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>, always returning the value of that input from
the <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> it evaluates. (See <fo:basic-link internal-destination="jakartackbk-CHP-4-EX-7" text-decoration="underline" color="blue">Example 4-7</fo:basic-link>.)</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-4-EX-7"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4-7. InputPredicate: a predicate that selects an input from a Map</fo:block><fo:wrapper id="jakartackbk-CHP-4-ITERM-2363"><!--mapping, InputPredicate--></fo:wrapper><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e13145">package com.discursive.jccook.collections.predicate;

import org.apache.commons.collections.Predicate;

public class InputPredicate implements Predicate {

    private String inputKey;

    public BooleanPredicate(String inputKey) {
        this.inputKey = inputKey;
    }

    public boolean evaluate(Object object) {
        boolean satisfies = false;

            Map inputMap = (Map) object;
        Boolean input = (Boolean) inputMap.get( inputKey );
        if( input != null ) {
            satisfies = input.booleanValue( );
        }

        return satisfies;
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The entire circuit is modeled by one top-level
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> and a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> of
<fo:inline font-family="monospace" font-size="0.8em">Boolean</fo:inline> input signals is passed down a hierarchy
of predicates as needed. Unlike a real circuit, where inputs would
cause gates to fire sequentially, the predicate hierarchy is
evaluated from the final stage backward—the example evaluates
the <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> variable <fo:inline font-family="monospace" font-size="0.8em">circuit</fo:inline>.
The input map is passed to the top-most <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>,
which, in turn, passes this same map to the
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> that precedes it in
<fo:wrapper id="jakartackbk-CHP-4-ITERM-2364"><!--implementation--></fo:wrapper>the circuit. <fo:basic-link internal-destination="jakartackbk-CHP-4-EX-8" text-decoration="underline" color="blue">Example 4-8</fo:basic-link> ties everything together, and the logic to
create our circuit-modeling predicate has been confined to the
<fo:inline font-family="monospace" font-size="0.8em">createPredicate()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2365"><!--createPredicate( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2366"><!--methods, createPredicate(
)--></fo:wrapper> method.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-4-EX-8"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4-8. Implementing a 
multilevel composite Predicate</fo:block><fo:wrapper id="jakartackbk-CHP-4-ITERM-2367"><!--multilevel composite predicate implementation--></fo:wrapper><fo:wrapper id="jakartackbk-CHP-4-ITERM-2368"><!--implementation, multilevel composite predicates--></fo:wrapper><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e13203">package com.discursive.jccook.collections.predicate;

import org.apache.commons.collections.Predicate;
import org.apache.commons.collections.functors.*;

public class CompoundPredicateExample {

    public static void main(String[] args) {
        CompoundPredicateExample example = new CompoundPredicateExample( );
        example.start( );
    }

    public void start( ) {

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        Predicate circuit = createPredicate( );</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">       Object[] inputsArray = </fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">           new Object[][] { {"A", Boolean.TRUE},</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">                            {"B", Boolean.FALSE},</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">                            {"C", Boolean.TRUE},</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">                            {"D", Boolean.FALSE},</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">                            {"E", Boolean.FALSE} };</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        Map inputs = ArrayUtils.toMap( inputsArray );</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        boolean result = circuit.evaluate( inputs ); </fo:inline>

                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">         System.out.println( "The circuit fired?: " + result );</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    }</fo:inline>

    public Predicate createPredicate( ) {
        Predicate aPredicate = new InputPredicate("A");
        Predicate bPredicate = new InputPredicate("B");
        Predicate cPredicate = new InputPredicate("C");
        Predicate dPredicate = new InputPredicate("D");
        Predicate ePredicate = new InputPredicate("E");

        Predicate expression1 = new AndPredicate( aPredicate, bPredicate );
        Predicate expression2 = new OrPredicate( cPredicate, dPredicate );

       Predicate[] secondLevel = 
           new Predicate( ) { expression1, expression2, ePredicate };

       Predicate topLevel = new NotPredicate( secondLevel );
       return topLevel;
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This code prints <fo:inline font-family="monospace" font-size="0.8em">The</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">circuit</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">fired?</fo:inline>: <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>. This complex
example has demonstrated the process of modeling composite,
multistage logic with a hierarchy of predicates. A
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> is the most basic functor and when
combined with other <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> instances, there is
no limit to the level of complexity that can be achieved. Logic
circuits were used in this example because a logic gate is <fo:wrapper id="jakartackbk-CHP-4-ITERM-2369"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2370"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2371"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2372"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2373"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2374"><!----></fo:wrapper>a great analogy
for a <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>. Think of a
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> as a component—a gate in a logic
circuit.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-10"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Transforming Objects</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.10. Transforming Objects</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-10.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.10.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to perform
a<fo:wrapper id="jakartackbk-CHP-4-ITERM-2375"><!--functors, objects, transformation--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2376"><!--objects, transformation--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2377"><!--transformation, objects--></fo:wrapper>
transformation, taking an object and creating a new object.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-10.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.10.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Implement the <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> interface. A
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> takes an object and returns a new
object instance. The following example demonstrates the
<fo:inline font-family="monospace" font-size="0.8em">joinArmy</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>; the
<fo:inline font-family="monospace" font-size="0.8em">transform( )</fo:inline> method takes a
<fo:inline font-family="monospace" font-size="0.8em">Recruit</fo:inline> object instance and returns a
<fo:inline font-family="monospace" font-size="0.8em">Soldier</fo:inline> object:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt181">import org.apache.commons.collections.Transformer;

Transformer joinArmy = new Transformer( ) {
    public Object transform(Object input) {
                Recruit recruit = (Recruit) input;
         BootCamp.obstacleCourse( recruit );
                Soldier soldier = BootCamp.graduate( recruit );
        }
}

Recruit recruit1 = new Recruit("Pat T.");
System.out.println( "Status before transformation: " + recruit );

Soldier soldier1 = (Soldier) joinArmy.transform( recruit1 );
System.out.println( "Status after transformation: " + soldier );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A <fo:inline font-family="monospace" font-size="0.8em">Recruit</fo:inline> object is passed to the
<fo:inline font-family="monospace" font-size="0.8em">joinArmy.transform( )</fo:inline> method, and a
<fo:inline font-family="monospace" font-size="0.8em">Soldier</fo:inline> object is returned. The state of the
<fo:inline font-family="monospace" font-size="0.8em">recruit</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">soldier</fo:inline> instances
are printed before and after the transformation:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt182">Status before transformation: Pat T., Recruit
Status after transformation: Pat T., Soldier</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-10.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.10.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This object isolates and encapsulates a transition; a system that
needs to translate between two domain models or two object types
should encapsulate such a transition in a
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>. <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> may be
something of a misnomer. When an object undergoes a transformation,
it is common to think of an object being modified or acted upon, but
this is contrary to the design of the <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>
interface. The Javadoc for <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> expressly
states, "The original object is left
unchanged." <fo:basic-link internal-destination="jakartackbk-CHP-4-FIG-3" text-decoration="underline" color="blue">Figure 4-3</fo:basic-link> illustrates
the simple <fo:inline font-family="monospace" font-size="0.8em">joinArmy</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>.</fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-4-FIG-3"><fo:block id="I_4_tt183"><fo:external-graphic src="/Users/tobrien/Library/Code/common-java-cookbook/content/target/classes/docbook/figs/print/jccb_0403.pdf" width="139px" height="30px" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:application/pdf"/></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-previous.within-column="always">Figure 4-3. Diagram of the joinArmy Transformer</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-10.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.10.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Jakarta Commons Functor in the Commons Sandbox expands on the initial
functors introduced in Commons Collections, introducing a
<fo:inline font-family="monospace" font-size="0.8em">UnaryFunction</fo:inline> object that provides a simple
interface equivalent to <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>. For more
information about <fo:inline font-family="monospace" font-size="0.8em">UnaryFunction</fo:inline>, see the Commons
Functor page at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/sandbox/functor</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-11"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Creating a Chain of Transformations</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.11. Creating a Chain of Transformations</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-11.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.11.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You have a series of transformations and
<fo:wrapper id="jakartackbk-CHP-4-ITERM-2378"><!--functors, objects, chaining
transformations--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2379"><!--objects, transformation, chaining--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2380"><!--transformation, objects, chaining--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2381"><!--chaining, transformations--></fo:wrapper>you
need to chain them together, passing the output of one stage to the
input of the next.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-11.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.11.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Create multiple implementations of <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>,
and chain them together with <fo:inline font-family="monospace" font-size="0.8em">ChainedTransformer</fo:inline>. A
<fo:inline font-family="monospace" font-size="0.8em">ChainedTransformer</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2382"><!--ChainedTransformer--></fo:wrapper>
takes an array of <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> objects, passing the
output of each <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> to the next
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> in the chain. The following example
demonstrates a <fo:inline font-family="monospace" font-size="0.8em">ChainedTransformer</fo:inline> with two
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> stages. The first stage,
<fo:inline font-family="monospace" font-size="0.8em">multiply</fo:inline>, multiplies a number by 100, and the
second stage, <fo:inline font-family="monospace" font-size="0.8em">increment</fo:inline>, adds one to the result
from the first stage:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt184">import org.apache.commons.collections.Transformer;
import org.apache.commons.collections.functors.ChainedTransformer;

Transformer multiply = new Transformer( ) {
    public Object transform(Object input) {
                Long number = (Long) input;
         return( new Long( number.longValue( ) * 100 ) );
        }
}

Transformer increment = new Transformer( ) {
    public Object transform(Object input) {
                Long number = (Long) input;
         return( new Long( number.longValue( ) + 1 ) );
        }
}

Transformer[] chainElements = new Transformer[] { multiply, increment };
Transformer chain = new ChainedTransformer( chainElements );

Long original = new Long( 34 );
Long result = chain.transform( original );

System.out.println( "Original: " + original );
System.out.println( "Result: " + result );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> chain takes the
<fo:inline font-family="monospace" font-size="0.8em">Long</fo:inline> instance <fo:inline font-family="monospace" font-size="0.8em">original</fo:inline> and
transforms it into a result:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt185">Original: 34
Result: 3401</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-11.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.11.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Since a <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> leaves the input parameter
passed to <fo:inline font-family="monospace" font-size="0.8em">transform( )</fo:inline> intact, this two-stage
<fo:inline font-family="monospace" font-size="0.8em">ChainedTransformer</fo:inline> creates a new instance of
<fo:inline font-family="monospace" font-size="0.8em">Long</fo:inline> for each stage in the
<fo:inline font-family="monospace" font-size="0.8em">ChainedTransformer</fo:inline>. A <fo:inline font-family="monospace" font-size="0.8em">Long</fo:inline> is
passed to the first stage, <fo:inline font-family="monospace" font-size="0.8em">multiply</fo:inline>, which
transforms 34 to 3400. The result from the first stage, 3400, is then
passed to the second stage, <fo:inline font-family="monospace" font-size="0.8em">increment</fo:inline>, which
produces the final <fo:inline font-family="monospace" font-size="0.8em">Long</fo:inline> result, 3401. A real
example would involve more complex implementations of
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>, but this simple example demonstrates
the mechanics of creating a simple pipeline of transformations, one
leading to another. <fo:basic-link internal-destination="jakartackbk-CHP-4-FIG-4" text-decoration="underline" color="blue">Figure 4-4</fo:basic-link> illustrates the
simple structure of this two-staged
<fo:inline font-family="monospace" font-size="0.8em">ChainedTransformer</fo:inline>.</fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-4-FIG-4"><fo:block id="I_4_tt186"><fo:external-graphic src="/Users/tobrien/Library/Code/common-java-cookbook/content/target/classes/docbook/figs/print/jccb_0404.pdf" width="195px" height="30px" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:application/pdf"/></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-previous.within-column="always">Figure 4-4. A ChainedTransformer with two Transformers</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-11.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.11.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Jakarta Commons Functor in the Commons Sandbox introduces a
<fo:inline font-family="monospace" font-size="0.8em">UnaryFunction</fo:inline> interface that provides an interface
equivalent to <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>, and multiple
<fo:inline font-family="monospace" font-size="0.8em">UnaryFunction</fo:inline> instances can be chained together
using the
<fo:inline font-family="monospace" font-size="0.8em">CompositeUnaryFunction</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2383"><!--CompositeUnaryFunction
class--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2384"><!--classes, CompositeUnaryFunction--></fo:wrapper>
class. For more information about
<fo:inline font-family="monospace" font-size="0.8em">CompositeUnaryFunction</fo:inline>, see the Commons Functor
page at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/sandbox/functor</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-12"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Applying Conditional Transformations</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.12. Applying Conditional Transformations</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-12.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.12.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to perform a different <fo:wrapper id="jakartackbk-CHP-4-ITERM-2385"><!--functors, objects, conditional
transformations--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2386"><!--objects, transformation, conditional--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2387"><!--transformation, objects, conditional--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2388"><!--conditional
transformations--></fo:wrapper>transformation depending on a
series of conditions or cases.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-12.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.12.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use a
<fo:inline font-family="monospace" font-size="0.8em">SwitchTransformer</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2389"><!--SwitchTransformer--></fo:wrapper>
to apply a <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> that is dependent on a
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>. A <fo:inline font-family="monospace" font-size="0.8em">SwitchTransformer</fo:inline>
models a <fo:inline font-family="monospace" font-size="0.8em">switch</fo:inline> statement, and it takes three
parameters: an array of <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> instances, an
array of <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> instances, and a default
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>. <fo:basic-link internal-destination="jakartackbk-CHP-4-EX-9" text-decoration="underline" color="blue">Example 4-9</fo:basic-link> uses a
<fo:inline font-family="monospace" font-size="0.8em">SwitchTransformer</fo:inline> to apply a different
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> implementation to odd and even
numbers.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-4-EX-9"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4-9. Using a SwitchTransformer</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e13657">Transformer oddTransform = new Transformer( ) {
    public Object transform(Object input) {
        Integer number = new Integer( input );
        return ( new Integer( number.intValue( ) * 2 );
    }
}

Transformer evenTransform = new Transformer( ) {
    public Object transform(Object input) {
        Integer number = new Integer( input );
        return ( new Integer( number.intValue( ) * 3 );
    }
}

Predicate isEven = new Predicate( ) {
    public boolean evaluate(Object input) {
        Integer number = (Integer) input;
        return( number.intValue( ) % 2 == 0 );
    }
}

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Predicate isOdd = new NotPredicate(isEven);</fo:inline>

                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Predicate[] pArray = new Predicate[] { isOdd, isEven };</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Transformer[] tArray = new Transformer[] { oddTransform, evenTransform };</fo:inline>

                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Transform predicateTransform = </fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    new SwitchTransform( pArray, tArray, new NOPTransformer( ) );</fo:inline>

Integer one = new Integer( 1 );
Integer two = new Integer( 2 );
Integer three = new Integer( 3 );
Integer four = new Integer( 4 );

System.out.println( "Transform of 1 = " + predicateTransform.
transform( one ) );
System.out.println( "Transform of 2 = " + predicateTransform.
transform( two ) );
System.out.println( "Transform of 3 = " + predicateTransform.
transform( three ) );
System.out.println( "Transform of 4 = " + predicateTransform.
transform( four ) );</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If an object being transformed satisfies the <fo:inline font-family="monospace" font-size="0.8em">isOdd</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>, it is passed to the
<fo:inline font-family="monospace" font-size="0.8em">oddTransform</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>. If an
object being transformed satisfies the <fo:inline font-family="monospace" font-size="0.8em">isEven</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>, it is passed to the
<fo:inline font-family="monospace" font-size="0.8em">evenTransform</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>. If the
object satisfies neither <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>, it is passed
to an instance of <fo:inline font-family="monospace" font-size="0.8em">NOPTransformer</fo:inline>, which is a
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> implementation that returns the object
passed to <fo:inline font-family="monospace" font-size="0.8em">transform( )</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt187">Transform of 1 = 2
Transform of 2 = 6
Transform of 3 = 6
Transform of 4 = 12</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-12.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.12.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The array of <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> instances and the array of
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> instances passed to the constructor of
<fo:inline font-family="monospace" font-size="0.8em">SwitchTransformer</fo:inline> must be of equal length. The
<fo:inline font-family="monospace" font-size="0.8em">SwitchTransformer</fo:inline> evaluates each of the
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> instances in the array. If a
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> evaluates to <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>,
the <fo:inline font-family="monospace" font-size="0.8em">SwitchTransformer</fo:inline> retrieves the
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> that corresponds to the matching
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>. If no <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>
evaluates to <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>, the
<fo:inline font-family="monospace" font-size="0.8em">SwitchTransformer</fo:inline> passes the object being
transformed to the third parameter—the default
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>. In <fo:basic-link internal-destination="jakartackbk-CHP-4-EX-9" text-decoration="underline" color="blue">Example 4-9</fo:basic-link>, the
default <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> was a
<fo:inline font-family="monospace" font-size="0.8em">NOPTransformer</fo:inline>, which is a
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> implementation that performs no
transformation and returns the object passed to <fo:inline font-family="monospace" font-size="0.8em">transform()</fo:inline>. <fo:basic-link internal-destination="jakartackbk-CHP-4-FIG-5" text-decoration="underline" color="blue">Figure 4-5</fo:basic-link> illustrates the
<fo:inline font-family="monospace" font-size="0.8em">SwitchTransformer</fo:inline> from the Solution; the two
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> instances correspond to two
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> instances.</fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-4-FIG-5"><fo:block id="I_4_tt188"><fo:external-graphic src="/Users/tobrien/Library/Code/common-java-cookbook/content/target/classes/docbook/figs/print/jccb_0405.pdf" width="199px" height="118px" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:application/pdf"/></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-previous.within-column="always">Figure 4-5. A SwitchTransform with two Predicate instances, two Transformer instances, and a default Transformer</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-12.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.12.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Jakarta Commons Functor in the Commons Sandbox introduces a
<fo:inline font-family="monospace" font-size="0.8em">UnaryFunction</fo:inline> interface that provides an interface
equivalent to <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>. A
<fo:inline font-family="monospace" font-size="0.8em">UnaryFunction</fo:inline> can be predicated with a
<fo:inline font-family="monospace" font-size="0.8em">UnaryPredicate</fo:inline> object via the
<fo:inline font-family="monospace" font-size="0.8em">ConditionalUnaryFunction</fo:inline> class. For more
information about <fo:inline font-family="monospace" font-size="0.8em">UnaryPredicate</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2390"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2391"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2392"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2393"><!----></fo:wrapper> and
<fo:inline font-family="monospace" font-size="0.8em">ConditionalUnaryFunction</fo:inline>, see the Commons Functor
page at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/sandbox/functor</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-13"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Writing a Closure</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.13. Writing a Closure</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-13.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.13.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need a functor that
<fo:wrapper id="jakartackbk-CHP-4-ITERM-2394"><!--functors, objects, closures--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2395"><!--objects, closures--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2396"><!--closures--></fo:wrapper>operates on an
object.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-13.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.13.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use a <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> to encapsulate a block of code that
acts on an object. In this example, a <fo:inline font-family="monospace" font-size="0.8em">discount</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> operates on a <fo:inline font-family="monospace" font-size="0.8em">Product</fo:inline>
object, reducing the price by 10 percent:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt189">Closure discount = new Closure( ) {
    int count = 0;
    public int getCount( ) { return count; }
  
    public void execute(Object input) {
        count++;
            (Product) product = (Product) input;
            product.setPrice( product.getPrice( ) * 0.90 ); 
    }
}

Product shoes = new Product( );
shoes.setName( "Fancy Shoes" );
shoes.setPrice( 120.00 );
System.out.println( "Shoes before discount: " + shoes );

discount.execute( shoes );
System.out.println( "Shoes after discount: " + shoes );

discount.execute( shoes );
discount.execute( shoes );
System.out.println( "Shoes after " + discount.getcount( ) + 
                    " discounts: " + shoes );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The example prints out the original cost of <fo:inline font-family="monospace" font-size="0.8em">shoes</fo:inline>
($120) and then proceeds to discount <fo:inline font-family="monospace" font-size="0.8em">shoes</fo:inline> and
print out the discounted price. The <fo:inline font-family="monospace" font-size="0.8em">Product</fo:inline>
object, <fo:inline font-family="monospace" font-size="0.8em">shoes</fo:inline>, is modified by the
<fo:inline font-family="monospace" font-size="0.8em">discount</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> three separate
times:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt190">Shoes before discount: Fancy Shoes for $120.00
Shoes after discount: Fancy Shoes for $108.00
Shoes after 3 discounts: Fancy Shoes for $87.48</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-13.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.13.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> operates on the input object passed to
the <fo:inline font-family="monospace" font-size="0.8em">execute( )</fo:inline> method, while a
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> does not alter the object passed to
<fo:inline font-family="monospace" font-size="0.8em">transform( )</fo:inline>. Use <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> if
your system needs to act on an object. Like the
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>
interfaces, there are a number of <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline>
implementations that can be used to chain and combine
<fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> instances.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-13.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.13.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Jakarta Commons Functor in the Commons Sandbox expands on the initial
functors introduced in Commons Collections, introducing a
<fo:inline font-family="monospace" font-size="0.8em">UnaryProcedure</fo:inline> object that provides a simple
interface equivalent to <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline>. For more
information about <fo:inline font-family="monospace" font-size="0.8em">UnaryProcedure</fo:inline>, see the Commons
Functor page at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/sandbox/functor</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-14"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Chaining Closures</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.14. Chaining Closures</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-14.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.14.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">An object needs to be acted
on<fo:wrapper id="jakartackbk-CHP-4-ITERM-2397"><!--functors, objects, chaining
closures--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2398"><!--objects, closures, chaining--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2399"><!--closures, chaining--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2400"><!--chaining, closures--></fo:wrapper>
by a series of <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> instances.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-14.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.14.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">ChainedClosure</fo:inline> to create a chain of
<fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> instances that appears as a single
<fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline>. A
<fo:inline font-family="monospace" font-size="0.8em">ChainedClosure</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2401"><!--ChainedClosure--></fo:wrapper>
takes an array of <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> objects and passes the
same object sequentially to each <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> in the
chain. This example sends an object through a
<fo:inline font-family="monospace" font-size="0.8em">ChainedClosure</fo:inline> containing two stages that modify
different properties on the object:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt191">Closure fuel = new Closure( ) {
    public void execute(Object input) {
        Shuttle shuttle = (Shuttle) input;
        shuttle.setFuelPercent( 100.0 );
    }
}

Closure repairShielding = new Closure( ) {
    public void execute(Object input) {
        Shuttle shuttle = (Shuttle) input;
        shuttle.setShieldingReady( true );
    }
}

Closure[] cArray = new Closure[] { repairShielding, fuel };
Closure preLaunch = new ChainedClosure( cArray );

Shuttle endeavour = new Shuttle( );
endeavour.setName( "Endeavour" );
System.out.println( "Shuttle before preLaunch: " + shuttle );

preLaunch.execute( endeavour );
System.out.println( "Shuttle after preLaunch: " + shuttle );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A <fo:inline font-family="monospace" font-size="0.8em">Shuttle</fo:inline> object is passed through a
<fo:inline font-family="monospace" font-size="0.8em">ChainedClosure</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">preLaunch</fo:inline>,
which consists of the stages <fo:inline font-family="monospace" font-size="0.8em">fuel</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">repairShielding</fo:inline>. These two
<fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> objects each modify the internal state of
the <fo:inline font-family="monospace" font-size="0.8em">Shuttle</fo:inline> object, which is printed out both
before and after the execution of the <fo:inline font-family="monospace" font-size="0.8em">preLaunch</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt192">Shuttle before preLaunch: Shuttle Endeavour has no fuel and no shielding.
Shuttle before preLaunch: Shuttle Endeavour is fueled and is ready for reentry.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-14.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.14.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example should remind you of <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-11" text-decoration="underline" color="blue">Recipe 4.11</fo:basic-link>. When chaining <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>
objects, the result of each transformation is passed between
stages—the results of stage one are passed to stage two, the
results of stage two are passed to stage three, and so on. A
<fo:inline font-family="monospace" font-size="0.8em">ChainedClosure</fo:inline> is different; the same object is
passed to each <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> in sequence like a car
moving through a factory assembly line.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-14.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.14.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Jakarta Commons Functor in the Commons Sandbox introduces a
<fo:inline font-family="monospace" font-size="0.8em">UnaryProcedure</fo:inline> interface that is equivalent to
<fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline>. Two or more
<fo:inline font-family="monospace" font-size="0.8em">UnaryProcedure</fo:inline> instances can be chained together
using the <fo:inline font-family="monospace" font-size="0.8em">CompositeUnaryProcedure</fo:inline> class. For more
information about <fo:inline font-family="monospace" font-size="0.8em">CompositeUnaryProcedure</fo:inline>, see the
Commons Functor page at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/sandbox/functor</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-15"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Modeling Conditional Statements with Closures</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.15. Modeling Conditional Statements with Closures</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-15.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.15.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to model a <fo:wrapper id="jakartackbk-CHP-4-ITERM-2402"><!--functors, objects, conditional
statements with closures--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2403"><!--objects, closures, conditional
statements with--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2404"><!--closures, conditional
statements with--></fo:wrapper>conditional statement with
functors.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-15.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.15.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use an <fo:inline font-family="monospace" font-size="0.8em">IfClosure</fo:inline>, supplying a
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> and two <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline>
objects. If the <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> evaluates to
<fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>, the first <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> is
executed; if the <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> evaluates to
<fo:inline font-family="monospace" font-size="0.8em">false</fo:inline>, the second <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> is
executed. The following closure deals with a financial decision; a
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">isWinning</fo:inline>, evaluates
a <fo:inline font-family="monospace" font-size="0.8em">Stock</fo:inline> object. If the purchase price is less than
the current price, the stock is a winner, causing the
<fo:inline font-family="monospace" font-size="0.8em">buy</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> to be executed. If
the purchase price is higher than the current price, the stock is a
loser and it is sold by passing it to the <fo:inline font-family="monospace" font-size="0.8em">sell</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt193">Closure sell = new Closure( ) {
    public void execute(Object input) {
        Stock stock = (Stock) input;
        stock.sell( stock.getShares( ) );
        System.out.println( "\tSold all shares" );
    }
}

Closure buy = new Closure( ) {
    public void execute(Object input) {
        Stock stock = (Stock) input;
        int buyShares = stock.getShares( ) * 0.10;
        stock.buy( buyShares );
        System.out.println( "\tBought " + buyShares );
    }
}

Predicate isWinning = new Predicate( ) {
    public boolean evaluate(Object object) {
        Stock stock = (Stock) object;
        if( stock.getPurchasePrice( ) &lt; stock.getCurrentPrice( ) ) {
            System.out.println( stock.getSymbol( ) + " is a winner";
            return true;
        } else {
            System.out.println( stock.getSymbol( ) + " is a loser";
            return false;
        }
    }
}

Closure stockAction = new IfClosure( isWinning, buy, sell );

Stock yahoo = new Stock("YHOO");
yahoo.setPurchasePrice( 10.0 );
yahoo.setCurrentPrice( 20.0 );
yahoo.setShares( 100 ); 

Stock tibco = new Stock("TIB");
tibco.setPurchasePrice( 50.0 );
tibco.setCurrentPrice( 30.0 );
tibco.setShares( 50 );

// Execute the IfClosure, take action on stocks based on performance
stockAction.execute( yahoo );
stockAction.execute( tibco );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The example evaluates two stocks, a winner and a loser. The following
output is generated:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt194">YHOO is a winner
    Bought 10 shares
TIB is a loser
    Sold All Shares</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-15.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.15.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Because an <fo:inline font-family="monospace" font-size="0.8em">IfClosure</fo:inline> is an implementation of a
<fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline>, you can nest
<fo:inline font-family="monospace" font-size="0.8em">IfClosures</fo:inline> within other
<fo:inline font-family="monospace" font-size="0.8em">IfClosures</fo:inline>. The following code uses the
<fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> objects and the
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> defined in the Solution, adding a third
<fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">isUnchanged</fo:inline>, to create
a nested <fo:inline font-family="monospace" font-size="0.8em">IfClosure--sellOrHold</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt195">Predicate isUnchanged = new Predicate( ) {
    public boolean evaluate(Object object) {
        Stock stock = (Stock) object;
        if( stock.getPurchasePrice( ) == stock.getCurrentPrice( ) ) {
            System.out.println( stock.getSymbol( ) + " is unchanged";
            return true;
        }
        return false;
    }
}

Closure sellOrHold = new IfClosure( isUnchanged, new NOPClosure( ), sell );
Closure stockAction = new IfClosure( isWinning, buy, sellOrHold );

Stock tibco = new Stock("TIB");
tibco.setPurchasePrice( 50.0 );
tibco.setCurrentPrice( 30.0 );
tibco.setShares( 50 );

Stock lucent = new Stock("LU");
tibco.setPurchasePrice( 30.0 );
tibco.setCurrentPrice( 30.0 );
tibco.setShares( 150 );

stockAction.execute( tibco );
stockAction.execute( lucent );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">When <fo:inline font-family="monospace" font-size="0.8em">stockAction</fo:inline> is executed, and a
<fo:inline font-family="monospace" font-size="0.8em">Stock</fo:inline> does not satisfy the
<fo:inline font-family="monospace" font-size="0.8em">isWinning</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>, it is
passed to the <fo:inline font-family="monospace" font-size="0.8em">sellOrHold</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline>, which is another
<fo:inline font-family="monospace" font-size="0.8em">IfClosure</fo:inline>. The <fo:inline font-family="monospace" font-size="0.8em">sellOrHold</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> then evaluates the
<fo:inline font-family="monospace" font-size="0.8em">Stock</fo:inline> to see if it is a loser or unchanged. If the
stock price is unchanged, it is passed to a
<fo:inline font-family="monospace" font-size="0.8em">NOPClosure</fo:inline>, which performs no operation on the
<fo:inline font-family="monospace" font-size="0.8em">Stock</fo:inline> object. If the stock price is less than the
purchase price, the <fo:wrapper id="jakartackbk-CHP-4-ITERM-2405"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2406"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2407"><!----></fo:wrapper>
               <fo:inline font-family="monospace" font-size="0.8em">Stock</fo:inline> is passed
to the <fo:inline font-family="monospace" font-size="0.8em">sell</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-16"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Modeling Loops with Closures</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.16. Modeling Loops with Closures</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-16.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.16.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to execute a
<fo:wrapper id="jakartackbk-CHP-4-ITERM-2408"><!--functors, objects, loops
with closures--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2409"><!--objects, closures, loops
with--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2410"><!--closures, loops
with--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-4-ITERM-2411"><!--loops, with
closures--></fo:wrapper>
               <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> multiple
times.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-16.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.16.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use a <fo:inline font-family="monospace" font-size="0.8em">WhileClosure</fo:inline>, passing in a
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> and a <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline>. The
<fo:inline font-family="monospace" font-size="0.8em">WhileClosure</fo:inline> will execute the
<fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> as long as a <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>
evaluates to <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>. The following example
demonstrates a <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> named
<fo:inline font-family="monospace" font-size="0.8em">drive</fo:inline>, which operates on a <fo:inline font-family="monospace" font-size="0.8em">Car</fo:inline>
object and a <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> named
<fo:inline font-family="monospace" font-size="0.8em">hasFuel</fo:inline>, which evaluates the
<fo:inline font-family="monospace" font-size="0.8em">Car</fo:inline> object. Each time a <fo:inline font-family="monospace" font-size="0.8em">Car</fo:inline> is
passed to <fo:inline font-family="monospace" font-size="0.8em">drive</fo:inline>, a gallon of fuel is used, and
<fo:inline font-family="monospace" font-size="0.8em">hasFuel</fo:inline> will evaluate to <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>
if the amount of fuel in a car is greater than zero. The
<fo:inline font-family="monospace" font-size="0.8em">WhileClosure</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">useAllFuel</fo:inline>,
evaluates <fo:inline font-family="monospace" font-size="0.8em">drive</fo:inline> until <fo:inline font-family="monospace" font-size="0.8em">hasFuel</fo:inline>
evaluates to <fo:inline font-family="monospace" font-size="0.8em">false</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt196">import org.apache.commons.collections.Closure;
import org.apache.commons.collections.Predicate;
import org.apache.commons.collections.functors.WhileClosure;

Closure drive = new Closure( ) {
    public void execute(Object input) {
        Car car = (Car) input;
        car.setFuel( car.getFuel( ) - 1 );
    }
}

Predicate hasFuel = new Predicate( ) {
    public boolean evaluate(Object object) {
        Car car = (Car) input;
        return car.getFuel( ) &gt; 0;
    }
}

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Closure useAllFuel = new WhileFuel( hasFuel, drive );</fo:inline>

Car car = new Car( );
car.setMakeModel( "Ford Escort" );
car.setFuel( 20 );
System.out.println( "Car before while closure: " + car );

useAllFuel.execute( car );
System.out.println( "Car after while closure: " + car );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">WhileClosure</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">useAllFuel</fo:inline>,
takes a <fo:inline font-family="monospace" font-size="0.8em">Car</fo:inline> object, executing a
<fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> and evaluating a
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> after every execution. The state of the
car is printed both before and after it is passed to the
<fo:inline font-family="monospace" font-size="0.8em">WhileClosure</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt197">Car before while closure: Ford Escort with 20 gallons of fuel.
Car after while closure: Ford Escort with no fuel.</fo:block></fo:block><fo:block id="jakartackbk-CHP-4-SECT-16.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">4.16.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you need to execute a <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> a set number of
times, you can also use a <fo:inline font-family="monospace" font-size="0.8em">ForClosure</fo:inline>, passing in
an <fo:inline font-family="monospace" font-size="0.8em">int</fo:inline> that specifies the number of times an
object is passed to the <fo:inline font-family="monospace" font-size="0.8em">execute( )</fo:inline> method of a
<fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline>. This example uses the same
<fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> defined in the Solution, but, this time,
the <fo:inline font-family="monospace" font-size="0.8em">drive</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> is only
executed five times:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt198">
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Closure driveSome = new ForClosure( 5, drive );</fo:inline>

Car car = new Car( );
car.setMakeModel( "Toyota Camry" );
car.setFuel( 20 );

System.out.println( "Car before for closure: " + car );

driveSome.execute( car );

System.out.println( "Car after for closure: " + car );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Since the <fo:inline font-family="monospace" font-size="0.8em">driveSome</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">Closure</fo:inline> is
called only five times, the Camry still has 15 gallons after the
<fo:inline font-family="monospace" font-size="0.8em">ForClosure</fo:inline> is executed:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_4_tt199">Car before for closure: Toyota Camry with 20 gallons of fuel.
Car after for closure: Toyota Camry with 15 gallons of fuel.</fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="false" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>Collections</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>Collections</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"/></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif" margin-left="0pc"/></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block id="jakartackbk-CHP-5"><fo:block font-family="serif"><fo:block margin-left="0pc"><fo:block text-align="left" font-weight="bold" font-size="21.6pt"><fo:block keep-with-next.within-column="always" space-before.optimum="12pt" space-before.minimum="12pt * 0.8" space-before.maximum="12pt * 1.2" hyphenate="false" text-align="left" start-indent="0pc" word-spacing="-0.1em" letter-spacing="-0.05em" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 5. Collections</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="ch05-2-fm2xml"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Introduction</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.1. Introduction</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Java 2 Standard Edition (J2SE) introduced the Collections API—a
dramatic improvement over <fo:inline font-family="monospace" font-size="0.8em">Vector</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">Hashtable</fo:inline> in Java 1.1. This new API provides
<fo:inline font-family="monospace" font-size="0.8em">Set</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">Iterator</fo:inline> interfaces
with various implementations addressing different needs for different
applications. Despite the additions and improvements, there are still
gaps in the Java's Collections
API—functionality that is addressed by a supplemental library,
Jakarta Commons Collections. Most of the features introduced in
Jakarta Commons Collections are easily anticipated extensions of the
Java 2 platform: a reversible <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> or a
<fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline> interface, for example. Other concepts in
Commons Collections are innovative additions to the
J2SE—predicated collections, self-validating collections, set
operations, and lazy collections using transformers. Commons
Collections 3.0 also introduces the concept of functors (see <fo:basic-link internal-destination="jakartackbk-CHP-4" text-decoration="underline" color="blue">Chapter 4</fo:basic-link>).</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Java 5.0 (a.k.a. Tiger) has introduced a number of new language
features and improvements to the Collections API. A
<fo:inline font-family="monospace" font-size="0.8em">Queue</fo:inline> class and type-safe generics are two major
additions that will become available to most programmers with the
production-ready release of 5.0. Some recipes in this chapter
introduce utilities that overlap the functionality of 5.0, and, if a
recipe introduces a utility with an analog in 5.0, an effort has been
made to identify any opportunity to achieve the same result with new
5.0 classes and features.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Obtaining Commons Collections</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.1. Obtaining Commons Collections</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-1.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.1.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to use Jakarta <fo:wrapper id="jakartackbk-CHP-5-ITERM-2412"><!--Commons
Collections, downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2413"><!--collections, downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2414"><!--downloading, collections--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2415"><!--objects, Collections, downloading--></fo:wrapper>Commons
Collections because your application makes heavy use of
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> objects, and you wish to use some of
the utilities provided by this component.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-1.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.1.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Commons Collections was introduced in <fo:basic-link internal-destination="jakartackbk-CHP-4" text-decoration="underline" color="blue">Chapter 4</fo:basic-link>. For instructions on obtaining Collections,
see <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-1" text-decoration="underline" color="blue">Recipe 4.1</fo:basic-link>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-1.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.1.3. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about the Commons Collections project, see the
project page at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/collections</fo:inline>.
If you have questions about using Commons Collections, feel free to
join the <fo:inline font-family="monospace" font-size="0.8em">commons-user@jakarta.apache.org</fo:inline> mailing list.
Instructions for joining the user mailing list can be found in
<fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-2" text-decoration="underline" color="blue">Recipe 1.2</fo:basic-link>. For information on obtaining the
source code for Commons Collections, see <fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-2" text-decoration="underline" color="blue">Recipe 4.2</fo:basic-link>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Using a Looping Iterator</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.2. Using a Looping Iterator</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-2.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.2.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to loop through the<fo:wrapper id="jakartackbk-CHP-5-ITERM-2416"><!--Commons
Collections, loops--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2417"><!--collections, loops--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2418"><!--loops, collections--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2419"><!--objects, Collections, loops--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2420"><!--iteration, looping--></fo:wrapper>
contents of a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-2.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.2.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use a
<fo:inline font-family="monospace" font-size="0.8em">LoopingIterator</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2421"><!--LoopingIterator--></fo:wrapper>
to repeatedly iterate through the contents of a
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>. Pass an existing
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> to the constructor of
<fo:inline font-family="monospace" font-size="0.8em">LoopingIterator</fo:inline>, and
call<fo:wrapper id="jakartackbk-CHP-5-ITERM-2422"><!--iterator( ) method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2423"><!--methods, iterator(
)--></fo:wrapper> 
               <fo:inline font-family="monospace" font-size="0.8em">iterator( )</fo:inline>. The
following code uses a <fo:inline font-family="monospace" font-size="0.8em">LoopingIterator</fo:inline> to retrieve
five items from a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> with three items:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt200">List drivers = new ArrayList( );

drivers.add( "Chris" );
drivers.add( "Sean" );
drivers.add( "Kathy" );

LoopingIterator loopingIterator = new LoopingIterator( drivers );

for( int i = 1; i &lt;= 5; i++ ) {
    String driver = (String) loopingIterator.next( );
    System.out.println( "Driver for Day " + i + ": " + driver );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous example simulates the selection of a driver in a car
pool with three drivers. Five drivers are selected, and the
<fo:inline font-family="monospace" font-size="0.8em">LoopingIterator</fo:inline> returns the first item in the
<fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> on the fourth day:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt201">Driver for Day 1: Chris
Driver for Day 2: Sean
Driver for Day 3: Kathy
Driver for Day 4: Chris
Driver for Day 5: Sean</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-2.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.2.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Keep in mind that a <fo:inline font-family="monospace" font-size="0.8em">LoopingIterator</fo:inline> never stops
iterating; <fo:inline font-family="monospace" font-size="0.8em">hasNext( )</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2424"><!--hasNext(
) method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2425"><!--methods, hasNext(
)--></fo:wrapper> always returns <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> in a
<fo:inline font-family="monospace" font-size="0.8em">LoopingIterator</fo:inline>. If you are using a
<fo:inline font-family="monospace" font-size="0.8em">LoopingIterator</fo:inline> with a <fo:inline font-family="monospace" font-size="0.8em">while</fo:inline>
loop, be sure to code an exit condition. A <fo:inline font-family="monospace" font-size="0.8em">LoopingIterator</fo:inline>
is appropriate for a situation in which a series of values
must be repeatedly evaluated, or a loop of commands must be
repeatedly executed. An application, for example, may have a series
of components that need to be continuously updated, or a series of
queues or buffers that need to be continuously tested or
monitored—an event loop, for example.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">LoopingIterator</fo:inline> also implements the Commons
Collections interface <fo:inline font-family="monospace" font-size="0.8em">ResettableIterator</fo:inline>; this
extension of the <fo:inline font-family="monospace" font-size="0.8em">Iterator</fo:inline> interface can be reset
to start at the beginning of a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>. When
using a <fo:inline font-family="monospace" font-size="0.8em">ResettableIterator</fo:inline>, call <fo:inline font-family="monospace" font-size="0.8em">reset()</fo:inline> to jump back to the beginning of a
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt202">List items = new ArrayList( );

items.add( "Item 1" );
items.add( "Item 2" );
items.add( "Item 3" );

LoopingIterator iterator = new LoopingIterator( items );

// Print out two elements from the LoopingIterator
System.out.println( iterator.next( ) );
System.out.println( iterator.next( ) );

// Reset iterator to start of List
System.out.println( "Reset" );
iterator.reset( );

// Print out two elements from the LoopingIterator
System.out.println( iterator.next( ) );
System.out.println( iterator.next( ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example iterates over the first two elements in a
<fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> before calling <fo:inline font-family="monospace" font-size="0.8em">reset( )</fo:inline>.
After calling <fo:inline font-family="monospace" font-size="0.8em">reset( )</fo:inline>, the code calls
<fo:inline font-family="monospace" font-size="0.8em">next( )</fo:inline> twice, printing out the first two
elements, as shown below:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt203">Item 1
Item 2
Reset
Item 1
Item 2</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-2.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.2.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-3" text-decoration="underline" color="blue">Recipe 5.3</fo:basic-link> deals with another implementation
of <fo:inline font-family="monospace" font-size="0.8em">ResettableIterator</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">ArrayListIterator</fo:inline>, which can be used to iterate
over a subset of elements in an <fo:inline font-family="monospace" font-size="0.8em">ArrayList</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Iterating Over an ArrayList</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.3. Iterating Over an ArrayList</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-3.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.3.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to iterate<fo:wrapper id="jakartackbk-CHP-5-ITERM-2426"><!--Commons
Collections, ArrayLists--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2427"><!--collections, ArrayLists--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2428"><!--ArrayLists, collections--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2429"><!--objects, Collections, ArrayLists--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2430"><!--iteration, ArrayLists--></fo:wrapper>
over a portion of an <fo:inline font-family="monospace" font-size="0.8em">ArrayList</fo:inline>. For example, you
have an <fo:inline font-family="monospace" font-size="0.8em">ArrayList</fo:inline> with 30 elements, and you need
to iterate from index 0 to index 20.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-3.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.3.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use an
<fo:inline font-family="monospace" font-size="0.8em">ArrayListIterator</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2431"><!--ArrayListIterator--></fo:wrapper>
to iterate through a specified region of an
<fo:inline font-family="monospace" font-size="0.8em">ArrayList</fo:inline>. This implementation of
<fo:inline font-family="monospace" font-size="0.8em">Iterator</fo:inline> is constructed with a reference to an
<fo:inline font-family="monospace" font-size="0.8em">ArrayList</fo:inline> and two optional parameters that specify
the start and end of an iteration. This example demonstrates the use
of <fo:inline font-family="monospace" font-size="0.8em">ArrayListIterator</fo:inline> to iterate over the 3rd, 4th,
and 5th elements of an <fo:inline font-family="monospace" font-size="0.8em">ArrayList</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt204">String[] strings = new String[] { "A", "B", "C", "D", "E", "F" };
List list = new ArrayList( Arrays.asList( strings ) );

Iterator iterator = new ArrayListIterator( list, 3, 6 );
while( iterator.hasNext( ) ) {
        int index = iterator.nextIndex( );
    String element = (String) iterator.next( );
    System.out.println( "Element at " + index + ": " + element );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">ArrayListIterator</fo:inline> also allows you to obtain the
index of an element during an iteration. In the previous example,
<fo:inline font-family="monospace" font-size="0.8em">iterator.nextIndex()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2432"><!--iterator.nextIndex( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2433"><!--methods, iterator.nextIndex(
)--></fo:wrapper> returns the index of the element returned
by the subsequent call to<fo:wrapper id="jakartackbk-CHP-5-ITERM-2434"><!--iterator.next( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2435"><!--methods, iterator.next(
)--></fo:wrapper> 
               <fo:inline font-family="monospace" font-size="0.8em">iterator.next( )</fo:inline>. The
code above iterates through three elements of the
<fo:inline font-family="monospace" font-size="0.8em">ArrayList</fo:inline>, producing the following output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt205">Element at 3: D
Element at 4: E
Element at 5: F</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-3.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.3.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You can construct an <fo:inline font-family="monospace" font-size="0.8em">ArrayListIterator</fo:inline> with up to
three arguments. The first argument is the
<fo:inline font-family="monospace" font-size="0.8em">ArrayList</fo:inline> to be iterated over. The second optional
argument specifies the inclusive start index, and the third optional
argument specifies the exclusive end index. If only two parameters
are supplied to the constructor, the
<fo:inline font-family="monospace" font-size="0.8em">ArrayListIterator</fo:inline> will iterate until the end of
the <fo:inline font-family="monospace" font-size="0.8em">ArrayList</fo:inline> is reached. The following code
demonstrates the three constructors of
<fo:inline font-family="monospace" font-size="0.8em">ArrayListIterator</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt206">String[] strings = new String[] { "A", "B", "C", "D", "E", "F" };
List list = new ArrayList( Arrays.asList( strings ) );

// Iterate over all elements
Iterator iterator1 = new ArrayListIterator( list );

// Iterate over "C", "D", "E", "F"
Iterator iterator2 = new ArrayListIterator( list, 2 );

// Iterate over "B", "C", "D"
Iterator iterator3 = new ArrayListIterator( list, 1, 4 );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">ArrayListIterator</fo:inline> implements the
<fo:inline font-family="monospace" font-size="0.8em">ResettableIterator</fo:inline> interface, which provides one
function: <fo:inline font-family="monospace" font-size="0.8em">reset( )</fo:inline>. The <fo:inline font-family="monospace" font-size="0.8em">reset()</fo:inline> method takes the iterator back to the beginning of an
iteration. After a reset, a call to <fo:inline font-family="monospace" font-size="0.8em">next( )</fo:inline>
returns the first element that an
<fo:inline font-family="monospace" font-size="0.8em">ArrayListIterator</fo:inline> has been configured to
return—the element at the index specified in the
constructor's optional second parameter. An
<fo:inline font-family="monospace" font-size="0.8em">ArrayListIterator</fo:inline> also provides a way to set the
current element: the <fo:inline font-family="monospace" font-size="0.8em">set( )</fo:inline> method takes an object
parameter and changes the contents of the underlying
<fo:inline font-family="monospace" font-size="0.8em">ArrayList</fo:inline>. The following example demonstrates both
the <fo:inline font-family="monospace" font-size="0.8em">reset( )</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2436"><!--reset( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2437"><!--methods, reset(
)--></fo:wrapper> and <fo:inline font-family="monospace" font-size="0.8em">set()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2438"><!--set( ) method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2439"><!--methods, set(
)--></fo:wrapper> methods on
<fo:inline font-family="monospace" font-size="0.8em">ArrayListIterator</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt207">String[] strings = new String[] { "A", "B", "C", "D", "E", "F" };
List list = new ArrayList( Arrays.asList( strings ) );

System.out.println( "Original List: " + Arrays.toString( list.toArray( ) );

ResettableIterator iterator = new ArrayListIterator( list, 2 );

// Retrieve an Element from the List
int index = iterator.nextIndex( );
String element = (String) iterator.next( );
System.out.println( "Element at " + index + ": " + element );

// Set the Current Element
iterator.set( "G" );
System.out.println( "Modifying index: " + index + " to G");

// Retrieve the Next Element from the List
index = iterator.nextIndex( );
element = (String) iterator.next( );
System.out.println( "Element at " + index + ": " + element );

// Set the Current Element
iterator.set( "H" );
System.out.println( "Modifying index: " + index + " to H");

// Reset the Iterator (Go to beginning of iteration)
iterator.reset( );
System.out.println( "Reset" );

index = iterator.nextIndex( );
element = (String) iterator.next( );
System.out.println( "Element at " + index + ": " + element );

System.out.println( "Modified List: " + Arrays.toString( list.toArray( ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example iterates through the <fo:inline font-family="monospace" font-size="0.8em">ArrayList</fo:inline>,
modifying two elements before calling <fo:inline font-family="monospace" font-size="0.8em">reset( )</fo:inline>.
The following output shows that after a <fo:inline font-family="monospace" font-size="0.8em">reset( )</fo:inline>,
the first element returns the value, which was supplied to
<fo:inline font-family="monospace" font-size="0.8em">set( )</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt208">Original List: {A,B,C,D,E,F}
Element at 2: C
Modifying index: 2 to G
Element at 3: D
Modifying index: 3 to H
Reset
Element at 2: G
Modified List: {A,B,G,H,E,F}</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-3.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.3.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you need to iterate over an array or an object array, use two
related implementations of <fo:inline font-family="monospace" font-size="0.8em">Iterator</fo:inline>:
<fo:inline font-family="monospace" font-size="0.8em">ArrayIterator</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">ObjectArrayIterator</fo:inline>. See the Commons Collections
project page at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/collections</fo:inline>
for more information about these <fo:inline font-family="monospace" font-size="0.8em">Iterator</fo:inline>
implementations.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Filtering a Collection with a Predicate</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.4. Filtering a Collection with a Predicate</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-4.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.4.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to iterate through<fo:wrapper id="jakartackbk-CHP-5-ITERM-2440"><!--Commons
Collections, predicates, filtering
with--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2441"><!--collections, predicates,
filtering with--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2442"><!--filtering, collections--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2443"><!--objects, Collections, filtering
with predicates--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2444"><!--predicates, collections,
filtering with--></fo:wrapper> elements of a
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> that match a specified condition. Or,
you have a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> from which you need to
remove elements not satisfying a condition.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-4.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.4.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Create a
<fo:inline font-family="monospace" font-size="0.8em">FilterIterator</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2445"><!--FilterIterator--></fo:wrapper>
with a <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>; if the
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> returns <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> for an
element, that element will be included in the
<fo:inline font-family="monospace" font-size="0.8em">Iterator</fo:inline>. The <fo:inline font-family="monospace" font-size="0.8em">FilterIterator</fo:inline>
decorates another <fo:inline font-family="monospace" font-size="0.8em">Iterator</fo:inline> and provides the
ability to apply an arbitrary filter to a
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>. In the following example,
<fo:inline font-family="monospace" font-size="0.8em">EarthQuake</fo:inline> beans are kept in an
<fo:inline font-family="monospace" font-size="0.8em">ArrayList</fo:inline> that is filtered using
the<fo:wrapper id="jakartackbk-CHP-5-ITERM-2446"><!--MajorQuakePredicate--></fo:wrapper>
               <fo:inline font-family="monospace" font-size="0.8em">majorQuakePredicate</fo:inline> and a
<fo:inline font-family="monospace" font-size="0.8em">FilterIterator</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt209">import org.apache.commons.collection.Predicate;
import org.apache.commons.collection.iterators.FilterIterator;

List quakes = new ArrayList( );

EarthQuake quake1 = new EarthQuake( );
quake1.setLocation( "Chicago, IL" );
quake1.setIntensity( new Float( 6.4f ) );
quake1.setIntensity( new Float( 634.23f ) );
quake1.setTime( new Date( ) );
quakes.add( quake1 );

EarthQuake quake2 = new EarthQuake( );
quake2.setLocation( "San Francisco, CA" );
quake2.setIntensity( new Float( 4.4f ) );
quake2.setIntensity( new Float( 63.23f ) );
quake2.setTime( new Date( ) );
quakes.add( quake2 );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Predicate majorQuakePredicate = </fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    new MajorQuakePredicate( new Float(5.0), new Float(1000.0) );</fo:inline>

               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Iterator majorQuakes = </fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    new FilterIterator( quakes.iterator( ), majorQuakePredicate );</fo:inline>

while( majorQuakes.hasMore( ) ) {
    EarthQuake quake = (EarthQuake) majorQuakes.next( );
    System.out.println( "ALERT! MAJOR QUAKE: " 
        + quake.getLocation( ) + ": " + quake.getIntensity( ) );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">An instance of <fo:inline font-family="monospace" font-size="0.8em">MajorQuakePredicate</fo:inline> is created, and
it is passed to a <fo:inline font-family="monospace" font-size="0.8em">FilterIterator</fo:inline>. Quakes
satisfying the criteria are returned by the
<fo:inline font-family="monospace" font-size="0.8em">FilterIterator</fo:inline> and printed to the console:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt210">ALERT! MAJOR QUAKE: Chicago, IL: 6.4</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-4.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.4.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The Solution uses a custom <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> to select a
subset of a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>, filtering
<fo:inline font-family="monospace" font-size="0.8em">EarthQuake</fo:inline> beans and alerting the user if a major
earthquake is measured. An earthquake is classified by intensity on
the Richter scale and the depth of the epicenter; this information is
modeled by the
<fo:inline font-family="monospace" font-size="0.8em">EarthQuake</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2447"><!--EarthQuake
bean--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2448"><!--beans, EarthQuake--></fo:wrapper>
bean defined in <fo:basic-link internal-destination="jakartackbk-CHP-5-EX-1" text-decoration="underline" color="blue">Example 5-1</fo:basic-link>.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-5-EX-1"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5-1. An EarthQuake bean</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e15129">package com.discursive.jccook.collections.predicates;

public class EarthQuake {
    private String location;
    private Float intensity;
    private Float depth;
    private Date time;

    public class EarthQuake( ) {}

    public String getLocation( ) { return location; }
    public void setLocation(String location) { this.location = location; }

    public Float getIntensity( ) { return intensity; }
    public void setInsensity(Float intensity) { this.intensity = intensity; }

    public Float getDepth( ) { return depth; }
    public void setDepth(Float depth) { this.depth = depth; }

    public Date getTime( ) { return time; }
    public void setTime(Date time) { this.time = time; }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">An earthquake is considered major if it is above a five on the
Richter scale and above a depth of 1000 meters. To test each
<fo:inline font-family="monospace" font-size="0.8em">EarthQuake</fo:inline> object, a custom
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">MajorQuakePredicate</fo:inline>,
evaluates <fo:inline font-family="monospace" font-size="0.8em">EarthQuake</fo:inline> objects, returning
<fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> if an earthquake satisfies the criteria for a
major earthquake. The <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> defined in <fo:basic-link internal-destination="jakartackbk-CHP-5-EX-2" text-decoration="underline" color="blue">Example 5-2</fo:basic-link> encapsulates this decision logic.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-5-EX-2"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5-2. Major earthquake classification Predicate</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e15157">package com.discursive.jccook.collections.predicates;

import org.apache.commons.collections.Predicate;

public class MajorQuakePredicate implements Predicate {
    private Float majorIntensity;
    private Float majorDepth;

    public MajorQuakePredicate(Float majorIntensity, Float majorDepth) {
        this.majorIntensity = majorIntensity;
        this.majorDepth = majorDepth;
    }
    
    public boolean evaluate(Object object) {
        private satisfies = false;

        if( object instanceof EarthQuake) {
            EarthQuake quake = (EarthQuake) object;
            if( quake.getIntensity( ).floatValue( ) &gt; majorIntensity.
                floatValue( ) &amp;&amp;
                quake.getDepth( ).floatValue( ) &lt; majorDepth.
                floatValue( ) ) {
                satisfies = true;
            }
        }
        return satisfies;
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you want to create a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> of elements
that match a <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>, you can remove elements
from a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> using
<fo:inline font-family="monospace" font-size="0.8em">CollectionUtils.filter( )</fo:inline>.
<fo:inline font-family="monospace" font-size="0.8em">CollectionUtils.filter( )</fo:inline> is destructive; it
removes elements from a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>. The following
example demonstrates the use <fo:inline font-family="monospace" font-size="0.8em">CollectionUtils.filter()</fo:inline> to remove nonmatching elements from a
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt211">import org.apache.commons.collection.Predicate;
import org.apache.commons.collection.iterators.FilterIterator;

ArrayList quakes = createQuakes( );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Predicate majorQuakePredicate = </fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    new MajorQuakePredicate( new Float(5.0), new Float(1000.0) );</fo:inline>

               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">CollectionUtils.filter( quakes, majorQuakePredicate );</fo:inline>
            </fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">After the execution of this code, <fo:inline font-family="monospace" font-size="0.8em">quakes</fo:inline> will only
contain <fo:inline font-family="monospace" font-size="0.8em">EarthQuake</fo:inline> objects that satisfy the
<fo:inline font-family="monospace" font-size="0.8em">MajorQuakePredicate</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2449"><!--MajorQuakePredicate--></fo:wrapper>.
If you don't want to alter or modify an existing
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>, use <fo:inline font-family="monospace" font-size="0.8em">CollectionUtils.select()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2450"><!--CollectionUtils.select( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2451"><!--methods, CollectionUtils.select(
)--></fo:wrapper> or <fo:inline font-family="monospace" font-size="0.8em">CollectionUtils.selectRejected()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2452"><!--CollectionUtils.selectRejected( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2453"><!--methods, CollectionUtils.selectRejected(
)--></fo:wrapper> to create a new
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> with matching or nonmatching elements.
The following example demonstrates the use of
<fo:inline font-family="monospace" font-size="0.8em">CollectionUtils.select( )</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">CollectionUtils.selectRejected( )</fo:inline> to select
elements from a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> leaving the original
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> unaffected:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt212">import org.apache.commons.collection.Predicate;
import org.apache.commons.collection.iterators.FilterIterator;

ArrayList quakes = createQuakes( );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Predicate majorQuakePredicate = </fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    new MajorQuakePredicate( new Float(5.0), new Float(1000.0) );</fo:inline>

               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Collection majorQuakes = CollectionUtils.select( quakes, majorQuakePredicate );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Collection minorQuakes = </fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    CollectionUtils.selectRejected( quakes, majorQuakePredicate );</fo:inline>
            </fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">majorQuakes</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>
contains <fo:inline font-family="monospace" font-size="0.8em">EarthQuake</fo:inline> objects satisfying the
<fo:inline font-family="monospace" font-size="0.8em">majorQuakePredicate</fo:inline>, and the
<fo:inline font-family="monospace" font-size="0.8em">minorQuakes</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> contains
<fo:inline font-family="monospace" font-size="0.8em">EarthQuake</fo:inline> objects not satisfying the
<fo:inline font-family="monospace" font-size="0.8em">majorQuakePredicate</fo:inline>. The <fo:inline font-family="monospace" font-size="0.8em">quakes
List</fo:inline> is not modified by <fo:inline font-family="monospace" font-size="0.8em">select( )</fo:inline> or
<fo:inline font-family="monospace" font-size="0.8em">selectRejected( )</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-4.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.4.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Collections can be filtered via a combination <fo:wrapper id="jakartackbk-CHP-5-ITERM-2454"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2455"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2456"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2457"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2458"><!----></fo:wrapper>of
<fo:inline font-family="monospace" font-size="0.8em">CollectionUtils</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>
objects, or you can also select elements from a
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> using an XPath expression. <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-1" text-decoration="underline" color="blue">Recipe 12.1</fo:basic-link> demonstrates the use on Commons JXPath to
query a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-5"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Iterating Through Distinct Elements</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.5. Iterating Through Distinct Elements</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-5.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.5.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to iterate over the<fo:wrapper id="jakartackbk-CHP-5-ITERM-2459"><!--Commons
Collections, element
iteration--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2460"><!--collections, element
iteration--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2461"><!--elements,
collection iteration--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2462"><!--objects, Collections, iteration--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2463"><!--iteration, elements--></fo:wrapper>
unique elements in a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-5.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.5.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use a <fo:inline font-family="monospace" font-size="0.8em">UniqueFilterIterator</fo:inline> to iterate over
distinct elements contained in a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>.
<fo:inline font-family="monospace" font-size="0.8em">UniqueFilterIterator</fo:inline> wraps another instance of
<fo:inline font-family="monospace" font-size="0.8em">Iterator</fo:inline>, keeping track of all the objects
returned by that <fo:inline font-family="monospace" font-size="0.8em">Iterator</fo:inline>. When calling
<fo:inline font-family="monospace" font-size="0.8em">next( )</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2464"><!--next( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2465"><!--methods, next(
)--></fo:wrapper> on a
<fo:inline font-family="monospace" font-size="0.8em">UniqueFilterIterator</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2466"><!--UniqueFilterIterator--></fo:wrapper>,
only objects not yet encountered are returned. The following example
demonstrates the use of <fo:inline font-family="monospace" font-size="0.8em">UniqueFilterIterator</fo:inline> to
find unique elements in a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt213">import org.apache.commons.collections.iterators.UniqueFilterIterator;

String[] medals = new String[] { "gold", "silver", "silver", "gold", "bronze" };
List medalsList = Arrays.asList( medals );

Iterator uniqueIterator = new UniqueFilterIterator( medalsList.iterator( ) );

while( uniqueIterator.hasNext( ) ) {
    System.out.println( "Unique Medal: " + uniqueIterator.next( );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">UniqueFilterIterator</fo:inline> iterates over a
<fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> of strings, returning one copy of each
distinct element; <fo:inline font-family="monospace" font-size="0.8em">UniqueFilterIterator</fo:inline> uses the
<fo:inline font-family="monospace" font-size="0.8em">equals( )</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">hashCode( )</fo:inline>
methods to compare objects in the <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>
passed to the constructor. Equal objects with equal hash codes are
removed. As shown by the output produced by the example, the
<fo:inline font-family="monospace" font-size="0.8em">UniqueFilterIterator</fo:inline> prints out only the three
distinct medals in the <fo:inline font-family="monospace" font-size="0.8em">medalsList</fo:inline>:
"gold,"
"silver," and
"bronze":</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt214">Unique Medal: gold
Unique Medal: silver
Unique Medal: bronze</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-5.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.5.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The building blocks for <fo:inline font-family="monospace" font-size="0.8em">UniqueFilterIterator</fo:inline> have
already been introduced. <fo:inline font-family="monospace" font-size="0.8em">FilterIterator</fo:inline> was
introduced in <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-4" text-decoration="underline" color="blue">Recipe 5.4</fo:basic-link>, and
<fo:inline font-family="monospace" font-size="0.8em">UniquePredicate</fo:inline> is a <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>
that keeps track of objects it has evaluated in a
<fo:inline font-family="monospace" font-size="0.8em">HashSet</fo:inline>. A <fo:inline font-family="monospace" font-size="0.8em">UniqueFilterIterator</fo:inline>
is the equivalent of a <fo:inline font-family="monospace" font-size="0.8em">FilterIterator</fo:inline> with a
<fo:inline font-family="monospace" font-size="0.8em">UniquePredicate</fo:inline>. As the following code
demonstrates, the example from the Solution can be implemented with a
<fo:inline font-family="monospace" font-size="0.8em">FilterIterator</fo:inline> and a <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt215">import org.apache.commons.collections.iterators.FilterIterator;
import org.apache.commons.collections.functors.UniquePredicate;

String[] medals = new String[] { "gold", "silver", "silver", "gold", "bronze" };
List medalsList = Arrays.asList( medals );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Iterator uniqueIterator = </fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    new FilterIterator( medalsList.iterator( ), new UniquePredicate( ) );</fo:inline>

while( uniqueIterator.hasNext( ) ) {
    System.out.println( "Unique Medal: " + uniqueIterator.next( );
}</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-5.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.5.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about the <fo:inline font-family="monospace" font-size="0.8em">UniquePredicate</fo:inline> see
<fo:basic-link internal-destination="jakartackbk-CHP-4-SECT-7" text-decoration="underline" color="blue">Recipe 4.7</fo:basic-link>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-6"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Using a Bag</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.6. Using a Bag</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-6.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.6.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to find out how many times an<fo:wrapper id="jakartackbk-CHP-5-ITERM-2467"><!--Commons
Collections, bags--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2468"><!--collections, bags--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2469"><!--bags, collections--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2470"><!--objects, Collections, bags--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2471"><!--bags--></fo:wrapper> object
occurs within a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>, and you need a
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> that lets you manipulate the
cardinality of objects it contains.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-6.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.6.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use a <fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline>. A <fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline> can store the
same object multiple times while keeping track of how many copies it
contains. For example, a <fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline> object can contain 20
copies of object "A" and 50 copies
of object "B," and it can be
queried to see how many copies of an object it contains. You can also
add or remove multiple copies of an object—add 10 copies of
"A" or remove 4 copies of
"B." The following example creates
a <fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline> and adds multiple copies of two
<fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> objects:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt216">import org.apache.commons.collections.Bag;
import org.apache.commons.collections.bag.HashBag;

Bag bag = new HashBag( );

bag.add( "TEST1", 100 );
bag.add( "TEST2", 500 );

int test1Count = bag.getCount( "TEST1" );
int test2Count = bag.getCount( "TEST2" );

System.out.println( "Counts: TEST1: " + test1Count + ", TEST2: " + test2Count );

bag.remove( "TEST1", 1 );
bag.remove( "TEST2", 10 );

int test1Count = bag.getCount( "TEST1" );
int test2Count = bag.getCount( "TEST2" );

System.out.println( "Counts: TEST1: " + test1Count + ", TEST2: " + test2Count );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example put 100 copies of the <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline>
"TEST1" and 500 copies of the
<fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> "TEST2"
into a <fo:inline font-family="monospace" font-size="0.8em">HashBag</fo:inline>. The contents of the
<fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline> are then printed, and 1 instance of
"TEST1" and 10 instances of
"TEST2" are removed from the
<fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt217">Counts: TEST1: 100, TEST2: 500
Counts: TEST1: 99, TEST2: 490</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-6.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.6.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline> has two implementations—<fo:inline font-family="monospace" font-size="0.8em">HashBag</fo:inline>
and <fo:inline font-family="monospace" font-size="0.8em">TreeBag</fo:inline>—which use a
<fo:inline font-family="monospace" font-size="0.8em">HashMap</fo:inline> and a <fo:inline font-family="monospace" font-size="0.8em">TreeMap</fo:inline> to store
the contents of a <fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline>. The same design
considerations apply to <fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline> that apply to
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>. Use <fo:inline font-family="monospace" font-size="0.8em">HashBag</fo:inline> for
performance and <fo:inline font-family="monospace" font-size="0.8em">TreeBag</fo:inline> when it is important to
maintain the order that each distinct object was added to a
<fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline>. A <fo:inline font-family="monospace" font-size="0.8em">TreeBag</fo:inline> returns unique
objects in the order they were introduced to the
<fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">To demonstrate the <fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline> object, a system to track
inventory is created using a <fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline> as an underlying
data structure. An inventory management system must find out how many
copies of a product are in stock, and a <fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline> is
appropriate because it allows you to keep track of the cardinality of
an object in a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>. In <fo:basic-link internal-destination="jakartackbk-CHP-5-EX-3" text-decoration="underline" color="blue">Example 5-3</fo:basic-link>, a record store tracks an inventory of albums,
consisting of 200 Radiohead albums, 100 Kraftwerk albums, 500 Charlie
Parker albums, and 900 ABBA albums.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-5-EX-3"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5-3. Using a Bag to track inventory</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e15660">package com.discursive.jccook.collections.bag;

import java.text.NumberFormat;
import java.util.Collection;
import java.util.Iterator;
import java.util.Set;

import org.apache.commons.collections.Bag;
import org.apache.commons.collections.bag.HashBag;
import org.apache.commons.lang.StringUtils;

public class BagExample {
    Bag inventoryBag = new HashBag( );
    
    // Define 4 Albums
    Album album1 = new Album( "Radiohead", "OK Computer" );
    Album album2 = new Album( "Kraftwerk", "The Man-Machine" );
    Album album3 = new Album( "Charlie Parker", "Now's the Time" );
    Album album4 = new Album( "ABBA", "ABBA - Gold: Greatest Hits" );

    public static void main(String[] args) {
        BagExample example = new BagExample( );
        example.start( );
    }
    
    private void start( ) {
        // Read our inventory into a Bag
        populateInventory( );

        System.out.println( "Inventory before Transactions" );
        printAlbums( inventoryBag );
        printSeparator( );

        // A Customer wants to purchase 500 ABBA, 2 Radiohead, and 150 Parker
        Bag shoppingCart1 = new HashBag( );
        shoppingCart1.add( album4, 500 );
        shoppingCart1.add( album3, 150 );
        shoppingCart1.add( album1, 2 );
        checkout( shoppingCart1, "Customer 1" );
        
        // Another Customer wants to purchase 600 copies of ABBA 
        Bag shoppingCart2 = new HashBag( );
        shoppingCart2.add( album4, 600 );
        checkout( shoppingCart2, "Customer 2" );

        // Another Customer wants to purchase 3 copies of Kraftwerk
        Bag shoppingCart3 = new HashBag( );
        shoppingCart3.add( album2, 3 );
        checkout( shoppingCart3, "Customer 3" );

        System.out.println( "Inventory after Transactions" );
        printAlbums( inventoryBag );
        
    }
    
    private void populateInventory( ) {
        // Adds items to a Bag
        inventoryBag.add( album1, 200 );
        inventoryBag.add( album2, 100 );
        inventoryBag.add( album3, 500 );
        inventoryBag.add( album4, 900 );
    }
    
    private void printAlbums( Bag albumBag ) {
        Set albums = albumBag.uniqueSet( );
        Iterator albumIterator = albums.iterator( );
        while( albumIterator.hasNext( ) ) {
            Album album = (Album) albumIterator.next( );
            NumberFormat format = NumberFormat.getInstance( );
            format.setMinimumIntegerDigits( 3 );
            format.setMaximumFractionDigits( 0 );
            System.out.println( "\t" +  
                format.format( albumBag.getCount( album ) ) + 
                " - " + album.getBand( )  );
        }
    }
    
    private void checkout( Bag shoppingCart, String customer ) {
        // Check to see if we have the inventory to cover this purchase
        if( inventoryBag.containsAll( (Collection) shoppingCart ) ) {
            // Remove these items from our inventory
            inventoryBag.removeAll( (Collection) shoppingCart );
            System.out.println( customer + " purchased the following items:" );
            printAlbums( shoppingCart );
        } else {
            System.out.println( customer + ", I'm sorry " +
                                "but we are unable to fill your order." );
        }
        printSeparator( );
    }
    
    private void printSeparator( ) {
        System.out.println( StringUtils.repeat( "*", 65 ) );
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Albums are stored in the
<fo:inline font-family="monospace" font-size="0.8em">inventoryBag</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2472"><!--inventoryBag
variable--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2473"><!--variables, inventoryBag--></fo:wrapper>
variable, which is populated by a call to <fo:inline font-family="monospace" font-size="0.8em">populateInventory()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2474"><!--populateInventory( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2475"><!--methods, populateInventory(
)--></fo:wrapper> method. The <fo:inline font-family="monospace" font-size="0.8em">printAlbums()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2476"><!--printAlbums( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2477"><!--methods, printAlbums(
)--></fo:wrapper> method demonstrates how a
<fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline>'s iterator will iterate
through all of the distinct objects stored in a
<fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline>, printing out the count for each album by
calling <fo:inline font-family="monospace" font-size="0.8em">getCount( )</fo:inline> on the
<fo:inline font-family="monospace" font-size="0.8em">inventoryBag</fo:inline>. After populating and printing the
store's inventory, the<fo:wrapper id="jakartackbk-CHP-5-ITERM-2478"><!--start( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2479"><!--methods, start(
)--></fo:wrapper> 
               <fo:inline font-family="monospace" font-size="0.8em">start( )</fo:inline> method models
the behavior of three customers. Each customer creates a
<fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline> instance, <fo:inline font-family="monospace" font-size="0.8em">shoppingBag</fo:inline>,
which holds the <fo:inline font-family="monospace" font-size="0.8em">Album</fo:inline> objects she wishes to
purchase.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">When a customer checks out of the store, the <fo:inline font-family="monospace" font-size="0.8em">containsAll()</fo:inline> method is called to make sure that the
<fo:inline font-family="monospace" font-size="0.8em">inventoryBag</fo:inline> contains adequate inventory to
fulfill a customer's order. If a customer attempts
to buy 40 copies of an album, we create a <fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline> with
40 instances of the <fo:inline font-family="monospace" font-size="0.8em">Album</fo:inline> object, and
<fo:inline font-family="monospace" font-size="0.8em">containsAll( )</fo:inline> will only return
<fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> if the <fo:inline font-family="monospace" font-size="0.8em">inventoryBag</fo:inline>
contains at least 40 matching albums. Certain that the order can be
fulfilled, <fo:inline font-family="monospace" font-size="0.8em">removeAll( )</fo:inline> reduces the number of
albums in the <fo:inline font-family="monospace" font-size="0.8em">inventoryBag</fo:inline> by 40 and the
customer's transaction is considered complete.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Each customer transaction is modeled by a <fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline> that
is subtracted from the <fo:inline font-family="monospace" font-size="0.8em">inventoryBag</fo:inline> using the
<fo:inline font-family="monospace" font-size="0.8em">removeAll( )</fo:inline> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2480"><!--removeAll( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2481"><!--methods, removeAll(
)--></fo:wrapper>method. <fo:basic-link internal-destination="jakartackbk-CHP-5-EX-3" text-decoration="underline" color="blue">Example 5-3</fo:basic-link> prints
the inventory before and after the three customer transactions,
summarizing the result of each:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt218">Inventory before Transactions
    200 - Radiohead
    100 - Kraftwerk
    900 - ABBA
    500 - Charlie Parker
*****************************************************************
Customer 1 purchased the following items:
    002 - Radiohead
    500 - ABBA
    150 - Charlie Parker
*****************************************************************
Customer 2, I'm sorry but we are unable to fill your order.
*****************************************************************
Customer 3 purchased the following items:
    003 - Kraftwerk
*****************************************************************
Inventory after Transactions
    198 - Radiohead
    097 - Kraftwerk
    400 - ABBA
    350 - Charlie Parker</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Technically speaking, <fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline> is not a real
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> implementation. The <fo:inline font-family="monospace" font-size="0.8em">removeAll(
)</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">containsAll( )</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">add()</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">remove( )</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">retainAll(
)</fo:inline> methods do not strictly follow the contract defined by
the <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> interface. Adhering to a strict
interpretation of the <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> interface,
<fo:inline font-family="monospace" font-size="0.8em">removeAll( )</fo:inline> should remove all traces of an object
from a collection, and <fo:inline font-family="monospace" font-size="0.8em">containsAll( )</fo:inline> should not
pay attention to the cardinality of an object in a collection.
Calling <fo:inline font-family="monospace" font-size="0.8em">removeAll( )</fo:inline> with a single
<fo:inline font-family="monospace" font-size="0.8em">Album</fo:inline> object should clear the
<fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline> of any references to the specified
<fo:inline font-family="monospace" font-size="0.8em">Album</fo:inline> object, and <fo:inline font-family="monospace" font-size="0.8em">containsAll(
)</fo:inline> should return <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> if a collection
contains even one instance of a specified object. In
<fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline>, a call to <fo:inline font-family="monospace" font-size="0.8em">removeAll( )</fo:inline>
with three <fo:inline font-family="monospace" font-size="0.8em">Album</fo:inline> objects will remove only the
specified number of each <fo:inline font-family="monospace" font-size="0.8em">Album</fo:inline> object. In <fo:basic-link internal-destination="jakartackbk-CHP-5-EX-3" text-decoration="underline" color="blue">Example 5-3</fo:basic-link>, the <fo:inline font-family="monospace" font-size="0.8em">checkout( )</fo:inline> method
uses <fo:inline font-family="monospace" font-size="0.8em">removeAll( )</fo:inline> to remove albums from the
inventory. A call to <fo:inline font-family="monospace" font-size="0.8em">containsAll( )</fo:inline> will only
return <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> if a <fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline> contains a
number greater than or equal to the cardinality specified in the
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>. In <fo:basic-link internal-destination="jakartackbk-CHP-5-EX-3" text-decoration="underline" color="blue">Example 5-3</fo:basic-link>, the
<fo:inline font-family="monospace" font-size="0.8em">checkout( )</fo:inline> method uses <fo:inline font-family="monospace" font-size="0.8em">containsAll(
)</fo:inline> to see if there is sufficient inventory to satisfy an
order. These violations should not keep you from using
<fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline>, but keep these exceptions to the collection
interface in mind if you are going to expose a <fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline>
as a collection in a widely used API.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-6.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.6.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about the bag <fo:wrapper id="jakartackbk-CHP-5-ITERM-2482"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2483"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2484"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2485"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2486"><!----></fo:wrapper>data structure, look at a
definition from the <fo:wrapper id="jakartackbk-CHP-5-ITERM-2487"><!--National Institute of
Standards and Technology (NIST)--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2488"><!--NIST (National Institute of Standards and
Technology)--></fo:wrapper>National Institute of Standards and
Technology (NIST) at <fo:inline font-family="monospace" font-size="0.8em">http://www.nist.gov/dads/HTML/bag.html</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-7"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Using a Buffer</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.7. Using a Buffer</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-7.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.7.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need a data structure that can<fo:wrapper id="jakartackbk-CHP-5-ITERM-2489"><!--Commons
Collections, buffers--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2490"><!--collections, buffers--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2491"><!--buffers, collections--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2492"><!--objects, Collections, buffers--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2493"><!--buffers--></fo:wrapper> act
as a temporary staging area, i.e., a buffer.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-7.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.7.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">Buffer</fo:inline> from Jakarta Commons Collections. A
<fo:inline font-style="italic">buffer</fo:inline> is an object that is defined by the
algorithm used for element removal. <fo:inline font-family="monospace" font-size="0.8em">Buffer</fo:inline> objects
can be priority queues, staging areas, message queues, or buffers for
I/O. One of the simplest <fo:inline font-family="monospace" font-size="0.8em">Buffer</fo:inline> implementations is
the <fo:inline font-family="monospace" font-size="0.8em">UnboundedFifoBuffer</fo:inline>, a first-in, first-out
data structure with no size limit. The following example demonstrates
the use of an <fo:inline font-family="monospace" font-size="0.8em">UnboundedFifoBuffer</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt219">import org.apache.commons.collections.Buffer;
import org.apache.commons.collections.buffer.UnboundedFifoBuffer;

// Create an Unbounded FIFO
Buffer buffer = new UnboundedFifoBuffer( );

// Add elements to the Buffer
buffer.add("A");
buffer.add("B");
buffer.add("D");

// Remove element from the buffer
String value = (String) buffer.remove( );

buffer.add("E");

value = (String) buffer.remove( );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example creates an <fo:inline font-family="monospace" font-size="0.8em">UnboundedFifoBuffer</fo:inline>,
adding three elements: "A,"
"B," and
"D." When <fo:inline font-family="monospace" font-size="0.8em">remove()</fo:inline> is invoked, the buffer selects the item that was placed
into the buffer first—the first-in is the first-out. The first
call to <fo:inline font-family="monospace" font-size="0.8em">remove( )</fo:inline> returns
"A," and the second call returns
"B."</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-7.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.7.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A FIFO buffer can be viewed as a kind of stack; instead of
<fo:inline font-family="monospace" font-size="0.8em">pop( )</fo:inline> returning the last item to be placed on the
stack, <fo:inline font-family="monospace" font-size="0.8em">remove( )</fo:inline> returns the bottom of the
stack—the first item added to the <fo:inline font-family="monospace" font-size="0.8em">Buffer</fo:inline>. A
<fo:inline font-family="monospace" font-size="0.8em">Buffer</fo:inline> throws a
<fo:inline font-family="monospace" font-size="0.8em">BufferUnderflowException</fo:inline> if you try to
<fo:inline font-family="monospace" font-size="0.8em">remove( )</fo:inline> or <fo:inline font-family="monospace" font-size="0.8em">get( )</fo:inline> an element
from an empty <fo:inline font-family="monospace" font-size="0.8em">Buffer</fo:inline>. This data structure is
useful if you need a temporary holding area between stages in a
pipeline—a queue to hold objects as they wait to be processed
by the next stage. An unbounded<fo:wrapper id="jakartackbk-CHP-5-ITERM-2494"><!--FIFO
buffers--></fo:wrapper> FIFO buffer has no size limit, and, as
such, it could grow to a limitless size. In fact, if an application
continued to fill an unbounded buffer, it would exhaust available
memory. <fo:basic-link internal-destination="jakartackbk-CHP-5-FIG-1" text-decoration="underline" color="blue">Figure 5-1</fo:basic-link> describes a FIFO buffer as a
linear sequence of elements: items flow through this sequence from
left to right.</fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-5-FIG-1"><fo:block id="I_5_tt220"><fo:external-graphic src="/Users/tobrien/Library/Code/common-java-cookbook/content/target/classes/docbook/figs/print/jccb_0501.pdf" width="181px" height="30px" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:application/pdf"/></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-previous.within-column="always">Figure 5-1. A FIFO buffer</fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In addition to
<fo:inline font-family="monospace" font-size="0.8em">UnboundedFifoBuffer</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2495"><!--UnboundedFifoBuffer--></fo:wrapper>,
there is a bounded
counterpart—<fo:inline font-family="monospace" font-size="0.8em">BoundedFifoBuffer</fo:inline>.
<fo:inline font-family="monospace" font-size="0.8em">BoundedFifoBuffer</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2496"><!--BoundedFifoBuffer--></fo:wrapper>
has a maximum size that cannot be exceeded; adding an object to a
<fo:inline font-family="monospace" font-size="0.8em">BoundedFifoBuffer</fo:inline> already at maximum size will
cause a
<fo:inline font-family="monospace" font-size="0.8em">BufferOverflowException</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2497"><!--BufferOverflowException--></fo:wrapper>.
<fo:basic-link internal-destination="jakartackbk-CHP-5-EX-4" text-decoration="underline" color="blue">Example 5-4</fo:basic-link> demonstrates the use of a bounded buffer
with a maximum size limit of two.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-5-EX-4"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5-4. Using a BoundedFifoBuffer</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e16072">import org.apache.commons.collections.Buffer;
import org.apache.commons.collections.BufferOverflowException;
import org.apache.commons.collections.buffer.BoundedFifoBuffer;
...

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">// Create a Bounded FIFO with a max size of two</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Buffer buffer = new BoundedFifoBuffer(2);</fo:inline>

buffer.add( "One" );
buffer.add( "Two" );

// Adding a third element to this buffer will cause an exception
try {
    buffer.add( "Three" );
} catch( BufferOverflowException bue ) {
    System.out.println( "Buffer is Full!" );
}

// Remove an object... Buffer now contains one element.
Object removed = buffer.remove( );

// Add another object
buffer.add( "Three" );

Object remove1 = buffer.remove( );
Object remove2 = buffer.remove( );

// This next remove( ) should cause a BufferUnderflowException
try {
    Object remove3 = buffer.remove( );
} catch( BufferUnderflowException bue ) {
    System.out.println( "Buffer is Empty!" );
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-CHP-5-NOTE-57"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/tip.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Tip</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Later recipes will demonstrate the use of <fo:inline font-family="monospace" font-size="0.8em">Buffer</fo:inline>
objects in processing pipelines where it is important to provide a
limit on how much memory a <fo:inline font-family="monospace" font-size="0.8em">Buffer</fo:inline> is able to
consume.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-7.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.7.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A <fo:inline font-family="monospace" font-size="0.8em">Buffer</fo:inline> in Jakarta Commons Collections is
analogous to a <fo:inline font-family="monospace" font-size="0.8em">Queue</fo:inline> in Java 5.0. The
<fo:inline font-family="monospace" font-size="0.8em">Queue</fo:inline> interface is accompanied by a number of
interfaces that provide almost identical behavior to the
<fo:inline font-family="monospace" font-size="0.8em">Buffer</fo:inline> interface as defined in Jakarta Commons
Collections 3.0. <fo:inline font-family="monospace" font-size="0.8em">Queue</fo:inline> contains some new methods,
<fo:inline font-family="monospace" font-size="0.8em">offer( )</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">peek( )</fo:inline>, which
perform the same functions as <fo:inline font-family="monospace" font-size="0.8em">add( )</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">remove( )</fo:inline>, with one difference: these new methods
return <fo:inline font-family="monospace" font-size="0.8em">false</fo:inline> if there is any problem adding an
object to a <fo:inline font-family="monospace" font-size="0.8em">Queue</fo:inline>. More information about queues
and other changes to the Collections framework in Java 5.0 <fo:wrapper id="jakartackbk-CHP-5-ITERM-2498"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2499"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2500"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2501"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2502"><!----></fo:wrapper>are available
at: <fo:inline font-family="monospace" font-size="0.8em">http://java.sun.com/j2se/1.5.0/docs/guide/collections/changes5.html</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-8"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Creating a Priority Queue</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.8. Creating a Priority Queue</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-8.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.8.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to prioritize<fo:wrapper id="jakartackbk-CHP-5-ITERM-2503"><!--Commons
Collections, priority
queues--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2504"><!--collections, priority
queues--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2505"><!--objects, Collections, priority
queues--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2506"><!--priority
queues--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2507"><!--queues,
priority--></fo:wrapper> objects: removing higher priority
objects from a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> before lower priority
objects.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-8.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.8.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use a
<fo:inline font-family="monospace" font-size="0.8em">PriorityBuffer</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2508"><!--PriorityBuffer--></fo:wrapper>
to hold objects to be prioritized. Objects will be removed from this
<fo:inline font-family="monospace" font-size="0.8em">Buffer</fo:inline> according to a priority generated with a
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline>. Whenever the <fo:inline font-family="monospace" font-size="0.8em">remove(
)</fo:inline> method is called on this <fo:inline font-family="monospace" font-size="0.8em">Buffer</fo:inline>
implementation, a <fo:inline font-family="monospace" font-size="0.8em">PriorityBuffer</fo:inline> uses the
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> to sort its contents, returning the
element of greatest priority. Using a
<fo:inline font-family="monospace" font-size="0.8em">PriorityBuffer</fo:inline> without a
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> causes the buffer to prioritize objects
by natural order, casting each object to
<fo:inline font-family="monospace" font-size="0.8em">Comparable</fo:inline> and comparing objects with the
<fo:inline font-family="monospace" font-size="0.8em">compareTo( )</fo:inline> method; all objects must implement
the <fo:inline font-family="monospace" font-size="0.8em">Comparable</fo:inline> interface if no
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> is supplied. The following example
demonstrates the use of a <fo:inline font-family="monospace" font-size="0.8em">PriorityBuffer</fo:inline> without
supplying a
<fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2509"><!--Comparators, PriorityBuffer--></fo:wrapper>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt221">import java.util.*;
import org.apache.commons.collections.Buffer;
import org.apache.commons.collections.buffers.PriorityBuffer;

// Create a PriorityBuffer with no Comparator
Buffer priority = new PriortyBuffer( );
priority.add( new Long( 2 ) );
priority.add( new Long( 1 ) );
priority.add( new Long( 20 ) );
priority.add( new Long( 7 ) );
priority.add( new Long( 18 ) );
priority.add( new Long( 1 ) );

// Print the results in priority order
Iterator priorityIterator = priority.iterator( );
while( priorityIterator.hasNext( ) ) {
    Long value = (Long) priority.next( );
    System.out.prinltn( "Value: " + value );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous example removes values from the buffer based on a
natural order, and the following output is produced:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt222">Value: 20
Value: 18
Value: 7
Value: 2
Value: 1
Value: 1</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-8.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.8.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A <fo:inline font-family="monospace" font-size="0.8em">PriorityBuffer</fo:inline>, like all
<fo:inline font-family="monospace" font-size="0.8em">Buffer</fo:inline> implementations, is defined by the logic to
select which object to remove. If you've ever
visited an emergency room, you are already familiar with the inner
workings of the <fo:inline font-family="monospace" font-size="0.8em">PriorityBuffer</fo:inline>. When a patient
enters the emergency room, his or her condition is evaluated by a
nurse who then assigns a severity. When a doctor moves to the next
patient, she chooses the next patient based on severity and how long
each patient has been waiting. A patient with a critical,
life-threatening condition will be treated before an individual with
a headache—the critical patient has a higher priority in the
<fo:inline font-family="monospace" font-size="0.8em">Buffer</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The following example models an emergency waiting room with a
<fo:inline font-family="monospace" font-size="0.8em">PriorityBuffer</fo:inline>. Assume that you have a
<fo:inline font-family="monospace" font-size="0.8em">Patient</fo:inline> bean with <fo:inline font-family="monospace" font-size="0.8em">name</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">severity</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">checkIn</fo:inline>
properties, which is defined in <fo:basic-link internal-destination="jakartackbk-CHP-5-EX-5" text-decoration="underline" color="blue">Example 5-5</fo:basic-link>. A
patient's severity is a number from 0 to 10, 0 being
the lowest severity and 10 being the highest. A critical patient
would be assigned a priority of 10, and a patient with a bad cold
would be assigned a severity of 0. A patient also has a
<fo:inline font-family="monospace" font-size="0.8em">checkIn</fo:inline> time: this is the time he is admitted to
the waiting room, and it is used as a tie-breaker to determine
priority when two patients have the same <fo:inline font-family="monospace" font-size="0.8em">severity</fo:inline>.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-5-EX-5"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5-5. A Patient object</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e16291">package com.discursive.jccook.collections.buffers;

public class Patient {
    private String name;
    private Integer severity;
    private Date checkIn;

    public class Patient( ) {}

    public String getName( ) { return name; }
    public void setName(String name) { this.name = name; }

    public Integer getSeverity( ) { return severity; }
    public void setSeverity(Integer severity) { this.severity = severity; }

    public Date getCheckIn( ) { return checkIn; }
    public void setCheckIn(Date checkIn) { this.checkIn = checkIn; }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">PatientPriorityComparator</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2510"><!--PatientPriorityComparator--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2511"><!--Comparators, PatientPriorityComparator--></fo:wrapper>in
<fo:basic-link internal-destination="jakartackbk-CHP-5-EX-6" text-decoration="underline" color="blue">Example 5-6</fo:basic-link> prioritizes patients by severity of
condition and time since check-in. A patient with a more severe
condition takes priority over a patient with a less severe condition
who has been waiting longer, and, if two patients have the same
severity, the one who has been waiting longer gets a higher priority.
If this <fo:inline font-family="monospace" font-size="0.8em">Comparator</fo:inline> is used to sort an array of
<fo:inline font-family="monospace" font-size="0.8em">Patient</fo:inline> objects, the most critical patient would
be at the last index, and the least critical would be at the first
index.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-5-EX-6"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5-6. A Comparator to sort Patient objects by priority</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e16320">package com.discursive.jccook.collections.buffers;

import java.util.Comparator;

public PatientPriorityComparator implements Comparator {

    public int compare(Object o1, Object o2) {
        int comparison = -1;

        if( o1 instanceof Patient &amp;&amp;
            o2 instanceof Patient ) {

            Patient p1 = (Patient) o1;
            Patient p2 = (Patient) o2;

            comparison = p1.getSeverity( ).compareTo( p2.getSeverity( ) );

                if( comparison == 0 ) {
                    comparison = 
                    p1.getCheckIn( ).compareTo( p2.getCheckIn( ) );
            }
        }
        return comparison;
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">When using the <fo:inline font-family="monospace" font-size="0.8em">PriorityBuffer</fo:inline> with a
<fo:inline font-family="monospace" font-size="0.8em">PatientPriorityComparator</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">Patient</fo:inline> objects are added to the <fo:inline font-family="monospace" font-size="0.8em">Buffer</fo:inline>
and <fo:inline font-family="monospace" font-size="0.8em">remove( )</fo:inline> returns the
<fo:inline font-family="monospace" font-size="0.8em">Patient</fo:inline> with the highest priority. Using a
<fo:inline font-family="monospace" font-size="0.8em">PriorityBuffer</fo:inline> means that you do not need to worry
about constantly resorting a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> by
priority; this logic is completed automatically every time an object
is removed from the <fo:inline font-family="monospace" font-size="0.8em">Buffer</fo:inline>. In other words, you
are delegating responsibility to a <fo:inline font-family="monospace" font-size="0.8em">Buffer</fo:inline>; it
takes care of the sorting and selecting on an as-needed basis.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-5-EX-7" text-decoration="underline" color="blue">Example 5-7</fo:basic-link> adds three <fo:inline font-family="monospace" font-size="0.8em">Patient</fo:inline>
objects to a <fo:inline font-family="monospace" font-size="0.8em">PriorityBuffer</fo:inline>: John Doe 1
has an ear ache, John Doe 2 has a broken back, and Jane Doe 3 has a
concussion. Both John 2 and Jane 3 have serious conditions, and,
since John 2 checked in before Jane 3, John 2 has a higher priority
than Jane 3. John 1's condition is not nearly as
critical; therefore, his priority is much lower, and he is treated
last.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-5-EX-7"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5-7. Using a prioritizing buffer</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e16368">package com.discursive.jccook.collections.buffers;

public class WaitingRoomApp {

    public static void main(String[] args) {
        WaitingRoomApp example = new WaitingRoomApp( );
        example.start( );
    }

    public void start( ) {
        Buffer patients = 
            new PriorityBuffer( new PatientPriorityComparator( ) );

        Patient johnDoe1 = new Patient( );
        johnDoe1.setName( "John Doe 1" );
        johnDoe1.setSeverity( new Integer( 7 ) );
        johnDoe1.setCheckIn( new Date( ) );
        patients.add( johnDoe1 );

        Patient johnDoe2 = new Patient( );
        johnDoe2.setName( "John Doe 2" );
        johnDoe2.setSeverity( new Integer( 9 ) );
        johnDoe2.setCheckIn( new Date( ) );
        patients.add( johnDoe2 );

        Patient janeDoe3 = new Patient( );
        janeDoe3.setName( "Jane Doe 3" );
        janeDoe3.setSeverity( new Integer( 9 ) );
        janeDoe3.setCheckIn( new Date( ) );
        patients.add( janeDoe3 );

         while( patients.size( ) &gt; 0 ) {
            Patient patient = (Patient) patients.remove( );
            System.out.println( "Patient: " + patient.getName( ) );
        }
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">As each <fo:inline font-family="monospace" font-size="0.8em">Patient</fo:inline> is treated, the
patient's name is printed to the console:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt223">Patient: John Doe 2
Patient: Jane Doe 3
Patient: John Doe 1</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-8.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.8.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A <fo:inline font-family="monospace" font-size="0.8em">PriorityBuffer</fo:inline> in Jakarta <fo:wrapper id="jakartackbk-CHP-5-ITERM-2512"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2513"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2514"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2515"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2516"><!----></fo:wrapper>Commons
Collections is analogous to a <fo:inline font-family="monospace" font-size="0.8em">PriorityQueue</fo:inline> in
Java 5.0. For information about <fo:inline font-family="monospace" font-size="0.8em">PriorityQueue</fo:inline> and
other important changes to the Collections framework in Java 5.0, see
<fo:inline font-family="monospace" font-size="0.8em">http://java.sun.com/j2se/1.5.0/docs/api/index.html</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-9"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Using a Blocking Buffer</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.9. Using a Blocking Buffer</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-9.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.9.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Your system needs to wait<fo:wrapper id="jakartackbk-CHP-5-ITERM-2517"><!--Commons
Collections, blocking
buffers--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2518"><!--collections, blocking
buffers--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2519"><!--blocking buffers,
collections--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2520"><!--objects, Collections, blocking
buffers--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2521"><!--buffers, blocking--></fo:wrapper>
for input and act on an object the moment it is added to a
<fo:inline font-family="monospace" font-size="0.8em">Buffer</fo:inline>. To achieve this, you need your application
to block until input is received.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-9.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.9.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">BlockingBuffer</fo:inline> to decorate an instance of
<fo:inline font-family="monospace" font-size="0.8em">Buffer</fo:inline>. When a process calls <fo:inline font-family="monospace" font-size="0.8em">get(
)</fo:inline> or <fo:inline font-family="monospace" font-size="0.8em">remove( )</fo:inline> on a buffer decorated
with <fo:inline font-family="monospace" font-size="0.8em">BlockingBuffer</fo:inline>, the decorated buffer does not
return a value until it has an object to return. The following
example creates a <fo:inline font-family="monospace" font-size="0.8em">BlockingBuffer</fo:inline> and a listener
that calls <fo:inline font-family="monospace" font-size="0.8em">remove( )</fo:inline>. A
<fo:inline font-family="monospace" font-size="0.8em">BlockingBuffer</fo:inline> can only be demonstrated by an
example that deals with multiple threads, and the following code uses
a <fo:inline font-family="monospace" font-size="0.8em">Runnable</fo:inline> implementation,
<fo:inline font-family="monospace" font-size="0.8em">BufferListener</fo:inline>, which is defined in <fo:basic-link internal-destination="jakartackbk-CHP-5-EX-8" text-decoration="underline" color="blue">Example 5-8</fo:basic-link>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt224">import java.util.*;
import org.apache.commons.collections.Buffer;
import org.apache.commons.collections.buffers.BlockingBuffer;
import org.apache.commons.collections.buffers.BoundedFifoBuffer;

<fo:inline font-weight="bold">// Create a Blocking Buffer</fo:inline>
Buffer buffer = BlockingBuffer.decorate( new BoundedFifoBuffer( ) );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">// Create Thread to continously remove( ) from the previous Buffer</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">BufferListener listener = new BufferListener(buffer);</fo:inline>
Thread listenerThread = new Thread( listener );
listenerThread.start( );

buffer.add( "Hello World!" );
buffer.add( "Goodbye, Y'all." );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous example creates an instance of
<fo:inline font-family="monospace" font-size="0.8em">BufferListener</fo:inline>—a <fo:inline font-family="monospace" font-size="0.8em">Runnable</fo:inline>
object that calls <fo:inline font-family="monospace" font-size="0.8em">remove( )</fo:inline> on a
<fo:inline font-family="monospace" font-size="0.8em">BoundedFifoBuffer</fo:inline> decorated with
<fo:inline font-family="monospace" font-size="0.8em">BlockingBuffer</fo:inline>. The
<fo:inline font-family="monospace" font-size="0.8em">listenerThread</fo:inline> will block on a call to
<fo:inline font-family="monospace" font-size="0.8em">buffer.remove( )</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2522"><!--buffer.remove(
) method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2523"><!--methods, buffer.remove(
)--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2524"><!--remove( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2525"><!--methods, remove(
)--></fo:wrapper> within the <fo:inline font-family="monospace" font-size="0.8em">run( )</fo:inline> method
of
<fo:inline font-family="monospace" font-size="0.8em">BufferListener</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2526"><!--BufferListener--></fo:wrapper>,
an object that runs in a separate thread and waits for objects to be
added to a <fo:inline font-family="monospace" font-size="0.8em">BlockingBuffer</fo:inline>.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-5-EX-8"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5-8. A BufferListener constantly calling remove( )</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e16553">public class BufferListener implements Runnable {
    private Buffer buffer;

    public BufferListener(Buffer buffer) {
        this.buffer = buffer;
    }

    public void run( ) {
        while(true) {
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">            String message = (String) buffer.remove( );</fo:inline>
            System.out.println( message );
        }
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The two calls to <fo:inline font-family="monospace" font-size="0.8em">buffer.add( )</fo:inline> causes
<fo:inline font-family="monospace" font-size="0.8em">BufferListener</fo:inline> to print the strings added:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt225">Hello World!
Goodbye, Y'all.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-9.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.9.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A <fo:inline font-family="monospace" font-size="0.8em">BlockingBuffer</fo:inline> is used in a system that needs to
act on a piece a data as soon as it is available, and this data
structure comes in handy when there are a series of worker threads
listening to buffers between components in a pipeline.
<fo:inline font-family="monospace" font-size="0.8em">BlockingBuffer</fo:inline> allows you to build cascading
pipelines, which automatically notify the next stage of available
data. Think of this pattern as a stepped waterfall; water
automatically flows down the steps, and each step is a
<fo:inline font-family="monospace" font-size="0.8em">Buffer</fo:inline>. (See <fo:basic-link internal-destination="jakartackbk-CHP-5-FIG-2" text-decoration="underline" color="blue">Figure 5-2</fo:basic-link>.)</fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-5-FIG-2"><fo:block id="I_5_tt226"><fo:external-graphic src="/Users/tobrien/Library/Code/common-java-cookbook/content/target/classes/docbook/figs/print/jccb_0502.pdf" width="310px" height="56px" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:application/pdf"/></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-previous.within-column="always">Figure 5-2. Using a BlockingBuffer to create a pipeline</fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Assume that you need to write a workflow application for a news
publisher; the workflow consists of a pipeline: news stories are
published as XML files, which are passed to a search indexer and then
processed with an XSLT stylesheet. A news story is simply passed as a
<fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> containing an XML document. The following
example creates a pipeline consisting of two
<fo:inline font-family="monospace" font-size="0.8em">BlockingBuffer</fo:inline> instances terminated by an
<fo:inline font-family="monospace" font-size="0.8em">UnboundedFifoBuffer</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt227">import java.util.*;
import org.apache.commons.collections.Buffer;
import org.apache.commons.collections.buffers.BlockingBuffer;
import org.apache.commons.collections.buffers.UnboundedFifoBuffer;

<fo:inline font-weight="bold">// Create a Blocking Buffer for each stage, last stage not a blocking buffer</fo:inline>
Buffer published = BlockingBuffer.decorate( new UnboundedFifoBuffer( ) );
Buffer indexed = BlockingBuffer.decorate( new UnboundedFifoBuffer( ) );
Buffer transformed = new UnboundedFifoBuffer( );

<fo:inline font-weight="bold">// Create a Thread that will watch the published Buffer and index a news story</fo:inline>
Indexer indexer = new Indexer(published, indexed);
Thread indexerThread = new Thread( indexer );
indexerThread.start( );

<fo:inline font-weight="bold">// Create a Thread that will watch the indexed Buffer and style a news story</fo:inline>
Styler styler = new Styler(index, transformed);
Thread stylerThread = new Thread( styler );
stylerThread.start( );

String newsStory = getNewsStory( );

published.add( newsStory );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous example creates three buffers to hold the results of the
stages of a pipeline—<fo:inline font-family="monospace" font-size="0.8em">published</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">indexed</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">transformed</fo:inline>. Three
<fo:inline font-family="monospace" font-size="0.8em">Runnable</fo:inline> objects are created to perform the task
of processing each news story; the <fo:inline font-family="monospace" font-size="0.8em">Indexer</fo:inline> object
listens to the <fo:inline font-family="monospace" font-size="0.8em">published</fo:inline> buffer and places its
results in the <fo:inline font-family="monospace" font-size="0.8em">indexed</fo:inline> buffer, and the
<fo:inline font-family="monospace" font-size="0.8em">Styler</fo:inline> object listens to the
<fo:inline font-family="monospace" font-size="0.8em">indexed</fo:inline> buffer and places its results in the
<fo:wrapper id="jakartackbk-CHP-5-ITERM-2527"><!--indexes, buffer--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2528"><!--buffers, indexes--></fo:wrapper>
               <fo:inline font-family="monospace" font-size="0.8em">transformed</fo:inline>
buffer. The <fo:inline font-family="monospace" font-size="0.8em">Indexer</fo:inline> object implements
<fo:inline font-family="monospace" font-size="0.8em">Runnable</fo:inline> and is constructed with two
<fo:inline font-family="monospace" font-size="0.8em">Buffer</fo:inline> objects, <fo:inline font-family="monospace" font-size="0.8em">inbound</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">outbound</fo:inline>. The <fo:inline font-family="monospace" font-size="0.8em">Indexer</fo:inline>, as shown
in <fo:basic-link internal-destination="jakartackbk-CHP-5-EX-9" text-decoration="underline" color="blue">Example 5-9</fo:basic-link>, continuously calls <fo:inline font-family="monospace" font-size="0.8em">remove(
)</fo:inline> on a <fo:inline font-family="monospace" font-size="0.8em">BlockingBuffer</fo:inline> and waits until a
story is available to process.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-5-EX-9"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5-9. An Indexer stage in a pipeline</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e16689">public class Indexer implements Runnnable {
    private Buffer inbound;
    private Buffer outbound;

    public Indexer(Buffer inbound, Buffer outbound) {
        this.inbound = inbound;
        this.outbound = outbound;
    }

    public void run( ) {
        while(true) {
            String story = (String) inbound.remove( );
                String processedStory = processStory( story );
            outbound.add( processedStory );
        }
    }

    public String processedStory(String story) {
        // Run story through a search indexer
        return story;
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">Styler</fo:inline> is omitted because it follows the exact
same pattern. Every stage in this pipeline is a
<fo:inline font-family="monospace" font-size="0.8em">Runnable</fo:inline> implementation running in a thread and
listening to an inbound buffer by calling (and blocking) on
<fo:inline font-family="monospace" font-size="0.8em">inbound.remove( )</fo:inline>. Using this mechanism allows
your system to process information in parallel by running separate
stages in separate threads, and there is no need for a controller to
coordinate the actions of a complex system. A pipeline can be
extended by simply adding another stage with an additional
<fo:inline font-family="monospace" font-size="0.8em">BlockingBuffer</fo:inline>. This pattern is useful in a system
that models a very complex workflow; instead of attempting to capture
a complex symphony of coordination, break the system into autonomous
stages that only know about inputs and outputs.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-9.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.9.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A <fo:inline font-family="monospace" font-size="0.8em">BlockingBuffer</fo:inline> in Jakarta Commons Collections is
analogous to a <fo:inline font-family="monospace" font-size="0.8em">BlockingQueue</fo:inline> in Java 5.0. A
<fo:inline font-family="monospace" font-size="0.8em">BlockingQueue</fo:inline> in Java 5.0 has an important feature
that is missing in Commons Collections 3.0 implementation of
<fo:inline font-family="monospace" font-size="0.8em">BlockingBuffer</fo:inline>: in Java 5.0's
<fo:inline font-family="monospace" font-size="0.8em">BlockingQueue</fo:inline>, you can specify a timeout when
adding and <fo:wrapper id="jakartackbk-CHP-5-ITERM-2529"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2530"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2531"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2532"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2533"><!----></fo:wrapper>removing values from a queue.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-10"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Storing Multiple Values in a Map</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.10. Storing Multiple Values in a Map</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-10.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.10.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to store multiple <fo:wrapper id="jakartackbk-CHP-5-ITERM-2534"><!--Commons
Collections, multiple value
storage--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2535"><!--collections, multiple
value storage--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2536"><!--multiple value
storage--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2537"><!--objects, Collections, multiple
value storage--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2538"><!--mapping, multiple
value storage--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2539"><!--values, multiple
value storage--></fo:wrapper>values for a single key in a
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>. Instead of a one-to-one relationship between
keys and values, you need a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> that provides
one-to-many relationships between keys and values.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-10.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.10.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use a <fo:inline font-family="monospace" font-size="0.8em">MultiMap</fo:inline>. A
<fo:inline font-family="monospace" font-size="0.8em">MultiMap</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2540"><!--MultiMap--></fo:wrapper>
maintains a collection of values for a given key. When a new
key/value pair is added to a <fo:inline font-family="monospace" font-size="0.8em">MultiMap</fo:inline>, the value
is added to the collection of values for that key. The
<fo:inline font-family="monospace" font-size="0.8em">MultiMap</fo:inline> also provides a way to remove a specific
key/value pair. The following example demonstrates the use of
<fo:inline font-family="monospace" font-size="0.8em">MultiMap</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt228">import org.apache.commons.collections.MultiMap;
import org.apache.commons.collections.MultiHashMap;

MultiMap map = new MultiHashMap( );

map.put( "ONE", "TEST" );
map.put( "TWO", "PICNIC" );

map.put( "ONE", "HELLO" );
map.put( "TWO", "TESTIMONY" );

Set keySet = map.keySet( );
Iterator keyIterator = keySet.iterator( );
while( keyIterator.hasNext( ) ) {
    Object key = keyIterator.next( );

    System.out.print( "Key: " + key + ", " );

    Collection values = (Collection) map.get( key );
    Iterator valuesIterator = values.iterator( );
    while( valuesIterator.hasNext( ) ) {
        System.out.print( "Value: " + valuesIterator.next( ) + ". " );
    }

    System.out.print( "\n" );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Each key in a <fo:inline font-family="monospace" font-size="0.8em">MultiMap</fo:inline> corresponds to a collection
of values. This example produces the following output while iterating
through all values for each key:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt229">Key: ONE, Value: TEST. Value: HELLO
Key: TWO, Value: PICNIC. Value: Testimony</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-10.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.10.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In a traditional <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>, a key is removed with
<fo:inline font-family="monospace" font-size="0.8em">map.remove( )</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2541"><!--map.remove( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2542"><!--methods, map.remove(
)--></fo:wrapper>; this method removes the specified key from
the map. In a <fo:inline font-family="monospace" font-size="0.8em">MultiMap</fo:inline>, a specific key/value pair
can be removed from a key's value collection. When
removing a specific pair, the value is extracted from a
key's value collection. <fo:basic-link internal-destination="jakartackbk-CHP-5-EX-10" text-decoration="underline" color="blue">Example 5-10</fo:basic-link>
demonstrates the use of a <fo:inline font-family="monospace" font-size="0.8em">MultiMap.remove()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2543"><!--MultiMap.remove( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2544"><!--methods, MultiMap.remove(
)--></fo:wrapper> method.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-5-EX-10"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5-10. Using MultiMap.remove( )</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e16861">package com.discursive.jccook.collections.map;

import org.apache.commons.collections.*;
import java.util.*;

public class MultiMapExample {
    public static void main(String[] args) {
        MultiMapExample example = new MultiMapExample( );
        example.start( );
    }

    public void start( ) {
        MultiMap map = new MultiHashMap( );

        map.put( "ONE", "TEST" );
        map.put( "ONE", "WAR" );
        map.put( "ONE", "CAR" );
        map.put( "ONE", "WEST" );

        map.put( "TWO", "SKY" );
        map.put( "TWO", "WEST" );
        map.put( "TWO", "SCHOOL" );

        // At this point "ONE" should correspond to "TEST", "WAR", "CAR", "WEST"
        map.remove( "ONE", "WAR" );
        map.remove( "ONE", "CAR" );

        // The size of this collection should be two "TEST", "WEST"
        Collection oneCollection = (Collection) map.get("ONE");

        // This collection should be "TEST", "WEST", "SKY", "WEST", "SCHOOL"
        Collection values = map.values( );
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">MultiMap</fo:inline> is relevant when one object is
associated with many different objects. A sensible example would be a
<fo:inline font-family="monospace" font-size="0.8em">MultiMap</fo:inline> of people to the languages they speak
fluently, and the following example demonstrates such a
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt230">MultiMap languageAbility = new MultiHashMap( );

languageAbility.put( "Tom", "French" );
languageAbility.put( "Chris", "Spanish" );
languageAbility.put( "Chris", "German" );
languageAbility.put( "John", "Arabic" );
languageAbility.put( "Tom", "Pashto" );

// What languages does Tom speak?
Collection languages = (Collection) languageAbility.get("Tom");
Iterator languageIterator = languages.iterator( );
while( languageIterator.hasNext( ) ) {
    System.out.println( "Tom speaks " + languageIterator.next( ) );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you had to locate people who were fluent in a given language, it
would be equally as valid to use languages as keys and names as
values. One could then query the <fo:inline font-family="monospace" font-size="0.8em">MultiMap</fo:inline> for a
list of people who speak a certain language. If your system contains
two collections of objects that have a<fo:wrapper id="jakartackbk-CHP-5-ITERM-2545"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2546"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2547"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2548"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2549"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2550"><!----></fo:wrapper> many-to-many relationship,
these<fo:wrapper id="jakartackbk-CHP-5-ITERM-2551"><!--relationships, MultiMap--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2552"><!--MultiMap--></fo:wrapper> relationships can
be managed with two instances of <fo:inline font-family="monospace" font-size="0.8em">MultiMap</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-11"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Retrieving a Key by a Value</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.11. Retrieving a Key by a Value</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-11.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.11.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> that allows you to access<fo:wrapper id="jakartackbk-CHP-5-ITERM-2553"><!--Commons
Collections, key by value
retrieval--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2554"><!--collections, key
by value retrieval--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2555"><!--keys, value
retrieval--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2556"><!--objects, Collections, key
by value retrieval--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2557"><!--values, key by
value retrieval--></fo:wrapper> a value by a key and a key by
a value.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-11.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.11.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">BidiMap</fo:inline> in Commons Collections provides an
implementation of <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>, which can be reversed if
both the keys and values are unique; you can use a
<fo:inline font-family="monospace" font-size="0.8em">BidiMap</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2558"><!--BidiMap--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2559"><!--access, BidiMap--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2560"><!--mapping, BidiMap--></fo:wrapper>
to retrieve a value for a key or a key for a value. The following
example demonstrates the use of a <fo:inline font-family="monospace" font-size="0.8em">BidiMap</fo:inline> to
access state names by state abbreviation and state abbreviations by
state names:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt231">BidiMap bidiMap = new DualHashBidiMap( );

bidiMap.put( "il", "Illinois" );
bidiMap.put( "az", "Arizona" );
bidiMap.put( "va", "Virginia" );

// Retrieve the key with a value via the inverse map
String vaAbbreviation = bidiMap.inverseBidiMap( ).get( "Virginia" );
 
// Retrieve the value from the key
String illinoisName = bidiMap.get( "il" );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">DualHashBidiMap</fo:inline> stores keys and values in two
<fo:inline font-family="monospace" font-size="0.8em">HashMap</fo:inline> instances. One <fo:inline font-family="monospace" font-size="0.8em">HashMap</fo:inline>
stores keys as keys and values as values, and the other
<fo:inline font-family="monospace" font-size="0.8em">HashMap</fo:inline> stores the inverse—values as keys
and keys as values.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-11.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.11.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In <fo:basic-link internal-destination="jakartackbk-CHP-5-EX-11" text-decoration="underline" color="blue">Example 5-11</fo:basic-link>, a <fo:inline font-family="monospace" font-size="0.8em">BidiMap</fo:inline> is used
to store country names and country codes; an application stores ISO
country codes and translates between ISO country codes and country
names to present intelligible
output—"us" is translated to
"United States." Alternatively,
when a user types in a name of a country, the application needs to be
able to produce the country code for that country
name—"United States" must be
translated back to "us."</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-5-EX-11"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5-11. Storing ISO country codes in a BidiMap</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e17012">package com.discursive.jccook.collections.bidi;

import org.apache.commons.collections.BidiMap;
import org.apache.commons.collections.bidimap.DualHashBidiMap;

public class BidiMapExample {

    private BidiMap countryCodes = new DualHashBidiMap( );

    public static void main(String[] args) {
        BidiMapExample example = new BidiMapExample( );
        example.start( );
    }
    
    private void start( ) {
        populateCountryCodes( );
        
        String countryName = (String) countryCodes.get( "tr" );
        System.out.println( "Country Name for code 'tr': " + countryName );

        String countryCode = 
            (String) countryCodes.inverseBidiMap( ).get("Uruguay");
        System.out.println( "Country Code for name 'Uruguay': " + countryCode );
            
        countryCode = (String) countryCodes.getKey("Ukraine");
        System.out.println( "Country Code for name 'Ukraine': " + countryCode );
    }
    
    private void populateCountryCodes( ) {
        countryCodes.put("to","Tonga");
        countryCodes.put("tr","Turkey");
        countryCodes.put("tv","Tuvalu");
        countryCodes.put("tz","Tanzania");
        countryCodes.put("ua","Ukraine");
        countryCodes.put("ug","Uganda");
        countryCodes.put("uk","United Kingdom");
        countryCodes.put("um","USA Minor Outlying Islands");
        countryCodes.put("us","United States");
        countryCodes.put("uy","Uruguay");
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous example makes sense because country codes and country
names are both unique; there is only one entry for
"Djibouti,"
"dj,"and no other country has an
overlapping code because country codes are defined by an
International Organization for Standardization (ISO) standard, ISO
3166. If you attempt to insert a duplicate key in a regular map, the
existing entry with the same key would be replaced by the new value.
In a <fo:inline font-family="monospace" font-size="0.8em">BidiMap</fo:inline>, if you insert a duplicate value, or
a <fo:inline font-style="italic">duplicate key</fo:inline>, the entry holding this value is
replaced by a new entry. The following example illustrates this
concept:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt232">private BidiMap bidiMap = new DualHashBidiMap( );

// Insert initial content { "one:"red", "two":"green", "three":"blue" }
bidiMap.put("one","red");
bidiMap.put("two","green");
bidiMap.put("three","blue");

// replace "one" key entry
bidiMap.put("one","black");

// replace "green" value entry
bidiMap.put("five","green");

// Contents are now { "one":"black", "three":"blue", "five":"green" }</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Changing key "one," value
"black" replaces the original key
"one," value
"red" because the key is
duplicated; this behavior is consistent with a normal implementation
of <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>. The difference in a
<fo:inline font-family="monospace" font-size="0.8em">BidiMap</fo:inline> is that when adding key
"five," value
"green" to a
<fo:inline font-family="monospace" font-size="0.8em">BidiMap</fo:inline>, the previous key
"two," value
"green" is replaced with a new
entry because "green" is a
duplicate value. A regular <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> simply adds another
entry, and getting the value of either the
"five," or
"two," key would return the value
"green." Because
"green" already occurs as a key in
the inverse map, the entry corresponding to the
"two," key is removed and replaced
by a new entry. Bidirectional access to keys by value is only
possible if keys and values form two unique sets.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">There are three implementations of the <fo:inline font-family="monospace" font-size="0.8em">BidiMap</fo:inline>
interface: <fo:inline font-family="monospace" font-size="0.8em">DualHashBidiMap</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">DialTreeBidiMap</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">TreeBidiMap</fo:inline>. A <fo:inline font-family="monospace" font-size="0.8em">DualHashBidiMap</fo:inline>
is the simplest option, storing keys and values in two separate
instances of <fo:inline font-family="monospace" font-size="0.8em">HashMap</fo:inline>. When a value is requested by
key, one
<fo:inline font-family="monospace" font-size="0.8em">HashMap</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2561"><!--HashMap--></fo:wrapper>
is consulted, and when a key is requested by value, the inverse
<fo:inline font-family="monospace" font-size="0.8em">HashMap</fo:inline> is consulted. The
<fo:inline font-family="monospace" font-size="0.8em">DualHashMap</fo:inline> is likely to be your implementation of
choice if it is not important to keep track of the insertion order;
it has a straightforward implementation using the familiar
<fo:inline font-family="monospace" font-size="0.8em">HashMap</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you need to preserve the order of <fo:wrapper id="jakartackbk-CHP-5-ITERM-2562"><!--country
codes--></fo:wrapper>insertion, a
<fo:inline font-family="monospace" font-size="0.8em">DualTreeBidiMap</fo:inline> uses two separate
<fo:inline font-family="monospace" font-size="0.8em">TreeMap</fo:inline> instances to hold the regular and inverse
mappings. This implementation implements the
<fo:inline font-family="monospace" font-size="0.8em">SortedMap</fo:inline> interface that keeps track of the order
of insertion and provides <fo:inline font-family="monospace" font-size="0.8em">subMap( )</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">headMap( )</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">tailMap( )</fo:inline>
methods. A third implementation, <fo:inline font-family="monospace" font-size="0.8em">TreeBidiMap</fo:inline>,
implements <fo:inline font-family="monospace" font-size="0.8em">BidiMap</fo:inline> without maintaining two
internal storage maps. Instead, <fo:inline font-family="monospace" font-size="0.8em">TreeBidiMap</fo:inline> stores
nodes in a red-black tree, identifying each node as both a key and a
value; it costs twice as much to <fo:inline font-family="monospace" font-size="0.8em">put( )</fo:inline> into a
<fo:inline font-family="monospace" font-size="0.8em">TreeBidiMap</fo:inline>, but this implementation comes in
handy if you are worried about memory consumption—it does not
need to store each key and value twice in two maps.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-11.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.11.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example used ISO 3166 country<fo:wrapper id="jakartackbk-CHP-5-ITERM-2563"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2564"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2565"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2566"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2567"><!----></fo:wrapper> codes, a list of every country and
corresponding two letter country code. If you are writing an
application for a worldwide audience, you may find the following list
helpful: <fo:inline font-family="monospace" font-size="0.8em">http://www.iso.ch/iso/en/prods-services/iso3166ma/02iso-3166-code-lists/list-en1.html</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-12"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Using a Case-Insensitive Map</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.12. Using a Case-Insensitive Map</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-12.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.12.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to use a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> with
<fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2568"><!--Commons
Collections, case-insensitive
maps--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2569"><!--collections, case-insensitive
maps--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2570"><!--case-insensitive
maps--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2571"><!--objects, Collections, case-insensitive
maps--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2572"><!--mapping, case-insensitive
maps--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2573"><!--capitalization, case-insensitive
maps--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2574"><!--values, case-insensitive
maps--></fo:wrapper>keys that will
<fo:wrapper id="jakartackbk-CHP-5-ITERM-2575"><!--keys, case-insensitive
maps--></fo:wrapper>ignore the capitalization of a key when
retrieving a value.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-12.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.12.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use a
<fo:inline font-family="monospace" font-size="0.8em">CaseInsensitiveMap</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2576"><!--CaseInsensitiveMap--></fo:wrapper>
from the Commons Collections. This implementation of
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> takes <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> keys and
provides case-insensitive access. An entry with a key
"Test" can be retrieved with the
strings "TEST,"
"test," and
"tEST." Here is a small example
demonstrating the case insensitivity:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt233">import java.util.*;
import org.apache.commons.collection.map.CaseInsensitiveMap;

Map grades = new CaseInsensitiveMap( );
grades.put( "Fortney", "B-" );
grades.put( "Puckett", "D+" );
grades.put( "Flatt", "A-" );

String grade1 = (String) grades.get( "puckett" );
String grade2 = (String) grades.get( "FLATT" );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In this example, the grades are stored with a capitalized last name,
and the results are retrieved with irregularly capitalized last
names. This example returns the grades for
"Puckett" and
"Flatt" even though they were
retrieved with "puckett" and
"FLATT."</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-12.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.12.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-5-EX-12" text-decoration="underline" color="blue">Example 5-12</fo:basic-link> demonstrates the use of
<fo:inline font-family="monospace" font-size="0.8em">CaseInsensitiveMap</fo:inline> to access state names by state
abbreviations regardless of capitalization. This is useful when an
application is requesting a state from a user in a form to capture an
address. If a user enters "il,"
"IL," or
"Il," you need to be able to return
"Illinois."</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-5-EX-12"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5-12. Using a CaseInsensitiveMap for U.S. states</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e17227">package com.discursive.jccook.collections.insensitive;

import java.util.Map;
import org.apache.commons.collections.map.CaseInsensitiveMap;

public class CaseInsensitiveExample {

    Map states = new CaseInsensitiveMap( );

    public static void main(String[] args) {
        CaseInsensitiveExample example = new CaseInsensitiveExample( );
        example.start( );
    }
    
    private void start( ) {
        states.put("IL", "Illinois");
        states.put("PA", "Pennsylvania");
        states.put("GA", "Georgia");
        states.put("AZ", "Arizona");
    
        String stateName = (String) states.get( "il" );
        System.out.println( "Value retrieved for 'il': " + stateName );

        stateName = (String) states.get( "IL" );
        System.out.println( "Value retrieved for 'IL': " + stateName );

        stateName = (String) states.get( "iL" );
        System.out.println( "Value retrieved for 'iL': " + stateName );

    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-5-EX-12" text-decoration="underline" color="blue">Example 5-12</fo:basic-link> populates a
<fo:inline font-family="monospace" font-size="0.8em">CaseInsensitiveMap</fo:inline> with state abbreviations and
state names, and it retrieves the state name for three different
capitalizations of "IL":
"iL,"
"IL," and
"il." For all three keys, the
<fo:inline font-family="monospace" font-size="0.8em">CaseInsensitiveMap</fo:inline> returns the proper state
name—"Illinois"—as
illustrated by the output from the previous example:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt234">Value retrieved for 'il': Illinois
Value retrieved for 'IL': Illinois
Value retrieved for 'iL': Illinois</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-12.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.12.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you are interested in how this class works, take a look at the
source for <fo:inline font-family="monospace" font-size="0.8em">CaseInsensitiveMap</fo:inline>, and you will see
that this implementation of <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> extends the
<fo:inline font-family="monospace" font-size="0.8em">AbstractHashedMap</fo:inline> class in the
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.collections.map</fo:inline> package. It
would be just as easy to decorate a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> with a
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> object to provide case insensitivity.
<fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-16" text-decoration="underline" color="blue">Recipe 5.16</fo:basic-link> discusses the use of a
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> to <fo:wrapper id="jakartackbk-CHP-5-ITERM-2577"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2578"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2579"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2580"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2581"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2582"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2583"><!----></fo:wrapper>alter objects as they are stored in
a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-13"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Creating Typed Collections and Maps</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.13. Creating Typed Collections and Maps</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-13.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.13.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to guarantee that <fo:wrapper id="jakartackbk-CHP-5-ITERM-2584"><!--Commons
Collections, typed
collections--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2585"><!--collections, typed--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2586"><!--typed
collections--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2587"><!--objects, Collections, typed
collections--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2588"><!--mapping, typed
collections--></fo:wrapper>a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> or
a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> only contains objects of a certain type.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-13.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.13.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">TypedCollection.decorate()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2589"><!--TypedCollection.decorate( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2590"><!--methods, TypedCollection.decorate(
)--></fo:wrapper> to create a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>
that only accepts objects of a specified type. Supply an existing
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> along with the <fo:inline font-family="monospace" font-size="0.8em">Class</fo:inline>
that all elements should be constrained to.
<fo:inline font-family="monospace" font-size="0.8em">TypedCollection</fo:inline> will decorate this existing
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>, validating elements as they are added
to a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>. The following example creates a
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> that will only accept strings:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt235">List existingList = new ArrayList( );
Collection typedCollection = TypedCollection.decorate( existingList, 
String.class );

// This will add a String
typedCollection.add( "STRING" );

// And, This will throw an IllegalArgumentException
typedCollection.add( new Long(28) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Similarly, if you want to constrain keys and values to specified
types, pass a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> to <fo:inline font-family="monospace" font-size="0.8em">TypedMap.decorate( )</fo:inline>
method, specifying a <fo:inline font-family="monospace" font-size="0.8em">Class</fo:inline> for both the
key and the value. In the following example,
<fo:inline font-family="monospace" font-size="0.8em">typedMap</fo:inline> only accepts <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline>
keys and <fo:inline font-family="monospace" font-size="0.8em">Number</fo:inline> values:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt236">Map existingMap = new HashMap( );
Map typedMap = TypedMap.decorate( existingMap, String.class, Number.class );

// This will add a String key and a Double value
typedMap.put( "TEST", new Double( 3.40 ) );

// Both of these throw an IllegalArgumentException
typedMap.put( new Long(202), new Double( 3.40 ) );
typedMap.put( "BLAH", "BLAH" );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">TypedCollection</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">TypedMap</fo:inline>
will decorate any existing <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> or
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> and will throw an
<fo:inline font-family="monospace" font-size="0.8em">IllegalArgumentException</fo:inline> if you try to add an
incompatible type.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-13.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.13.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> frequently contains keys and values with
consistent types; for instance, an application that keeps track of
<fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> objects by name most likely has a
<fo:inline font-family="monospace" font-size="0.8em">personMap</fo:inline> with <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> values
and <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> keys. Rarely does a
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> hold a wide diversity of types.
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>s and <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>s are not
type-safe, and this lack of type safety means that unexpected objects
may be cast to incompatible types, causing nasty
<fo:inline font-family="monospace" font-size="0.8em">ClassCastException</fo:inline>s. It is unlikely that every
time you call <fo:inline font-family="monospace" font-size="0.8em">get( )</fo:inline> and cast the resulting
object, you catch <fo:inline font-family="monospace" font-size="0.8em">ClassCastException</fo:inline>; and, in most
systems, it is reasonable to assume that no one has put an
incompatible type into a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>. But, if a
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> plays a central role in a critical
application, you may want an extra layer of validation; decorate your
maps with <fo:inline font-family="monospace" font-size="0.8em">TypedMap</fo:inline> to ensure that a
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> contains consistent types. There is little
penalty for decorating a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> as such, and if
someone writes code to insert invalid input, your application should
fail immediately with an <fo:inline font-family="monospace" font-size="0.8em">IllegalArgumentException</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If your application uses a <fo:inline font-family="monospace" font-size="0.8em">TypedMap</fo:inline>, it is easier
to track down defects. If a <fo:inline font-family="monospace" font-size="0.8em">ClassCastException</fo:inline> is
thrown when calling <fo:inline font-family="monospace" font-size="0.8em">get( )</fo:inline>, you then need to work
backward to find out where the offending object was put into a
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>. An alternative is to validate each object as
it is added to a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>. If the <fo:inline font-family="monospace" font-size="0.8em">put(
)</fo:inline> method throws
<fo:inline font-family="monospace" font-size="0.8em">IllegalArgumentException</fo:inline>, it will be easier to
identify the offending code.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Java 5.0 adds the idea of generics—compile-time type safety for
any number of objects including <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>s and
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>s. But, if you are stuck with an older version
of the JDK, you can use Commons Collections to create a
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> that only accepts input of a certain
type. <fo:inline font-family="monospace" font-size="0.8em">TypedSet</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">TypedBag</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">TypedList</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">TypedMap</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">TypedBuffer</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">TypedSortedSet</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">TypedSortedBag</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">TypedSortedMap</fo:inline>
all provide the same decoration as
<fo:inline font-family="monospace" font-size="0.8em">TypedCollection</fo:inline>, but they return a specific
interface; for example, <fo:inline font-family="monospace" font-size="0.8em">TypedList</fo:inline> decorates and
returns a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">TypedSet</fo:inline>
decorates and returns a <fo:inline font-family="monospace" font-size="0.8em">Set</fo:inline>. <fo:basic-link internal-destination="jakartackbk-CHP-5-EX-13" text-decoration="underline" color="blue">Example 5-13</fo:basic-link> demonstrates the use of the
<fo:inline font-family="monospace" font-size="0.8em">TypedList</fo:inline> decorator to return a
<fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> instead of a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-5-EX-13"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5-13. Using TypedList to decorate a list</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e17556">package com.discursive.jccook.collections.typed;

import java.util.ArrayList;
import java.util.List;

import org.apache.commons.collections.list.TypedList;

public class TypedListExample {
    
    private List hostNames;

    public static void main(String[] args) {
        TypedListExample example = new TypedListExample( );
        example.start( );
    }
    
    public void start( ) {
        // Make sure that items added to this
        hostNames = TypedList.decorate(  new ArrayList( ), String.class );

        // Add two String objects
        hostNames.add( "papp01.thestreet.com" );
        hostNames.add( "test.slashdot.org" );
        
        // Try to add an Integer
        try {        
            hostNames.add( new Integer(43) );
        } catch( IllegalArgumentException iae ) {
            System.out.println( "Adding an Integer Failed as expected" );
        }
        
        // Now we can safely cast without the possibility of a 
        // ClassCastException
        String hostName = (String) hostNames.get(0);
        
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> decorated with
<fo:inline font-family="monospace" font-size="0.8em">TypedList</fo:inline> encounters an invalid object, the
<fo:inline font-family="monospace" font-size="0.8em">add( )</fo:inline> method will throw an
<fo:inline font-family="monospace" font-size="0.8em">IllegalArgumentException</fo:inline>.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-CHP-5-NOTE-58"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/tip.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Tip</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A <fo:inline font-family="monospace" font-size="0.8em">Typed&lt;X&gt;</fo:inline> decorated
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> will not be able to provide the
compile-time type safety of Java 5.0's generics, but
it will enforce a restriction on what it can accept—it is up to
you to catch the runtime exception.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">TypedMap</fo:inline> allows you to constrain both the keys and
values of a map. <fo:inline font-family="monospace" font-size="0.8em">TypedMap.decorate( )</fo:inline> takes three
parameters: the <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> to decorate, the key
<fo:inline font-family="monospace" font-size="0.8em">Class</fo:inline>, and the value <fo:inline font-family="monospace" font-size="0.8em">Class</fo:inline>. To
create a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> that only constrains key types, pass
in a <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> value for the value type. To create a
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> that only validates the type of the value,
pass in a <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> for the key type. <fo:basic-link internal-destination="jakartackbk-CHP-5-EX-14" text-decoration="underline" color="blue">Example 5-14</fo:basic-link> uses <fo:inline font-family="monospace" font-size="0.8em">TypedMap.decorate( )</fo:inline>
to create a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> that only accepts
<fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> keys and <fo:inline font-family="monospace" font-size="0.8em">Number</fo:inline> values.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-5-EX-14"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5-14. Decorating a map with TypedMap</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e17628">package com.discursive.jccook.collections.typed;

import java.util.HashMap;
import java.util.Map;

import org.apache.commons.collections.map.TypedMap;

public class TypedMapExample {
    
    private Map variables;

    public static void main(String[] args) {
        TypedMapExample example = new TypedMapExample( );
        example.start( );
    }
    
    public void start( ) {
        // Make sure that items added to this
        variables = 
            TypedMap.decorate(  new HashMap( ), String.class, Number.class );

        // Add two String objects
        variables.put( "maxThreads", new Integer(200) );
        variables.put( "minThreads", new Integer(20) );
        variables.put( "lightSpeed", new Double( 2.99792458e8 ) );
        
        // Try to add a String value
        try {        
            variables.put( "server", "test.oreilly.com" );
        } catch( IllegalArgumentException iae ) {
            System.out.println( "Adding an String value Failed as expected" );
        }

        // Try to add an Integer key
        try {        
            variables.put( new Integer(30), "test.oreilly.com" );
        } catch( IllegalArgumentException iae ) {
            System.out.println( "Adding an Integer key Failed as expected" );
        }
        
        // Now we can safely cast without the possibility of a ClassCastException
        Number reading = (Number) variables.get("lightSpeed");
        
    }
}</fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-13.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.13.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Java 5.0 has added generics—a welcome addition. For more
information about generics, look at the release notes for Java 5.0 at
<fo:inline font-family="monospace" font-size="0.8em">http://java.sun.com/j2se/1.5.0/docs/relnotes/features.html#generics</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about the decorator design pattern, read the
classic <fo:inline font-style="italic">Design Patterns: Elements of Reusable
Object-Oriented Software</fo:inline>, by Erich Gamma et al., or take a
look at this onJava.com article by Budi Kurniawan: <fo:inline font-family="monospace" font-size="0.8em">http://www.onjava.com/pub/a/onjava/2003/02/05/decorator.html</fo:inline>,
which deals with the decorator pattern as applied to Java Swing
development, but this pattern also has relevance outside of a GUI
development context.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This <fo:inline font-family="monospace" font-size="0.8em">TypedCollection</fo:inline> decorator is a specialized
version of a <fo:inline font-family="monospace" font-size="0.8em">PredicatedCollection</fo:inline>. Type-safety is
implemented through the <fo:wrapper id="jakartackbk-CHP-5-ITERM-2591"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2592"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2593"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2594"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2595"><!----></fo:wrapper>use of an
<fo:inline font-family="monospace" font-size="0.8em">InstanceofPredicate</fo:inline>, and the next recipe discusses
the use of a <fo:inline font-family="monospace" font-size="0.8em">PredicatedMap</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-14"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Constraining Map Values</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.14. Constraining Map Values</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-14.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.14.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to ensure that all<fo:wrapper id="jakartackbk-CHP-5-ITERM-2596"><!--Commons
Collections, map value
constraints--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2597"><!--collections, map
value constraints--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2598"><!--constraints, map
values--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2599"><!--objects, Collections, map
value constraints--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2600"><!--mapping, value
constraints--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2601"><!--values, map
constraints--></fo:wrapper> values added to a
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> satisfy a set of arbitrary conditions.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-14.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.14.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Decorate an existing <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> with
<fo:inline font-family="monospace" font-size="0.8em">PredicatedMap</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2602"><!--PredicatedMap--></fo:wrapper>
from Commons Collections. <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>s add an
inbound validation to a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>, validating keys or
values any time an entry is added to a
<fo:inline font-family="monospace" font-size="0.8em">PredicatedMap</fo:inline>. If a <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>
assigned to a key or value returns
<fo:inline font-family="monospace" font-size="0.8em">false</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">put()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2603"><!--put( ) method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2604"><!--methods, put--></fo:wrapper>
throws an <fo:inline font-family="monospace" font-size="0.8em">IllegalArgumentException</fo:inline>. The following
example decorates a <fo:inline font-family="monospace" font-size="0.8em">HashMap</fo:inline> with
<fo:inline font-family="monospace" font-size="0.8em">PredicatedMap</fo:inline>—two
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>s are created to validate the keys and
the values:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt237">import java.util.*;
import org.apache.commons.collections.map.PredicatedMap;
import org.apache.commons.collections.Predicate;
import org.apache.commons.collections.functors.EqualPredicate;
import org.apache.commons.collections.functors.InstanceofPredicate;
import org.apache.commons.collections.functors.OrPredicate;

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">// Create a Predicate that only accepts Strings</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Predicate onlyStrings = new InstanceofPredicate( String.class );</fo:inline>

               <fo:inline font-weight="bold">// Create a Predicate that only allows "green" or "red</fo:inline>"
Predicate onlyGreen = new EqualPredicate( "green" );
Predicate onlyRed = new EqualPredicate( "red" );
<fo:inline font-weight="bold">Predicate greenOrRed = new OrPredicate( onlyGreen, onlyRed );</fo:inline>

               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">// Created a Decorated Map - accepting String keys and "green" or "red" values</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Map map = PredicatedMap.decorate( new HashMap( ), onlyStrings, greenOrRed );</fo:inline>

// All of these puts should work
map.put( "tony" , "green" );
map.put( "alice" , "red" );
map.put( "mike" , "red" );
map.put( "bobby" , "green" );

// All of these puts should throw an IllegalArgumentException
map.put( new Double(4.0) , "green" );
map.put( "alice" , "purple" );
map.put( new Long(32) , new Long(43) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In the previous example, keys are validated by a simple
<fo:inline font-family="monospace" font-size="0.8em">InstanceofPredicate</fo:inline>, which ensures that each key
is a <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline>. The values are validated with an
<fo:inline font-family="monospace" font-size="0.8em">OrPredicate</fo:inline>, which combines two
<fo:inline font-family="monospace" font-size="0.8em">EqualPredicates</fo:inline>; values are accepted if they are
equal to the strings "green" or
"red."</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-14.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.14.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A <fo:inline font-family="monospace" font-size="0.8em">PredicatedMap</fo:inline> can work with any
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> no matter how simple or complex. Passing
in a <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> value for either the key or value
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> instructs the
<fo:inline font-family="monospace" font-size="0.8em">PredicatedMap</fo:inline> not to validate keys or values. In
the following example, a <fo:inline font-family="monospace" font-size="0.8em">PredicatedMap</fo:inline> decorates a
<fo:inline font-family="monospace" font-size="0.8em">HashMap</fo:inline> to ensure that a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>
contains valid <fo:inline font-family="monospace" font-size="0.8em">Team</fo:inline> values:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt238">import org.apache.commons.collections.functors.AndPredicate;
import org.apache.commons.collections.map.PredicatedMap;

<fo:inline font-weight="bold">// Create the Predicates</fo:inline>
ValidTeamPredicate validTeam = new ValidTeamPredicate( );
ValidCoachPredicate validCoach = new ValidCoachPredicate( );

<fo:inline font-weight="bold">// Tie two Predicates together into an AndPredicate</fo:inline>
AndPredicate valuePredicate = new AndPredicate( validTeam, validCoach );
        
<fo:inline font-weight="bold">// Decorate a HashMap with a predicate on the value</fo:inline>
Map teamMap = PredicatedMap.decorate( new HashMap( ), null, valuePredicate);
        
<fo:inline font-weight="bold">// Manufacture some teams</fo:inline>
Team redSox = new Team( "Red Sox", new Coach( "Patrick", "Moloney") );
Team yankees= new Team( "Yankees", new Coach( "David", "McGarry") );
Team dodgers = new Team( "Dodgers", new Coach( "Nick", "Taylor") );
Team twins = new Team( null, new Coach( "Patrick", "Moloney") );
Team braves = new Team( "Braves", null );
        
<fo:inline font-weight="bold">// The following put calls should work fine</fo:inline>
teamMap.put( "RedSox", redSox );
teamMap.put( "Yankees", yankees );
teamMap.put( "Dodgers", dodgers );
        
<fo:inline font-weight="bold">// This put should fail because the team name is null</fo:inline>
try {
    teamMap.put( "Twins", twins);
} catch( IllegalArgumentException iae ) {
    System.out.println( "Twins put failed, as expected" );
}

<fo:inline font-weight="bold">// This put should fail because the coach is null</fo:inline>
try {
    teamMap.put( "Braves", braves);
} catch( IllegalArgumentException iae ) {
    System.out.println( "Braves put failed, as expected" );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">An application can assume that every team in
<fo:inline font-family="monospace" font-size="0.8em">teamMap</fo:inline> has met the following requirements:</fo:block><fo:list-block space-before.optimum="0em" space-before.minimum="0em" space-before.maximum="0em" space-after.optimum="0em" space-after.minimum="0em" space-after.maximum="0em" margin-left="1.0em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e17868"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17869"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Every <fo:inline font-family="monospace" font-size="0.8em">Team</fo:inline> object must have a
non-<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> 
                     <fo:inline font-family="monospace" font-size="0.8em">name</fo:inline> property.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17881"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Every <fo:inline font-family="monospace" font-size="0.8em">Team</fo:inline> object must have a
non-<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> 
                     <fo:inline font-family="monospace" font-size="0.8em">coach</fo:inline> property, and
this <fo:inline font-family="monospace" font-size="0.8em">Coach</fo:inline> object must have a first and last name.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous example uses two <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> objects to
validate both the team and the coach. These two custom predicates
(<fo:inline font-family="monospace" font-size="0.8em">ValidTeamPredicate</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">ValidCoachPredicate)</fo:inline> are defined in Examples <fo:basic-link internal-destination="jakartackbk-CHP-5-EX-15" text-decoration="underline" color="blue">Example 5-15</fo:basic-link> and <fo:basic-link internal-destination="jakartackbk-CHP-5-EX-16" text-decoration="underline" color="blue">Example 5-16</fo:basic-link>. These
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> objects are passed to the
<fo:inline font-family="monospace" font-size="0.8em">PredicatedMap.decorate( )</fo:inline> method to decorate a
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> with these conditions. The first
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">ValidTeamPredicate</fo:inline>,
validates a <fo:inline font-family="monospace" font-size="0.8em">Team</fo:inline> object to see if it has a
non-<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">name</fo:inline> property.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-5-EX-15"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5-15. A Predicate to validate
 a Team's name property</fo:block><fo:wrapper id="jakartackbk-CHP-5-ITERM-2605"><!--predicates, validation--></fo:wrapper><fo:wrapper id="jakartackbk-CHP-5-ITERM-2606"><!--validation, predicates--></fo:wrapper><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e17950">import org.apache.commons.collections.Predicate;

public class ValidTeamPredicate implements Predicate {

    public boolean evaluate(Object object) {
        Team team = (Team) object;
        return team.getName( ) != null;        
    }

}</fo:block></fo:block></fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-5-EX-16"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5-16. Predicate to validate a Team's coach property</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e17955">import org.apache.commons.collections.Predicate;

public class ValidCoachPredicate implements Predicate {

    public boolean evaluate(Object object) {
        boolean validCoach = false;
        Team team = (Team) object;
        if( team.getCoach( ) != null &amp;&amp; 
            team.getCoach( ).getFirstName( ) != null &amp;&amp;
            team.getCoach( ).getLastName( ) != null ) {
            validCoach = true;
        }
        return validCoach;
    }

}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The second <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">ValidCoachPredicate</fo:inline>, validates a
<fo:inline font-family="monospace" font-size="0.8em">Team</fo:inline> object, checking to see if the
<fo:inline font-family="monospace" font-size="0.8em">coach</fo:inline> property is non-<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>, and
that the coach has a first and last name.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In <fo:basic-link internal-destination="jakartackbk-CHP-5-EX-16" text-decoration="underline" color="blue">Example 5-16</fo:basic-link>, a <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> is
created by combining the <fo:inline font-family="monospace" font-size="0.8em">ValidTeamPredicate</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">ValidCoachPredicate</fo:inline> in an
<fo:inline font-family="monospace" font-size="0.8em">AndPredicate</fo:inline>. A <fo:inline font-family="monospace" font-size="0.8em">HashMap</fo:inline> is then
decorated with <fo:inline font-family="monospace" font-size="0.8em">PredicatedMap.decorate( )</fo:inline>, passing
the <fo:inline font-family="monospace" font-size="0.8em">AndPredicate</fo:inline> in as the predicate to validate
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> values. A few <fo:inline font-family="monospace" font-size="0.8em">Team</fo:inline> objects
are created, all of which are valid with the exception of the Twins
and the Braves, and, as expected, <fo:wrapper id="jakartackbk-CHP-5-ITERM-2607"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2608"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2609"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2610"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2611"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2612"><!----></fo:wrapper>the Twins and Braves cause
<fo:inline font-family="monospace" font-size="0.8em">put( )</fo:inline> to throw an
<fo:inline font-family="monospace" font-size="0.8em">IllegalArgumentException</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-15"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Constraining List Contents</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.15. Constraining List Contents</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-15.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.15.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to constrain objects<fo:wrapper id="jakartackbk-CHP-5-ITERM-2613"><!--Commons
Collections, list
constraints--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2614"><!--collections, list
constraints--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2615"><!--constraints, lists--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2616"><!--objects, Collections, list
constraints--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2617"><!--lists, constraints--></fo:wrapper>
that can be added to a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-15.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.15.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Decorate a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> using
<fo:inline font-family="monospace" font-size="0.8em">PredicatedList</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2618"><!--PredicatedList--></fo:wrapper>.
The following example demonstrates the use of
<fo:inline font-family="monospace" font-size="0.8em">PredicatedList</fo:inline> to create a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline>
that only accepts even <fo:inline font-family="monospace" font-size="0.8em">Integer</fo:inline> objects:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt239">import java.util.*;
import org.apache.commons.collections.list.PredicatedList;
import org.apache.commons.collections.Predicate;
import org.apache.commons.lang.ArrayUtils;

// Create a Predicate that only accepts even Integer objects
Predicate onlyEven = new Predicate( ) {
    public boolean evaluate(Object object) {
        Integer integer = (Integer) object;
        return( integer.intValue( ) % 2 == 0 );
    }
}

List list = PredicatedList.decorate( new ArrayList( ), onlyEven );

list.add( new Integer(1) ); // Will throw IllegalArgumentException
list.add( new Integer(2) );
list.add( new Integer(3) ); // Will throw IllegalArgumentException
list.add( new Integer(4) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In this example, attempting to add an <fo:inline font-family="monospace" font-size="0.8em">Integer</fo:inline> with
an odd value causes an <fo:inline font-family="monospace" font-size="0.8em">IllegalArgumentException</fo:inline>,
but adding an even number does not cause an exception to be thrown.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-15.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.15.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A <fo:inline font-family="monospace" font-size="0.8em">PredicatedList</fo:inline> is very similar to a
<fo:inline font-family="monospace" font-size="0.8em">PredicatedMap</fo:inline>; this decorator works with an
existing <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> and adds inbound validation to a
<fo:inline font-family="monospace" font-size="0.8em">List</fo:inline>. There is no limit to the complexity of the
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> that can be used to provide inbound
validation to a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-15.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.15.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">PredicatedList</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">PredicatedMap</fo:inline> are not the only
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> decorators available in the Jakarta
Commons Collections. Any <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> interface in
the following list can be decorated with a
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>.</fo:block><fo:list-block space-before.optimum="0em" space-before.minimum="0em" space-before.maximum="0em" space-after.optimum="0em" space-after.minimum="0em" space-after.maximum="0em" margin-left="1.0em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e18144"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18145"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                     <fo:inline font-family="monospace" font-size="0.8em">PredicatedBag</fo:inline> decorates a <fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline>.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18154"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                     <fo:inline font-family="monospace" font-size="0.8em">PredicatedBuffer</fo:inline> decorates a
<fo:inline font-family="monospace" font-size="0.8em">Buffer</fo:inline>.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18163"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                     <fo:inline font-family="monospace" font-size="0.8em">PredicatedCollection</fo:inline> decorates a
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18172"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                     <fo:inline font-family="monospace" font-size="0.8em">PredicatedList</fo:inline> decorates a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline>.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18181"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                     <fo:inline font-family="monospace" font-size="0.8em">PredicatedMap</fo:inline> decorates a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18190"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                     <fo:inline font-family="monospace" font-size="0.8em">PredicatedSet</fo:inline> decorates a <fo:inline font-family="monospace" font-size="0.8em">Set</fo:inline>.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18199"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                     <fo:inline font-family="monospace" font-size="0.8em">PredicatedSortedBag</fo:inline> decorates a
<fo:inline font-family="monospace" font-size="0.8em">SortedBag</fo:inline>.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18208"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                     <fo:inline font-family="monospace" font-size="0.8em">PredicatedSortedMap</fo:inline> decorates a
<fo:inline font-family="monospace" font-size="0.8em">SortedMap</fo:inline>.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18217"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                     <fo:inline font-family="monospace" font-size="0.8em">PredicatedSortedSet</fo:inline> decorates a
<fo:inline font-family="monospace" font-size="0.8em">SortedSet</fo:inline>
                  </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about these utilities, see the Jakarta Commons
Collections project page at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/collections</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-16"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Transforming Collections</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.16. Transforming Collections</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-16.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.16.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to perform a<fo:wrapper id="jakartackbk-CHP-5-ITERM-2619"><!--Commons
Collections, transformation--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2620"><!--collections, transformation--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2621"><!--objects, Collections, transformation--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2622"><!--transformation, collections--></fo:wrapper>
transformation using each element in a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-16.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.16.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">CollectionUtils.transform()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2623"><!--CollectionUtils.transform( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2624"><!--methods, CollectionUtils.tranform(
)--></fo:wrapper>. Supply a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> and
a <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> to this method, and this utility
will pass each element in the <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> to that
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>, returning a new
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> containing the results of each
transformation. The following example demonstrates the use of
<fo:inline font-family="monospace" font-size="0.8em">transform( )</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2625"><!--transform( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2626"><!--methods, transform(
)--></fo:wrapper> with a custom
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> object:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt240">import java.util.*;
import org.apache.commons.collections.Transformer;
import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.lang.ArrayUtils;
import org.apache.commons.lang.StringUtils;

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">// Create a transformer that reverses strings.</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Transformer reversingTransformer = new Transformer( ) {</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    public Object transform(Object object) {</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        String string = (String) object;</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        return StringUtils.reverse( string );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    }</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">}</fo:inline>

String[] array = new String[] { "Aznar", "Blair", "Chirac", "Putin", "Bush" };
List stringList = Arrays.asList( ArrayUtils.clone( array ) );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">// Transform each element with a Transformer</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">CollectionUtils.transform( stringList, reversingTransformer );</fo:inline>

System.out.println( "Original: " + ArrayUtils.toString( array ) );
System.out.println( "Transformed: " + 
                    ArrayUtils.toString( stringList.toArray( ) ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example creates a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> of strings,
transforming each element with a <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> that
produces reversed strings. The <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> is transformed
in-place, which means that the contents of the
<fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> are replaced with the output from the
<fo:inline font-family="monospace" font-size="0.8em">transform( )</fo:inline> method of the
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>. As expected, the transformed
<fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> contains reversed strings:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt241">Original: Aznar, Blair, Chirac, Putin, Bush
Transformed: ranzA, rialB, carihC, nituP, hsuB</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">CollectionUtils.transform( )</fo:inline> does not only apply
to <fo:inline font-family="monospace" font-size="0.8em">Lists</fo:inline>; any object implementing the
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> interface can be used with this
utility.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-16.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.16.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>s are another form of functor that
transforms one object into another, leaving the original object
unchanged. <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> is a very straightforward
interface, simply requiring the presence of a <fo:inline font-family="monospace" font-size="0.8em">transform(
)</fo:inline> method. The <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> interface,
like <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>, is augmented by a number of useful
built-in implementations, which can combine the effects of multiple
transformers. One of these <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>
implementations is the <fo:inline font-family="monospace" font-size="0.8em">ChainedTransformer</fo:inline>, which
allows you to create a linear pipeline of transformations. The
following example demonstrates the use of a
<fo:inline font-family="monospace" font-size="0.8em">ChainedTransformer</fo:inline> to transform the contents of a
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt242">import java.util.*;
import org.apache.commons.collections.Transformer;
import org.apache.commons.collections.finctors.ChainedTransformer;
import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.lang.ArrayUtils;
import org.apache.commons.lang.StringUtils;

// Create a transformer that multiplies a number by 10
Transformer multiplyTransform = new Transformer( ) {
    public Object transform(Object object) {
        Integer integer = (Integer) object;
            return new Integer( integer.intValue( ) * 10 );
    }
}

// Create a transformer that subtracts 20 from a number
Transformer subtractTransform = new Transformer( ) {
    public Object transform(Object object) {
        Integer integer = (Integer) object;
            return new Integer( integer.intValue( ) - 20 );
    }
}

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">// Chain the transformers together</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Transformer transformChain = new ChainedTransformer( </fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    new Transformer[] { multiplyTransform, subtractTransform } );</fo:inline>

// Create a List of Integer objects
int[] array = new int[] { 1, 2, 3, 4, 5, 6, 7, 8 };
List intList = Arrays.asList( ArrayUtils.toObject( array ) );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">CollectionUtils.transform( intList, transformChain );</fo:inline>

System.out.println( "Original: " + ArrayUtils.toString( array ) );
System.out.println( "Transformed: " + 
                    ArrayUtils.toString( intList.toArray( ) ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Two transformers, <fo:inline font-family="monospace" font-size="0.8em">multiplyTransform</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">subtractTransform</fo:inline>, are defined as anonymous inner
classes, which implement the <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>
interface. These two <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>s are combined in
a <fo:inline font-family="monospace" font-size="0.8em">ChainedTransformer</fo:inline>. An array of
<fo:inline font-family="monospace" font-size="0.8em">int</fo:inline> primitives is converted to an array of
<fo:inline font-family="monospace" font-size="0.8em">Integer</fo:inline> objects using
<fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toObject( )</fo:inline>. This object array is then
converted to a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline>, which is transformed using
<fo:inline font-family="monospace" font-size="0.8em">CollectionUtils.transform( )</fo:inline>. The transformation
multiples each element by 10 and subtracts 20, producing the
following output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt243">Original: 1, 2, 3, 4, 5, 6, 7, 8
Transformed: -10, 0, 10, 20, 30, 40, 50, 60</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-16.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.16.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In addition to the
<fo:inline font-family="monospace" font-size="0.8em">ChainedTransformer</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2627"><!--ChainedTransformer--></fo:wrapper>,
there<fo:wrapper id="jakartackbk-CHP-5-ITERM-2628"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2629"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2630"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2631"><!----></fo:wrapper> are
a number of other useful <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>
implementations that ship with Commons Collections. The
<fo:inline font-family="monospace" font-size="0.8em">ChainedTransformer</fo:inline> and other
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> implementations are discussed in depth
in <fo:basic-link internal-destination="jakartackbk-CHP-4" text-decoration="underline" color="blue">Chapter 4</fo:basic-link>. For more information about the
various implementations of <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>, see the
Commons Collections project (<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/collections</fo:inline>).</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-17"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Creating a Least Recently Used Cache</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.17. Creating a Least Recently Used Cache</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-17.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.17.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to present common data to many <fo:wrapper id="jakartackbk-CHP-5-ITERM-2632"><!--Commons
Collections, caches--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2633"><!--collections, caches--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2634"><!--objects, Collections, caches--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2635"><!--caches--></fo:wrapper>clients, and you want
to cache this common data in a data structure of limited size,
evicting the least recently used entry when the maximum size limit
has been reached.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-17.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.17.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">LRUMap</fo:inline>—a fixed size map that uses the
least recently used algorithm to evict entries once the maximum size
has been reached. The least recently used algorithm evicts the
element that has not been used for the longest amount of time. The
following example demonstrates the use of an
<fo:inline font-family="monospace" font-size="0.8em">LRUMap</fo:inline> to store stock quotes:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt244">import java.util.Map;
import org.apache.commons.collections.map.LRUMap;

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">cache = new LRUMap( 5 );</fo:inline>
       
// Populate the cache with 5 stock prices
cache.put( "MSFT", new Float( 0.03 ) );
cache.put( "TSC", new Float( 0.001 ) );
cache.put( "LU", new Float( 23.30 ) );
cache.put( "CSCO", new Float( 242.20 ) );
cache.put( "P", new Float( 10.23 ) );
        
// Now use some of the entries in the cache
Float cscoPrice  = (Float) cache.get( "CSCO" );
Float msPrice = (Float) cache.get( "MSFT" );
Float tscPrice = (Float) cache.get( "TSC" );
Float luPrice = (Float) cache.get( "LU" );
Float pPrice = (Float) cache.get( "P" );
Float msPrice2 = (Float) cache.get( "MSFT" );
       
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">// Add another price to the Map, this should kick out the LRU item.</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">cache.put( "AA", new Float( 203.20 ) );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">     </fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">// CSCO was the first price requested, it is therefore the</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">// least recently used.</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">if( !cache.containsKey("CSCO") ) {</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    System.out.println( "As expected CSCO was discarded" );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">}</fo:inline>
            </fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Since the <fo:inline font-family="monospace" font-size="0.8em">LRUMap</fo:inline> created in this example can only
hold five elements, the "CSCO"
quote is evicted when "AA" is added
to the map because it is the "least recently
used."</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-17.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.17.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">An <fo:inline font-family="monospace" font-size="0.8em">LRUMap</fo:inline> is appropriate when a system presents
common data to a number of clients. For example, if a web site
displays breaking news stories, objects representing these stories
can be stored in a size-limited cache with an LRU eviction policy,
such as <fo:inline font-family="monospace" font-size="0.8em">LRUMap</fo:inline>. Demand for objects that represent
breaking news stories can be very time sensitive; many customers read
the same story at the same time. Your application server has a
size-limited <fo:inline font-family="monospace" font-size="0.8em">LRUMap</fo:inline> that holds 100 news stories,
and, when a new story is added, the <fo:inline font-family="monospace" font-size="0.8em">LRUMap</fo:inline> evicts
the stalest story in the <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-17.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.17.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">LRUMap</fo:inline> is an ideal solution for a cache, but,
if your application needs to make heavy use of caching, take a look
at the following open source cache implementations—OSCache or
JCS. For more information about OSCache, see the OpenSymphony OSCache
project page (<fo:inline font-family="monospace" font-size="0.8em">http://www.opensymphony.com/oscache/</fo:inline>). The
Java Caching System (JCS) was an offshoot of the Jakarta Turbine
project; for more information about JCS, see the JCS project page
(<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/turbine/jcs/</fo:inline>).</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-18"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Using a Lazy Map</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.18. Using a Lazy Map</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-18.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.18.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> that can <fo:wrapper id="jakartackbk-CHP-5-ITERM-2636"><!--Commons
Collections, lazy maps--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2637"><!--collections, lazy
maps--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2638"><!--objects, Collections, lazy
maps--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2639"><!--lazy maps--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2640"><!--mapping, lazy
maps--></fo:wrapper>populate a value
<fo:wrapper id="jakartackbk-CHP-5-ITERM-2641"><!--populating, values--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2642"><!--values, populating--></fo:wrapper>when
its corresponding key is requested.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-18.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.18.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Decorate a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> with <fo:inline font-family="monospace" font-size="0.8em">LazyMap</fo:inline>.
Attempting to retrieve a value with a key that is not in a
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> decorated with <fo:inline font-family="monospace" font-size="0.8em">LazyMap</fo:inline> will
trigger the creation of a value by a <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>
associated with this <fo:inline font-family="monospace" font-size="0.8em">LazyMap</fo:inline>. The following
example decorates a <fo:inline font-family="monospace" font-size="0.8em">HashMap</fo:inline> with a
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> that reverses strings; when a key is
requested, a value is created and put into the <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>
using this <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt245">import java.util.*;
import org.apache.commons.collections.Transformer;
import org.apache.commons.collections.map.LazyMap;
import org.apache.commons.lang.StringUtils;

// Create a Transformer to reverse strings - defined below
Transformer reverseString = new Transformer( ) {
    public Object transform( Object object ) {
        String name = (String) object;
        String reverse = StringUtils.reverse( name );
        return reverse;
    }
}

// Create a LazyMap called lazyNames, which uses the above Transformer
Map names = new HashMap( );
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Map lazyNames = LazyMap.decorate( names, reverseString );</fo:inline>

// Get and print two names
String name = (String) lazyNames.get( "Thomas" );
System.out.println( "Key: Thomas, Value: " + name );

name = (String) lazyNames.get( "Susan" );
System.out.println( "Key: Susan, Value: " + name );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Whenever <fo:inline font-family="monospace" font-size="0.8em">get( )</fo:inline> is called, the decorated
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> passes the requested key to a
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline>, and, in this case, a reversed string
is put into a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> as a value. The previous example
requests two strings and prints the following output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt246">Key: Thomas, Value: samohT
Key: Susan, Value: nasuS</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-18.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.18.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">LazyMap</fo:inline> works best when a key is a symbol or an
abbreviation for a more complex object. If you are working with a
database, you could create a <fo:inline font-family="monospace" font-size="0.8em">LazyMap</fo:inline> that
retrieves objects by a primary key value; in this case, the
<fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> simply retrieves a record from a
database table using the supplied key. Another example that springs
to mind is a stock quote; in the stock exchange, a company is
represented as a series of characters:
"YHOO" represents the company
Yahoo!, Inc., and "TSC" represents
TheStreet.com. If your system deals with a quote feed, use a
<fo:inline font-family="monospace" font-size="0.8em">LazyMap</fo:inline> to cache frequently used entries. <fo:basic-link internal-destination="jakartackbk-CHP-5-EX-17" text-decoration="underline" color="blue">Example 5-17</fo:basic-link> uses a <fo:inline font-family="monospace" font-size="0.8em">LazyMap</fo:inline> to create a
cache populated on demand, and it also demonstrates the
<fo:inline font-family="monospace" font-size="0.8em">LRUMap</fo:inline>—a fixed-size implementation of the
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> introduced in <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-17" text-decoration="underline" color="blue">Recipe 5.17</fo:basic-link>.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-5-EX-17"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5-17. Example using a LazyMap</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e18755">package com.discursive.jccook.collections.lazy;

import java.net.URL;
import java.util.Map;

import org.apache.commons.collections.map.LRUMap;
import org.apache.commons.collections.map.LazyMap;

public class LazyMapExample {

    Map stockQuotes;

    public static void main(String[] args) throws Exception {
        LazyMapExample example = new LazyMapExample( );
        example.start( );
    }
    
    public void start( ) throws Exception {
        
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        StockQuoteTransformer sqTransformer = new StockQuoteTransformer( );</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        sqTransformer.setQuoteURL( new URL("http://quotes.company.com") );</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        sqTransformer.setTimeout( 500 );</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold"> </fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        // Create a Least Recently Used Map with max size = 5       </fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        stockQuotes = new LRUMap( 5 );</fo:inline>

                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        // Decorate the LRUMap with the StockQuoteTransformer</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        stockQuotes = LazyMap.decorate( stockQuotes, sqTransformer );</fo:inline>
        
        // Now use some of the entries in the cache
        Float price = (Float) stockQuotes.get( "CSCO" );
        price = (Float) stockQuotes.get( "MSFT" );
        price = (Float) stockQuotes.get( "TSC" );
        price = (Float) stockQuotes.get( "TSC" );
        price = (Float) stockQuotes.get( "LU" );
        price = (Float) stockQuotes.get( "P" );
        price = (Float) stockQuotes.get( "P" );
        price = (Float) stockQuotes.get( "MSFT" );
        price = (Float) stockQuotes.get( "LU" );
        
        // Request another price to the Map, this should kick out the LRU item.
        price = (Float) stockQuotes.get( "AA" );
        
        // CSCO was the first price requested, it is therefore the
        // least recently used.
        if( !stockQuotes.containsKey("CSCO") ) {
            System.out.println( "As expected CSCO was discarded" );
        }
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> in <fo:basic-link internal-destination="jakartackbk-CHP-5-EX-17" text-decoration="underline" color="blue">Example 5-17</fo:basic-link> is
an object that takes a string and hits a URL using Jakarta
HttpClient—a utility introduced in <fo:basic-link internal-destination="jakartackbk-CHP-11" text-decoration="underline" color="blue">Chapter 11</fo:basic-link>. Every time a new symbol is encountered,
this <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> creates another thread with a
timeout and hits a "quote server"
that is configured to return the latest price for that
company's symbol. <fo:basic-link internal-destination="jakartackbk-CHP-5-EX-18" text-decoration="underline" color="blue">Example 5-18</fo:basic-link>
defines a
<fo:inline font-family="monospace" font-size="0.8em">StockQuoteTransformer</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2643"><!--StockQuoteTransformer--></fo:wrapper>
that retrieves a quote by passing a stock symbol as a URL parameter.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-5-EX-18"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5-18. A StockQuoteTransformer</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e18808">package com.discursive.jccook.collections.lazy;

import java.net.URL;

import org.apache.commons.collections.Transformer;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.HttpURL;
import org.apache.commons.httpclient.methods.GetMethod;

public class StockQuoteTransformer implements Transformer {

    protected URL quoteURL;
    protected long timeout;

    public Object transform(Object symbol) {
        QuoteRetriever retriever = new QuoteRetriever( (String) symbol );
        
        try {
            Thread retrieveThread = new Thread( retriever );
            retrieveThread.start( );
            retrieveThread.join( timeout );
        } catch( InterruptedException ie ) {
            System.out.println( "Quote request timed out.");
        }
        
        return retriever.getResult( );
    }

    public URL getQuoteURL( ) { return quoteURL; }
    public void setQuoteURL(URL url) { quoteURL = url; }

    public long getTimeout( ) { return timeout; }
    public void setTimeout(long l) { timeout = l; }
    
    public class QuoteRetriever implements Runnable {
        private String symbol;
        private Float result = new Float( Float.NaN );
        
        public QuoteRetriever(String symbol) {
            this.symbol = symbol;
        }
        
        public Float getResult( ) {
            return result;
        }
        
        public void run( ) {
            HttpClient client = new HttpClient( );
            try {
                HttpURL url = new HttpURL( quoteURL.toString( ) );
                url.setQuery( "symbol", symbol );
                
                GetMethod getMethod = new GetMethod( url.toString( ) );
                client.executeMethod( getMethod );
                String response = getMethod.getResponseBodyAsString( );
                
                result = new Float( response );
            } catch( Exception e ) {
                System.out.println( "Error retrieving quote" );
            }
        }
        
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The point of this example is to demonstrate the power of decorating
an <fo:inline font-family="monospace" font-size="0.8em">LRUMap</fo:inline> with <fo:inline font-family="monospace" font-size="0.8em">LazyMap</fo:inline> and to
write a <fo:inline font-family="monospace" font-size="0.8em">Transformer</fo:inline> that can fetch a piece of data
from another server, not that the
<fo:inline font-family="monospace" font-size="0.8em">StockQuoteTransformer</fo:inline> uses Jakarta HttpClient.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-18.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.18.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about Jakarta HttpClient,<fo:wrapper id="jakartackbk-CHP-5-ITERM-2644"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2645"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2646"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2647"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2648"><!----></fo:wrapper> see <fo:basic-link internal-destination="jakartackbk-CHP-11" text-decoration="underline" color="blue">Chapter 11</fo:basic-link>. For more information about the
<fo:inline font-family="monospace" font-size="0.8em">LRUMap</fo:inline>, see <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-17" text-decoration="underline" color="blue">Recipe 5.17</fo:basic-link>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-19"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Counting Objects in a Collection</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.19. Counting Objects in a Collection</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-19.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.19.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to count the number <fo:wrapper id="jakartackbk-CHP-5-ITERM-2649"><!--Commons
Collections, counting--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2650"><!--collections, counting--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2651"><!--objects, Collections, counting--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2652"><!--counting objects in
collections--></fo:wrapper>of times an object occurs in a
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-19.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.19.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">CollectionUtils</fo:inline> methods <fo:inline font-family="monospace" font-size="0.8em">countMatches()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2653"><!--countMatches( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2654"><!--methods, countMatches(
)--></fo:wrapper> or <fo:inline font-family="monospace" font-size="0.8em">cardinality()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2655"><!--cardinality( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2656"><!--methods, cardinality(
)--></fo:wrapper>. <fo:inline font-family="monospace" font-size="0.8em">countMatches( )</fo:inline> takes a
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> and a <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>,
returning the number of elements that satisfy that
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>. <fo:inline font-family="monospace" font-size="0.8em">cardinality( )</fo:inline> takes
an <fo:inline font-family="monospace" font-size="0.8em">Object</fo:inline> and a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>,
returning the number of items equal to the supplied
<fo:inline font-family="monospace" font-size="0.8em">Object</fo:inline>. The following example demonstrates the use
of both methods to count the number of times an
<fo:inline font-family="monospace" font-size="0.8em">Object</fo:inline> occurs in a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt247">import java.util.*;
import org.apache.commons.collections.Predicate;
import org.apache.commons.collections.functors.EqualPredicate;
import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.lang.ArrayUtils;

String[] array = new String[] { "A", "B", "C", "C", "B", "B" };
List stringList = Arrays.asList( array );

Predicate equalPredicate = new EqualPredicate("C");

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">int numberCs = CollectionUtils.countMatches( stringList, equalsPredicate );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">int numberBs = CollectionUtils.cardinality( "B", stringList );</fo:inline>

System.out.println( "List: " + ArraUtils.toString( array ) );
System.out.println( "Number of Cs: " + numberCs );
System.out.println( "Number of Bs: " + numberBs );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">When used with the <fo:inline font-family="monospace" font-size="0.8em">EqualPredicate</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">countMatches( )</fo:inline> performs the same function as
<fo:inline font-family="monospace" font-size="0.8em">cardinality( )</fo:inline>. This example produces the
following output.</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt248">List: A, B, C, C, B, B
Number of Cs: 2
Number of Bs: 3</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-19.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.19.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">countMatches( )</fo:inline> is not limited to counting the
number of elements in a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> equal to an
object; this method can also be used to count objects that meet any
arbitrary <fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>. For example, you could count
the number of elements in a list that match a composite predicate or
a custom predicate. The following example demonstrates the use of
<fo:inline font-family="monospace" font-size="0.8em">countMatches( )</fo:inline> to count the number of objects
that match a custom predicate:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt249">import java.util.*;
import org.apache.commons.collections.Predicate;
import org.apache.commons.collections.functors.EqualPredicate;
import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.lang.ArrayUtils;

int[] array = new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
List intList = Arrays.asList( ArrayUtils.toObject( array ) );

Predicate isEvenPredicate = new Predicate( ) {
    public boolean evaluate(Object object) {
        Integer value = (Integer) object;
        return ( (value.intValue( ) % 2) == 0 );
    }
}

int numberEven = CollectionUtils.countMatches( intList, isEvenPredicate );

System.out.println( "List: " + ArrayUtils.toString( array ) );
System.out.println( "Number of Even Numbers: " + numberEven );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example counts the number of even numbers in a
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>; the <fo:inline font-family="monospace" font-size="0.8em">isEvenPredicate</fo:inline>
is an anonymous inner class that implements the
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> interface. This
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> is passed to
<fo:inline font-family="monospace" font-size="0.8em">CollectionUtils.countMatches( )</fo:inline>, producing the
following output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt250">List: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
Number of Even Numbers: 5</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">CollectionUtils</fo:inline> can also return a frequency
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> for every object in a
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>; calling
<fo:inline font-family="monospace" font-size="0.8em">CollectionUtils.getCardinalityMap( )</fo:inline> returns such
a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>. The keys of this <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> are
the distinct objects in the <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>, and the
values are <fo:inline font-family="monospace" font-size="0.8em">Integer</fo:inline> objects representing the number
of times each object appears in the <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>.
The following example demonstrates the creation of a frequency
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> from a list of strings:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt251">import java.util.*;
import org.apache.commons.collections.Predicate;
import org.apache.commons.collections.functors.EqualPredicate;
import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.lang.ArrayUtils;

String[] array = new String[] { "Red", "Blue", "Blue", "Yellow", "Red", 
"Black" };
List stringList = Arrays.asList( arrays );

Map cardinalityMap = CollectionUtils.getCardinalityMap( stringList );

System.out.println( "List: " + ArrayUtils.toString( array ) );
System.out.println( "Cardinality Map:\n" + MapUtils.
debugPrint( cardinalityMap ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> array is converted to a
<fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> of strings, and a frequency
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> is created. This <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> is
printed using <fo:inline font-family="monospace" font-size="0.8em">MapUtils.debugPrint(
)</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2657"><!--MapUtils.debugPrint( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2658"><!--methods, MapUtils.debugPrint(
)--></fo:wrapper>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt252">List: Red, Blue, Blue, Yellow, Red, Black
Cardinality Map:
{
    Red = 3
    Blue = 2
    Yellow = 1
    Black = 1
}</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-19.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.19.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you are interested in the cardinality of objects in a
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>, consider using a
<fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline>. A <fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline> is a
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> that revolves around the<fo:wrapper id="jakartackbk-CHP-5-ITERM-2659"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2660"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2661"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2662"><!----></fo:wrapper> cardinality of
objects it contains. <fo:inline font-family="monospace" font-size="0.8em">Bag</fo:inline> objects are described in
<fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-6" text-decoration="underline" color="blue">Recipe 5.6</fo:basic-link>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-20"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Performing Set Operations</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.20. Performing Set Operations</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-20.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.20.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to perform set operations <fo:wrapper id="jakartackbk-CHP-5-ITERM-2663"><!--Commons
Collections, set
operations--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2664"><!--collections, set
operations--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2665"><!--objects, Collections, set
operations--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2666"><!--set
operations--></fo:wrapper>to find the
<fo:wrapper id="jakartackbk-CHP-5-ITERM-2667"><!--unions, collections--></fo:wrapper>union,
<fo:wrapper id="jakartackbk-CHP-5-ITERM-2668"><!--intersections,
collections--></fo:wrapper>intersection,
<fo:wrapper id="jakartackbk-CHP-5-ITERM-2669"><!--disjunctions,
collections--></fo:wrapper>disjunction, and difference of two
collections.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-20.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.20.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use one of four <fo:inline font-family="monospace" font-size="0.8em">CollectionUtils</fo:inline> methods to perform
set operations—<fo:inline font-family="monospace" font-size="0.8em">union( )</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">intersection( )</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">disjunction()</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">subtract(
)</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2670"><!--subtract( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2671"><!--methods, subtract(
)--></fo:wrapper>. <fo:basic-link internal-destination="jakartackbk-CHP-5-EX-19" text-decoration="underline" color="blue">Example 5-19</fo:basic-link> demonstrates
the use of these four methods with two
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>s.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-5-EX-19"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5-19. Using CollectionUtils union( ), intersection( ), disjunction( ), and subtract( )</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e19183">import java.util.*;

String[] arrayA = new String[] { "1", "2", "3", "3", "4", "5" };
String[] arrayB = new String[] { "3", "4", "4", "5", "6", "7" };

List a = Arrays.asList( arrayA );
List b = Arrays.asList( arrayB );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Collection union = CollectionUtils.union( a, b );</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Collection intersection = CollectionUtils.intersection( a, b );</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Collection disjunction = CollectionUtils.disjunction( a, b );</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Collection subtract = CollectionUtils.subtract( a, b );</fo:inline>

Collections.sort( union );
Collections.sort( intersection );
Collections.sort( disjunction );
Collections.sort( subtract );

System.out.println( "A: " + ArrayUtils.toString( a.toArray( ) ) );
System.out.println( "B: " + ArrayUtils.toString( b.toArray( ) ) );
System.out.println( "Union: " + ArrayUtils.toString( union.toArray( ) ) );
System.out.println( "Intersection: " + 
                    ArrayUtils.toString( intersection.toArray( ) ) );
System.out.println( "Disjunction: " + 
                    ArrayUtils.toString( disjunction.toArray( ) ) );
System.out.println( "Subtract: " + ArrayUtils.toString( subtract.toArray( ) ) );</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous example performs these four operations on two
<fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> objects, <fo:inline font-family="monospace" font-size="0.8em">a</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">b</fo:inline>, printing the results with
<fo:inline font-family="monospace" font-size="0.8em">ArrayUtils.toString( )</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt253">A: {1,2,2,2,3,3,4,5}
B: {3,4,4,5,6,7}
Union: {1,2,2,2,3,3,4,4,5,6,7}
Intersection: {3,4,5}
Disjunction: {1,2,2,2,3,4,6,7}
Subtract: {1,2,2,2,3}</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-20.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.20.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Pay close attention to how these four functions deal with
cardinality. These four set operations on
<fo:inline font-family="monospace" font-size="0.8em">CollectionUtils</fo:inline>—<fo:inline font-family="monospace" font-size="0.8em">union( )</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">intersection( )</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">disjunction(
)</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">subtraction( )</fo:inline>—all respect
the cardinality of objects in both <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>s.
Take, for example, the results of the union of <fo:inline font-family="monospace" font-size="0.8em">a</fo:inline>
and <fo:inline font-family="monospace" font-size="0.8em">b</fo:inline> in the Solution; the union of
<fo:inline font-family="monospace" font-size="0.8em">a</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">b</fo:inline> contains two
"3" elements and two
"4" elements. The cardinality of an
element in a union is the maximum cardinality of the element in both
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>s. On the other hand, the cardinality of
an element in an intersection is the minimum cardinality of the
element in both <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline>s; there is only one
"3" element and one
"4" element in the intersection of
<fo:inline font-family="monospace" font-size="0.8em">a</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">b</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-5-FIG-3" text-decoration="underline" color="blue">Figure 5-3</fo:basic-link> illustrates each set operation with a
Venn diagram. "A union B" is the
combination of A and B, and "A intersection
B" is the common overlap of A and B.
"A subtract B" is all elements only
in A, and "A disjunction B" is all
elements in either A or B but not both.</fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-5-FIG-3"><fo:block id="I_5_tt254"><fo:external-graphic src="/Users/tobrien/Library/Code/common-java-cookbook/content/target/classes/docbook/figs/print/jccb_0503.pdf" width="202px" height="188px" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:application/pdf"/></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-previous.within-column="always">Figure 5-3. Venn diagrams for


 four set operations in CollectionUtils</fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-21"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Retrieving Map Values Without Casting</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.21. Retrieving Map Values Without Casting</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-21.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.21.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to retrieve a primitive<fo:wrapper id="jakartackbk-CHP-5-ITERM-2676"><!--Commons
Collections, casting--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2677"><!--collections, casting--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2678"><!--objects, Collections, casting--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2679"><!--casting--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2680"><!--mapping, casting--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2681"><!--values, casting--></fo:wrapper>
               <fo:inline font-family="monospace" font-size="0.8em">double</fo:inline> from a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>, but the
value is stored as a <fo:inline font-family="monospace" font-size="0.8em">Double</fo:inline> object.</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-21.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.21.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">MapUtils.getDoubleValue()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2682"><!--MapUtils.getDoubleValue( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-5-ITERM-2683"><!--methods, mapUtils.getDoubleValue(
)--></fo:wrapper> to retrieve a <fo:inline font-family="monospace" font-size="0.8em">Double</fo:inline>
object from a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> as a <fo:inline font-family="monospace" font-size="0.8em">double</fo:inline>
primitive. The following example demonstrates
<fo:inline font-family="monospace" font-size="0.8em">getDoubleValue( )</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt255">import java.util.*;
import org.apache.commons.lang.ArrayUtils;
import org.apache.commons.collections.MapUtils;

Object[] mapArray = new Object[][] {
    { "A", new Double( 2.0 ) },
    { "B", new Double( 0.223242 ) },
    { "C", new Double( 2828e4 ) },
    { "D", "GARBAGE"} };

Map numberMap = ArrayUtils.toMap( mapArray );

double a = MapUtils.getDoubleValue( numberMap, "A" );
double b = MapUtils.getDoubleValue( numberMap, "B" );
double c = MapUtils.getDoubleValue( numberMap, "C" );
double d = MapUtils.getDoubleValue( numberMap, "D", new Double( Double.NaN ) );

System.out.println( "A = " + a );
System.out.println( "B = " + b );
System.out.println( "C = " + c );
System.out.println( "D = " + d );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This simple utility retrieves four doubles from
<fo:inline font-family="monospace" font-size="0.8em">numberMap</fo:inline>; the fourth call to
<fo:inline font-family="monospace" font-size="0.8em">getDoubleValue( )</fo:inline> supplies a default
<fo:inline font-family="monospace" font-size="0.8em">double</fo:inline> to be returned if the
value's type cannot be converted to a
<fo:inline font-family="monospace" font-size="0.8em">double</fo:inline>. This example produces the following
output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt256">A = 2.0
B = 0.223242
C = 28280.0
D = NaN</fo:block></fo:block><fo:block id="jakartackbk-CHP-5-SECT-21.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">5.21.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This utility is laughably simple, but if you are working with
numbers, this utility can help you avoid casting and calling
<fo:inline font-family="monospace" font-size="0.8em">doubleValue( )</fo:inline>. In addition to
<fo:inline font-family="monospace" font-size="0.8em">MapUtils.getDoubleValue( )</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">MapUtils</fo:inline> also contains the
<fo:inline font-family="monospace" font-size="0.8em">MapUtils.getDouble( )</fo:inline> method, which simply returns
a <fo:inline font-family="monospace" font-size="0.8em">Double</fo:inline> object. The following example
demonstrates the various utility methods for obtaining primitives and
their corresponding object types from a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_5_tt257">import java.util.*;
import org.apache.commons.collections.MapUtils;

Map map = new HashMap( );
map.put( "A", new Long( 3.4 ) );
map.put( "B", new Short( 33 ) );
map.put( "C", "BLAH" );

Number aNumber = MapUtils.getNumber( map, "A" );
Long aLong = MapUtils.getLong( map, "A" );

long a = MapUtils.getLongValue( map, "A" );
short b = MapUtils.getShortValue( map, "B" );
Byte c = MapUtils.getByte( map, "C", Byte.MAX_VALUE );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">As shown in the previous example, <fo:inline font-family="monospace" font-size="0.8em">MapUtils</fo:inline>
contains utility methods for working with <fo:inline font-family="monospace" font-size="0.8em">bytes</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">shorts</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">long</fo:inline>, among other
primitive types.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-5-TABLE-1" text-decoration="underline" color="blue">Table 5-1</fo:basic-link> details several related methods for
<fo:inline font-family="monospace" font-size="0.8em">Boolean</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">Double</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">Number</fo:inline>, which can retrieve objects and primitive
values from a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>. While <fo:basic-link internal-destination="jakartackbk-CHP-5-TABLE-1" text-decoration="underline" color="blue">Table 5-1</fo:basic-link> deals with <fo:inline font-family="monospace" font-size="0.8em">Boolean</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">Double</fo:inline>, you should be aware that similar methods
exist for all primitive types and corresponding objects.</fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-5-TABLE-1"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 5-1. Methods on MapUtils</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-left-style="solid" border-right-style="solid" border-top-style="solid" border-bottom-style="solid" border-left-width="0.1pt" border-right-width="0.1pt" border-top-width="0.1pt" border-bottom-width="0.1pt" border-left-color="black" border-right-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="17.4cm"><fo:table-column column-number="1"/><fo:table-column column-number="2"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Return type</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Signature</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">Boolean</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">getBoolean(Map map, Object key)getBoolean(Map map, Object
key, Boolean default)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">boolean</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">getBooleanValue(Map map, Object key)getBooleanBalue(Map map,
Object key, boolean default)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">Double</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">getDouble(Map map, Object key)getDouble(Map map, Object key,
Double default)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">double</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">getDoubleValue(Map map, Object key)getDoubleValue(Map map,
Object key, double default)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">Number</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">getNumber(Map map, Object key)getNumber(Map map, Object key,
Number default)</fo:inline>
                              <fo:wrapper id="jakartackbk-CHP-5-ITERM-2684"><!----></fo:wrapper> 
                              <fo:wrapper id="jakartackbk-CHP-5-ITERM-2685"><!----></fo:wrapper> 
                              <fo:wrapper id="jakartackbk-CHP-5-ITERM-2686"><!----></fo:wrapper> 
                              <fo:wrapper id="jakartackbk-CHP-5-ITERM-2687"><!----></fo:wrapper> 
                              <fo:wrapper id="jakartackbk-CHP-5-ITERM-2688"><!----></fo:wrapper> 
                              <fo:wrapper id="jakartackbk-CHP-5-ITERM-2689"><!----></fo:wrapper>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="false" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>XML</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>XML</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"/></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif" margin-left="0pc"/></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block id="jakartackbk-CHP-6"><fo:block font-family="serif"><fo:block margin-left="0pc"><fo:block text-align="left" font-weight="bold" font-size="21.6pt"><fo:block keep-with-next.within-column="always" space-before.optimum="12pt" space-before.minimum="12pt * 0.8" space-before.maximum="12pt * 1.2" hyphenate="false" text-align="left" start-indent="0pc" word-spacing="-0.1em" letter-spacing="-0.05em" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 6. XML</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="ch06-2-fm2xml"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Introduction</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.1. Introduction</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Extensible Markup Language (XML) went from a risky buzzword to a
ubiquitous data format in a few short years, bringing with it an
overwhelming array of tools, standards, APIs, and technologies. World
Wide Web Consortium's (W3C) publication of the
initial XML recommendation in 1998 redefined the way information is
represented, stored, and exchanged, and it seems that a new standard
involving XML is created every month: XSL, XML Query, XPointer,
XPath, XLink, XHTML, SVG, MathML, XForms, XML Encryption, SOAP,
XML-RPC, WSDL, XML Schema, RelaxNG, TREX, and the list continues.
Such standards are accompanied by an almost endless series of
standard APIs, such as SAX and DOM. To further complicate matters,
Sun Microsystems has created a number of Java APIs to handle most
everything XML, including JAXP, TrAX, JAXB, JAXM, JAX-RPC, JAXR, and
SAAJ. It would take years to become an expert in each of these
standards, tools, and APIs, and, because of this, most programmers
focus on the tip of the iceberg: SAX, DOM, a little XPath, DTD, and
XML Schema. This chapter focuses on parsing and data binding; reading
a XML document and creating an XML document from a set of objects.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">More than a few developers have noted that parsing a simple XML
document with SAX or DOM can be an unreasonably complex task,
especially if one is simply attempting to create a prototype. With
SAX, you need to write a series of callback methods like
<fo:inline font-family="monospace" font-size="0.8em">startElement( )</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">endElement()</fo:inline>, and in DOM, you need to write a not-trivial amount of
code to traverse a <fo:inline font-family="monospace" font-size="0.8em">Document</fo:inline> object. It
isn't the case that you should never write a DOM or
SAX parser; there are some systems that call for this level of
control and complexity, and a thorough knowledge of SAX, DOM, and
JDOM is essential knowledge for any developer. This chapter
isn't looking to unseat the reigning standards;
instead, this chapter simply introduces you to some tools that sit on
top of standard parsers and do some parsing dirty work in specific
situations. A very common task in any Java program is reading in an
XML document and creating a set of objects, and Commons Digester and
Commons Betwixt make this task as simple as it should be.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">With almost a trillion different ways to parse or create a simple XML
document, you can easily overlook a tool that might save days of
programming time. Commons Digester, Commons Betwixt, Zeus, Quick,
Apache XMLBeans, JAXB, XStream, JiBX, Exolab Castor, and others are
all projects and products that deal with the simple task of
serializing objects to XML and unmarshalling XML to objects. This
field is crowded, and a number of these technologies have great
promises and great flaws. Just as this chapter was not written to
convince you to abandon SAX and DOM, this chapter was also not
written to sell Digester or Betwixt over all other options. If you
don't like what you see in this chapter, there are a
variety of options, and while the abundance of choice is
overwhelming, open source is about having options and choices. This
chapter introduces you to two battle-tested options from Jakarta
Commons—Jakarta Commons Digester and Jakarta Commons Betwixt.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Commons Digester makes the task of parsing XML exceedingly
straightforward; with the Digester in hand, you can map an XML
document to a series of objects using a simple set of rules and a
small amount of Java code. If you use Digester with an XML rule set,
it is possible to write a system that parses an XML document with
three or four lines of compiled code and no hardcoded logic dealing
with document structure. Commons Betwixt maps beans to XML documents
and vice versa. The <fo:inline font-family="monospace" font-size="0.8em">BeanWriter</fo:inline> class can be used
to serialize an object as an XML document, and the
<fo:inline font-family="monospace" font-size="0.8em">BeanReader</fo:inline> can be used to read an XML document.
The XML produced by Betwixt can be customized with an XML document
that controls such things as whether properties are to be serialized
as attributes or elements, how Collections are handled, or how
property names are converted to element or attribute names.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about XML data binding, pick up a copy of Brett
McLaughlin's <fo:inline font-style="italic">Java &amp; XML Data Binding</fo:inline>
(O'Reilly) or <fo:inline font-style="italic">Java &amp; XML</fo:inline>
(O'Reilly). For more information about
XML, see the W3C at <fo:inline font-family="monospace" font-size="0.8em">http://www.w3c.org</fo:inline>. For a list of
technologies, take a look at Ronald Bourret's
<fo:inline font-style="italic">XML Data Binding Resources</fo:inline> (<fo:inline font-family="monospace" font-size="0.8em">http://www.rpbourret.com/xml/XMLDataBinding.htm</fo:inline>).</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Obtaining Jakarta Commons Digester</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.1. Obtaining Jakarta Commons Digester</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-1.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.1.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to use Jakarta <fo:wrapper id="jakartackbk-CHP-6-ITERM-2690"><!--Commons
Digester, downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2691"><!--downloading, Commons
Digester--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2692"><!--XML (Extensible
Markup Language), Commons Digester,
downloading--></fo:wrapper>Commons Digester to quickly parse
an XML document into a set of objects.</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-1.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.1.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You must download the latest version of Commons Digester and place
the Commons Digester JAR<fo:inline font-family="monospace" font-size="0.8em"> </fo:inline>in your
project's classpath. Following the steps outlined in
<fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1" text-decoration="underline" color="blue">Recipe 1.1</fo:basic-link>, download Commons Digester 1.5
instead of Commons Lang. Uncompress the distribution archive and
place <fo:inline font-family="monospace" font-size="0.8em">commons-digester.jar</fo:inline> in your classpath.
Commons Digester depends on Commons BeanUtils, Commons Logging, and
Commons Collections. To download dependencies, see <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-2" text-decoration="underline" color="blue">Recipe 3.2</fo:basic-link>, <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-1" text-decoration="underline" color="blue">Recipe 5.1</fo:basic-link>, and <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-9" text-decoration="underline" color="blue">Recipe 7.9</fo:basic-link>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-1.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.1.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Commons Digester started as a part of Jakarta Struts, and it was
moved to the Jakarta Commons project by way of the Commons Sandbox in
early 2001. Digester is the mechanism Struts uses to read XML
configuration; <fo:inline font-family="monospace" font-size="0.8em">struts-config.xml</fo:inline> is the main
configuration point for Jakarta Struts, and it is converted to a set
of objects using the Digester. The Digester's most
straightforward application is the mapping of an XML document to a
set of Java objects, but, as shown in this chapter and <fo:basic-link internal-destination="jakartackbk-CHP-12" text-decoration="underline" color="blue">Chapter 12</fo:basic-link>, Digester can also be used to create a
simple XML command language and search index. Digester is a shortcut
for creating a SAX parser. Almost anything you can do with a SAX
parser can be done with Jakarta Commons Digester.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you have a Maven project that needs to use Commons Digester, add a
dependency on Commons Digester 1.5 with the following section in
<fo:inline font-family="monospace" font-size="0.8em">project.xml</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt258">&lt;dependencies&gt;
  &lt;dependency&gt;
    &lt;id&gt;commons-digester&lt;/id&gt;
    &lt;version&gt;1.5&lt;/version&gt;
  &lt;/dependency&gt;
  ....other dependencies...
&lt;/dependencies&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-1.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.1.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about Commons Digester, see the Commons Digester
project page at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/digester</fo:inline>.
For information about using the Digester to create a Lucene index,
see <fo:basic-link internal-destination="jakartackbk-CHP-12" text-decoration="underline" color="blue">Chapter 12</fo:basic-link>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Turning XML Documents into Objects</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.2. Turning XML Documents into Objects</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-2.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.2.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to parse an XML <fo:wrapper id="jakartackbk-CHP-6-ITERM-2693"><!--XML (Extensible Markup
Language), documents, converting
to objects--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2694"><!--documents, XML, converting
to objects--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2695"><!--objects, XML, converting
to--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2696"><!--conversion, XML, documents
to objects--></fo:wrapper>document into an object graph, and
you would like to avoid using either the DOM or SAX APIs directly.</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-2.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.2.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use the Commons Digester to transform an XML document into an object
graph. The Digester allows you to map an XML document structure to an
object model in an external XML file containing a set of rules
telling the Digester what to do when specific elements are
encountered. In this recipe, the following XML document containing a
description of a play will be parsed into an object graph:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt259">&lt;?xml version="1.0"?&gt;

&lt;plays&gt;
  &lt;play genre="tragedy" year="1603" language="english"&gt;
    &lt;name&gt;Hamlet&lt;/name&gt;
    &lt;author&gt;William Shakespeare&lt;/author&gt;
    &lt;summary&gt;
      Prince of Denmark freaks out, talks to ghost, gets into a
      crazy nihilistic funk, and dies in a duel.
    &lt;/summary&gt;
    &lt;characters&gt;
      &lt;character protagonist="false"&gt;
        &lt;name&gt;Claudius&lt;/name&gt;
        &lt;description&gt;King of Denmark&lt;/description&gt;
      &lt;/character&gt;
      &lt;character protagonist="true"&gt;
        &lt;name&gt;Hamlet&lt;/name&gt;
        &lt;descr&gt;
          Son to the late, and nephew of the present king
        &lt;/descr&gt;
      &lt;/character&gt;
      &lt;character protagonist="false"&gt;
        &lt;name&gt;Horatio&lt;/name&gt;
        &lt;descr&gt;
          friend to Hamlet
        &lt;/descr&gt;
      &lt;/character&gt;
    &lt;/characters&gt;
  &lt;/play&gt;
&lt;/plays&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This XML document contains a list of <fo:inline font-family="monospace" font-size="0.8em">play</fo:inline> elements
describing plays by William Shakespeare. One play element describes
"Hamlet"; it includes a
<fo:inline font-family="monospace" font-size="0.8em">name</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">author</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">summary</fo:inline> element as well as a
<fo:inline font-family="monospace" font-size="0.8em">characters</fo:inline> element containing
<fo:inline font-family="monospace" font-size="0.8em">character</fo:inline> elements describing characters in the
play. After parsing a document with Digester, each
<fo:inline font-family="monospace" font-size="0.8em">play</fo:inline> element will be represented by a
<fo:inline font-family="monospace" font-size="0.8em">Play</fo:inline> object with a set of properties and a
<fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> of <fo:inline font-family="monospace" font-size="0.8em">Character</fo:inline> objects:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt260">public class Play {
    private String genre;
    private String year;
    private String language;
    private String name;
    private String author;
    private String summary;
    private List characters = new ArrayList( );

    // accessors omitted for brevity

    // Add method to support adding elements to characters.
    public void addCharacter(Character character) {
        characters.add( character );
    }
}

public class Character {
    private String name;
    private String description;
    private boolean protagonist;

    // accessors omitted for brevity
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The Digester maps XML to objects using a set of rules, which can be
defined either in an XML file, or they can be constructed
programmatically by creating instances of <fo:inline font-family="monospace" font-size="0.8em">Rule</fo:inline> and
adding them to an instance of <fo:inline font-family="monospace" font-size="0.8em">Digester</fo:inline>. This
recipe uses an XML file to create a set of rules that tell the
Digester how to translate an XML document to a
<fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> of <fo:inline font-family="monospace" font-size="0.8em">Play</fo:inline> objects:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt261">&lt;?xml version="1.0"?&gt;

&lt;digester-rules&gt;
  &lt;pattern value="plays/play"&gt;
    &lt;object-create-rule classname="xml.digester.Play"/&gt;
    &lt;set-next-rule methodname="add" paramtype="java.lang.Object"/&gt;
    &lt;set-properties-rule/&gt;
    &lt;bean-property-setter-rule pattern="name"/&gt;
    &lt;bean-property-setter-rule pattern="summary"/&gt;
    &lt;bean-property-setter-rule pattern="author"/&gt;
    
    &lt;!-- Nested Pattern for Characters --&gt;
    &lt;pattern value="characters/character"&gt;
      &lt;object-create-rule classname="xml.digester.Character"/&gt;
      &lt;set-next-rule methodname="addCharacter" 
                     paramtype="xml.digester.Character"/&gt;
      &lt;set-properties-rule/&gt;
      &lt;bean-property-setter-rule pattern="name"/&gt;
      &lt;bean-property-setter-rule pattern="descr" 
                                 propertyname="description"/&gt;
    &lt;/pattern&gt;
  
  &lt;/pattern&gt;
&lt;/digester-rules&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This mapping document (or rule sets) can be explained in very
straightforward language. It is telling Digester how to deal with the
document, "When you see an element matching the
pattern <fo:inline font-family="monospace" font-size="0.8em">plays/play</fo:inline>, create an instance of
<fo:inline font-family="monospace" font-size="0.8em">xml.digester.Play</fo:inline>, set some properties, and push
it on to a <fo:inline font-family="monospace" font-size="0.8em">Stack</fo:inline>
(<fo:inline font-family="monospace" font-size="0.8em">object-create-rule</fo:inline>). If you encounter an element
within a <fo:inline font-family="monospace" font-size="0.8em">play</fo:inline> element that matches
<fo:inline font-family="monospace" font-size="0.8em">characters/character</fo:inline>, create an instance of
<fo:inline font-family="monospace" font-size="0.8em">xml.digester.Character</fo:inline>, set some properties, and
add it to the <fo:inline font-family="monospace" font-size="0.8em">Play</fo:inline> object." The
following code creates an instance of <fo:inline font-family="monospace" font-size="0.8em">Digester</fo:inline>
from the XML rule sets shown previously, producing a <fo:inline font-family="monospace" font-size="0.8em">plays
List</fo:inline>, which contains one <fo:inline font-family="monospace" font-size="0.8em">Play</fo:inline> object:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt262">import org.apache.commons.digester.Digester;
import org.apache.commons.digester.xmlrules.DigesterLoader;

List plays = new ArrayList( );

// Create an instance of the Digester from the XML rule set
URL rules = getClass( ).getResource("./play-rules.xml");
Digester digester = DigesterLoader.createDigester(rules);

// Push a reference to the plays List on to the Stack
digester.push(plays);

// Parse the XML document
InputStream input = getClass( ).getResourceAsStream("./plays.xml");
Object root = digester.parse(input);

// The XML document contained one play "Hamlet"
Play hamlet = (Play) plays.get(0);
List characters = (List) hamlet.getCharacters( );</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-2.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.2.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Digester is simple, but there is one concept you need to understand:
Digester uses a <fo:inline font-family="monospace" font-size="0.8em">Stack</fo:inline> to relate objects to one
another. In the previous example, <fo:inline font-family="monospace" font-size="0.8em">set-next-rule</fo:inline>
tells the Digester to relate the top of the <fo:inline font-family="monospace" font-size="0.8em">Stack</fo:inline>
to the next-to-top of the <fo:inline font-family="monospace" font-size="0.8em">Stack</fo:inline>. Before the XML
document is parsed, a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> is pushed onto the
<fo:inline font-family="monospace" font-size="0.8em">Stack</fo:inline>. Every time the Digester encounters a
<fo:inline font-family="monospace" font-size="0.8em">play</fo:inline> element, it will create an instance of
<fo:inline font-family="monospace" font-size="0.8em">Play</fo:inline>, push it onto the top of the
<fo:inline font-family="monospace" font-size="0.8em">Stack</fo:inline>, and call <fo:inline font-family="monospace" font-size="0.8em">add( )</fo:inline> with
<fo:inline font-family="monospace" font-size="0.8em">Play</fo:inline> as an argument on the object next to the top
of the stack. Since the <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> is next to the top of
the <fo:inline font-family="monospace" font-size="0.8em">Stack</fo:inline>, the Digester is simply adding the
<fo:inline font-family="monospace" font-size="0.8em">Play</fo:inline> to the <fo:inline font-family="monospace" font-size="0.8em">playList</fo:inline>. Within
the pattern element matching <fo:inline font-family="monospace" font-size="0.8em">plays/play</fo:inline>, there
is another pattern element matching
<fo:inline font-family="monospace" font-size="0.8em">characters/character</fo:inline>. When an element matching
<fo:inline font-family="monospace" font-size="0.8em">characters/character</fo:inline> is encountered, a
<fo:inline font-family="monospace" font-size="0.8em">Character</fo:inline> object is created, pushed onto the top
of the <fo:inline font-family="monospace" font-size="0.8em">Stack</fo:inline>, and the <fo:inline font-family="monospace" font-size="0.8em">addCharacter(
)</fo:inline> method is called on the next to top of the
<fo:inline font-family="monospace" font-size="0.8em">Stack</fo:inline>. When the <fo:inline font-family="monospace" font-size="0.8em">Character</fo:inline>
object is pushed onto the top of the <fo:inline font-family="monospace" font-size="0.8em">Stack</fo:inline>, the
<fo:inline font-family="monospace" font-size="0.8em">Play</fo:inline> object is next to the top of the
<fo:inline font-family="monospace" font-size="0.8em">Stack</fo:inline>; therefore, the call to
<fo:inline font-family="monospace" font-size="0.8em">addCharacter( )</fo:inline> adds a
<fo:inline font-family="monospace" font-size="0.8em">Character</fo:inline> to the <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> of
<fo:inline font-family="monospace" font-size="0.8em">Character</fo:inline> objects in the <fo:inline font-family="monospace" font-size="0.8em">Play</fo:inline>
object.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Digester can be summed up as follows: define patterns to be matched
and a sequence of actions (rules) to take when these patterns are
encountered. Digester is essentially short-hand for your own SAX
parser, letting you accomplish the same task without having to deal
with the complexity of the SAX API. If you look at the source for the
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.digester.Digester</fo:inline> class, you
see that it implements
<fo:inline font-family="monospace" font-size="0.8em">org.xml.sax.helpers.DefaultHandler</fo:inline> and that a call
to <fo:inline font-family="monospace" font-size="0.8em">parse( )</fo:inline> causes <fo:inline font-family="monospace" font-size="0.8em">Digester</fo:inline> to
register itself as a content handler on an instance of
<fo:inline font-family="monospace" font-size="0.8em">org.xml.sax.XMLReader</fo:inline>. Digester is simply a
lightweight shell around SAX, and, because of this, you can parse XML
just as fast with the Digester as with a system written to the SAX
API.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Digester rule sets can be defined in an external XML document, or
programmatically in compiled Java code, but the general rules are the
same. The following code recreates the rule set defined in the
previous <fo:wrapper id="jakartackbk-CHP-6-ITERM-2697"><!--rules, XML--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2698"><!--XML (Extensible Markup
Language), rules--></fo:wrapper>XML rule
set:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt263">import org.apache.commons.digester.BeanPropertySetterRule;
import org.apache.commons.digester.Digester;
import org.apache.commons.digester.ObjectCreateRule;
import org.apache.commons.digester.Rules;
import org.apache.commons.digester.SetNextRule;
import org.apache.commons.digester.SetPropertiesRule;

Digester digester = new Digester( );

Rules rules = digester.getRules( );

// Add Rules to parse a play element
rules.add( "plays/play", new ObjectCreateRule("xml.digester.Play"));
rules.add( "plays/play", new SetNextRule("add", "java.lang.Object") );
rules.add( "plays/play", new SetPropertiesRule( ) );
rules.add( "plays/play/name", new BeanPropertySetterRule("name") );
rules.add( "plays/play/summary", new BeanPropertySetterRule("summary") );
rules.add( "plays/play/author", new BeanPropertySetterRule("author") );

// Add Rules to parse a character element
rules.add( "plays/play/characters/character", new 
           ObjectCreateRule("xml.digester.Character"));
rules.add( "plays/play/characters/character", 
           new SetNextRule("addCharacter", "xml.digester.Character"));
rules.add( "plays/play/characters/character", new SetPropertiesRule( ) );
rules.add( "plays/play/characters/character/name", 
           new BeanPropertySetterRule("name") );
rules.add( "plays/play/characters/character/description", 
           new BeanPropertySetterRule("description") );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">While this is perfectly acceptable, think twice about defining
Digester rule sets programmatically. Defining rule sets in an XML
document provides a very clear separation between the framework used
to parse XML and the configuration of the Digester. When your rule
sets are separate from compiled code, it will be easier to update and
maintain logic involved in parsing; a change in the XML document
structure would not involve changing code that deals with parsing.
Instead, you would change the model and the mapping document.
Defining Digester rule sets in an XML document is a relatively new
Digester feature, and, because of this, you may find that some of the
more advanced capabilities of Digester demonstrated later in this
chapter are not available when defining rule sets in XML.</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-2.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.2.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">More information about Digester<fo:wrapper id="jakartackbk-CHP-6-ITERM-2699"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2700"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2701"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2702"><!----></fo:wrapper> XML rule sets can be found in the
package document for
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.digester.xmlrules</fo:inline> (<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/digester/apidocs/index.html</fo:inline>).</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Namespace-Aware Parsing</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.3. Namespace-Aware Parsing</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-3.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.3.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to parse an XML document with multiple namespaces.</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-3.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.3.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use Digester to parse<fo:wrapper id="jakartackbk-CHP-6-ITERM-2703"><!--XML (Extensible Markup
Language), documents, namespace-aware
parsing--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2704"><!--documents, XML, namespace-aware
parsing--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2705"><!--namespace-aware
parsing--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2706"><!--parsing, namespace-aware--></fo:wrapper>
XML with multiple namespaces, using
<fo:inline font-family="monospace" font-size="0.8em">digester.setNamespaceAware(true)</fo:inline>, and supplying
two <fo:inline font-family="monospace" font-size="0.8em">RuleSet</fo:inline> objects to parse elements in each
namespace. Consider the following document, which contains elements
from two namespaces: <fo:inline font-family="monospace" font-size="0.8em">http://discursive.com/page</fo:inline>
and <fo:inline font-family="monospace" font-size="0.8em">http://discursive.com/person</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt264">&lt;?xml version="1.0"?&gt;

&lt;pages xmlns="http://discursive.com/page"
       xmlns:person="http://discursive.com/person"&gt;
  &lt;page type="standard"&gt;
    &lt;person:person firstName="Al" lastName="Gore"&gt;
      &lt;person:role&gt;Co-author&lt;/person:role&gt; 
    &lt;/person:person&gt;
    &lt;person:person firstName="George" lastName="Bush"&gt;
      &lt;person:role&gt;Co-author&lt;/person:role&gt; 
    &lt;/person:person&gt;
  &lt;/page&gt;
&lt;/pages&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">To parse this XML document with the Digester, you need to create two
separate sets of rules for each namespace, adding each
<fo:inline font-family="monospace" font-size="0.8em">RuleSet</fo:inline> object to <fo:inline font-family="monospace" font-size="0.8em">Digester</fo:inline> with
<fo:inline font-family="monospace" font-size="0.8em">addRuleSet( )</fo:inline>. A <fo:inline font-family="monospace" font-size="0.8em">RuleSet</fo:inline> adds
<fo:inline font-family="monospace" font-size="0.8em">Rule</fo:inline> objects to an instance of
<fo:inline font-family="monospace" font-size="0.8em">Digester</fo:inline>. By extending the
<fo:inline font-family="monospace" font-size="0.8em">RuleSetBase</fo:inline> class, and setting the
<fo:inline font-family="monospace" font-size="0.8em">namespaceURI</fo:inline> in the default constructor, the
following class, <fo:inline font-family="monospace" font-size="0.8em">PersonRuleSet</fo:inline>, defines rules to
parse the <fo:inline font-family="monospace" font-size="0.8em">http://discursive.com/person</fo:inline>
namespace:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt265">import org.apache.commons.digester.Digester;
import org.apache.commons.digester.RuleSetBase;

public class PersonRuleSet extends RuleSetBase {
    public PersonRuleSet( ) {
        this.namespaceURI = "http://discursive.com/person";
    }

    public void addRuleInstances(Digester digester) {
        digester.addObjectCreate("*/person", Person.class);
        digester.addSetNext("*/person", "addPerson");
        digester.addSetProperties("*/person");
        digester.addBeanPropertySetter("*/person/role", "role");
    }
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">PersonRuleSet</fo:inline> extends
<fo:inline font-family="monospace" font-size="0.8em">RuleSetBase</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2707"><!--RuleSetBase--></fo:wrapper>,
which is an implementation of the
<fo:inline font-family="monospace" font-size="0.8em">RuleSet</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2708"><!--interfaces, RuleSet--></fo:wrapper>
interface. <fo:inline font-family="monospace" font-size="0.8em">RuleSetBase</fo:inline> adds support for namespaces
with a protected field <fo:inline font-family="monospace" font-size="0.8em">namespaceURI</fo:inline>. The
constructor of
<fo:inline font-family="monospace" font-size="0.8em">PersonRuleSet</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2709"><!--PersonRuleSet--></fo:wrapper>
sets the <fo:inline font-family="monospace" font-size="0.8em">namespaceURI</fo:inline> field to
<fo:inline font-family="monospace" font-size="0.8em">http://discursive.com/person</fo:inline>, which tells the
<fo:inline font-family="monospace" font-size="0.8em">Digester</fo:inline> to apply these rules only to elements and
attributes in the <fo:inline font-family="monospace" font-size="0.8em">http://discursive.com/person</fo:inline>
namespace. <fo:inline font-family="monospace" font-size="0.8em">PageRuleSet</fo:inline> extends
<fo:inline font-family="monospace" font-size="0.8em">RuleSetBase</fo:inline> and provides a set of rules for the
<fo:inline font-family="monospace" font-size="0.8em">http://discursive.com/page</fo:inline> namespace:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt266">import org.apache.commons.digester.Digester;
import org.apache.commons.digester.RuleSetBase;

public class PageRuleSet extends RuleSetBase {
    public PageRuleSet( ) {
        this.namespaceURI = "http://discursive.com/page";
    }

    public void addRuleInstances(Digester digester) {
        digester.addObjectCreate("*/page", Page.class);
        digester.addSetNext("*/page", "addPage");
        digester.addSetProperties("*/page");
        digester.addBeanPropertySetter("*/page/summary", "summary");
    }
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Both <fo:inline font-family="monospace" font-size="0.8em">RuleSet</fo:inline> implementations instruct the Digester
to create a <fo:inline font-family="monospace" font-size="0.8em">Page</fo:inline> or a <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline>
object whenever either element is encountered. The
<fo:inline font-family="monospace" font-size="0.8em">PageRuleSet</fo:inline> instructs the Digester to create a
<fo:inline font-family="monospace" font-size="0.8em">Page</fo:inline> object when a <fo:inline font-family="monospace" font-size="0.8em">page</fo:inline> element
is encountered by using a wildcard
pattern—<fo:inline font-family="monospace" font-size="0.8em">*/page</fo:inline>. Both
<fo:inline font-family="monospace" font-size="0.8em">PageRuleSet</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">PersonRuleSet</fo:inline>
use <fo:inline font-family="monospace" font-size="0.8em">digester.addSetNext( )</fo:inline> to add the objects just
created to the next object in the <fo:inline font-family="monospace" font-size="0.8em">Stack</fo:inline>. In the
following code, an instance of <fo:inline font-family="monospace" font-size="0.8em">Pages</fo:inline> is pushed
onto the Digester <fo:inline font-family="monospace" font-size="0.8em">Stack</fo:inline>, and both
<fo:inline font-family="monospace" font-size="0.8em">RuleSet</fo:inline> implementations are added to a
<fo:inline font-family="monospace" font-size="0.8em">Digester</fo:inline> using <fo:inline font-family="monospace" font-size="0.8em">addRuleSet()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2710"><!--addRuleSet( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2711"><!--methods, addRuleSet(
)--></fo:wrapper>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt267">import org.apache.commons.digester.Digester;
import org.apache.commons.digester.ObjectCreateRule;
import org.apache.commons.digester.RuleSetBase;
import org.apache.commons.digester.Rules;
import org.apache.commons.digester.SetNextRule;

Pages pages = new Pages( );
        
Digester digester = new Digester( );
digester.setNamespaceAware(true);
digester.addRuleSet( new PageRuleSet( ) );
digester.addRuleSet( new PersonRuleSet( ) );
        
digester.push(pages);

InputStream input = getClass( ).getResourceAsStream("./content.xml");
digester.parse(input);

Page page = (Page) pages.getPages( ).get(0);
System.out.println(page);</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Because the <fo:inline font-family="monospace" font-size="0.8em">PageRuleSet</fo:inline> adds each
<fo:inline font-family="monospace" font-size="0.8em">Page</fo:inline> object to the next object on the
<fo:inline font-family="monospace" font-size="0.8em">Stack</fo:inline>, the <fo:inline font-family="monospace" font-size="0.8em">Pages</fo:inline> object has an
<fo:inline font-family="monospace" font-size="0.8em">addPage( )</fo:inline> method that accepts a
<fo:inline font-family="monospace" font-size="0.8em">Page</fo:inline> object.</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-3.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.3.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Each of the <fo:inline font-family="monospace" font-size="0.8em">RuleSet</fo:inline> implementations defined a set
of rules in compiled Java code. If you prefer to define each set of
rules in an XML file, you may use the
<fo:inline font-family="monospace" font-size="0.8em">FromXmlRuleSet</fo:inline> instead of the
<fo:inline font-family="monospace" font-size="0.8em">RuleSetBase</fo:inline>, as follows:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt268">import org.apache.commons.digester.Digester;
import org.apache.commons.digester.xmlrules.FromXmlRuleSet;

Pages pages = new Pages( );
        
Digester digester = new Digester( );
digester.setNamespaceAware(true);

// Add page namespace
digester.setRuleNamespaceURI("http://discursive.com/page");
URL pageRules = getClass( ).getResource("./page-rules.xml");
digester.addRuleSet( new FromXmlRuleSet( pageRules ) );
    
// Add person namespace
digester.setRuleNamespaceURI("http://discursive.com/person");
URL personRules = getClass( ).getResource("./person-rules.xml");
digester.addRuleSet( new FromXmlRuleSet( personRules ) );
        
digester.push(pages);

InputStream input = getClass( ).getResourceAsStream("./content.xml");
digester.parse(input);

Page page = (Page) pages.getPages( ).get(0);
System.out.println(page);</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Calling <fo:inline font-family="monospace" font-size="0.8em">digester.setRuleNamespaceURI( )</fo:inline> associates
the <fo:inline font-family="monospace" font-size="0.8em">Rule</fo:inline>s contained in each
<fo:inline font-family="monospace" font-size="0.8em">FromXmlRuleSet</fo:inline> with a specific namespace. In the
Solution, the <fo:inline font-family="monospace" font-size="0.8em">RuleSetBase</fo:inline> protected field
<fo:inline font-family="monospace" font-size="0.8em">namespaceURI</fo:inline> was used to associate
<fo:inline font-family="monospace" font-size="0.8em">RuleSet</fo:inline> objects with namespaces. In the previous
example, the namespace is specified by calling
<fo:inline font-family="monospace" font-size="0.8em">setRuleNamespaceURI( )</fo:inline> before each
<fo:inline font-family="monospace" font-size="0.8em">FromXmlRuleSet</fo:inline> is added to the
<fo:inline font-family="monospace" font-size="0.8em">digester</fo:inline> because there is no access to the
protected member variable, <fo:inline font-family="monospace" font-size="0.8em">namespaceURI</fo:inline>, which
<fo:inline font-family="monospace" font-size="0.8em">FromXmlRuleSet</fo:inline> inherits from
<fo:inline font-family="monospace" font-size="0.8em">RuleSetBase</fo:inline>. <fo:inline font-family="monospace" font-size="0.8em">person-rules.xml</fo:inline>
contains an XML rule set for parsing the
<fo:inline font-family="monospace" font-size="0.8em">http://discursive.com/person</fo:inline> namespace:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt269">&lt;?xml version="1.0"?&gt;

&lt;!DOCTYPE digester-rules PUBLIC 
        "-//Jakarta Apache //DTD digester-rules XML V1.0//EN" 
        "http://jakarta.apache.org/commons/digester/dtds/digester-rules.dtd"&gt;

&lt;digester-rules&gt;
  &lt;pattern value="*/page"&gt;
    &lt;object-create-rule classname="com.discursive.jccook.xml.bean.Page"/&gt;
    &lt;set-next-rule methodname="addPage"/&gt;
    &lt;set-properties-rule/&gt;
    &lt;bean-property-setter-rule pattern="summary" name="summary"/&gt;
  &lt;/pattern&gt;
&lt;/digester-rules&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">page-rules.xml</fo:inline> contains an XML rule set for
parsing the <fo:inline font-family="monospace" font-size="0.8em">http://discursive.com/page</fo:inline>
namespace:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt270">&lt;?xml version="1.0"?&gt;

&lt;!DOCTYPE digester-rules PUBLIC 
        "-//Jakarta Apache //DTD digester-rules XML V1.0//EN" 
        "http://jakarta.apache.org/commons/digester/dtds/digester-rules.dtd"&gt;

&lt;digester-rules&gt;
  &lt;pattern value="*/person"&gt;
    &lt;object-create-rule classname="com.discursive.jccook.xml.bean.Person"/&gt;
    &lt;set-next-rule methodname="addPerson"/&gt;
    &lt;set-properties-rule/&gt;
    &lt;bean-property-setter-rule pattern="role"/&gt;
  &lt;/pattern&gt;
&lt;/digester-rules&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-3.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.3.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information relating to the use<fo:wrapper id="jakartackbk-CHP-6-ITERM-2712"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2713"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2714"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2715"><!----></fo:wrapper> of namespaces in the
<fo:inline font-family="monospace" font-size="0.8em">Digester</fo:inline>, refer to the Javadoc for the
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.digester</fo:inline> package at
<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/digester/apidocs</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Creating a Simple XML Command Language</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.4. Creating a Simple XML Command Language</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-4.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.4.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You would like to capture <fo:wrapper id="jakartackbk-CHP-6-ITERM-2716"><!--XML (Extensible Markup
Language), documents, commands--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2717"><!--documents, XML, commands--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2718"><!--commands,
XML--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2719"><!--capturing, XML
commands--></fo:wrapper>commands in an XML document, and
create a framework to execute these commands.</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-4.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.4.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Write a custom implementation of <fo:inline font-family="monospace" font-size="0.8em">Rule</fo:inline>, and create
a rule set that instructs Commons Digester to invoke these rules when
specific elements are parsed. Consider the example of a system that
sends an encrypted email. The following XML document contains
instructions for the primitive encryption of an email:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt271">&lt;?xml version="1.0"?&gt;

&lt;operations xmlns="http://discursive.com/textmanip"&gt;
  &lt;email to="tobrien@discursive.com"
         from="root@discursive.com"&gt;
    &lt;replace search="o" replace="q"/&gt;
    &lt;replace search="d" replace="z"/&gt;
    &lt;lower/&gt;
    &lt;reverse/&gt;
  &lt;/email&gt;
&lt;/operations&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The<fo:wrapper id="jakartackbk-CHP-6-ITERM-2720"><!--email, tags--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2721"><!--tags, email--></fo:wrapper>
               <fo:inline font-family="monospace" font-size="0.8em">email</fo:inline> tag surrounds three
elements—<fo:inline font-family="monospace" font-size="0.8em">replace</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">lower</fo:inline>,
and <fo:inline font-family="monospace" font-size="0.8em">reverse</fo:inline>. The system that executes these
commands receives a message as a <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> and runs
this <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> through three stages before sending an
email to <fo:inline font-family="monospace" font-size="0.8em">tobrien@discursive.com</fo:inline>. When the parser
encounters the <fo:inline font-family="monospace" font-size="0.8em">replace</fo:inline> element, it replaces all
occurrences of the contents of the <fo:inline font-family="monospace" font-size="0.8em">search</fo:inline>
attribute with the contents of the <fo:inline font-family="monospace" font-size="0.8em">replace</fo:inline>
attribute. When the parser encounters a <fo:inline font-family="monospace" font-size="0.8em">lower</fo:inline>
element, it translates all characters to lowercase; and when the
parser encounters a <fo:inline font-family="monospace" font-size="0.8em">reverse</fo:inline> element, it reverses
the <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline>. When the parser encounters the end of
the <fo:inline font-family="monospace" font-size="0.8em">email</fo:inline> element, the result of these four
operations is sent to the recipient specified in the
<fo:inline font-family="monospace" font-size="0.8em">to</fo:inline> attribute of the <fo:inline font-family="monospace" font-size="0.8em">email</fo:inline>
element.</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt272">import org.apache.commons.digester.Digester;

// Message object that holds text to manipulate
Message message = new Message( );
message.setText( "Hello World!" );
        
System.out.println( "Initial Message: " + message.getText( ) );

// XML Document with set of commands            
InputStream encrypt = getClass( ).getResourceAsStream("./encrypt.xml");

// Create Custom Rules (or Commands)
Digester digester = new Digester( );
digester.addRule( "*/email", new EmailRule( ) );
digester.addRule( "*/lower", new LowerRule( ) );
digester.addRule( "*/reverse", new ReverseRule( ) );
digester.addRule( "*/replace", new ReplaceRule( ) );
digester.push( message );
      
// Parse the XML document - execute commands
digester.parse( encrypt );

System.out.println("Resulting Message: " + message.getText( ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">Message</fo:inline> object is a bean with one
<fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> property: <fo:inline font-family="monospace" font-size="0.8em">text</fo:inline>. This
<fo:inline font-family="monospace" font-size="0.8em">Message</fo:inline> object is pushed onto the
<fo:inline font-family="monospace" font-size="0.8em">Digester</fo:inline>'s
<fo:inline font-family="monospace" font-size="0.8em">Stack</fo:inline> and is acted upon by each of the commands in
the XML document <fo:inline font-family="monospace" font-size="0.8em">encrypt.xml</fo:inline>, shown previously.
This code is executed, and the following output is produced showing
that the original message has been passed through two replace
commands, a lowercase command, and a reverse command:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt273">Intial Message: Hello World!
Resulting Message: !zlrqw qlleh</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example defines three new extensions of <fo:inline font-family="monospace" font-size="0.8em">Rule</fo:inline>:
<fo:inline font-family="monospace" font-size="0.8em">EmailRule</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">LowerRule</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">ReverseRule</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">ReplaceRule</fo:inline>.
Each of these rules will retrieve and operate upon the root object
from the <fo:inline font-family="monospace" font-size="0.8em">Digester</fo:inline>; this
"root" object is the bottom of the
<fo:inline font-family="monospace" font-size="0.8em">Stack</fo:inline>, and, in this case, the
<fo:inline font-family="monospace" font-size="0.8em">Message</fo:inline> object pushed onto the
<fo:inline font-family="monospace" font-size="0.8em">Digester</fo:inline> before parsing. These rules are assigned
to patterns; for example, the previous code associates the
<fo:inline font-family="monospace" font-size="0.8em">EmailRule</fo:inline> with the <fo:inline font-family="monospace" font-size="0.8em">*/email</fo:inline>
pattern and the <fo:inline font-family="monospace" font-size="0.8em">LowerRule</fo:inline> with the
<fo:inline font-family="monospace" font-size="0.8em">*/lower</fo:inline> pattern. The <fo:inline font-family="monospace" font-size="0.8em">Rule</fo:inline>
object defines a series of callback methods to handle different
stages of parsing an element—<fo:inline font-family="monospace" font-size="0.8em">begin( )</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">body( )</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">end( )</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">finish( )</fo:inline>. The <fo:inline font-family="monospace" font-size="0.8em">LowerRule</fo:inline> from
the previous example overrides one method, and manipulates the
<fo:inline font-family="monospace" font-size="0.8em">Message</fo:inline> that which is on the top of the
<fo:wrapper id="jakartackbk-CHP-6-ITERM-2722"><!--Commons
Digester, Stack--></fo:wrapper>
               <fo:inline font-family="monospace" font-size="0.8em">Digester</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">Stack</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt274">package com.discursive.jccook.xml.bean;

import org.apache.commons.digester.Rule;
import org.apache.commons.lang.StringUtils;


public class LowerRule extends Rule {
    public LowerRule( ) { super( ); }

    public void body(String namespace, String name, String text)
            throws Exception {
        Message message = (Message) digester.getRoot( );
        String lower = StringUtils.lowerCase( message.getText( ) );
        message.setText( lower );
    }
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">LowerRule</fo:inline> uses <fo:inline font-family="monospace" font-size="0.8em">StringUtils</fo:inline> from
Commons Lang to translate the <fo:inline font-family="monospace" font-size="0.8em">text</fo:inline> property of the
<fo:inline font-family="monospace" font-size="0.8em">Message</fo:inline> object to lowercase. If you need to write
a <fo:inline font-family="monospace" font-size="0.8em">Rule</fo:inline> that can access attributes, you would
override the <fo:inline font-family="monospace" font-size="0.8em">begin( )</fo:inline> method. The following class,
<fo:inline font-family="monospace" font-size="0.8em">ReplaceRule</fo:inline>, extends <fo:inline font-family="monospace" font-size="0.8em">Rule</fo:inline> and
overrides the <fo:inline font-family="monospace" font-size="0.8em">begin( )</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2723"><!--begin( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2724"><!--methods, begin(
)--></fo:wrapper> method:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt275">package com.discursive.jccook.xml.bean;

import org.apache.commons.digester.Rule;
import org.apache.commons.lang.StringUtils;
import org.xml.sax.Attributes;

public class ReplaceRule extends Rule {
    public ReplaceRule( ) { super( ); }

    public void begin(Attributes attributes) throws Exception {
        Message message = (Message) digester.getRoot( );
        
        String repl = attributes.getValue("search");
        String with = attributes.getValue("replace");
        String text = message.getText( );
        
        String translated = 
            StringUtils.replace( text, repl, with );
        message.setText( translated );
    }
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">ReplaceRule</fo:inline> reads the <fo:inline font-family="monospace" font-size="0.8em">search</fo:inline>
and <fo:inline font-family="monospace" font-size="0.8em">replace</fo:inline> attributes, using
<fo:inline font-family="monospace" font-size="0.8em">StringUtils</fo:inline> to replace all occurrences of the
search <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> in the <fo:inline font-family="monospace" font-size="0.8em">text</fo:inline>
property of <fo:inline font-family="monospace" font-size="0.8em">Message</fo:inline> with the replace
<fo:inline font-family="monospace" font-size="0.8em">String</fo:inline>. The <fo:inline font-family="monospace" font-size="0.8em">EmailRule</fo:inline>
demonstrates a more complex extension of the <fo:inline font-family="monospace" font-size="0.8em">Rule</fo:inline>
object by overriding <fo:inline font-family="monospace" font-size="0.8em">begin( )</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">end(
)</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt276">import org.apache.commons.digester.Rule;
import org.apache.commons.net.smtp.SMTPClient;
import org.xml.sax.Attributes;

public class EmailRule extends Rule {
    private String to;
    private String from;
    
    public EmailRule( ) { super( ); }
    
    public void begin(Attributes attributes) throws Exception {
        to = attributes.getValue( "to" );
        from = attributes.getValue( "from" );
    }

    public void end( ) throws Exception {
        Message message = (Message) digester.getRoot( );
        
        SMTPClient client = new SMTPClient( );
        client.connect("www.discursive.com");
        client.sendSimpleMessage(from, to, message.getText( ) );
    }
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">email</fo:inline> element encloses the four elements that
control the primitive message encryption, and the end of this element
tells this rule to send an email to the address specified in the
<fo:inline font-family="monospace" font-size="0.8em">to</fo:inline> attribute recorded in <fo:inline font-family="monospace" font-size="0.8em">begin()</fo:inline>. <fo:inline font-family="monospace" font-size="0.8em">EmailRule</fo:inline> uses the
<fo:inline font-family="monospace" font-size="0.8em">SMTPClient</fo:inline> from Commons Net to send a simple email
in <fo:inline font-family="monospace" font-size="0.8em">end( )</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-4.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.4.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">Rule</fo:inline> class defines four methods that you can
override to execute code when XML is parsed—<fo:inline font-family="monospace" font-size="0.8em">begin(
)</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">body( )</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">end( )</fo:inline>,
and <fo:inline font-family="monospace" font-size="0.8em">finish( )</fo:inline>. <fo:inline font-family="monospace" font-size="0.8em">begin( )</fo:inline>
provides access to an element's attributes;
<fo:inline font-family="monospace" font-size="0.8em">body( )</fo:inline> provides access to the
element's namespace, local name, and body text;
<fo:inline font-family="monospace" font-size="0.8em">end( )</fo:inline> is called when the end of an element is
encountered; and <fo:inline font-family="monospace" font-size="0.8em">finish( )</fo:inline> is called after
<fo:inline font-family="monospace" font-size="0.8em">end( )</fo:inline> and can be used to clean up data or release
resources, such as open network connections or files. When using the
Digester in this manner, you are using a technique much closer to
writing a SAX parser; instead of dealing with a single
<fo:inline font-family="monospace" font-size="0.8em">startElement</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">Digester</fo:inline>
registers itself as a content handler with an
<fo:inline font-family="monospace" font-size="0.8em">XMLReader</fo:inline> and delegates to <fo:inline font-family="monospace" font-size="0.8em">Rule</fo:inline>
objects associated with a given pattern. If you are simply dealing
with attributes, elements, and text nodes, Commons Digester can be a
very straightforward alternative to writing a
<fo:wrapper id="jakartackbk-CHP-6-ITERM-2725"><!--parsing, SAX--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2726"><!--SAX parsers--></fo:wrapper>SAX parser.</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-4.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.4.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This recipe uses <fo:inline font-family="monospace" font-size="0.8em">StringUtils</fo:inline> to
manipulate<fo:wrapper id="jakartackbk-CHP-6-ITERM-2727"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2728"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2729"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2730"><!----></fo:wrapper> text. For more information about
<fo:inline font-family="monospace" font-size="0.8em">StringUtils</fo:inline>, see <fo:basic-link internal-destination="jakartackbk-CHP-2" text-decoration="underline" color="blue">Chapter 2</fo:basic-link>.
An email message is sent from the <fo:inline font-family="monospace" font-size="0.8em">EmailRule</fo:inline> using
the <fo:inline font-family="monospace" font-size="0.8em">SMTPClient</fo:inline> from Commons Net. For more
information about Commons Net, see <fo:basic-link internal-destination="jakartackbk-CHP-10" text-decoration="underline" color="blue">Chapter 10</fo:basic-link>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-5"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Variable Substitution and XML Parsing</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.5. Variable Substitution and XML Parsing</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-5.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.5.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to parse XML that <fo:wrapper id="jakartackbk-CHP-6-ITERM-2731"><!--XML (Extensible Markup
Language), parsing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2732"><!--documents, XML, parsing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2733"><!--parsing, XML,
variable substitutions--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2734"><!--variables, substitution
(XML)--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2735"><!--references, variable substitution
(XML)--></fo:wrapper>contains references to variables, and you
need to replace these references with variable values at parse time.</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-5.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.5.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use Commons Digester's
<fo:inline font-family="monospace" font-size="0.8em">MultiVariableExpander</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2736"><!--MultiVariableExpander--></fo:wrapper>
and the
<fo:inline font-family="monospace" font-size="0.8em">VariableSubstitutor</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2737"><!--VariableSubstitutor--></fo:wrapper>
to expand variable references in an XML document during a parse.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-CHP-6-NOTE-59"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/warning.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Warning</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This recipe explores a feature of Commons Digester—variable
substitution—which is available only with a prerelease version
of Digester, 1.6-dev. To follow the example in this recipe, you must
download a nightly snapshot distribution from <fo:inline font-family="monospace" font-size="0.8em">http://cvs.apache.org/builds/jakarta-commons/nightly/</fo:inline>.
Use nightly distributions of Commons components at your own risk;
these distributions may contain unresolved bugs.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The following XML document contains four variable
references—<fo:inline font-family="monospace" font-size="0.8em">${email.to}</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">${order.id}</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">tobrien</fo:inline>,
and <fo:inline font-family="monospace" font-size="0.8em">${product.name}—</fo:inline>all of which need to
be replaced with values before the XML is parsed by the
<fo:inline font-family="monospace" font-size="0.8em">Digester</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt277">&lt;?xml version="1.0"?&gt;

&lt;email to="${email.to}" from="ceo@xyzblah.com"&gt;
  &lt;subject&gt;Purchase Confirmation: ${order.id}&lt;/subject&gt;
  &lt;priority&gt;High&lt;/priority&gt;
  &lt;message&gt;
    Dear tobrien, we appreciate your business. As CEO
    of Big Software Company, Inc., I would like to
    personally thank you for helping us become filthy rich.
    Your purchase of ${product.name} helped me purchase an 
    even larger boat for myself.  Thanks again.
  &lt;/message&gt;
&lt;/email&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This document represents a purchase confirmation message, and your
system needs to unmarshall the above message to the following class,
<fo:inline font-family="monospace" font-size="0.8em">Email</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt278">public class Email {
    private String to;
    private String from;
    private String subject;
    private String priority;

    // accessors omitted for brevity.
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The following XML rule set is similar to the rule set defined in
<fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-2" text-decoration="underline" color="blue">Recipe 6.2</fo:basic-link>. When the parser hits an
<fo:inline font-family="monospace" font-size="0.8em">email</fo:inline> element, an instance of
<fo:inline font-family="monospace" font-size="0.8em">Email</fo:inline> is created and properties are populated:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt279">&lt;?xml version="1.0"?&gt;

&lt;digester-rules&gt;
  &lt;pattern value="email"&gt;
    &lt;object-create-rule classname="com.discursive.jccook.xml.bean.Email"/&gt;
    &lt;set-next-rule methodname="add" paramtype="java.lang.Object"/&gt;
    &lt;set-properties-rule/&gt;
    &lt;bean-property-setter-rule pattern="subject"/&gt;
    &lt;bean-property-setter-rule pattern="priority"/&gt;
    &lt;bean-property-setter-rule pattern="message"/&gt;
  &lt;/pattern&gt;
&lt;/digester-rules&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This difference between this recipe and <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-2" text-decoration="underline" color="blue">Recipe 6.2</fo:basic-link> is that our XML document contains variables to
be replaced at parse time. The following code creates a
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> that contains variables referenced in the XML
document being parsed. This code creates the variable
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>, reads the XML rule set from
<fo:inline font-family="monospace" font-size="0.8em">email-rules.xml</fo:inline>, and parses the XML document
<fo:inline font-family="monospace" font-size="0.8em">email.xml</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt280">import org.apache.commons.digester.Digester;
import org.apache.commons.digester.Substitutor;
import org.apache.commons.digester.substitution.MultiVariableExpander;
import org.apache.commons.digester.substitution.VariableSubstitutor;
import org.apache.commons.digester.xmlrules.DigesterLoader;

// Read the Digester XML rule set and create Digester
URL rules = getClass( ).getResource("./email-rules.xml");
Digester digester = DigesterLoader.createDigester(rules);

// Create object to push onto Digester Stack
List emails = new ArrayList( );
digester.push( emails );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">// Create Map of variables</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Map vars = new HashMap( );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">vars.put("email.to", "ldavid@hbo.com");</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">vars.put("user.name", "Tim");</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">vars.put("order.id", "1RR2E223WVVS" );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">vars.put("product.name", "Foundation" );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        </fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">// Create an expander with the Map that matches ${var}</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">MultiVariableExpander expander = new MultiVariableExpander( );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">expander.addSource("$", vars);</fo:inline>

               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">// Create a substitutor with the expander</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Substitutor substitutor = new VariableSubstitutor(expander);</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">digester.setSubstitutor(substitutor);</fo:inline>
        
// Parse XML document
InputStream input = getClass( ).getResourceAsStream("./email.xml");
digester.parse( input );

// Retrieve Email object
Email email = (Email) emails.get(0);
System.out.println( "Email Subject: " + email.getSubject( ) );
System.out.println( "Email To: " + email.getTo( ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Variable substitution is performed by a
<fo:inline font-family="monospace" font-size="0.8em">VariableSubstitutor</fo:inline> that has been configured with
a <fo:inline font-family="monospace" font-size="0.8em">MultiVariableExpander</fo:inline>. The
<fo:inline font-family="monospace" font-size="0.8em">MultiVariableExpander</fo:inline> retrieves variables from a
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>, and, in this example, the <fo:inline font-family="monospace" font-size="0.8em">addSource(
)</fo:inline> method is called with a <fo:inline font-family="monospace" font-size="0.8em">$</fo:inline> marker. This
means that variables are referenced by surrounding a variable name
with <fo:inline font-family="monospace" font-size="0.8em">${</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">}--${variable}</fo:inline>. The
previous example produces the following output, which demonstrates
the substitution of variables:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt281">Email Subject: Purchase Confirmation: 1RR2E223WVVS
Email To: ldavid@hbo.com</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-5.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.5.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Variable substitution is part parsing, part templating, and can be
valuable when you need to specify a set of default properties on a
bean that need to be parameterized for different situations. The
example in this recipe was an email message confirming a purchase
from an e-commerce system, but there are other situations where an
object may need to be personalized with a user identifier or a
username.</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-5.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.5.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about other new features planned for Digester
1.6, see the current development Javadoc <fo:wrapper id="jakartackbk-CHP-6-ITERM-2738"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2739"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2740"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2741"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2742"><!----></fo:wrapper>for the Digester
at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/digester/apidocs/index.html</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-6"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Obtaining Jakarta Commons Betwixt</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.6. Obtaining Jakarta Commons Betwixt</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-6.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.6.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to use Jakarta<fo:wrapper id="jakartackbk-CHP-6-ITERM-2743"><!--XML (Extensible Markup
Language), Commons Betwixt--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2744"><!--documents, XML, Commons
Betwixt--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2745"><!--downloading, Commons
Betwixt--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2746"><!--Commons Betwixt,
downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2747"><!--beans, Commons
Betwixt--></fo:wrapper> Commons Betwixt to serialize and
deserialize beans to and from XML documents.</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-6.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.6.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You must download the latest version of Commons Betwixt, and place
the Commons Betwixt JAR<fo:inline font-family="monospace" font-size="0.8em"> </fo:inline>in your
project's classpath. Following the steps outlined in
<fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1" text-decoration="underline" color="blue">Recipe 1.1</fo:basic-link>, download Commons Betwixt 0.5
instead of Commons Lang. Uncompress the distribution archive and
place <fo:inline font-family="monospace" font-size="0.8em">commons-betwixt.jar</fo:inline> in your classpath.
Commons Betwixt depends on Commons Digester, Commons BeanUtils,
Commons Logging, and Commons Collections. To download dependencies,
see <fo:basic-link internal-destination="jakartackbk-CHP-3-SECT-2" text-decoration="underline" color="blue">Recipe 3.2</fo:basic-link>, <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-1" text-decoration="underline" color="blue">Recipe 5.1</fo:basic-link>, <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-1" text-decoration="underline" color="blue">Recipe 6.1</fo:basic-link>, and <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-9" text-decoration="underline" color="blue">Recipe 7.9</fo:basic-link>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-6.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.6.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Betwixt allows you to translate from beans to XML and vice versa.
Beans are serialized to XML documents using a
<fo:inline font-family="monospace" font-size="0.8em">BeanWriter</fo:inline>, and they are read from XML using a
<fo:inline font-family="monospace" font-size="0.8em">BeanReader</fo:inline>. The structure of the XML can be
automatically generated or customized using an XML document to bind
properties to elements or attributes.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you have a Maven project that needs to use Commons Betwixt, add a
dependency on Commons Betwixt 0.5 with the following section in
<fo:inline font-family="monospace" font-size="0.8em">project.xml</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt282">&lt;dependencies&gt;
  &lt;dependency&gt;
    &lt;id&gt;commons-betwixt&lt;/id&gt;
    &lt;version&gt;0.5&lt;/version&gt;
  &lt;/dependency&gt;
  ....other dependencies...
&lt;/dependencies&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-6.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.6.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about Commons Betwixt, see the Commons Betwixt
project page at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/betwixt</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-7"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Turning Beans into XML Documents</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.7. Turning Beans into XML Documents</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-7.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.7.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to create an XML<fo:wrapper id="jakartackbk-CHP-6-ITERM-2748"><!--XML (Extensible Markup
Language), beans--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2749"><!--documents, XML, bean
conversion--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2750"><!--beans, XML--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2751"><!--conversion--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2752"><!--conversion, XML, beans--></fo:wrapper>
document from a bean.</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-7.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.7.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use Commons Betwixt <fo:inline font-family="monospace" font-size="0.8em">BeanWriter</fo:inline> to
<fo:wrapper id="jakartackbk-CHP-6-ITERM-2753"><!--transformation, beans--></fo:wrapper>transform
a bean to an XML document. The following code turns an instance of
the <fo:inline font-family="monospace" font-size="0.8em">Play</fo:inline> object from <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-2" text-decoration="underline" color="blue">Recipe 6.2</fo:basic-link> into an XML document:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt283">import org.apache.commons.betwixt.io.BeanWriter;

Play play = new Play( );

// populatePlay populates all properties and nested Character objects
populatePlay( play );

// Write XML document
BeanWriter beanWriter = <fo:inline font-weight="bold">new</fo:inline> BeanWriter( );
beanWriter.enablePrettyPrint( );
beanWriter.write( play );

System.out.println( beanWriter.toString( ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A <fo:inline font-family="monospace" font-size="0.8em">BeanWriter</fo:inline> instance is created, indentation is
enabled with a call to <fo:inline font-family="monospace" font-size="0.8em">enablePrettyPrint( )</fo:inline>, and
the <fo:inline font-family="monospace" font-size="0.8em">Play</fo:inline> object is written to an XML document with
<fo:inline font-family="monospace" font-size="0.8em">beanWriter.write( )</fo:inline>. The previous example prints
an XML document with structure similar to the XML document parsed in
<fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-2" text-decoration="underline" color="blue">Recipe 6.2</fo:basic-link> with the exception of the
<fo:inline font-family="monospace" font-size="0.8em">genre</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">year</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">language</fo:inline> elements. The following XML document is
produced by the call to <fo:inline font-family="monospace" font-size="0.8em">beanWriter.write()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2754"><!--beanWriter.write( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2755"><!--methods, beanWriter.write(
)--></fo:wrapper>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt284">&lt;Play&gt;
  &lt;author&gt;William Shakespeare&lt;/author&gt;
  &lt;characters&gt;
    &lt;character&gt;
      &lt;description&gt;King of Denmark&lt;/description&gt;
      &lt;name&gt;Claudius&lt;/name&gt;
      &lt;protagonist&gt;false&lt;/protagonist&gt;
    &lt;/character&gt;
    &lt;character&gt;
      &lt;description&gt;
        Son to the late, and nephew of the present                
        king
      &lt;/description&gt;
      &lt;name&gt;Hamlet&lt;/name&gt;
      &lt;protagonist&gt;true&lt;/protagonist&gt;
    &lt;/character&gt;
    &lt;character&gt;
      &lt;description&gt;friend to Hamlet&lt;/description&gt;
      &lt;name&gt;Horatio&lt;/name&gt;
      &lt;protagonist&gt;false&lt;/protagonist&gt;
    &lt;/character&gt;
  &lt;/characters&gt;
  &lt;genre&gt;tragedy&lt;/genre&gt;
  &lt;language&gt;english&lt;/language&gt;
  &lt;name&gt;Hamlet&lt;/name&gt;
  &lt;summary&gt;
    Prince of Denmark (Hamlet) freaks out, talks to 
    father's ghost, and finally dies in a duel.
  &lt;/summary&gt;
  &lt;year&gt;1603&lt;/year&gt;
&lt;/Play&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-7.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.7.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Using the <fo:inline font-family="monospace" font-size="0.8em">BeanWriter</fo:inline> is an easy way to create XML
documents from beans, and if you don't have a
preference for the layout of the resulting XML document, it is the
easiest way to serialize an object to XML. The
<fo:inline font-family="monospace" font-size="0.8em">BeanWriter</fo:inline> offers some control over the appearance
of the XML it generates. <fo:inline font-family="monospace" font-size="0.8em">setEndOfLine( )</fo:inline> takes a
<fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> that is used as a line termination
sequence. <fo:inline font-family="monospace" font-size="0.8em">setWriteEmptyElements( )</fo:inline> controls the
way in which an empty element is written by Betwixt. If
<fo:inline font-family="monospace" font-size="0.8em">setWriteEmptyElements( )</fo:inline> is passed
<fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>, an element will be written to the XML
document even if there are no child nodes or attributes.
<fo:inline font-family="monospace" font-size="0.8em">setIndent( )</fo:inline> takes a <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline>
that is used as an indentation string when pretty
printing—indented output—is enabled using the
<fo:inline font-family="monospace" font-size="0.8em">enablePrettyPrint( )</fo:inline> method on
<fo:inline font-family="monospace" font-size="0.8em">BeanWriter</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">When Betwixt encounters the <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> of
<fo:inline font-family="monospace" font-size="0.8em">Character</fo:inline> objects, it creates an element
<fo:inline font-family="monospace" font-size="0.8em">characters</fo:inline>, which holds individual
<fo:inline font-family="monospace" font-size="0.8em">character</fo:inline> elements created by using introspection
on the <fo:inline font-family="monospace" font-size="0.8em">Character</fo:inline> class. This behavior is
configurable, and you can instruct <fo:inline font-family="monospace" font-size="0.8em">Betwixt</fo:inline> to omit
the <fo:inline font-family="monospace" font-size="0.8em">characters</fo:inline> elements in favor of multiple
<fo:inline font-family="monospace" font-size="0.8em">character</fo:inline> child elements. Such a customization is
demonstrated in the Discussion of <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-8" text-decoration="underline" color="blue">Recipe 6.8</fo:basic-link>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">BeanWriter</fo:inline> can also be used to write an XML
document to an <fo:inline font-family="monospace" font-size="0.8em">OutputStream</fo:inline> or a
<fo:inline font-family="monospace" font-size="0.8em">Writer</fo:inline> by passing a <fo:inline font-family="monospace" font-size="0.8em">Writer</fo:inline> or
an <fo:inline font-family="monospace" font-size="0.8em">OutputStream</fo:inline> to the
<fo:inline font-family="monospace" font-size="0.8em">BeanWriter</fo:inline> constructor. The following code uses a
<fo:inline font-family="monospace" font-size="0.8em">BeanWriter</fo:inline> to write an XML document to
<fo:inline font-family="monospace" font-size="0.8em">test.dat</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt285">import org.apache.commons.betwixt.io.BeanWriter;

Play play = new Play( );
populatePlay( play );

// Open a File Writer
Writer outputWriter = new FileWriter("test.dat");

// Pass FileWriter to BeanWriter
BeanWriter beanWriter = <fo:inline font-weight="bold">new</fo:inline> BeanWriter( outputWriter );
beanWriter.setEndOfLine( "\r\n" );
beanWriter.setIndent( "\t" );
beanWriter.enablePrettyPrint( );
beanWriter.write( play );

// Close FileWriter
outputWriter.close( );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Since the previous example contains a call to <fo:inline font-family="monospace" font-size="0.8em">setEndOfLine()</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">enablePrettyPrint( )</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">setIndent( )</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">test.dat</fo:inline> will
have DOS-style line termination and Betwixt will use the tab
character for indentation.</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-7.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.7.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">By default, <fo:inline font-family="monospace" font-size="0.8em">BeanWriter</fo:inline> writes every bean
<fo:wrapper id="jakartackbk-CHP-6-ITERM-2756"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2757"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2758"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2759"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2760"><!----></fo:wrapper>property of <fo:inline font-family="monospace" font-size="0.8em">Play</fo:inline>
as an element. <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-8" text-decoration="underline" color="blue">Recipe 6.8</fo:basic-link> shows you how to
customize the XML generated by Betwixt.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-8"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Customizing XML Generated from an Object</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.8. Customizing XML Generated from an Object</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-8.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.8.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You are trying to create an XML<fo:wrapper id="jakartackbk-CHP-6-ITERM-2761"><!--XML (Extensible Markup
Language), object
customization--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2762"><!--documents, XML, object
customization--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2763"><!--beans, XML--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2764"><!--objects, customization--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2765"><!--objects, XML, customization--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2766"><!--customization, objects--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2767"><!--BeanWriter,
customization--></fo:wrapper> document from a Java object, and
you want to customize the layout and structure of the generated XML
document.</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-8.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.8.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use a Betwixt mapping file to customize the output of the
<fo:inline font-family="monospace" font-size="0.8em">BeanWriter</fo:inline>. Below is an example of a mapping file
for the <fo:inline font-family="monospace" font-size="0.8em">Play</fo:inline> class, which was introduced in
<fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-2" text-decoration="underline" color="blue">Recipe 6.2</fo:basic-link>. When Betwixt serializes or deserializes
an object to or from XML, it will search for a resource,
<fo:inline font-family="monospace" font-size="0.8em">&lt;classname&gt;.betwixt</fo:inline>, in the same package
as the class to be written or read. The following XML
document—<fo:inline font-family="monospace" font-size="0.8em">Play.betwixt—</fo:inline>is stored in
the same package as the <fo:inline font-family="monospace" font-size="0.8em">Play</fo:inline> class, and it
customizes the XML output from Betwixt:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt286">&lt;info primitiveTypes="element"&gt;
  &lt;element name="play"&gt;
    &lt;attribute name="genre" property="genre"/&gt;
    &lt;attribute name="year" property="year"/&gt;
    &lt;attribute name="language" property="language"/&gt;
    &lt;addDefaults/&gt;
  &lt;/element&gt;
&lt;/info&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This file tells Betwixt that <fo:inline font-family="monospace" font-size="0.8em">genre</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">year</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">language</fo:inline> shall be
stored as XML attributes, and that the remaining bean properties are
to be written as XML elements. The following code is used to create a
customized XML document from an instance of <fo:inline font-family="monospace" font-size="0.8em">Play</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt287">import org.apache.commons.betwixt.io;

Play play = (Play) plays.get(0);
        
BeanWriter beanWriter = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> BeanWriter( );
beanWriter.enablePrettyPrint( );
beanWriter.write( play );
        
logger.debug( beanWriter.toString( ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Betwixt creates the following XML document, which stores the
<fo:inline font-family="monospace" font-size="0.8em">genre</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">year</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">language</fo:inline> properties as attributes of the
<fo:inline font-family="monospace" font-size="0.8em">play</fo:inline> element. The differences between this XML
document and the XML document in <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-7" text-decoration="underline" color="blue">Recipe 6.7</fo:basic-link>
are emphasized:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt288">
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">&lt;play genre="tragedy" year="1603" language="english"&gt;</fo:inline>
  &lt;author&gt;William Shakespeare&lt;/author&gt;
  &lt;characters&gt;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    &lt;character protagonist="false"&gt;</fo:inline>
      &lt;description&gt;King of Denmark&lt;/description&gt;
      &lt;name&gt;Claudius&lt;/name&gt;
    &lt;/character&gt;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    &lt;character protagonist="true"&gt;</fo:inline>
      &lt;description&gt;Son to the late, and nephew of the present king&lt;/description&gt;
      &lt;name&gt;Hamlet&lt;/name&gt;
    &lt;/character&gt;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    &lt;character protagonist="false"&gt;</fo:inline>
      &lt;description&gt;friend to Hamlet&lt;/description&gt;
      &lt;name&gt;Horatio&lt;/name&gt;
    &lt;/character&gt;
  &lt;/characters&gt;
  &lt;name&gt;Hamlet&lt;/name&gt;
  &lt;summary&gt;Prince of Denmark (Hamlet) freaks out, talks to father's ghost, and
    finally dies in a duel.&lt;/summary&gt;
&lt;/play&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-8.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.8.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous example wrote the <fo:inline font-family="monospace" font-size="0.8em">protagonist</fo:inline>
property of the <fo:inline font-family="monospace" font-size="0.8em">Character</fo:inline> class as an attribute of
the <fo:inline font-family="monospace" font-size="0.8em">character</fo:inline> element. This customization was
accomplished by putting a <fo:inline font-family="monospace" font-size="0.8em">Character.betwixt</fo:inline>
resource in the same package as the <fo:inline font-family="monospace" font-size="0.8em">Character</fo:inline>
class. <fo:inline font-family="monospace" font-size="0.8em">Character.betwixt</fo:inline> is shown here:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt289">&lt;info primitiveTypes="element"&gt;
  &lt;element name="character"&gt;
    &lt;attribute name="protagonist" property="protagonist"/&gt;
    &lt;addDefaults/&gt;
  &lt;/element&gt;
&lt;/info&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In addition to customizing the structure on an XML document, a
Betwixt mapping file can also be used to change the names of elements
and attributes in an XML document. The following mapping
file—another version of
<fo:inline font-family="monospace" font-size="0.8em">Character.betwixt—</fo:inline>writes the
<fo:inline font-family="monospace" font-size="0.8em">description</fo:inline> property of
<fo:inline font-family="monospace" font-size="0.8em">Character</fo:inline> as a <fo:inline font-family="monospace" font-size="0.8em">bio</fo:inline> element:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt290">&lt;info primitiveTypes="element"&gt;
  &lt;element name="character"&gt;
    &lt;attribute name="protagonist" property="protagonist"/&gt;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    &lt;element name="bio" property="description"/&gt;</fo:inline>
    &lt;addDefaults/&gt;
  &lt;/element&gt;
&lt;/info&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In this recipe, Betwixt has wrapped all <fo:inline font-family="monospace" font-size="0.8em">character</fo:inline>
elements in a <fo:inline font-family="monospace" font-size="0.8em">characters</fo:inline> element. If you prefer
<fo:inline font-family="monospace" font-size="0.8em">character</fo:inline> elements to be child elements of
<fo:inline font-family="monospace" font-size="0.8em">play</fo:inline>, you can tell the
<fo:inline font-family="monospace" font-size="0.8em">XMLIntrospector</fo:inline> used by
<fo:inline font-family="monospace" font-size="0.8em">BeanWriter</fo:inline> to omit elements wrapping collections
with the following code:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt291">import org.apache.commons.betwixt.io.BeanWriter;
import org.apache.commons.betwixt.XMLIntrospector;

Play play = (Play) plays.get(0);
        
BeanWriter beanWriter = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> BeanWriter( );
beanWriter.enablePrettyPrint( );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">// Configure XML Introspector to omit collection elements</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">XMLIntrospector introspector = beanWriter.getXMLIntrospector( );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">introspector.setWrapCollectionsInElement(false);</fo:inline>

beanWriter.write( play );
        
logger.debug( beanWriter.toString( ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous code creates an XML document without the
<fo:inline font-family="monospace" font-size="0.8em">characters</fo:inline> element:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt292">&lt;play genre="tragedy" year="1603" language="english"&gt;
  &lt;author&gt;William Shakespeare&lt;/author&gt;
  &lt;character protagonist="false"&gt;
    &lt;description&gt;King of Denmark&lt;/description&gt;
    &lt;name&gt;Claudius&lt;/name&gt;
  &lt;/character&gt;
  &lt;character protagonist="true"&gt;
    &lt;description&gt;Son to the late, and nephew of the present king&lt;/description&gt;
    &lt;name&gt;Hamlet&lt;/name&gt;
  &lt;/character&gt;
  &lt;character protagonist="false"&gt;
    &lt;description&gt;friend to Hamlet&lt;/description&gt;
    &lt;name&gt;Horatio&lt;/name&gt;
  &lt;/character&gt;
  &lt;name&gt;Hamlet&lt;/name&gt;
  &lt;summary&gt;Prince of Denmark (Hamlet) freaks out, talks to father's ghost, and
    finally dies in a duel.&lt;/summary&gt;
&lt;/play&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Betwixt also allows for the customization of element and attribute
names; for example, if your class contains the property
<fo:inline font-family="monospace" font-size="0.8em">maximumSpeed</fo:inline>, it can be written as an attribute
named <fo:inline font-family="monospace" font-size="0.8em">maximum-speed</fo:inline> or
<fo:inline font-family="monospace" font-size="0.8em">MAXIMUM_SPEED</fo:inline>, using the
<fo:inline font-family="monospace" font-size="0.8em">HyphenatedNameMapper</fo:inline> strategy. The same property
could also be written as an element named
<fo:inline font-family="monospace" font-size="0.8em">MaximumSpeed</fo:inline>, using the
<fo:inline font-family="monospace" font-size="0.8em">CapitalizeNameMapper</fo:inline> strategy. Different naming
strategies can be used for elements and attributes by passing
instances of <fo:inline font-family="monospace" font-size="0.8em">NameMapper</fo:inline> to
<fo:inline font-family="monospace" font-size="0.8em">setElementNameMapper( )</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">setAttributeNameMapper( )</fo:inline> on an
<fo:inline font-family="monospace" font-size="0.8em">XMLIntrospector</fo:inline>. The following code demonstrates
the setting of both the attribute and element
<fo:inline font-family="monospace" font-size="0.8em">NameMapper</fo:inline> on a
<fo:inline font-family="monospace" font-size="0.8em">BeanWriter</fo:inline>'s
<fo:inline font-family="monospace" font-size="0.8em">XMLIntrospector</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt293">import org.apache.commons.betwixt.io.BeanWriter;
import org.apache.commons.betwixt.XMLIntrospector;
import org.apache.commons.betwixt.strategy.CapitalizeNameMapper;
import org.apache.commons.betwixt.strategy.HyphenatedNameMapper;

BeanWriter beanWriter = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> BeanWriter( );

// Set NameMappers on XMLIntrospector
XMLIntrospector introspector = beanWriter.getXMLIntrospector( );
introspector.setElementNameMapper( new CapitalizeNameMapper( ) );
introspector.setAttributeNameMapper( new HyphenatedNameMapper( ) );

beanWriter.write( object );</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-8.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.8.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about possible <fo:wrapper id="jakartackbk-CHP-6-ITERM-2768"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2769"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2770"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2771"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2772"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2773"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2774"><!----></fo:wrapper>customizations in Betwixt, see the
"Binding Beans" section of the user
guide at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/betwixt/guide/binding.html</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-9"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Turning XML Documents into Beans</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.9. Turning XML Documents into Beans</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-9.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.9.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to convert an XML <fo:wrapper id="jakartackbk-CHP-6-ITERM-2775"><!--XML (Extensible Markup
Language), beans--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2776"><!--conversion--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2777"><!--documents, XML, bean
conversion--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2778"><!--beans, XML--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2779"><!--conversion--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-6-ITERM-2780"><!--conversion, XML, beans--></fo:wrapper>document
into a Bean.</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-9.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.9.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use Betwixt's <fo:inline font-family="monospace" font-size="0.8em">BeanReader</fo:inline> to parse
an XML document and create an instance of the appropriate bean.
Register bean classes with the <fo:inline font-family="monospace" font-size="0.8em">BeanReader</fo:inline>, and
parse an XML document loaded from an <fo:inline font-family="monospace" font-size="0.8em">InputStream</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">InputSource</fo:inline>, or <fo:inline font-family="monospace" font-size="0.8em">Reader</fo:inline>. The
following XML document will be parsed into the
<fo:inline font-family="monospace" font-size="0.8em">Play</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">Character</fo:inline> beans
introduced in <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-2" text-decoration="underline" color="blue">Recipe 6.2</fo:basic-link>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt294">&lt;play genre="tragedy" year="1603" language="english"&gt;
  &lt;author&gt;William Shakespeare&lt;/author&gt;
  &lt;character protagonist="false"&gt;
    &lt;description&gt;King of Denmark&lt;/description&gt;
    &lt;name&gt;Claudius&lt;/name&gt;
  &lt;/character&gt;
  &lt;character protagonist="true"&gt;
    &lt;description&gt;Son to the late, and nephew of the present king&lt;/description&gt;
    &lt;name&gt;Hamlet&lt;/name&gt;
  &lt;/character&gt;
  &lt;character protagonist="false"&gt;
    &lt;description&gt;friend to Hamlet&lt;/description&gt;
    &lt;name&gt;Horatio&lt;/name&gt;
  &lt;/character&gt;
  &lt;name&gt;Hamlet&lt;/name&gt;
  &lt;summary&gt;Prince of Denmark (Hamlet) freaks out, talks to father's ghost, and
    finally dies in a duel.&lt;/summary&gt;
&lt;/play&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This XML document was created with <fo:inline font-family="monospace" font-size="0.8em">BeanWriter</fo:inline>,
using the customized format from <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-8" text-decoration="underline" color="blue">Recipe 6.8</fo:basic-link>.
To read this XML document with <fo:inline font-family="monospace" font-size="0.8em">BeanReader</fo:inline>, the
<fo:inline font-family="monospace" font-size="0.8em">Play</fo:inline> class will need to be registered with
<fo:inline font-family="monospace" font-size="0.8em">BeanReader</fo:inline> and the
<fo:inline font-family="monospace" font-size="0.8em">XMLIntrospector</fo:inline> must have the same settings as the
<fo:inline font-family="monospace" font-size="0.8em">XMLIntrospector</fo:inline> used when writing the document
with <fo:inline font-family="monospace" font-size="0.8em">BeanWriter</fo:inline>. The following code instantiates
and configures a <fo:inline font-family="monospace" font-size="0.8em">BeanReader</fo:inline> to read this
customized XML for the <fo:inline font-family="monospace" font-size="0.8em">Play</fo:inline> object:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_6_tt295">import org.apache.commons.betwixt.io.BeanReader;

InputStream customPlay = 
    getClass( ).getResourceAsStream("./customized-play.xml");
BeanReader beanReader = new BeanReader( );
beanReader.getXMLIntrospector( ).setWrapCollectionsInElement(false);
beanReader.registerBeanClass(Play.class);

Play play = (Play) beanReader.parse( customPlay );</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-9.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.9.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Betwixt uses Commons Digester to parse XML, and the
<fo:inline font-family="monospace" font-size="0.8em">BeanReader</fo:inline> object is an extension of the
<fo:inline font-family="monospace" font-size="0.8em">Digester</fo:inline>. <fo:inline font-family="monospace" font-size="0.8em">BeanReader</fo:inline> creates a
Digester rule set using introspection and the Betwixt mapping files
available on the classpath. Digester, as introduced in the first half
of this chapter, is a quick way to parse an XML document; all that is
required to parse XML with the Digester is a rule set and a little
bit of code. Betwixt is built-upon Digester, and the
<fo:inline font-family="monospace" font-size="0.8em">BeanReader</fo:inline> further reduces the amount of work
required to parse XML to a bean. Instead of completing the process
demonstrated in <fo:basic-link internal-destination="jakartackbk-CHP-6-SECT-2" text-decoration="underline" color="blue">Recipe 6.2</fo:basic-link>, you can simply
write a few, very manageable, <fo:inline font-family="monospace" font-size="0.8em">.betwixt</fo:inline> files
using <fo:inline font-family="monospace" font-size="0.8em">BeanReader</fo:inline> to read the XML documents and
<fo:inline font-family="monospace" font-size="0.8em">BeanWriter</fo:inline> to write the XML documents.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">When Betwixt is adding <fo:inline font-family="monospace" font-size="0.8em">Character</fo:inline> objects to the
characters <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> on a <fo:inline font-family="monospace" font-size="0.8em">Play</fo:inline>
object, it's calling the <fo:inline font-family="monospace" font-size="0.8em">addCharacter()</fo:inline> method on the <fo:inline font-family="monospace" font-size="0.8em">Play</fo:inline> object. Without
this <fo:inline font-family="monospace" font-size="0.8em">addCharacter( )</fo:inline> object, Betwixt would not be
able to populate this <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline>. Betwixt automatically
recognizes a plural property name such as
<fo:inline font-family="monospace" font-size="0.8em">characters</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">characterList</fo:inline>, or
<fo:inline font-family="monospace" font-size="0.8em">characterSet</fo:inline>, and it attempts to call the
corresponding <fo:inline font-family="monospace" font-size="0.8em">addCharacter( )</fo:inline> method. For more
information about the algorithm Betwixt uses to recognize composite
properties, see "Using Adder Methods for Composite
Properties" in the Betwixt user guide (<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/betwixt/guide/binding.html</fo:inline>).</fo:block></fo:block><fo:block id="jakartackbk-CHP-6-SECT-9.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">6.9.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about reading beans with Betwixt, see
"Reading Beans" in the Betwixt user
guide (<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/betwixt/guide/reading.html</fo:inline>).</fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="false" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>Application Infrastructure</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>Application Infrastructure</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"/></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif" margin-left="0pc"/></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block id="jakartackbk-CHP-7"><fo:block font-family="serif"><fo:block margin-left="0pc"><fo:block text-align="left" font-weight="bold" font-size="21.6pt"><fo:block keep-with-next.within-column="always" space-before.optimum="12pt" space-before.minimum="12pt * 0.8" space-before.maximum="12pt * 1.2" hyphenate="false" text-align="left" start-indent="0pc" word-spacing="-0.1em" letter-spacing="-0.05em" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 7. Application Infrastructure</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="ch07-2-fm2xml"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Introduction</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.1. Introduction</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The plumbing of an application—command-line parsing,
configuration, and logging—can be viewed as application
infrastructure. This chapter introduces a few tools to help
applications work with configuration, arguments, and log files:
Commons CLI for command-line parsing, Commons Configuration for
reading application configuration from properties files and XML
documents, Commons Logging, and Log4J.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Obtaining Commons CLI</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.1. Obtaining Commons CLI</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-1.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.1.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to use <fo:wrapper id="jakartackbk-CHP-7-ITERM-2781"><!--Commons
CLI, downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2782"><!--downloading, Commons
CLI--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2783"><!--applications, Commons
CLI, downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2784"><!--infrastructure (Commons
CLI), downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2785"><!--interfaces, Commons CLI,
downloading--></fo:wrapper>Commons CLI (Command-Line
Interface) to parse an application's command-line
arguments.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-1.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.1.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Download Commons CLI 1.0. Following the steps outlined in
<fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1" text-decoration="underline" color="blue">Recipt 1.1</fo:basic-link>, download "Commons
CLI 1.0" instead of Commons Lang. The Commons CLI
archive—<fo:inline font-family="monospace" font-size="0.8em">cli-1.0.zip—</fo:inline>contains a file
named <fo:inline font-family="monospace" font-size="0.8em">commons-cli-1.0.jar</fo:inline>; place this JAR file
in your classpath, and you are ready to use Commons CLI in your
application.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-1.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.1.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Commons CLI provides a standard mechanism for parsing command-line
arguments. Contained in the <fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.cli</fo:inline>
package, CLI provides a set of classes that can parse command-line
arguments containing optional arguments, arguments with parameters,
and short and long arguments. As shown in this chapter, CLI also
provides a mechanism for printing out usage information.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-1.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.1.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about Commons CLI, see the Commons CLI project
page (<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/cli</fo:inline>).</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For C developers, see the getopt and argp in the GNU C Library. For
more information, see the section "Parsing Program
Arguments" in the GNU C Library manual (<fo:inline font-family="monospace" font-size="0.8em">http://www.gnu.org/software/libc/manual/html_node/index.html</fo:inline>).</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Parsing a Simple Command Line</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.2. Parsing a Simple Command Line</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-2.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.2.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to parse a simple command line containing optional and
required arguments.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-2.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.2.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use the Jakarta Commons CLI to parse program arguments. Populate an
<fo:inline font-family="monospace" font-size="0.8em">Options</fo:inline> object to configure command-line parsing.
Pass the <fo:inline font-family="monospace" font-size="0.8em">Options</fo:inline> class and a
<fo:inline font-family="monospace" font-size="0.8em">String[]</fo:inline> of arguments to a
<fo:inline font-family="monospace" font-size="0.8em">CommandLineParser</fo:inline>, which parses and returns a
<fo:inline font-family="monospace" font-size="0.8em">CommandLine</fo:inline> object capturing the supplied options
and parameters.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For the purposes of this recipe, assume that you are attempting to
parse a command line with three optional arguments:
<fo:inline font-family="monospace" font-size="0.8em">-h</fo:inline>,<fo:inline font-family="monospace" font-size="0.8em"> </fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">-v</fo:inline>,
and <fo:inline font-family="monospace" font-size="0.8em">-f &lt;filename&gt;</fo:inline>. <fo:inline font-family="monospace" font-size="0.8em">-h</fo:inline>
prints out a simple help message with usage information and available
command-line options, <fo:inline font-family="monospace" font-size="0.8em">-v</fo:inline> runs the program with
verbose logging, and <fo:inline font-family="monospace" font-size="0.8em">-f</fo:inline> sends the output of the
application to a file. To parse this command line, your
<fo:inline font-family="monospace" font-size="0.8em">main( )</fo:inline> method would resemble the following code:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_7_tt296">
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import org.apache.commons.cli.CommandLineParser;</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import org.apache.commons.cli.BasicParser;</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import org.apache.commons.cli.Options;</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import org.apache.commons.cli.CommandLine;</fo:inline>

               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">public static void</fo:inline> main(String[] args) <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">throws</fo:inline> Exception {

    // Create a Parser
    CommandLineParser parser = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> BasicParser( );
    Options options = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> Options( );
    options.addOption("h", "help", <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">false</fo:inline>, "Print this usage information");
    options.addOption("v", "verbose", <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">false</fo:inline>, "Print out VERBOSE information" );
    options.addOption("f", "file", <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">true</fo:inline>, "File to save program output to");

    // Parse the program arguments
    CommandLine commandLine = parser.parse( options, args );

    // Set the appropriate variables based on supplied options
    <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">boolean</fo:inline> verbose = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">false</fo:inline>;
    String file = "";

    <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">if</fo:inline>( commandLine.hasOption('h') ) {
        System.out.println( "Help Message")
        System.exit(0);
    }

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    if</fo:inline>( commandLine.hasOption('v') ) {
        verbose = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">true</fo:inline>;
    }

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    if</fo:inline>( commandLine.hasOption('f') ) {
        file = commandLine.getOptionValue('f');
    }
}</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-2.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.2.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">Options</fo:inline> object tells the
<fo:inline font-family="monospace" font-size="0.8em">CommandLineParser</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2786"><!--CommandLineParser--></fo:wrapper>
to <fo:wrapper id="jakartackbk-CHP-7-ITERM-2787"><!--parsing--></fo:wrapper>expect three arguments:
<fo:inline font-family="monospace" font-size="0.8em">-h</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">-v</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">-f</fo:inline>. The first argument to
<fo:inline font-family="monospace" font-size="0.8em">options.addOption( )</fo:inline> is the short name or
abbreviation of the option, and the second argument is the long name
of the argument. When the long name of an option is specified, either
may be used as program arguments. For example, a command line
specifying short-name arguments, <fo:inline font-family="monospace" font-size="0.8em">-h</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">
</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">-v</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">
</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">-f</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">
</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">test.xml</fo:inline>, is equivalent to a command
line specifying long-name arguments,
<fo:inline font-family="monospace" font-size="0.8em">--help</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">
</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">--version</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">
</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">--file</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">test.xml</fo:inline>, and
both short- and long-name arguments may be mixed in the same command
line. The third argument to <fo:inline font-family="monospace" font-size="0.8em">options.addOption()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2788"><!--options.addOption( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2789"><!--methods, options.addOption(
)--></fo:wrapper> specifies whether the option takes a
parameter; in the previous example, only the file option expects a
parameter. The fourth parameter is a <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline>
containing a description of the option for a user.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">An <fo:inline font-family="monospace" font-size="0.8em">Options</fo:inline> object may be configured using the
<fo:inline font-family="monospace" font-size="0.8em">options.addOption( )</fo:inline>, or an
<fo:inline font-family="monospace" font-size="0.8em">Option</fo:inline> object can be created and added to the
<fo:inline font-family="monospace" font-size="0.8em">Options</fo:inline> object. The following code is equivalent
to the call to <fo:inline font-family="monospace" font-size="0.8em">options.addOption( )</fo:inline> in the
previous example, which adds the help option:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_7_tt297">Option helpOption = new Option("h", "Prints this usage information");
helpOption.setLongOpt( "help" );
options.addOption( helpOption );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Both the <fo:inline font-family="monospace" font-size="0.8em">Options</fo:inline> object and the <fo:inline font-family="monospace" font-size="0.8em">args
String[]</fo:inline> are passed to <fo:inline font-family="monospace" font-size="0.8em">parser.parse( )</fo:inline>,
which returns a <fo:inline font-family="monospace" font-size="0.8em">CommandLine</fo:inline> object.
<fo:inline font-family="monospace" font-size="0.8em">CommandLine</fo:inline> captures the supplied program
arguments, and provides access to the supplied options and arguments.
<fo:inline font-family="monospace" font-size="0.8em">commandLine.hasOption('h')</fo:inline> checks for the presence
of the optional help choice, and
<fo:inline font-family="monospace" font-size="0.8em">commandLine.getOptionValue('f')</fo:inline> retrieves the
filename argument for the file option.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-2.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.2.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In this recipe,
<fo:inline font-family="monospace" font-size="0.8em">BasicParser</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2790"><!--BasicParser--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2791"><!--parsing, BasicParser--></fo:wrapper>,
an implementation of <fo:inline font-family="monospace" font-size="0.8em">CommandLineParser</fo:inline>, is used to
parse command lines. This implementation allows for mixed short- and
long-name options: <fo:inline font-family="monospace" font-size="0.8em">-f</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">test.xml</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">--help</fo:inline>. If you are developing an application that
needs to parse arguments using POSIX Conventions, use
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.cli.PosixParser</fo:inline> instead of
<fo:inline font-family="monospace" font-size="0.8em">BasicParser</fo:inline>. If you need to parse arguments using
the less strict GNU conventions, use the
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.cli.GNUParser</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For background about the differences between POSIX and GNU standards,
see Section 4.6 of the "GNU Coding
Standards" (<fo:inline font-family="monospace" font-size="0.8em">http://www.gnu.org/prep/standards_18.html</fo:inline>).
For information about POSIX syntax guidelines, see Section
12.2, "Utility Syntax
Guidelines" of "The Single UNIX
Specification Version 3" (<fo:inline font-family="monospace" font-size="0.8em">http://www.unix-systems.org/online.html</fo:inline>),
also known as IEEE Standard 1003.1 and ISO/IEC 9945.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Parsing a Complex Command Line</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.3. Parsing a Complex Command Line</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-3.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.3.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to parse a command line with two exclusive options.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-3.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.3.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Store mutually exclusive <fo:inline font-family="monospace" font-size="0.8em">Option</fo:inline> objects in an
<fo:inline font-family="monospace" font-size="0.8em">OptionGroup</fo:inline>, and add this
<fo:inline font-family="monospace" font-size="0.8em">OptionGroup</fo:inline> to an <fo:inline font-family="monospace" font-size="0.8em">Options</fo:inline>
object using the <fo:inline font-family="monospace" font-size="0.8em">addOptionGroup( )</fo:inline> method. Assume
you are working with the following program argument specification:
<fo:inline font-family="monospace" font-size="0.8em">-h</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">-v</fo:inline>,<fo:inline font-family="monospace" font-size="0.8em">
</fo:inline>and <fo:inline font-family="monospace" font-size="0.8em">-f</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">&lt;filename&gt;</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">|</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">-m
&lt;email&gt;</fo:inline>. <fo:inline font-family="monospace" font-size="0.8em">-h</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">-v</fo:inline> are both optional and only one of
<fo:inline font-family="monospace" font-size="0.8em">-f</fo:inline> or <fo:inline font-family="monospace" font-size="0.8em">-m</fo:inline> can be specified. If
both <fo:inline font-family="monospace" font-size="0.8em">-m</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">-f</fo:inline> are supplied as
program arguments, an exception is thrown. In the following example,
the <fo:inline font-family="monospace" font-size="0.8em">-f</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">-m</fo:inline> options are added
to an <fo:inline font-family="monospace" font-size="0.8em">OptionGroup</fo:inline>, which is then added to the
<fo:inline font-family="monospace" font-size="0.8em">Options</fo:inline> object used to parse the program
arguments:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_7_tt298">
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import org.apache.commons.cli.CommandLineParser;</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import org.apache.commons.cli.BasicParser;</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import org.apache.commons.cli.Options;</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import org.apache.commons.cli.OptionBuilder;</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import org.apache.commons.cli.OptionGroup;</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import org.apache.commons.cli.CommandLine;</fo:inline>

               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">public</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">static</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">void</fo:inline> main(String[] args) <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">throws</fo:inline> Exception {

    // Create a Parser
    CommandLineParser parser = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> BasicParser( );
    Options options = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> Options( );
    options.addOption("h", "help", <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">false</fo:inline>, "Print this usage information");
    options.addOption("v", "verbose", <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">false</fo:inline>, "Print out VERBOSE information" );

    OptionGroup optionGroup = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> OptionGroup( ); 
    optionGroup.addOption( OptionBuilder.hasArg(<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">true</fo:inline>).create('f') );
    optionGroup.addOption( OptionBuilder.hasArg(<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">true</fo:inline>).create('m') );
    options.addOptionGroup( optionGroup );

    // Parse the program arguments
    CommandLine commandLine = parser.parse( options, args );

    // ... do important stuff ...
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If the user supplies both <fo:inline font-family="monospace" font-size="0.8em">-f</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">-m</fo:inline> at the same time, the
<fo:inline font-family="monospace" font-size="0.8em">CommandLineParser</fo:inline> will throw an
<fo:inline font-family="monospace" font-size="0.8em">AlreadySelectedException</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-3.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.3.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In the Solution, the <fo:inline font-family="monospace" font-size="0.8em">-f</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">-m</fo:inline>
options were created using the <fo:inline font-family="monospace" font-size="0.8em">OptionBuilder</fo:inline>
class. This utility lets you build an <fo:inline font-family="monospace" font-size="0.8em">Option</fo:inline>
object by chaining a series of method calls. For example, the
following code creates a required option,
"b," which takes an argument:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_7_tt299">Option option = OptionBuilder.hasArgs(true).isRequired(true).create('b');</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">OptionGroup</fo:inline> objects are a good way to enforce the
structure of command-line options. If you were parsing the command
line with a <fo:inline font-family="monospace" font-size="0.8em">StringTokenizer</fo:inline> and keeping track of
all of the specified options that may or may not have parameters,
this could involve 30 or 40 lines of code just to manage this
validation process. By using the Jakarta Commons CLI, you delegate
this complexity and cut down on the amount of code you need to
maintain.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-3.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.3.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">What happens if a user specifies two options from an
<fo:inline font-family="monospace" font-size="0.8em">OptionGroup</fo:inline>? Does the application just fail
catastrophically from a <fo:inline font-family="monospace" font-size="0.8em">RuntimeException</fo:inline>? Usually,
if a program has a problem parsing command-line arguments, it will
print out a helpful usage message. "Printing Usage
Information" demonstrates the use of CLI to
automatically create a usage message.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Printing Usage Information</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.4. Printing Usage Information</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-4.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.4.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to provide the <fo:wrapper id="jakartackbk-CHP-7-ITERM-2792"><!--Commons
CLI, printing usage
information--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2793"><!--applications, Commons
CLI, printing usage
information--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2794"><!--infrastructure
(Commons CLI), printing usage
information--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2795"><!--printing, usage
information--></fo:wrapper>user with a formatted list of
available options.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-4.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.4.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Pass an <fo:inline font-family="monospace" font-size="0.8em">Options</fo:inline> object to a
<fo:inline font-family="monospace" font-size="0.8em">HelpFormatter</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2796"><!--HelpFormatter--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2797"><!--formatting, HelpFormatter--></fo:wrapper>
and print a usage message. <fo:basic-link internal-destination="jakartackbk-CHP-7-EX-1" text-decoration="underline" color="blue">Example 7-1</fo:basic-link> creates the
same <fo:inline font-family="monospace" font-size="0.8em">Options</fo:inline> object from <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-3" text-decoration="underline" color="blue">Recipe 7.3</fo:basic-link>. If the help option is specified, or if there
is a problem parsing the program arguments, the <fo:inline font-family="monospace" font-size="0.8em">printUsage()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2798"><!--printUsage( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2799"><!--methods, printUsage(
)--></fo:wrapper> method is called to print usage information
to <fo:inline font-family="monospace" font-size="0.8em">System.out</fo:inline>.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-7-EX-1"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 7-1. Printing usage information with HelpFormatter</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e22322">
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import org.apache.commons.cli.CommandLineParser;</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import org.apache.commons.cli.BasicParser;</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import org.apache.commons.cli.Options;</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import org.apache.commons.cli.OptionBuilder;</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import org.apache.commons.cli.OptionGroup;</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import org.apache.commons.cli.CommandLine;</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import org.apache.commons.cli.HelpFormatter;</fo:inline>

                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">public class SomeApp {</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    private static final String USAGE = "[-h] [-v] [-f &lt;file&gt; | -m &lt;email&gt;]";</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    private static final String HEADER =</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        "SomeApp - A fancy and expensive program, Copyright 2010 Blah.";</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    private static final String FOOTER =</fo:inline>
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        "For more instructions, see our website at: http://www.blah123.org";</fo:inline>

                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    public</fo:inline> 
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">static</fo:inline> 
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">void</fo:inline> main(String[] args) <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">throws</fo:inline> Exception {

        // Create a Parser
        CommandLineParser parser = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> BasicParser( );
        Options options = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> Options( );
        options.addOption("h", "help", <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">false</fo:inline>, "Print this usage 
                                                                      information");
        options.addOption("v", "verbose", <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">false</fo:inline>, "Print out VERBOSE 
                                                                         information" );

        OptionGroup optionGroup = new OptionGroup( ); 
        optionGroup.addOption( OptionBuilder.hasArg(true).withArgName("file")
                                            .withLongOpt("file").create('f') );
        optionGroup.addOption( OptionBuilder.hasArg(true).withArgName("email")
                                            .withLongOpt("email").create('m') );
        options.addOptionGroup( optionGroup );
           // Parse the program arguments
        try {
            CommandLine commandLine = parser.parse( options, args );

            <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">if</fo:inline>( commandLine.hasOption('h') ) {
                printUsage( options );
                System.exit(0);
            }
    
               // ... do important stuff ...
        } catch( Exception e ) {
            System.out.println( "You provided bad program arguments!" );
            printUsage( options );
            System.exit(1);
        }
    }

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    private</fo:inline> static <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">void</fo:inline> printUsage(Options options) {
        HelpFormatter helpFormatter = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> HelpFormatter( );
        helpFormatter.setWidth( 80 );
        helpFormatter.printHelp( USAGE, HEADER, options, FOOTER );
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">When this application is executed and the parser encounters an
unexpected program argument, the following output is produced:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_7_tt300">You provided bad program arguments!
usage: [-h] [-v] [-f &lt;file&gt; | -m &lt;email&gt;]
SomeApp - A fancy and expensive program, Copyright 2010 Blah.
 -f,--file &lt;file&gt;
 -h,--help            Print this usage information
 -m,--email &lt;email&gt;
 -v,--verbose         Print out VERBOSE information
For more instructions, see our website at: http://www.blah123.org</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-4.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.4.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If an exception is thrown during <fo:inline font-family="monospace" font-size="0.8em">parser.parse( )</fo:inline>,
the application will print an error message and call
<fo:inline font-family="monospace" font-size="0.8em">printUsage( )</fo:inline>, which creates a
<fo:inline font-family="monospace" font-size="0.8em">HelpFormatter</fo:inline> object and sets the display width to
80 characters. <fo:inline font-family="monospace" font-size="0.8em">helpFormatter.printHelp( )</fo:inline> prints
to standard out and takes five parameters, including the
<fo:inline font-family="monospace" font-size="0.8em">Options</fo:inline> object, which contains configuration for
the <fo:inline font-family="monospace" font-size="0.8em">CommandLineParser</fo:inline>. The first parameter
specified a usage string, which is an abbreviated specification of
the program arguments: <fo:inline font-family="monospace" font-size="0.8em">-h</fo:inline>,<fo:inline font-family="monospace" font-size="0.8em">
</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">-v</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">-f</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">&lt;file&gt;</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">|</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">-m
&lt;email&gt;</fo:inline>. The second argument is a header to print
before the list of available options. The third parameter is the same
<fo:inline font-family="monospace" font-size="0.8em">Options</fo:inline> object passed to the
<fo:inline font-family="monospace" font-size="0.8em">CommandLineParser</fo:inline>.
<fo:inline font-family="monospace" font-size="0.8em">HelpFormatter</fo:inline> will use this
<fo:inline font-family="monospace" font-size="0.8em">Options</fo:inline> object to print out the short name, long
name, and description of each option. The fourth parameter is a
footer to display after the list of options.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-5"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Obtaining Commons Configuration</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.5. Obtaining Commons Configuration</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-5.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.5.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to use <fo:wrapper id="jakartackbk-CHP-7-ITERM-2800"><!--Commons
Configuration, downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2801"><!--downloading, Commons
Configuration--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2802"><!--configuration, Commons
Configuration, downloading--></fo:wrapper>Commons
Configuration to access configuration stored in properties files and
XML documents.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-5.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.5.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Commons Configuration 1.0 is not yet released, but you may download a
nightly build from <fo:inline font-family="monospace" font-size="0.8em">http://cvs.apache.org/builds/jakarta-commons/nightly/commons-configuration/</fo:inline>.
As Commons Configuration approaches a 1.0 release, a full binary
release may also be available. Once Commons Configuration is
released, you should be able to download a JAR by following the steps
outlined in <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1" text-decoration="underline" color="blue">Recipe 1.1</fo:basic-link> and downloading
"Commons Configuration 1.0" instead
of Commons Lang. The Commons Configuration archive contains a JAR
file named <fo:inline font-family="monospace" font-size="0.8em">commons-configuration-1.0-rc1.jar</fo:inline>,
which should be placed in your classpath.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-5.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.5.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Commons Configuration is designed to provide access to
<fo:wrapper id="jakartackbk-CHP-7-ITERM-2803"><!--applications, Commons
Configuration, downloading--></fo:wrapper>application
configuration in the form of properties files, XML documents, JNDI
resources, or data from a JDBC <fo:inline font-family="monospace" font-size="0.8em">Datasource</fo:inline>. Commons
Configuration also allows you to create a hierarchical or
multileveled configuration allowing for default settings to be
selectively overridden by local configuration. Commons Configuration
also provides typed access to single- and multivalued configuration
parameters.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-5.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.5.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about the Commons Configuration project, see the
Commons Configuration project page at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/configuration</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-6"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Configuring Applications with Properties Files</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.6. Configuring Applications with Properties Files</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-6.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.6.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to access configuration parameters as typed objects. In
other words, you have configuration parameters that may be numbers or
lists of strings, and you want to access them as typed objects
instead of first retrieving them as <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> objects
from a <fo:inline font-family="monospace" font-size="0.8em">Properties</fo:inline> object.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-6.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.6.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use the <fo:inline font-family="monospace" font-size="0.8em">PropertiesConfiguration</fo:inline> from Commons
Configuration in the
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.configuration</fo:inline> package. This
class loads a properties file and provides access to numbers, arrays,
and lists. The following properties file contains three properties:
<fo:inline font-family="monospace" font-size="0.8em">speed</fo:inline> is a floating-point number,
<fo:inline font-family="monospace" font-size="0.8em">names</fo:inline> is a comma-separated list of strings, and
<fo:inline font-family="monospace" font-size="0.8em">correct</fo:inline> is a boolean value:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_7_tt301">speed=23.332
names=Bob,Gautam,Jarret,Stefan
correct=false</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This properties file is stored in
<fo:inline font-family="monospace" font-size="0.8em">test.properties</fo:inline> in the working directory of an
application, which needs access to all three properties as a
<fo:inline font-family="monospace" font-size="0.8em">float</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">boolean</fo:inline>. The following code creates a
<fo:inline font-family="monospace" font-size="0.8em">PropertiesConfiguration</fo:inline> and accesses each
property:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_7_tt302">import org.apache.commons.configuration.Configuration;
import org.apache.commons.configuration.PropertiesConfiguration;

Configuration config = new PropertiesConfiguration( "test.properties" );
        
float speed = config.getFloat("speed"));
List names = config.getList("names"));
boolean correct = config.getBoolean("correct");</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-6.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.6.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Passing a <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> to the constructor of
<fo:inline font-family="monospace" font-size="0.8em">PropertiesConfiguration</fo:inline> will load configuration
properties from a file named <fo:inline font-family="monospace" font-size="0.8em">test.properties</fo:inline>.
Properties are then referenced by the key of the property in the
properties file. This recipe demonstrates a modest improvement upon
the existing <fo:inline font-family="monospace" font-size="0.8em">Properties</fo:inline> class that ships with the
J2SE. The methods provided by the <fo:inline font-family="monospace" font-size="0.8em">Configuration</fo:inline>
interface enable you to retrieve properties with a specific type,
throwing a <fo:inline font-family="monospace" font-size="0.8em">NumberFormatException</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">ClassCastException</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">NoSuchElementException</fo:inline> if there is a problem
finding or parsing a property value.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-6.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.6.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For a full list of the methods provided by the
<fo:wrapper id="jakartackbk-CHP-7-ITERM-2804"><!--interfaces, Commons
Configuration--></fo:wrapper>
               <fo:inline font-family="monospace" font-size="0.8em">Configuration</fo:inline>
interface, see the Commons Configuration JavaDoc at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/configuration/apidocs</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-7"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Configuring Applications with XML</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.7. Configuring Applications with XML</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-7.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.7.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to configure an <fo:wrapper id="jakartackbk-CHP-7-ITERM-2805"><!--applications, Commons
Configuration, XML
documents--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2806"><!--Commons
Configuration, XML
documents--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2807"><!--configuration, Commons
Configuration, XML
documents--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2808"><!--documents, XML, Common
Configuration--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2809"><!--XML (Extensible Markup
Language), Commons
Configuration--></fo:wrapper>application with an XML
document.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-7.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.7.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use an implementation of <fo:inline font-family="monospace" font-size="0.8em">XMLConfiguration</fo:inline> to load
configuration parameters from an XML document. The following XML
document contains configuration information that is loaded with a
<fo:inline font-family="monospace" font-size="0.8em">DOMConfiguration</fo:inline> object:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_7_tt303">&lt;?xml version="1.0" encoding="ISO-8859-1" ?&gt;

&lt;engine-config&gt;
    &lt;start-criteria&gt;
        &lt;criteria type="critical"&gt;
            Temperature Above -10 Celsius
        &lt;/criteria&gt;
        &lt;criteria&gt;
            Fuel tank is not empty
        &lt;/criteria&gt;
    &lt;/start-criteria&gt;
    &lt;name&gt;
        &lt;first&gt;Tom&lt;/first&gt;
        &lt;last&gt;Payne&lt;/last&gt;
    &lt;/name&gt;
    &lt;horsepower&gt;42&lt;/horsepower&gt;
&lt;/engine-config&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A <fo:inline font-family="monospace" font-size="0.8em">DOMConfiguration</fo:inline> object uses the Xerces XML
parser to parse an entire XML document into a DOM
<fo:inline font-family="monospace" font-size="0.8em">Document</fo:inline> object. Subsequent calls to methods on
the <fo:inline font-family="monospace" font-size="0.8em">Configuration</fo:inline> interface cause the
<fo:inline font-family="monospace" font-size="0.8em">DOMConfiguration</fo:inline> object to traverse nodes in the
<fo:inline font-family="monospace" font-size="0.8em">Document</fo:inline>. The code to read in this XML
configuration with <fo:inline font-family="monospace" font-size="0.8em">DOMConfiguration</fo:inline> follows:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_7_tt304">import org.apache.commons.configuration.Configuration;
import org.apache.commons.configuration.DOMConfiguration;

String resource = "com/discursive/jccook/configuration/global.xml";
Configuration config = new DOMConfiguration(resource);
        
// Retrieve a list of all Criteria elements
List startCriteria = config.getList("start-criteria.criteria");

// Retrieve the value of the first criteria element
String firstCriteria = config.getString("start-criteria.criteria(0)");

// Retrieve the type attribute of the first criteria element
String firstCriteriaType = config.getString("start-criteria.criteria(0)[@type]");

// Retrieve the horsepower as an int
int horsepower = config.getInt("horsepower");</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-7.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.7.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Passing a <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> to the constructor of
<fo:inline font-family="monospace" font-size="0.8em">DOMConfiguration</fo:inline> loads an XML document from the
classpath as a resource. If you need to load XML configuration from a
file, pass a <fo:inline font-family="monospace" font-size="0.8em">File</fo:inline> object to the
<fo:inline font-family="monospace" font-size="0.8em">DOMConfiguration</fo:inline> constructor. Configuration
parameters are retrieved using methods from the
<fo:inline font-family="monospace" font-size="0.8em">Configuration</fo:inline> interface, and parameters are
referenced using a syntax that resembles XPath. Subelements are
referenced by appending a period and the subelement name to the name
of an element; in this example, <fo:inline font-family="monospace" font-size="0.8em">name.first</fo:inline>
references the subelement <fo:inline font-family="monospace" font-size="0.8em">first</fo:inline> of the element
<fo:inline font-family="monospace" font-size="0.8em">name</fo:inline>. Attributes are referenced by prefixing an
attribute name with an @ and surrounding the reference with brackets;
in this example, <fo:inline font-family="monospace" font-size="0.8em">start-critera.criteria(0)[@type]</fo:inline>
references the <fo:inline font-family="monospace" font-size="0.8em">type</fo:inline> attribute of the
<fo:inline font-family="monospace" font-size="0.8em">criteria</fo:inline> element. Specific elements in a list of
elements are referenced by surrounding the index with parentheses;
<fo:inline font-family="monospace" font-size="0.8em">start-criteria.criteria(0)</fo:inline> references the first
<fo:inline font-family="monospace" font-size="0.8em">criteria</fo:inline> element.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">DOMConfiguration</fo:inline> will only work if the Xerces XML
parser is available in your classpath. If Xerces is not available,
you may use another implementation of
<fo:inline font-family="monospace" font-size="0.8em">XMLConfiguration</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">DOM4JConfiguration</fo:inline>, which is written to parse an
XML document using DOM4J. To use the
<fo:inline font-family="monospace" font-size="0.8em">DOM4JConfiguration</fo:inline>, make sure that DOM4J is in
your classpath, and interchange <fo:inline font-family="monospace" font-size="0.8em">DOM4JConfiguration</fo:inline>
with <fo:inline font-family="monospace" font-size="0.8em">DOMConfiguration</fo:inline> from the previous example.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-7.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.7.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about downloading the Xerces XML parser, see the
Xerces project page at <fo:inline font-family="monospace" font-size="0.8em">http://xml.apache.org/xerces</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about downloading DOM4J, see the DOM4J project
page at <fo:inline font-family="monospace" font-size="0.8em">http://www.dom4j.org</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-8"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Using Composite Configuration</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.8. Using Composite Configuration</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-8.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.8.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Your application calls for a multilayered configuration where a set
of default properties can be selectively overridden by local or user
configuration preferences.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-8.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.8.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Create a <fo:inline font-family="monospace" font-size="0.8em">configuration.xml</fo:inline> file that contains
references to multiple properties files, and pass this file to a
<fo:inline font-family="monospace" font-size="0.8em">ConfigurationFactory</fo:inline>. A
<fo:inline font-family="monospace" font-size="0.8em">ConfigurationFactory</fo:inline> will then return a
<fo:inline font-family="monospace" font-size="0.8em">Configuration</fo:inline> implementation that obtains
configuration parameters from multiple properties file.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-7-TABLE-1" text-decoration="underline" color="blue">Table 7-1</fo:basic-link> lists configuration
properties<fo:wrapper id="jakartackbk-CHP-7-ITERM-2810"><!--properties, configuration--></fo:wrapper>
for an application. A global configuration layer defines default
values for configuration parameters. A local configuration layer
allows you to customize the behavior of a system at a particular
site, and the user configuration layer refines configuration
parameters for a specific user. When an application retrieves the
value of "name," the user
layer's value of
"Sean" overrides the global
layer's value of "Default
User."</fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-7-TABLE-1"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 7-1. Three layers of configuration</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-left-style="solid" border-right-style="solid" border-top-style="solid" border-bottom-style="solid" border-left-width="0.1pt" border-right-width="0.1pt" border-top-width="0.1pt" border-bottom-width="0.1pt" border-left-color="black" border-right-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="17.4cm"><fo:table-column column-number="1"/><fo:table-column column-number="2"/><fo:table-column column-number="3"/><fo:table-column column-number="4"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Property</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Global</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Local</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">User</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">threads.max</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">50</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">30</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">threads.min</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">20</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
</fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">1</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">timeout</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">15.52</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
</fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">interactive</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">TRUE</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
</fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">color</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">red</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
</fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">black</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">speed</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">50</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">55</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">75</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">name</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Default User</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
</fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Sean</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Properties are stored in three separate files shown in Examples <fo:basic-link internal-destination="jakartackbk-CHP-7-EX-2" text-decoration="underline" color="blue">Example 7-2</fo:basic-link> (<fo:inline font-family="monospace" font-size="0.8em">global.properties</fo:inline>),
<fo:basic-link internal-destination="jakartackbk-CHP-7-EX-3" text-decoration="underline" color="blue">Example 7-3</fo:basic-link> (<fo:inline font-family="monospace" font-size="0.8em">local.properties</fo:inline>),
and <fo:basic-link internal-destination="jakartackbk-CHP-7-EX-4" text-decoration="underline" color="blue">Example 7-4</fo:basic-link>
(<fo:inline font-family="monospace" font-size="0.8em">user.properties</fo:inline>).</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-7-EX-2"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 7-2. global.
properties</fo:block><fo:wrapper id="jakartackbk-CHP-7-ITERM-2811"><!--properties, global.properties--></fo:wrapper><fo:wrapper id="jakartackbk-CHP-7-ITERM-2812"><!--global.properties--></fo:wrapper><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e23003">threads.max=50
threads.min=2
timeout=15.52
interactive=true
color=red
speed=50
name=Default User</fo:block></fo:block></fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-7-EX-3"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 7-3. local
.properties</fo:block><fo:wrapper id="jakartackbk-CHP-7-ITERM-2813"><!--properties, local.properties--></fo:wrapper><fo:wrapper id="jakartackbk-CHP-7-ITERM-2814"><!--local.properties--></fo:wrapper><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e23016"># Overrides Global Props
threads.max=30
speed=55</fo:block></fo:block></fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-7-EX-4"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 7-4. user.
properties</fo:block><fo:wrapper id="jakartackbk-CHP-7-ITERM-2815"><!--user.properties--></fo:wrapper><fo:wrapper id="jakartackbk-CHP-7-ITERM-2816"><!--properties, user.properties--></fo:wrapper><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e23029"># Overrides Local Props
threads.min=1
color=black
speed=5000
name=Sean</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A <fo:inline font-family="monospace" font-size="0.8em">configuration.xml</fo:inline> file provides a
configuration for the <fo:inline font-family="monospace" font-size="0.8em">ConfigurationFactory</fo:inline>. This
file is stored as a resource in the classpath, and the URL for this
resource is passed to the <fo:inline font-family="monospace" font-size="0.8em">setConfigurationURL( )</fo:inline>
method of <fo:inline font-family="monospace" font-size="0.8em">ConfigurationFactory</fo:inline>. The following
<fo:inline font-family="monospace" font-size="0.8em">configuration.xml</fo:inline> will create a
<fo:inline font-family="monospace" font-size="0.8em">Configuration</fo:inline> object, which locates properties
from properties files using the override order defined in the XML
document. <fo:inline font-family="monospace" font-size="0.8em">user.properties</fo:inline> overrides
<fo:inline font-family="monospace" font-size="0.8em">local.properties</fo:inline>, which overrides
<fo:inline font-family="monospace" font-size="0.8em">global.properties</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_7_tt305">&lt;?xml version="1.0" encoding="ISO-8859-1" ?&gt;

&lt;configuration&gt;
    &lt;properties fileName="user.properties"/&gt;
    &lt;properties fileName="local.properties"/&gt;
    &lt;properties fileName="global.properties"/&gt;
&lt;/configuration&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The following code passes the URL of the
<fo:inline font-family="monospace" font-size="0.8em">configuration.xml</fo:inline> resource to a
<fo:inline font-family="monospace" font-size="0.8em">ConfigurationFactory</fo:inline>, and a
<fo:inline font-family="monospace" font-size="0.8em">Configuration</fo:inline> instance is returned, which resolves
application configuration parameters according to the rules outlined
above:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_7_tt306">import org.apache.commons.configuration.Configuration;
import org.apache.commons.configuration.ConfigurationFactory;

// Configure Factory 
ConfigurationFactory factory = new ConfigurationFactory( );
URL configURL = this.getClass( ).getResource("configuration.xml");
factory.setConfigurationURL( configURL );

Configuration config = factory.getConfiguration( );

// Print out properties
System.out.println( "Timeout: " + config.getFloat("timeout"));
System.out.println( "Max Threads: " + config.getString("threads.max"));
System.out.println( "Name: " + config.getString("name"));
System.out.println( "Speed: " + config.getInt("speed"));</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This code executes and prints the value of four properties to the
console. The <fo:inline font-family="monospace" font-size="0.8em">timeout</fo:inline> property is retrieved from
<fo:inline font-family="monospace" font-size="0.8em">global.properties</fo:inline>, the
<fo:inline font-family="monospace" font-size="0.8em">threads.max</fo:inline> property is retrieved from
<fo:inline font-family="monospace" font-size="0.8em">local.properties</fo:inline>, and both
<fo:inline font-family="monospace" font-size="0.8em">speed</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">name</fo:inline> are retrieved
from <fo:inline font-family="monospace" font-size="0.8em">user.properties</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_7_tt307">Timeout: 15.52
Max Threads: 30
Name: Sean
Speed: 75</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-8.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.8.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The
<fo:inline font-family="monospace" font-size="0.8em">configuration.xml</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2817"><!--configuration.xml
file--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2818"><!--files, configuration.xml--></fo:wrapper>
file instructs the <fo:inline font-family="monospace" font-size="0.8em">ConfigurationFactory</fo:inline> to create
a <fo:inline font-family="monospace" font-size="0.8em">Configuration</fo:inline> implementation based on multiple
properties files. In the previous example, when the application
retrieves a property, there is no parameter signifying the source of
the property. There is no mechanism for obtaining the source of a
configuration property; in other words, there is no way for our
application to see which properties file a particular value was
obtained from, and there is no mechanism for enumerating the
properties in a single properties file. The
<fo:inline font-family="monospace" font-size="0.8em">configuration.xml</fo:inline> file
"configures" the
<fo:inline font-family="monospace" font-size="0.8em">ConfigurationFactory</fo:inline> to create a
<fo:inline font-family="monospace" font-size="0.8em">Configuration</fo:inline>—complexity is hidden from the
application and the source of configuration can be changed with no
effect to this example.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A <fo:inline font-family="monospace" font-size="0.8em">configuration.xml</fo:inline> file can also instruct a
<fo:inline font-family="monospace" font-size="0.8em">ConfigurationFactory</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2819"><!--ConfigurationFactory--></fo:wrapper>
to use a mixture of properties files and XML documents. The following
<fo:inline font-family="monospace" font-size="0.8em">configuration.xml</fo:inline> instructs the
<fo:inline font-family="monospace" font-size="0.8em">ConfigurationFactory</fo:inline> to create a
<fo:inline font-family="monospace" font-size="0.8em">Configuration</fo:inline> instance that looks for properties
from a properties file and an XML document:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_7_tt308">&lt;?xml version="1.0" encoding="ISO-8859-1" ?&gt;

&lt;configuration&gt;
    &lt;properties fileName="test.properties"/&gt;
    &lt;dom4j fileName="test.xml"/&gt;
&lt;/configuration&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">With this configuration, a <fo:inline font-family="monospace" font-size="0.8em">Configuration</fo:inline> instance
will attempt to locate a property with a matching key in
<fo:inline font-family="monospace" font-size="0.8em">test.properties</fo:inline> before it attempts to locate the
matching property in <fo:inline font-family="monospace" font-size="0.8em">test.xml</fo:inline>. See <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-7" text-decoration="underline" color="blue">Recipe 7.7</fo:basic-link> for more information about retrieving
configuration from XML documents.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-8.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.8.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In addition to properties files<fo:wrapper id="jakartackbk-CHP-7-ITERM-2820"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2821"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2822"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2823"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2824"><!----></fo:wrapper> and XML documents, Commons
Configuration can also be instructed to resolve configuration
properties from a JNDI tree using
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.configuration.JNDIConfiguration</fo:inline>.
For more information on accessing properties in a JNDI tree using
Commons Configuration, see the "Configuration
Overview" page on the Commons Configuration project
site (<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/configuration/overview.html</fo:inline>).</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-9"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Obtaining Commons Logging</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.9. Obtaining Commons Logging</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-9.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.9.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to use <fo:wrapper id="jakartackbk-CHP-7-ITERM-2825"><!--Commons Logging,
downloading--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2826"><!--logging, Commons
Logging, downloading--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2827"><!--frameworks,
Commons Logging--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2828"><!--applications, Commons
Logging, downloading--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2829"><!--downloading, Commons
Logging--></fo:wrapper>Commons Logging to develop a system
that works under various logging frameworks, including
Sun's logging framework and Apache Log4J.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-9.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.9.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Download Commons Logging 1.0.3. Following the steps outlined in
<fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1" text-decoration="underline" color="blue">Recipe 1.1</fo:basic-link>, download
"Commons Logging 1.0.3" instead of
Commons Lang. The Commons Logging
archive—<fo:inline font-family="monospace" font-size="0.8em">commons-logging-1.0.3.zip—</fo:inline>will
contain a file named <fo:inline font-family="monospace" font-size="0.8em">commons-logging.jar</fo:inline>. Place
this JAR file in your classpath, and you will be ready to use Commons
Logging.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-9.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.9.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Commons Logging was created for developers who need to create
components or libraries that may need to operate in environments with
different logging frameworks, including Apache Log4J and the built-in
logging framework introduced in Java 1.4. Using Commons Logging, a
component like Commons BeanUtils or Commons Digester can write log
messages to an abstracted <fo:inline font-family="monospace" font-size="0.8em">Log</fo:inline> interface, and
Commons Logging can deal with passing these log messages to whichever
logging framework is available. Commons Logging is used in almost
every Jakarta Commons component.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you have a Maven project that needs to use Commons Logging, add a
dependency on Commons Logging 1.0.3 with the following section in
<fo:inline font-family="monospace" font-size="0.8em">project.xml</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_7_tt309">&lt;dependencies&gt;
  &lt;dependency&gt;
    &lt;id&gt;commons-logging&lt;/id&gt;
    &lt;version&gt;1.0.3&lt;/version&gt;
  &lt;/dependency&gt;

  ....other dependencies...
&lt;/dependencies&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-9.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.9.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about Commons Logging, see the Commons Logging
project site (<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/logging</fo:inline>).</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-10"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Using an Abstract Logging Interface</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.10. Using an Abstract Logging Interface</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-10.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.10.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You are writing a reusable library, and you do not know where or how
your code will execute. You need to write log messages to an
abstracted logging interface because you cannot count on the presence
of Log4J or JDK 1.4 logging.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-10.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.10.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Write messages to the Jakarta Commons Logging
<fo:inline font-family="monospace" font-size="0.8em">Log</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2830"><!--Log
interface--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2831"><!--interfaces, Log--></fo:wrapper>
interface, and rely on Commons Logging to decide which concrete
logging framework to use at runtime. The following code uses the
<fo:inline font-family="monospace" font-size="0.8em">Log</fo:inline> interface to log trace, debug, info, warning,
error, and fatal messages:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_7_tt310">import org.apache.commons.logging.LogFactory;
import org.apache.commons.logging.Log

Log log = LogFactory.getLog( "com.discursive.jccook.SomeApp" ); 

if( log.isTraceEnabled( ) ) {
    log.trace( "This is a trace message" );
}

if( log.isDebugEnabled( ) ) {
    log.debug( "This is a debug message" );
}

log.info( "This is an informational message" );

log.warn( "This is a warning" );

log.error( "This is an error" );

log.fatal( "This is fatal" );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">LogFactory.getInstance( )</fo:inline> returns an
implementation of the <fo:inline font-family="monospace" font-size="0.8em">Log</fo:inline> interface, which
corresponds to an underlying concrete logging framework. For example,
if your system is configured to use Apache Log4J, a
<fo:inline font-family="monospace" font-size="0.8em">Log4JLogger</fo:inline> is returned, which corresponds to the
Log4J category <fo:inline font-family="monospace" font-size="0.8em">com.discursive.jccook.SomeApp</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-10.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.10.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The developers of a reusable library can rarely predict where and
when such a library will be used, and since there are a number of
logging frameworks currently available, it makes sense to use Commons
Logging when developing reusable components such as Jakarta Commons
components. When <fo:inline font-family="monospace" font-size="0.8em">LogFactory.getInstance()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2832"><!--LogFactory.getInstance( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2833"><!--methods, logFactory.getInstance(
)--></fo:wrapper> is called, Commons Logging takes care of
locating and managing the appropriate logging framework by testing a
number of system properties and libraries available on the classpath.
For the developer of a small reusable component, the complexity ends
at the calls to the <fo:inline font-family="monospace" font-size="0.8em">Log</fo:inline> interface; the burden of
configuring the underlying logging framework is shifted to the
developer integrating this library into a larger system.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-10.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.10.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-11" text-decoration="underline" color="blue">Recipe 7.11</fo:basic-link> details the algorithm Commons
Logging uses to identify the appropriate concrete logging framework
to use at runtime.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-11"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Specifying a Logging Implementation</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.11. Specifying a Logging Implementation</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-11.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.11.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You are using a component that writes log messages with Commons
Logging, and you need to configure the underlying logging
implementation.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-11.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.11.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If the system property <fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.logging.Log
</fo:inline>is not set, Commons Logging will use Apache Log4J if it is
available in the classpath. To explicitly configure Commons Logging
to use Log4J, set the
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.logging.Log</fo:inline> property to
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.logging.impl.Log4JLogger</fo:inline> with
the following statement:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_7_tt311">System.setProperty( "org.apache.commons.logging.Log",
                    "org.apache.commons.logging.impl.Log4JLogger" );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If the system property
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.logging.Log</fo:inline> is not set and
Apache Log4J is not available on the classpath, Commons Logging will
then use the built-in JDK 1.4 logging framework. To explicitly
configure Commons Logging to use the JDK 1.4 logging framework, set
the <fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.logging.Log</fo:inline> property to
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.logging.impl.Jdk14Logger</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If neither Apache Log4J nor the JDK 1.4 logging framework is
available on the classpath and the
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.logging.Log</fo:inline> system property
is not set, Commons Logging uses a basic logging implementation named
<fo:inline font-family="monospace" font-size="0.8em">SimpleLog</fo:inline>. To explicitly configure Commons Logging
to use <fo:inline font-family="monospace" font-size="0.8em">SimpleLog</fo:inline>, set the
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.logging.Log</fo:inline> property to
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.logging.impl.SimpleLog</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-11.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.11.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">To summarize, Commons Logging performs the following steps when
choosing an underlying logging implementation:</fo:block><fo:list-block space-before.optimum="0em" space-before.minimum="0em" space-before.maximum="0em" space-after.optimum="0em" space-after.minimum="0em" space-after.maximum="0em" margin-left="1.0em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.2em" id="d0e23393"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e23394"><fo:list-item-label end-indent="label-end()"><fo:block>1.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Checks the <fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.logging.Log</fo:inline> system
property. If this property is set, use the class specified in this
property.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e23400"><fo:list-item-label end-indent="label-end()"><fo:block>2.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Checks for the presence of Log4J in the classpath. If Log4J is
present, use a <fo:inline font-family="monospace" font-size="0.8em">Log4JLogger</fo:inline> instance.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e23406"><fo:list-item-label end-indent="label-end()"><fo:block>3.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Checks for the presence of the JDK 1.4 logging framework. If JDK 1.4
is present, use a <fo:inline font-family="monospace" font-size="0.8em">JDK14Logger</fo:inline> instance.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If neither Log4J nor JDK 1.4 is available, use
<fo:inline font-family="monospace" font-size="0.8em">SimpleLog</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-11.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.11.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about the configuration of Apache Log4J, see
 <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-13" text-decoration="underline" color="blue">Recipe 7.13</fo:basic-link> and <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-14" text-decoration="underline" color="blue">Recipe 7.14</fo:basic-link>. For more information about the configuration
of the JDK 1.4 logging framework, see Sun's
documentation of this framework at <fo:inline font-family="monospace" font-size="0.8em">http://java.sun.com/j2se/1.4.2/docs/guide/util/logging/</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">SimpleLog</fo:inline> is a very simple logger that can be used
when an application does not need a complex logging framework. For
more information about configuring <fo:inline font-family="monospace" font-size="0.8em">SimpleLog</fo:inline> via
system properties, read the <fo:wrapper id="jakartackbk-CHP-7-ITERM-2834"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2835"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2836"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2837"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2838"><!----></fo:wrapper>Commons Logging JavaDoc at
<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/logging/api/index.html</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-12"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Obtaining Apache Log4J</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.12. Obtaining Apache Log4J</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-12.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.12.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to use Apache Log4J to print<fo:wrapper id="jakartackbk-CHP-7-ITERM-2839"><!--Apache
Log4J, downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2840"><!--downloading, Apache
Log4J--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2841"><!--printing, Apache
Log4J--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2842"><!--debugging, Apache
Log4J--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2843"><!--applications, Apache
Log4J--></fo:wrapper> statements to a log file for
informational or debugging purposes.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-12.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.12.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Download Apache Log4J 1.2.8 from the Binary Downloads page
(<fo:inline font-family="monospace" font-size="0.8em">http://logging.apache.org/site/binindex.cgi</fo:inline>)
of the Apache Logging Services project. On this page you will find
two links to <fo:inline font-family="monospace" font-size="0.8em">Jakarta-log4j-1.2.8.tar.gz</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">Jakarta-log4j-1.2.8.zip</fo:inline>. Once this archive is
uncompressed, you will find a <fo:inline font-family="monospace" font-size="0.8em">log4j-1.2.8.jar</fo:inline>
file in the <fo:inline font-family="monospace" font-size="0.8em">dist/lib</fo:inline> directory. Put this JAR
file in your classpath and you will be ready to use Log4J in your
application.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-12.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.12.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Log4J (formerly known as Jakarta Log4J) is a highly configurable
logging framework providing hierarchical loggers, various log
destinations, and log formats. Messages are written to Log4J
<fo:inline font-family="monospace" font-size="0.8em">Logger</fo:inline> objects, which represent a specific
category in a hierarchy of log categories; for example, the
<fo:inline font-family="monospace" font-size="0.8em">com.discursive.Blah</fo:inline> category is a child of the
<fo:inline font-family="monospace" font-size="0.8em">com.discursive</fo:inline> category. All messages sent to a
child category are sent to each ancestor in a tree of
<fo:inline font-family="monospace" font-size="0.8em">Logger</fo:inline> categories. A category can be assigned an
<fo:inline font-family="monospace" font-size="0.8em">Appender</fo:inline> and a <fo:inline font-family="monospace" font-size="0.8em">Layout</fo:inline>; an
<fo:inline font-family="monospace" font-size="0.8em">Appender</fo:inline> controls where a message is sent, and a
<fo:inline font-family="monospace" font-size="0.8em">Layout</fo:inline> defines the formatting and contents of a
message. Log4J ships with a number of <fo:inline font-family="monospace" font-size="0.8em">Appender</fo:inline>
implementations, including <fo:inline font-family="monospace" font-size="0.8em">SMTPAppender</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">RollingFileAppender</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">SocketAppender</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">SyslogAppender</fo:inline>,
and <fo:inline font-family="monospace" font-size="0.8em">NTEventLogAppender</fo:inline>. Log4J also ships with a
number of <fo:inline font-family="monospace" font-size="0.8em">Layout</fo:inline> implementations, including
<fo:inline font-family="monospace" font-size="0.8em">XMLLayout</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">PatternLayout</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">HTMLLayout</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">DateLayout</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-12.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.12.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about the Apache Logging Services project, see
the Logging Services project page at <fo:inline font-family="monospace" font-size="0.8em">http://logging.apache.org</fo:inline>. For more
information about the Apache Log4J project, see the Log4J project
page at <fo:inline font-family="monospace" font-size="0.8em">http://logging.apache.org/log4j/docs/</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-13"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Configuring Log4J with a Properties File</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.13. Configuring Log4J with a Properties File</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-13.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.13.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to use Log4J, and you would like to configure it with a
properties file.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-13.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.13.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use the <fo:inline font-family="monospace" font-size="0.8em">BasicConfigurator</fo:inline> to read a
<fo:inline font-family="monospace" font-size="0.8em">log4j.properties</fo:inline> file resource from the
classpath. The following code configures Log4J from a resource named
<fo:inline font-family="monospace" font-size="0.8em">log4j.properties</fo:inline>, and logs two messages:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_7_tt312">import org.apache.log4j.PropertyConfigurator;
import org.apache.log4j.Logger;

URL log4Jresource = this.getClass( ).getResource("log4j.properties");
PropertyConfigurator.configure( log4Jresource );

Logger log = Logger.getLogger( "com.discursive.SomeApp" );
log.info( "This is a log message" );
log.error( "This is an error message" );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">log4j.properties</fo:inline> file contains a basic Log4J
configuration that sets the root category logging level to
<fo:inline font-family="monospace" font-size="0.8em">WARN</fo:inline> and the application's
logging level to <fo:inline font-family="monospace" font-size="0.8em">DEBUG</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_7_tt313"># All logging output sent to standard out and a file
# WARN is default logging level
log4j.rootCategory=WARN, STDOUT, FILE

# Application logging level is DEBUG
log4j.logger.com.discursive=DEBUG

# Configure the Standard Out Appender
log4j.appender.STDOUT=org.apache.log4j.ConsoleAppender
log4j.appender.STDOUT.layout=org.apache.log4j.PatternLayout
log4j.appender.STDOUT.layout.ConversionPattern=%5p (%F:%L) %m%n

# Configure a rolling file appender
log4j.appender.FILE=org.apache.log4j.RollingFileAppender
log4j.appender.FILE.File=output.log
log4j.appender.FILE.MaxFileSize=2000KB
log4j.appender.FILE.MaxBackupIndex=5
log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
log4j.appender.FILE.layout.ConversionPattern=%d %-5p %c - %m%n</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example prints a single info message to the console with the
following format:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_7_tt314"> INFO (Sample.java:24) This is a log message
ERROR (Sample.java:25) This is an error message</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">rootCategory</fo:inline> is configured to send all log
messages to the console and a <fo:inline font-family="monospace" font-size="0.8em">RollingFileAppender</fo:inline>.
A file named <fo:inline font-family="monospace" font-size="0.8em">output.log</fo:inline> contains the following
content after this code has been executed:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_7_tt315">2004-06-14 00:12:22,324  INFO Sample - This is a log message
2004-06-14 00:12:22,326 ERROR Sample - This is an error message</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-13.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.13.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">PropertyConfigurator.configure()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2844"><!--PropertyConfigurator.configure( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2845"><!--methods, PropertyConfigurator.configure(
)--></fo:wrapper> takes a URL referencing a resource to be
loaded from the classpath. This properties file is read and Log4J is
configured to send all messages to both the console and a file.
Content is written to a file using a
<fo:inline font-family="monospace" font-size="0.8em">RollingFileAppender</fo:inline>, which writes to a file until
it reaches a configurable maximum size (2 MB). Once this size has
been reached, a <fo:inline font-family="monospace" font-size="0.8em">RollingFileAppender</fo:inline> will move the
existing <fo:inline font-family="monospace" font-size="0.8em">output.log</fo:inline> file to a file named
<fo:inline font-family="monospace" font-size="0.8em">output.log.1</fo:inline> and create a new
<fo:inline font-family="monospace" font-size="0.8em">output.log</fo:inline> file. As configured in the previous
example, the <fo:inline font-family="monospace" font-size="0.8em">RollingFileAppender</fo:inline> will keep five
backup log files, moving <fo:inline font-family="monospace" font-size="0.8em">output.log.1</fo:inline> to
<fo:inline font-family="monospace" font-size="0.8em">output.log.2</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">output.log</fo:inline>
to <fo:inline font-family="monospace" font-size="0.8em">output.log.1</fo:inline> the next time a log
file's maximum size has been reached.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The Solution configures the default logging level to be
<fo:inline font-family="monospace" font-size="0.8em">WARN</fo:inline>, meaning that all log messages lower on the
level hierarchy will not be sent to appenders. Log4J has five default
levels, and they are listed in order of importance:
<fo:inline font-family="monospace" font-size="0.8em">DEBUG</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">INFO</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">WARN</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">ERROR</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">FATAL</fo:inline>. If a category is configured with a logging
level of <fo:inline font-family="monospace" font-size="0.8em">ERROR</fo:inline>, only <fo:inline font-family="monospace" font-size="0.8em">ERROR</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">FATAL</fo:inline> messages are sent to appenders, and if a
category is configured with a logging level of
<fo:inline font-family="monospace" font-size="0.8em">DEBUG</fo:inline>, all logging messages are sent to appenders.
If you are only interested in the debugging output from your own
program, set the <fo:inline font-family="monospace" font-size="0.8em">rootCategory</fo:inline> to a high logging
level, and override that level for your
application's classes.
<fo:inline font-family="monospace" font-size="0.8em">log4j.logger.com.discursive=DEBUG</fo:inline> overrides the
<fo:inline font-family="monospace" font-size="0.8em">rootCategory</fo:inline>'s logging level for
every topic at or below the <fo:inline font-family="monospace" font-size="0.8em">com.discursive</fo:inline> logging
category.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-13.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.13.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The properties file shown in the Solution should be used as a
starting point for Log4J configuration. For more information about
various implementations of <fo:inline font-family="monospace" font-size="0.8em">Appender</fo:inline> or syntax for
<fo:inline font-family="monospace" font-size="0.8em">ConversionPattern</fo:inline>, see the Log4J <fo:wrapper id="jakartackbk-CHP-7-ITERM-2846"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2847"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2848"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2849"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2850"><!----></fo:wrapper>API
documentation at <fo:inline font-family="monospace" font-size="0.8em">http://logging.apache.org/log4j/docs/api/index.html</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-14"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Configuring Log4J with XML</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.14. Configuring Log4J with XML</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-14.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.14.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to configure Log4J <fo:wrapper id="jakartackbk-CHP-7-ITERM-2851"><!--Apache
Log4J, configuration--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2852"><!--configuration, Apache
Log4J--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2853"><!--applications, Log4J--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2854"><!--XML (Extensible Markup
Language), Log4J--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-7-ITERM-2855"><!--documents, XML, Log4J--></fo:wrapper>with
an XML document.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-14.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.14.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use the <fo:inline font-family="monospace" font-size="0.8em">DOMConfigurator</fo:inline> to configure Log4J with an
XML document. The following code configures Log4J from a resource
named <fo:inline font-family="monospace" font-size="0.8em">log4j.xml</fo:inline>, and logs two messages:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_7_tt316">import org.apache.log4j.DOMConfigurator;
import org.apache.log4j.Logger;

URL log4Jresource = this.getClass( ).getResource("log4j.xml");
DOMConfigurator.configure( lof4Jresource );

Logger log = Logger.getLogger( "com.discursive.SomeApp" );
log.info( "This is a log message" );
log.error( "This is an error message" );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">log4j.xml</fo:inline> file contains a basic Log4J
configuration, which sets the root category logging level to
<fo:inline font-family="monospace" font-size="0.8em">WARN</fo:inline>, and the application's
logging level to <fo:inline font-family="monospace" font-size="0.8em">DEBUG</fo:inline>. This XML document
configures Log4J exactly the way that Log4J was configured by the
previous example; log messages are sent to both the console and a
<fo:inline font-family="monospace" font-size="0.8em">RollingFileAppender</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_7_tt317">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;configuration configDebug="true"&gt;

    &lt;appender name="STDOUT" class="org.apache.log4j.ConsoleAppender"&gt;
        &lt;layout class="org.apache.log4j.PatternLayout"&gt;
            &lt;param name="ConversionPattern" value="%5p (%F:%L) %m%n"/&gt;
        &lt;/layout&gt;        
    &lt;/appender&gt;

    &lt;appender name="FILE" class="org.apache.log4j.RollingFileAppender"&gt;
           &lt;param name="File" value="output.log" /&gt;    
           &lt;param name="MaxFileSize" value="2000KB" /&gt;    
           &lt;param name="MaxBackupIndex" value="5" /&gt;    
           &lt;layout class="org.apache.log4j.PatternLayout"&gt;
             &lt;param name="ConversionPattern" value="%d %-5p %c - %m%n"/&gt;
           &lt;/layout&gt;      
    &lt;/appender&gt;

    &lt;category name="com.discursive"&gt;
      &lt;priority value="DEBUG" /&gt;
    &lt;/category&gt;
    
    &lt;root&gt;
       &lt;priority value="WARN"/&gt;
       &lt;appender-ref ref="STDOUT" /&gt; 
       &lt;appender-ref ref="FILE" /&gt; 
    &lt;/root&gt;
    
&lt;/configuration&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This configuration will produce the same output as the previous
recipe. The only difference between this recipe and the last is that
XML is used to configure Log4J.</fo:block></fo:block><fo:block id="jakartackbk-CHP-7-SECT-14.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">7.14.3. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about Log4J, see the Log4J project page at
<fo:inline font-family="monospace" font-size="0.8em">http://logging.apache.org/log4</fo:inline>.</fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="false" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>Math</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>Math</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"/></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif" margin-left="0pc"/></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block id="jakartackbk-CHP-8"><fo:block font-family="serif"><fo:block margin-left="0pc"><fo:block text-align="left" font-weight="bold" font-size="21.6pt"><fo:block keep-with-next.within-column="always" space-before.optimum="12pt" space-before.minimum="12pt * 0.8" space-before.maximum="12pt * 1.2" hyphenate="false" text-align="left" start-indent="0pc" word-spacing="-0.1em" letter-spacing="-0.05em" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 8. Math</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="ch08-2-fm2xml"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Introduction</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.1. Introduction</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In recent years, Java has lost its reputation as a language suffering
from serious performance problems. Although the debate still rages on
and various benchmarks show conflicting results, improvements to the
JVM, the compiler, and a more intelligent garbage collector have
boosted performance to levels on par with C++. Java has never been
the traditional language-of-choice for scientific computing,
numerical methods, or high-performance computing, but, as performance
improves, there are fewer reasons to avoid using Java for numerical
computing. It is no longer inconceivable to consider Java when
implementing systems involving complex mathematics, and Jakarta
Commons contains two projects that provide some very basic math
capabilities: Commons Lang and Commons Math.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The first four recipes in this chapter deal with math utilities found
in Commons Lang. This includes a class that represents fractions,
finding the minimum and maximum values in an array, representing a
range of numbers, and convenient ways to retrieve different random
variables. Commons Lang was introduced in <fo:basic-link internal-destination="jakartackbk-CHP-1" text-decoration="underline" color="blue">Chapter 1</fo:basic-link>, and instructions for downloading and
installing Commons Lang can be found in <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1" text-decoration="underline" color="blue">Recipe 1.1</fo:basic-link>. The remainder of this chapter deals with
Jakarta Commons Math. Recipes involving Commons Math deal with
complex numbers, the calculation of univariate statistics, solving a
system of linear equations, and establishing a relationship between
two independent variables. Instructions for downloading and
installing Commons Math can be found in <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-5" text-decoration="underline" color="blue">Recipe 8.5</fo:basic-link>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Using Fractions</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.1. Using Fractions</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-1.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.1.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to work with fractions<fo:wrapper id="jakartackbk-CHP-8-ITERM-2856"><!--Commons
Math, fractions--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2857"><!--fractions--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2858"><!--math, fractions--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2859"><!--applications, math, fractions--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2860"><!--documents, math, fractions--></fo:wrapper>
supplied by the user, such as 3 4/5 and 134/21. Your application
needs to parse, multiply, and reduce fractions.</fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-1.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.1.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use Jakarta Commons Lang's
<fo:inline font-family="monospace" font-size="0.8em">Fraction</fo:inline> class to parse and manipulate fractions.
The following code demonstrates the parsing of a
<fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> containing a fraction:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt318">import org.apache.commons.lang.math.Fraction;

String userInput = "23 31/37";
Fraction fraction = Fraction.getFraction( userInput );
double value = fraction.doubleValue( );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> "23
31/37" is converted to a <fo:inline font-family="monospace" font-size="0.8em">double</fo:inline>
value of <fo:inline font-family="monospace" font-size="0.8em">23.837837</fo:inline>. A <fo:inline font-family="monospace" font-size="0.8em">Fraction</fo:inline>
object is created by calling the <fo:inline font-family="monospace" font-size="0.8em">Fraction.getFraction(
)</fo:inline> method, and <fo:inline font-family="monospace" font-size="0.8em">double</fo:inline> value of the
<fo:inline font-family="monospace" font-size="0.8em">Fraction</fo:inline> object is obtained with
<fo:inline font-family="monospace" font-size="0.8em">fraction.doubleValue( )</fo:inline>. </fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-1.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.1.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">Fraction</fo:inline> class provides a number of operations
that can be used to simplify the following expression to an improper
fraction. The following code evaluates the expression in <fo:basic-link internal-destination="jakartackbk-CHP-8-FIG-1" text-decoration="underline" color="blue">Figure 8-1</fo:basic-link> using <fo:inline font-family="monospace" font-size="0.8em">Fraction</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt319">import org.apache.commons.lang.math.Fraction;

Fraction numer1 = Fraction.getFraction( 3, 4 );
Fraction numer2 = Fraction.getFraction( 51, 3509 );

Fraction numerator = numer1.multiplyBy( numer2 );
Fraction denominator = Fraction.getFraction( 41, 59 );

Fraction fraction = numerator.divideBy( denominator );
Fraction result = fraction.reduce( );

System.out.println( "as Fraction: " + result.reduce( ).toString( ) );
System.out.println( "as double: " + result.doubleValue( ) );</fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-8-FIG-1"><fo:block id="I_8_tt320"><fo:external-graphic src="/Users/tobrien/Library/Code/common-java-cookbook/content/target/classes/docbook/figs/print/jccb_0801.pdf" width="163px" height="93px" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:application/pdf"/></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-previous.within-column="always">Figure 8-1. Expression to be evaluated with Fraction</fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous example creates an instance of
<fo:inline font-family="monospace" font-size="0.8em">Fraction</fo:inline> by calling the static
<fo:inline font-family="monospace" font-size="0.8em">getFraction(int numerator, int denominator)</fo:inline>
method. Fraction objects are then multiplied and divided with the
<fo:inline font-family="monospace" font-size="0.8em">multiplyBy( )</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">divideBy( )</fo:inline>
methods of <fo:inline font-family="monospace" font-size="0.8em">Fraction</fo:inline>. And, the final call to
<fo:inline font-family="monospace" font-size="0.8em">reduce( )</fo:inline> reduces the <fo:inline font-family="monospace" font-size="0.8em">Fraction</fo:inline>
to the smallest possible denominator. This example executes and
prints the following output to the console:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt321">Expression as Fraction: 9027/575476
Expression as double: 0.015686145034719084</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">An improper fraction is a fraction such that X/Y &gt; 1 (i.e.,
"135/23" or
"3/2"). <fo:inline font-family="monospace" font-size="0.8em">Fraction</fo:inline>
provides the ability to convert improper fractions to proper
fractions as demonstrated in the following example:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt322">import org.apache.commons.lang.math.Fraction;

String userInput = "101/99";
String properString = Fraction.getFraction(userInput).toProperString( );
// properString is now "1 2/99"</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-CHP-8-NOTE-61"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/warning.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Warning</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                  <fo:inline font-family="monospace" font-size="0.8em">Fraction</fo:inline> does not automatically reduce contents,
and it is important to call <fo:inline font-family="monospace" font-size="0.8em">reduce( )</fo:inline> before
performing any arithmetic with the <fo:inline font-family="monospace" font-size="0.8em">Fraction</fo:inline> class
to reduce the risk of overflow. For example,
<fo:inline font-family="monospace" font-size="0.8em">Fraction.getFraction( 10000, 100000 ).pow( 6 )</fo:inline>
should equal <fo:inline font-family="monospace" font-size="0.8em">1.0E-6</fo:inline>, but, because
<fo:inline font-family="monospace" font-size="0.8em">Fraction</fo:inline> simply multiplies each numerator and
denominator without reducing the fraction, the result of this
statement will be <fo:inline font-family="monospace" font-size="0.8em">1.0</fo:inline>. When raised to the power of
<fo:inline font-family="monospace" font-size="0.8em">6</fo:inline>, the <fo:inline font-family="monospace" font-size="0.8em">Fraction</fo:inline> object quickly
becomes <fo:inline font-family="monospace" font-size="0.8em">Fraction.getFraction(Integer.MAX_VALUE,
Integer.MAX_VALUE)</fo:inline> or <fo:inline font-family="monospace" font-size="0.8em">1.0</fo:inline>. Call
<fo:inline font-family="monospace" font-size="0.8em">reduce( )</fo:inline>
                  <fo:wrapper id="jakartackbk-CHP-8-ITERM-2861"><!--reduce( )
method--></fo:wrapper>
                  <fo:wrapper id="jakartackbk-CHP-8-ITERM-2862"><!--methods, reduce(
)--></fo:wrapper> liberally or you may have occasion to curse
this <fo:inline font-family="monospace" font-size="0.8em">Fraction</fo:inline> class.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-8-TABLE-1" text-decoration="underline" color="blue">Table 8-1</fo:basic-link> lists a sampling of methods available on
the <fo:inline font-family="monospace" font-size="0.8em">Fraction</fo:inline> class.</fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-8-TABLE-1"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 8-1. Methods on Commons Lang Fraction</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-left-style="solid" border-right-style="solid" border-top-style="solid" border-bottom-style="solid" border-left-width="0.1pt" border-right-width="0.1pt" border-top-width="0.1pt" border-bottom-width="0.1pt" border-left-color="black" border-right-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="17.4cm"><fo:table-column column-number="1"/><fo:table-column column-number="2"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block font-weight="bold"><fo:wrapper id="jakartackbk-CHP-8-ITERM-2863"><!--Commons Lang, fractions--></fo:wrapper>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Method</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Description</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">abs( )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Returns the absolute value of a <fo:inline font-family="monospace" font-size="0.8em">Fraction</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">add(Fraction fraction)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Adds two <fo:inline font-family="monospace" font-size="0.8em">Fraction</fo:inline> objects together</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">subtract(Fraction fraction)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Subtracts the parameter from the current <fo:inline font-family="monospace" font-size="0.8em">Fraction</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">multiplyBy(Fraction fraction)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Multiplies the parameter by the current <fo:inline font-family="monospace" font-size="0.8em">Fraction</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">divideBy(Fraction fraction)</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Divides the current <fo:inline font-family="monospace" font-size="0.8em">Fraction</fo:inline> by the parameter</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">reduce( )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Reduces the <fo:inline font-family="monospace" font-size="0.8em">Fraction</fo:inline> to the smallest denominator</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">negate( )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Returns -1 * <fo:inline font-family="monospace" font-size="0.8em">Fraction</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">invert( )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Swaps the numerator and denominator</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">getNumerator( )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Returns the numerator</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">getDenominator( )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Returns the denominator</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">getProperNumerator( )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Returns the proper numerator</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">getProperWhole( )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Returns the proper whole number</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">pow( )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Raises a <fo:inline font-family="monospace" font-size="0.8em">Fraction</fo:inline> to the specified power</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-1.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.1.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about downloading Commons Lang, see <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1" text-decoration="underline" color="blue">Recipe 1.1</fo:basic-link>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Finding the Maximum and Minimum in an Array</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.2. Finding the Maximum and Minimum in an Array</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-2.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.2.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to retrieve the maximum and minimum values from a
<fo:inline font-family="monospace" font-size="0.8em">double[]</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">float[]</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">long[]</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">int[]</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">short[]</fo:inline>, or <fo:inline font-family="monospace" font-size="0.8em">byte[]</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-2.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.2.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use Commons Lang <fo:inline font-family="monospace" font-size="0.8em">NumberUtils.max( )</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">NumberUtils.min( )</fo:inline> to retrieve the minimum or
maximum values from an array of primitives. The following code
retrieves the minimum and maximum values from a
<fo:inline font-family="monospace" font-size="0.8em">double[]</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt323">import org.apache.commons.lang.math.NumberUtils;

double[] array = {0.2, 0.4, 0.5, -3.0, 4.223, 4.226};

double max = NumberUtils.max( array ); // returns 4.226
double min = NumberUtils.min( array ); // returns -3.0</fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-2.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.2.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">NumberUtils.min( )</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">NumberUtils.max()</fo:inline> both accept <fo:inline font-family="monospace" font-size="0.8em">double[]</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">float[]</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">long[]</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">int[]</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">short[]</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">byte[]</fo:inline>. If the array is empty or
<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>, both <fo:inline font-family="monospace" font-size="0.8em">NumberUtils.min( )</fo:inline>
and <fo:inline font-family="monospace" font-size="0.8em">NumberUtils.max( )</fo:inline> will return an
<fo:inline font-family="monospace" font-size="0.8em">IllegalArgumentException</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Jakarta Commons Math also contains a class that can find the minimum
and maximum value in a <fo:inline font-family="monospace" font-size="0.8em">double[]</fo:inline>. The following
example uses the <fo:inline font-family="monospace" font-size="0.8em">Max</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">Min</fo:inline>
classes from Commons Math to evaluate a <fo:inline font-family="monospace" font-size="0.8em">double[]</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt324">
import 
org.apache.commons.math.stat.univariate.rank.Max;

import org.apache.commons.math.stat.univariate.rank.Min;

double[] array = {0.2, 0.4, 0.5, -3.0, 4.223, 4.226};

Max maximum = new Max( );

Min minimum = new Min( );

double max = maximum.evaluate( array, 0, array.length );

double min = minimum.evaluate( array, 0, array.length );</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Using Number Ranges</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.3. Using Number Ranges</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-3.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.3.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to define a range<fo:wrapper id="jakartackbk-CHP-8-ITERM-2864"><!--Commons
Math, number ranges--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2865"><!--number ranges--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2866"><!--math, number
ranges--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2867"><!--applications, math, number
ranges--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2868"><!--documents, math, number
ranges--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2869"><!--ranges,
number--></fo:wrapper> of acceptable values for a variable, and
test to see if that variable is within those boundaries.</fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-3.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.3.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use an implementation of <fo:inline font-family="monospace" font-size="0.8em">Range</fo:inline>, an interface that
defines a simple numerical range. There are a number of different
implementations for different types:
<fo:inline font-family="monospace" font-size="0.8em">NumberRange</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2870"><!--NumberRange--></fo:wrapper>,
<fo:inline font-family="monospace" font-size="0.8em">DoubleRange</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2871"><!--DoubleRange--></fo:wrapper>,
<fo:inline font-family="monospace" font-size="0.8em">FloatRange</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2872"><!--FloatRange--></fo:wrapper>,
<fo:inline font-family="monospace" font-size="0.8em">IntRange</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2873"><!--IntRange--></fo:wrapper>,
and
<fo:inline font-family="monospace" font-size="0.8em">LongRange</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2874"><!--LongRange--></fo:wrapper>. The following example demonstrates the
use of <fo:inline font-family="monospace" font-size="0.8em">DoubleRange</fo:inline> to verify that a variable is
within a valid range. A <fo:inline font-family="monospace" font-size="0.8em">DoubleRange</fo:inline> is created
with minimum and maximum values, and a value is tested by
<fo:inline font-family="monospace" font-size="0.8em">DoubleRange</fo:inline> using a method named
<fo:inline font-family="monospace" font-size="0.8em">containsDouble(
)</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2875"><!--containsDouble( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2876"><!--methods, containsDouble(
)--></fo:wrapper>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt325">import org.apache.commons.lang.math.DoubleRange;
import org.apache.commons.lang.math.Range;

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Range safeSpeed = new DoubleRange( 0.0, 65.0 );</fo:inline>

double currentSpeed = getCurrentSpeed( );
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">if( !safeSpeed.containsDouble( currentSpeed ) ) {</fo:inline>
    System.out.println( "Warning, current speed is unsafe." );
}</fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-3.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.3.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Additionally, one can also test to see if another
<fo:inline font-family="monospace" font-size="0.8em">Range</fo:inline> is contained within a
<fo:inline font-family="monospace" font-size="0.8em">Range</fo:inline>, or if a <fo:inline font-family="monospace" font-size="0.8em">Range</fo:inline> overlaps
another <fo:inline font-family="monospace" font-size="0.8em">Range</fo:inline>. The following example demonstrates
the use of <fo:inline font-family="monospace" font-size="0.8em">containsRange(
)</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2877"><!--containsRange( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2878"><!--methods, containsRange(
)--></fo:wrapper> to determine if a <fo:inline font-family="monospace" font-size="0.8em">Range</fo:inline>
is entirely contained within another <fo:inline font-family="monospace" font-size="0.8em">Range</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt326">import org.apache.commons.lang.math.Range;
import org.apache.commons.lang.math.IntRange;
import org.apache.commons.lang.math.NumberUtils;

double recordHigh = getRecordHigh( );
double recordLow = getRecordLow( );

IntRange recordRange = new IntRange( recordLow, recordHigh );

int todayTemp = getTodaysMaxTemp( );
IntRange daysRange = new IntRange( NumberUtils.min( todayTemp ),
                                   NumberUtils.max( todayTemp ) );

if( !recordRange.containsRange( todayTemp ) ) {
    System.out.println( "Today is a record temperature day!" );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous code creates a <fo:inline font-family="monospace" font-size="0.8em">Range</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">recordRange</fo:inline>, from the record high and low
temperatures. It then creates <fo:inline font-family="monospace" font-size="0.8em">daysRange</fo:inline>, which is
a <fo:inline font-family="monospace" font-size="0.8em">Range</fo:inline> of the current day's high
and low temperatures. If <fo:inline font-family="monospace" font-size="0.8em">dayRange</fo:inline> is not entirely
contained within the <fo:inline font-family="monospace" font-size="0.8em">recordRange</fo:inline>, then the current
day contains a record temperature and
<fo:inline font-family="monospace" font-size="0.8em">recordRange.containsRange(daysRange)</fo:inline> will return
<fo:inline font-family="monospace" font-size="0.8em">false</fo:inline>. <fo:inline font-family="monospace" font-size="0.8em">containsRange( )</fo:inline> returns
<fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> if every value in the containing range occurs
in the contained range, and <fo:inline font-family="monospace" font-size="0.8em">overlapsRange( )</fo:inline>
returns <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> if two <fo:inline font-family="monospace" font-size="0.8em">Range</fo:inline>
objects share any common value. <fo:inline font-family="monospace" font-size="0.8em">NumberUtils</fo:inline> is
used to retrieve the maximum and minimum values from the
<fo:inline font-family="monospace" font-size="0.8em">todayTemp</fo:inline> array.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In another example, a <fo:inline font-family="monospace" font-size="0.8em">Range</fo:inline> object is used to
ascertain the state of an element from a temperature measurement.
Elemental Gold (Au) melts at 1337.33 Kelvin and boils at 3129.15
Kelvin. The following code is used to read the temperature from a
thermometer and print the current state of the element:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt327">import org.apache.commons.lang.math.Range;
import org.apache.commons.lang.math.DoubleRange;

double melting = 1337.33;
double boiling = 3129.15

// State ranges for element Au
Object[] stateRanges = 
    new Object[][]{{"solid" , new DoubleRange( 0.0, melting )},
                    {"liquid", new DoubleRange( melting, boiling )},
                    {"gas", new DoubleRange( boiling,Double.INFINITY) };

// Read measurement from thermometer
double temp = themometer.getReading( );
String state = "unknown";

// Test the state 
for( int i = 0; i &lt; stateRanges.length; i++ ) {
    DoubleRange stateRange = (DoubleRange) stateRanges[i][1];
    if( stateRange.contains( temp ) ) {
        state = (String) stateRanges[i][0];
    }
}

System.out.println( "The substance is in a " + state + " state." );

// If the temperature is a temperate 293 K, this line would print 
// "The Gold is in a solid state."</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The ranges in this example overlap; the <fo:inline font-family="monospace" font-size="0.8em">solid</fo:inline>
range ends at <fo:inline font-family="monospace" font-size="0.8em">melting</fo:inline>, and the
<fo:inline font-family="monospace" font-size="0.8em">liquid</fo:inline> range begins at <fo:inline font-family="monospace" font-size="0.8em">melting</fo:inline>.
Because each <fo:inline font-family="monospace" font-size="0.8em">Range</fo:inline> is tested in a defined order,
each <fo:inline font-family="monospace" font-size="0.8em">Range</fo:inline> object in this example is lower- and
upper-bound inclusive. If the <fo:inline font-family="monospace" font-size="0.8em">temp</fo:inline> variable has
the same value as <fo:inline font-family="monospace" font-size="0.8em">melting</fo:inline>, the program will
indicate solid state, and if the <fo:inline font-family="monospace" font-size="0.8em">temp</fo:inline> variable has
the same value as <fo:inline font-family="monospace" font-size="0.8em">boiling</fo:inline>, this program will
signify the <fo:inline font-family="monospace" font-size="0.8em">liquid</fo:inline> state.</fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-3.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.3.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about downloading Commons Lang, see <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1" text-decoration="underline" color="blue">Recipe 1.1</fo:basic-link>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Generating Random Variables</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.4. Generating Random Variables</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-4.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.4.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">J2SE 1.4 includes a
<fo:inline font-family="monospace" font-size="0.8em">java.lang.Math</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2879"><!--java.lang.Math
class--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2880"><!--classes, java.lang.Math--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2881"><!--Commons
Math, random variables--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2882"><!--random variables--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2883"><!--math, random
variables--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2884"><!--applications, math, random
variables--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2885"><!--documents, math, random
variables--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2886"><!--variables, random--></fo:wrapper>
class that provides a mechanism to get a random
<fo:inline font-family="monospace" font-size="0.8em">double</fo:inline> value between <fo:inline font-family="monospace" font-size="0.8em">0.0</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">1.0</fo:inline>, but you need to create random
<fo:inline font-family="monospace" font-size="0.8em">boolean</fo:inline> values, or random <fo:inline font-family="monospace" font-size="0.8em">int</fo:inline>
variables between zero and a specified number.</fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-4.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.4.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Generate random variables with Commons Lang
<fo:inline font-family="monospace" font-size="0.8em">RandomUtils</fo:inline>, which provides a mechanism to
generate random <fo:inline font-family="monospace" font-size="0.8em">int</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">long</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">float</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">double</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">boolean</fo:inline> variables. The following code generates a
random integer between zero and the value specified in the parameter
to <fo:inline font-family="monospace" font-size="0.8em">nextInt( )</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2887"><!--nextInt( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2888"><!--methods, nextInt(
)--></fo:wrapper>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt328">import org.apache.commons.lang.math.RandomUtils;

// Create a random integer between 0 and 30
int maxVal = 30;
int randomInt = RandomUtils.nextInt( maxVal );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Or, if your application needs a random
<fo:inline font-family="monospace" font-size="0.8em">boolean</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2889"><!--Boolean
variables--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2890"><!--variables, Boolean--></fo:wrapper>
variable, create one with a call to the static method
<fo:inline font-family="monospace" font-size="0.8em">nextBoolean( )</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt329">import org.apache.commons.lang.math.RandomUtils;
 
boolean randomBool = RandomUtils.nextBoolean( );</fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-4.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.4.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A frequent argument for not using a utility like
<fo:inline font-family="monospace" font-size="0.8em">RandomUtils</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2891"><!--RandomUtils--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2892"><!--tools, randomUtils--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2893"><!--utilities, RandomUtils--></fo:wrapper>
is that the same task can be achieved with only one line of code. For
example, if you need to retrieve a random integer between 0 and 32,
you could write the following code:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt330">int randomInt = (int) Math.floor( (Math.random( ) * (double) maxVal) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">While this statement may seem straightforward, it does contain a
conceptual complexity not present in
<fo:inline font-family="monospace" font-size="0.8em">RandomUtils.nextInt(maxVal)</fo:inline>.
<fo:inline font-family="monospace" font-size="0.8em">RandomUtils.nextInt(maxVal)</fo:inline> is a simple statement:
"I need a random integer between 0 and
<fo:inline font-family="monospace" font-size="0.8em">maxVal</fo:inline>"; the statement without
<fo:inline font-family="monospace" font-size="0.8em">RandomUtils</fo:inline> is translated to a more complex
statement:</fo:block><fo:block margin-left="0.5in" margin-right="0.5in" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em"><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">I'm going to take a random <fo:inline font-family="monospace" font-size="0.8em">double</fo:inline>
between 0.0 and 1.0, and multiply this number by
<fo:inline font-family="monospace" font-size="0.8em">maxVal</fo:inline>, which has been cast to a
<fo:inline font-family="monospace" font-size="0.8em">double</fo:inline>. This result should be a random
<fo:inline font-family="monospace" font-size="0.8em">double</fo:inline> between 0.0 and <fo:inline font-family="monospace" font-size="0.8em">maxVal</fo:inline>,
which I will then pass to <fo:inline font-family="monospace" font-size="0.8em">Math.floor( )</fo:inline> and cast
to an <fo:inline font-family="monospace" font-size="0.8em">int</fo:inline>.</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">While the previous statement does achieve the same task as
<fo:inline font-family="monospace" font-size="0.8em">RandomUtils</fo:inline>, it does so by rolling-up multiple
statements into a single line of code: two casts, a call to
<fo:inline font-family="monospace" font-size="0.8em">floor( )</fo:inline>, a call to <fo:inline font-family="monospace" font-size="0.8em">random()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2894"><!--random( ) method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2895"><!--methods, random(
)--></fo:wrapper>, and a multiplication. You may be able to
instantly recognize this pattern as code that retrieves a random
integer, but someone else may have a completely different approach.
When you start to use some of the smaller utilities from Jakarta
Commons systemwide, an application will tend toward greater
readability; these small reductions in conceptual complexity quickly
add up.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-5"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Obtaining Commons Math</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.5. Obtaining Commons Math</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-5.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.5.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to use Jakarta Commons Math to work with complex numbers,
matrices, statistics, or linear equations.</fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-5.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.5.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Download Jakarta Commons Math and put the necessary JAR files in your
classpath. Because Commons Math has not yet been released, you will
need to download the latest nightly snapshot of Commons Math from
<fo:inline font-family="monospace" font-size="0.8em">http://cvs.apache.org/builds/jakarta-commons/nightly/commons-math/</fo:inline>.
Once you have downloaded the latest nightly build, uncompress the
distribution, and place the
<fo:inline font-family="monospace" font-size="0.8em">commons-math-1.0-RC1.jar</fo:inline> file in your classpath.</fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-5.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.5.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Jakarta Commons Math was created to provide some more advanced
mathematical capabilities under an Apache-style license. Commons Math
provides classes to work with complex numbers, utilities to calculate
statistics, a matrix implementation, special functions, continued
fractions, root-finding, interpolation, and bivariate regression.
Commons Math depends on Commons Collections 3.0, Commons Lang 2.0,
and Commons Logging 1.0.3. To obtain these dependencies, see
<fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1" text-decoration="underline" color="blue">Recipe 1.1</fo:basic-link>, <fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-1" text-decoration="underline" color="blue">Recipe 5.1</fo:basic-link>, and
<fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-9" text-decoration="underline" color="blue">Recipe 7.9</fo:basic-link>.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-CHP-8-NOTE-63"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/warning.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Warning</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">By the time this book is published, Commons Math 1.0 may be released.
Make sure you look at the Commons Math project page (<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/math</fo:inline>) and
check for a release before downloading.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">While the previous four recipes demonstrated classes and utilities
available in Jakarta Commons Lang, the next five recipes demonstrate
classes and utilities from Jakarta Commons Math. Simpler math
utilities, which have wide application, will frequently be included
in Commons Lang, and more complex utilities will be added to Commons
Math. As both components continue to evolve, you may notice some
overlap between the feature-set of Commons Lang and Commons Math.</fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-5.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.5.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Commons Math is a relatively new math library primarily motivated by
licensing and community issues; all established math libraries were
covered under a GPL or LGPL license. The Jakarta Commons community
saw an opportunity to create a library, and through the hard work of
a few dedicated developers in Commons, a very useful math library
will soon be released. That being said, if you need a more mature
math library, and your project can use LGPL components, look at the
Colt Distribution from CERN (<fo:inline font-family="monospace" font-size="0.8em">http://hoschek.home.cern.ch/hoschek/colt/</fo:inline>).</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For the authoritative cookbook of mathematics, pick up a copy of
<fo:inline font-style="italic">Numerical Recipes in C++</fo:inline> or <fo:inline font-style="italic">Numerical
Recipes in C</fo:inline> (Cambridge University Press). These classic
tomes contain a huge library of code and examples, but be forewarned,
the mathematics will quickly intimidate the faint of math. More
information about this indispensable text can be found at the
Numerical Recipes website (<fo:inline font-family="monospace" font-size="0.8em">http://www.nr.com/</fo:inline>). Unlike all the
components described throughout this book, the code and examples from
both of these books is covered under a very restrictive license
described at <fo:inline font-family="monospace" font-size="0.8em">http://www.numerical-recipes.com/infotop.html#distinfo</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-6"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Calculating Simple Univariate Statistics</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.6. Calculating Simple Univariate Statistics</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-6.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.6.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to calculate <fo:wrapper id="jakartackbk-CHP-8-ITERM-2896"><!--Commons
Math, univariate statistic
calculations--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2897"><!--univariate
statistic calculations--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2898"><!--math, univariate statistic
calculations--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2899"><!--applications, math, univariate
statistic calculations--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2900"><!--documents, math, univariate
statistic calculations--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2901"><!--calculations, univariate
statistics--></fo:wrapper>univariate statistics such as mean,
median, variance, minimum and maximum.</fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-6.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.6.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use Commons
Math's<fo:wrapper id="jakartackbk-CHP-8-ITERM-2902"><!--StatUtils--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2903"><!--tools, StatUtils--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2904"><!--utilities, StatUtils--></fo:wrapper>
               <fo:inline font-family="monospace" font-size="0.8em">StatUtils</fo:inline> to calculate simple univariate
statistics. The following example uses <fo:inline font-family="monospace" font-size="0.8em">StatUtils</fo:inline>
to calculate simple statistics for a <fo:inline font-family="monospace" font-size="0.8em">double[]</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt331">import org.apache.commons.math.stat.StatUtils;

double[] values = new double[] { 2.3, 5.4, 6.2, 7.3, 23.3 };

System.out.println( "min: " + StatUtils.min( values ) );
System.out.println( "max: " + StatUtils.max( values ) );
System.out.println( "mean: " + StatUtils.mean( values ) );
System.out.println( "product: " + StatUtils.product( values ) );
System.out.println( "sum: " + StatUtils.sum( values ) );
System.out.println( "variance: " + StatUtils.variance( values ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This code executes and prints a few simple statistics to the console,
as follows:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt332">min: 2.3
max: 23.3
mean: 8.9
product: 13097.61036
sum: 44.5
variance: 68.25500000000001</fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-6.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.6.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">StatUtils</fo:inline> delegates these calculations to functors
in the
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.math.stat.univariate.moment</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.math.stat.univariate.rank</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.math.stat.univariate.summary</fo:inline>
packages. The following example uses the individual classes from
these packages to recreate the previous example, and it adds some
measures not available in <fo:inline font-family="monospace" font-size="0.8em">StatUtil</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt333">import org.apache.commons.math.stat.univariate.moment.*;
import org.apache.commons.math.stat.univariate.rank.*;
import org.apache.commons.math.stat.univariate.summary.*;

// Measures from previous example
Min min = new Min( );
Max max = new Max( );
Mean mean = new Mean( );
Product product = new Product( );
Sum sum = new Sum( );
Variance variance = new Variance( );

System.out.println( "min: " + min.evaluate( values ) );
System.out.println( "max: " + max.evaluate( values ) );
System.out.println( "mean: " + mean.evaluate( values ) );
System.out.println( "product: " + product.evaluate( values ) );
System.out.println( "sum: " + sum.evaluate( values ) );
System.out.println( "variance: " + variance.evaluate( values ) );
        
// New measures
Percentile percentile = new Percentile( );
GeometricMean geoMean = new GeometricMean( );
Skewness skewness = new Skewness( );
Kurtosis kurtosis = new Kurtosis( );

System.out.println( "80 percentile value: " + 
                    percentile.evaluate( values, 80.0 ) );
System.out.println( "geometric mean: " + geoMean.evaluate( values ) );
System.out.println( "skewness: " + skewness.evaluate( values ) );
System.out.println( "kurtosis: " + kurtosis.evaluate( values ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous example adds percentile, geometric mean, standard
deviation, skewness, and kurtosis to the available univariate
statistics. The previous example produces the following output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt334">min: 2.3
max: 23.3
mean: 8.9
product: 13097.61036
sum: 44.5
variance: 68.25500000000001
80 percentile value: 20.099999999999998
geometric mean: 6.659450778469037
standard dev: 8.261658429153314
skewness: 1.9446683453691376
kurtosis: 4.102348153299074</fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-6.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.6.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you need a formal definition of a specific moment, rank, or
summary, see MathWorld (<fo:inline font-family="monospace" font-size="0.8em">http://mathworld.wolfram.com</fo:inline>), an invaluable
mathematical reference site from Wolfram, the makers of Mathematica.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-7"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solving a System of Linear Equations</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.7. Solving a System of Linear Equations</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-7.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.7.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to find the values of x,<fo:wrapper id="jakartackbk-CHP-8-ITERM-2905"><!--Commons
Math, linear equations--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2906"><!--linear equations--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2907"><!--math, linear
equations--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2908"><!--applications, math, linear
equations--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2909"><!--documents, math, linear
equations--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2910"><!--linear
equations--></fo:wrapper> y, and z that satisfy the system of
linear equations shown in <fo:basic-link internal-destination="jakartackbk-CHP-8-FIG-2" text-decoration="underline" color="blue">Figure 8-2</fo:basic-link>.</fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-8-FIG-2"><fo:block id="I_8_tt335"><fo:external-graphic src="/Users/tobrien/Library/Code/common-java-cookbook/content/target/classes/docbook/figs/print/jccb_0802.pdf" width="92px" height="55px" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:application/pdf"/></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-previous.within-column="always">Figure 8-2. A system of linear equations</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-7.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.7.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use the
<fo:inline font-family="monospace" font-size="0.8em">RealMatrix</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2911"><!--RealMatrix--></fo:wrapper>
and <fo:inline font-family="monospace" font-size="0.8em">RealMatrixImpl</fo:inline> from Commons Math. Represent
this system of linear equations as matrices in the
<fo:inline font-family="monospace" font-size="0.8em">Ax=B</fo:inline> form, as shown in <fo:basic-link internal-destination="jakartackbk-CHP-8-FIG-3" text-decoration="underline" color="blue">Figure 8-3</fo:basic-link>. Place the coefficients of
<fo:inline font-family="monospace" font-size="0.8em">A</fo:inline> in a <fo:inline font-family="monospace" font-size="0.8em">RealMatrix</fo:inline>, and put
<fo:inline font-family="monospace" font-size="0.8em">B</fo:inline> in a <fo:inline font-family="monospace" font-size="0.8em">double[]</fo:inline>. Call the
<fo:inline font-family="monospace" font-size="0.8em">solve( )</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2912"><!--solve( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2913"><!--methods, solve(
)--></fo:wrapper> method on <fo:inline font-family="monospace" font-size="0.8em">RealMatrix</fo:inline> to
retrieve a <fo:inline font-family="monospace" font-size="0.8em">double[]</fo:inline> of values for x, y, and z that
satisfy this system of equations.</fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-8-FIG-3"><fo:block id="I_8_tt336"><fo:external-graphic src="/Users/tobrien/Library/Code/common-java-cookbook/content/target/classes/docbook/figs/print/jccb_0803.pdf" width="139px" height="53px" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:application/pdf"/></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-previous.within-column="always">Figure 8-3. System of linear equations in Ax=B form</fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The following example takes the
<fo:wrapper id="jakartackbk-CHP-8-ITERM-2914"><!--coefficients--></fo:wrapper>coefficients
and <fo:wrapper id="jakartackbk-CHP-8-ITERM-2915"><!--constants--></fo:wrapper>constants from
<fo:basic-link internal-destination="jakartackbk-CHP-8-FIG-3" text-decoration="underline" color="blue">Figure 8-3</fo:basic-link> and uses a <fo:inline font-family="monospace" font-size="0.8em">RealMatrix</fo:inline>
to solve this system:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt337">import org.apache.commons.math.linear.RealMatrix;
import org.apache.commons.math.linear.RealMatrixImpl;
import org.apache.commons.lang.ArrayUtils;

double[][] coefficients = { { 3.0, 20.0, 89.0 },
                            { 4.0, 40.0, 298.0 },
                            { 7.0, 21.0, 0.42 } };
double[] values = { 1324, 2999, 2039 };

RealMatrix matrix = new RealMatrixImpl( );
matrix.setData( coefficients );
        
double[] answers = matrix.solve( values );

System.out.println( "Answers: " + ArrayUtils.toString( answers ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example solves this system of equations and prints out the
values of x, y, and z using Commons Lang
<fo:inline font-family="monospace" font-size="0.8em">ArrayUtils</fo:inline> to print a <fo:inline font-family="monospace" font-size="0.8em">double[]</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt338">Answers: {400.4839095455532,-36.59139305646149,9.599731825759218}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Using Commons Math, we find that the following values satisfy this
system of equations: x = 400, y = -36, and z = 9.6.</fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-7.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.7.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">To solve these equations, a <fo:inline font-family="monospace" font-size="0.8em">double[][]</fo:inline> of
coefficients is created to represent a 3 3 matrix, and a
<fo:inline font-family="monospace" font-size="0.8em">double[]</fo:inline> of constants is created. The
<fo:inline font-family="monospace" font-size="0.8em">RealMatrix</fo:inline> interface is implemented by
<fo:inline font-family="monospace" font-size="0.8em">RealMatrixImpl</fo:inline>, which stores a matrix as a
<fo:inline font-family="monospace" font-size="0.8em">double[][]</fo:inline>; to populate this
<fo:inline font-family="monospace" font-size="0.8em">double[][]</fo:inline>, pass the
<fo:inline font-family="monospace" font-size="0.8em">double[][]</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">coefficients</fo:inline>, to
the <fo:inline font-family="monospace" font-size="0.8em">setData( )</fo:inline> method of
<fo:inline font-family="monospace" font-size="0.8em">RealMatrixImpl</fo:inline>. To solve the system, the
<fo:inline font-family="monospace" font-size="0.8em">values</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">double[]</fo:inline> is passed to
<fo:inline font-family="monospace" font-size="0.8em">matrix.solve( )</fo:inline>, and a <fo:inline font-family="monospace" font-size="0.8em">double[]</fo:inline>
containing x, y, and z is returned.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This method will not work for every matrix; there are systems of
linear equations that are unsolvable. For example, if one attempts to
find values for the system of equations from <fo:basic-link internal-destination="jakartackbk-CHP-8-FIG-4" text-decoration="underline" color="blue">Figure 8-4</fo:basic-link>, an <fo:inline font-family="monospace" font-size="0.8em">InvalidMatrixException</fo:inline>
will be thrown stating that the matrix is singular. Additionally, if
the number of rows in <fo:inline font-family="monospace" font-size="0.8em">B</fo:inline> does not equal the
number of columns in <fo:inline font-family="monospace" font-size="0.8em">A</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">solve()</fo:inline> will throw an <fo:inline font-family="monospace" font-size="0.8em">InvalidMatrixException</fo:inline>.</fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-8-FIG-4"><fo:block id="I_8_tt339"><fo:external-graphic src="/Users/tobrien/Library/Code/common-java-cookbook/content/target/classes/docbook/figs/print/jccb_0804.pdf" width="53px" height="55px" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:application/pdf"/></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-previous.within-column="always">Figure 8-4. An unsolvable system of equations</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-7.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.7.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about solving systems of linear equations (or,
for that matter, information about anything), see Wikipedia
(<fo:inline font-family="monospace" font-size="0.8em">http://en.wikipedia.org/wiki/System_of_linear_equations</fo:inline>).
<fo:inline font-family="monospace" font-size="0.8em">RealMatixImpl</fo:inline> uses a process known as LU
decomposition to solve this system of equations. For more information
about LU decomposition, see the JavaDoc for the
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.math.linear</fo:inline> package
(<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/math/apidocs/index.html</fo:inline>).</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-8"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Arithmetic with Complex Numbers</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.8. Arithmetic with Complex Numbers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-8.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.8.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to perform arithmetic<fo:wrapper id="jakartackbk-CHP-8-ITERM-2916"><!--Commons
Math, complex numbers--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2917"><!--math, complex
numbers--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2918"><!--applications, math, complex
numbers--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2919"><!--documents, math, complex
numbers--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2920"><!--complex
numbers--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2921"><!--objects, complex
numbers--></fo:wrapper> with complex numbers. For example,
given the complex numbers <fo:inline font-family="monospace" font-size="0.8em">A</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">B</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">C</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">E</fo:inline> and two equations shown in <fo:basic-link internal-destination="jakartackbk-CHP-8-FIG-5" text-decoration="underline" color="blue">Figure 8-5</fo:basic-link>, you need to find the real part of
<fo:inline font-family="monospace" font-size="0.8em">F</fo:inline> and the imaginary part of
<fo:inline font-family="monospace" font-size="0.8em">D</fo:inline>.</fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-8-FIG-5"><fo:block id="I_8_tt340"><fo:external-graphic src="/Users/tobrien/Library/Code/common-java-cookbook/content/target/classes/docbook/figs/print/jccb_0805.pdf" width="81px" height="55px" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:application/pdf"/></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-previous.within-column="always">Figure 8-5. Expressions evaluated with the Complex object</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-8.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.8.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use Commons Math <fo:inline font-family="monospace" font-size="0.8em">Complex</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">ComplexMath</fo:inline> classes to represent complex numbers
and perform arithmetic using complex numbers. Use the
<fo:inline font-family="monospace" font-size="0.8em">ComplexFormat</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2922"><!--ComplexFormat
class--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2923"><!--classes, ComplexFormat--></fo:wrapper>
class to print the real and imaginary parts of a complex number. The
following example demonstrates the use of the
<fo:inline font-family="monospace" font-size="0.8em">Complex</fo:inline> class to calculate <fo:inline font-family="monospace" font-size="0.8em">D</fo:inline>
and <fo:inline font-family="monospace" font-size="0.8em">F</fo:inline> from <fo:basic-link internal-destination="jakartackbk-CHP-8-FIG-5" text-decoration="underline" color="blue">Figure 8-5</fo:basic-link> using
arbitrary values for <fo:inline font-family="monospace" font-size="0.8em">A</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">B</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">C</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">E</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt341">import org.apache.commons.math.complex.Complex;
import org.apache.commons.math.complex.ComplexFormat;

Complex a = new Complex(2, 3);
Complex b = new Complex(4, 5);
Complex c = new Complex(0.3, 2);
Complex e = new Complex(4, 4);

Complex sum = a.add( b );
Complex d = c.divide( sum );
Complex f = e.multiply( d.conjugate( ) );
        
System.out.println( "D is: " + ComplexFormat.formatComplex( d ) );
System.out.println( "F is: " + ComplexFormat.formatComplex( f ) );
    
double realF = f.getReal( );
double imD = d.getImaginary( );
double answer = realF / imD;
        
System.out.println( "Answer Re(F)/Im(D): " + 
        NumberFormat.getInstance( ).format( answer ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The variables <fo:inline font-family="monospace" font-size="0.8em">a</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">b</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">c</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">e</fo:inline> are created using
arbitrary values, and an intermediate <fo:inline font-family="monospace" font-size="0.8em">Complex</fo:inline>
object <fo:inline font-family="monospace" font-size="0.8em">sum</fo:inline> is calculated by adding
<fo:inline font-family="monospace" font-size="0.8em">b</fo:inline> to <fo:inline font-family="monospace" font-size="0.8em">a--a.add(b)</fo:inline>.
<fo:inline font-family="monospace" font-size="0.8em">d</fo:inline> is calculated by dividing this intermediate
<fo:inline font-family="monospace" font-size="0.8em">sum</fo:inline> by <fo:inline font-family="monospace" font-size="0.8em">c</fo:inline>:
<fo:inline font-family="monospace" font-size="0.8em">c.divide(sum)</fo:inline>. <fo:inline font-family="monospace" font-size="0.8em">f</fo:inline> is calculated
by multiplying <fo:inline font-family="monospace" font-size="0.8em">e</fo:inline> times the complex conjugate of
<fo:inline font-family="monospace" font-size="0.8em">d</fo:inline>: <fo:inline font-family="monospace" font-size="0.8em">e.multiply( d.conjugate( )
)</fo:inline>. The final answer is calculated by taking the real part
of <fo:inline font-family="monospace" font-size="0.8em">f</fo:inline> (<fo:inline font-family="monospace" font-size="0.8em">f.getReal( )</fo:inline>) and
dividing that by the imaginary part of <fo:inline font-family="monospace" font-size="0.8em">d</fo:inline>:
<fo:inline font-family="monospace" font-size="0.8em">d.getImaginary( )</fo:inline>. The previous example performs
complex arithmetic and prints the following to the console:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt342">D is: 0.18 + 0.1i
F is: 1.1 + 0.33i
Answer Re(F)/Im(D): 11.417</fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-8.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.8.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous example used the <fo:inline font-family="monospace" font-size="0.8em">ComplexFormat</fo:inline> class
to create a <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> representation of a
<fo:inline font-family="monospace" font-size="0.8em">Complex</fo:inline> object. This class allows you to print out
the complex number <fo:inline font-family="monospace" font-size="0.8em">N</fo:inline> in the format
<fo:inline font-family="monospace" font-size="0.8em">Re(N) + Im(N)i</fo:inline>. This class also has a
constructor that takes a <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> to use instead of
"i." In electrical engineering,
where "i" is frequently used to
refer to current, complex impedance is represented using a
"j" instead of an
"i." To print a complex number
using a "j", write the following
code:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt343">Complex impedance = new Complex( 1.0, 2.0 );
ComplexFormat format = new ComplexFormat("j");
System.out.println( "Impedance: " + format.format( impedance ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous code prints the following output to the console:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt344">Impedance: 1.0 + 2.0j</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">Complex</fo:inline> object contains simple arithmetic
methods such as <fo:inline font-family="monospace" font-size="0.8em">add( )</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">subtract(
)</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">multiply( )</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">divide()</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">conjugate( )</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">negate(
)</fo:inline>. More advanced methods are available as static methods on
the <fo:inline font-family="monospace" font-size="0.8em">ComplexMath</fo:inline> class.
<fo:inline font-family="monospace" font-size="0.8em">ComplexMath</fo:inline> includes trigonometric methods such as
<fo:inline font-family="monospace" font-size="0.8em">sin( )</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">sinh( )</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">cos()</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">tan( )</fo:inline>, as well as methods to
calculate logarithms and to take the square root of a
<fo:inline font-family="monospace" font-size="0.8em">Complex</fo:inline> object.</fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-8.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.8.4. See also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about the <fo:inline font-family="monospace" font-size="0.8em">ComplexMath</fo:inline>
utility, see the Commons Math JavaDoc at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/math/apidocs/index.html</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-9"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Establishing Relationships Between Variables</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.9. Establishing Relationships Between Variables</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-9.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.9.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to establish a relationship between two independent
variables. These variables could be temperature versus energy use or
the number of news channels versus stress-related ailments; you need
to measure the correlation between two variables.</fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-9.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.9.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Add data points to an instance of Commons Math
<fo:inline font-family="monospace" font-size="0.8em">SimpleRegression</fo:inline>. This class will calculate the
slope, slope confidence, and a measure of relatedness known as
R-square. The <fo:inline font-family="monospace" font-size="0.8em">SimpleRegression</fo:inline> class performs a
least squares regression with one independent variable; adding data
points to this model refines parameters to the equation <fo:inline font-family="monospace" font-size="0.8em">y =
ax + b</fo:inline>. The following code uses
<fo:inline font-family="monospace" font-size="0.8em">SimpleRegression</fo:inline> to find a relationship between
two series of values <fo:inline font-family="monospace" font-size="0.8em">[0, 1, 2, 3, 4, 5]</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">[0, 1.2, 2.6, 3.2, 4, 5]</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt345">import orgorg.apache.commons.math.stat.multivariate.SimpleRegression;

SimpleRegression sr = new SimpleRegression( );

// Add data points         
sr.addData( 0, 0 );
sr.addData( 1, 1.2 );
sr.addData( 2, 2.6 );
sr.addData( 3, 3.2 );
sr.addData( 4, 4 );
sr.addData( 5, 5 );

// Print the value of y when line intersects the y axis
System.out.println( "Intercept: " + sr.getIntercept( ) );

// Print the number of data points
System.out.println( "N: " + sr.getN( ) );

// Print the Slope and the Slop Confidence
System.out.println( "Slope: " + sr.getSlope( ) );
System.out.println( "Slope Confidence: " + sr.getSlopeConfidenceInterval( ) );

// Print RSquare a measure of relatedness
System.out.println( "RSquare: " + sr.getRSquare( ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example passes six data points to
<fo:inline font-family="monospace" font-size="0.8em">SimpleRegression</fo:inline> and prints the slope, number of
data points, and R-square from <fo:inline font-family="monospace" font-size="0.8em">SimpleRegression</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt346">Intercept: 0.238
N: 6
Slope: 0.971
Slope Confidence: 0.169
RSquare: 0.985</fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-9.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.9.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">R-square is the square of something called the
Pearson's product moment correlation coefficient,
which can be obtained by calling<fo:wrapper id="jakartackbk-CHP-8-ITERM-2924"><!--getR( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2925"><!--methods, getR(
)--></fo:wrapper> 
               <fo:inline font-family="monospace" font-size="0.8em">getR( )</fo:inline> on
<fo:inline font-family="monospace" font-size="0.8em">SimpleRegression</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2926"><!--SimpleRegression--></fo:wrapper>.
R-square is a determination of correlation between two series of
numbers. The parameters to the <fo:inline font-family="monospace" font-size="0.8em">addData()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2927"><!--addData( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2928"><!--methods, addData(
)--></fo:wrapper> method of
<fo:inline font-family="monospace" font-size="0.8em">SimpleRegression</fo:inline> are a corresponding x and y value
in two sets of data. If R-square is 1.0, the model shows that as x
increases linearly, y increases linearly. In the previous example,
R-square is 0.98, and this demonstrates that the (x,y) data points
added to <fo:inline font-family="monospace" font-size="0.8em">SimpleRegression</fo:inline> have a strong linear
relationship.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If R-square is -1.0, x increases linearly as y decreases linearly. A
value of 0.0 shows that the relationship between x and y is not
linear. The following example demonstrates two series of numbers with
no relationship:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt347">import org.apache.commons.math.stat.multivariate.SimpleRegression;

SimpleRegression sr = new SimpleRegression( );
sr.addData( 400, 100 );
sr.addData( 300, 105 );
sr.addData( 350, 70 );
sr.addData( 200, 50 );
sr.addData( 150, 300 );
sr.addData( 50, 500 );

// Print RSquare a measure of relatedness
System.out.println( "RSquare: " + sr.getRSquare( ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The data points added to this <fo:inline font-family="monospace" font-size="0.8em">SimpleRegression</fo:inline> are
all over the map; x and y are unrelated, and the R-square value for
this set of data points is very close to zero:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt348">Intercept: 77.736
N: 12
Slope: 0.142
Slope Confidence: 0.699
RSquare: 0.02</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The (x,y) data points supplied to the previous example have no linear
correlation. This doesn't prove that there is no
relationship between x and y, but it does prove that the relationship
is not linear.</fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-9.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.9.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about least squares, the technique used by
<fo:inline font-family="monospace" font-size="0.8em">SimpleRegression</fo:inline>, see Wikipedia (<fo:inline font-family="monospace" font-size="0.8em">http://en.wikipedia.org/wiki/Least_squares</fo:inline>).
More information about R and R-square can also be found on Wikipedia
(<fo:inline font-family="monospace" font-size="0.8em">http://en.wikipedia.org/wiki/Pearson_product-moment_correlation_coefficient</fo:inline>).</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-10"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Estimating the Amount of Time Left in a Process</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.10. Estimating the Amount of Time Left in a Process</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-10.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.10.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You are running a program that takes a long time to execute, and you
need to present the user with an estimated time until completion.</fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-10.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.10.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use Commons Math's
<fo:inline font-family="monospace" font-size="0.8em">SimpleRegression</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2929"><!--SimpleRegression--></fo:wrapper>
and Commons Lang's <fo:inline font-family="monospace" font-size="0.8em">StopWatch</fo:inline> to
create a
<fo:inline font-family="monospace" font-size="0.8em">ProcessEstimator</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2930"><!--ProcessEstimator
class--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2931"><!--classes, processEstimator--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2932"><!--execution, ProcessEstimator
class--></fo:wrapper> class that can be used to predict when a
particular program will be finished. Your program needs to process a
number of records, and this program could take a few hours to finish.
You would like to provide some feedback, and, if you are confident
that each record will take roughly the same amount of time, you can
use <fo:inline font-family="monospace" font-size="0.8em">SimpleRegression</fo:inline>'s slope and
intercept to estimate the time when all records will be processed.
<fo:basic-link internal-destination="jakartackbk-CHP-8-EX-1" text-decoration="underline" color="blue">Example 8-1</fo:basic-link> defines the
<fo:inline font-family="monospace" font-size="0.8em">ProcessEstimator</fo:inline> class that combines the power of
<fo:inline font-family="monospace" font-size="0.8em">StopWatch</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">ProcessEstimator</fo:inline>
to estimate the time remaining in a process.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-8-EX-1"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 8-1. ProcessEstimator to estimate time of program execution</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e25713">package com.discursive.jccook.math.timeestimate;

import org.apache.commons.lang.time.StopWatch;
import org.apache.commons.math.stat.multivariate.SimpleRegression;

public class ProcessEstimator {

    private SimpleRegression regression = new SimpleRegression( );
    private StopWatch stopWatch = new StopWatch( );

    // Total number of units
    private int units = 0;
    
    // Number of units completed
    private int completed = 0;

    // Sample rate for regression
    private int sampleRate = 1;
    
    public ProcessEstimator( int numUnits, int sampleRate ) {
        this.units = numUnits;
        this.sampleRate = sampleRate;
    }
    
    public void start( ) {
        stopWatch.start( );
    }
    
    public void stop( ) {
        stopWatch.stop( );
    }

    public void unitCompleted( ) {
        completed++;
        
        if( completed % sampleRate == 0 ) {
            long now = System.currentTimeMillis( );
            regression.addData( units - completed, stopWatch.getTime( ));
        }
    }
    
    public long projectedFinish( ) {
        return (long) regression.getIntercept( );
    }
    
    public long getTimeSpent( ) {
        return stopWatch.getTime( );
    }

    public long projectedTimeRemaining( ) {
        long timeRemaining = projectedFinish( ) - getTimeSpent( );        
        return timeRemaining;
    }
    
    public int getUnits( ) {
        return units;
    }

    public int getCompleted( ) {
        return completed;
    }

}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">ProcessEstimator</fo:inline> has a constructor that takes the
number of records to process and the sample rate to measure progress.
With 10,000 records to process and a sample of 100, the
<fo:inline font-family="monospace" font-size="0.8em">SimpleRegression</fo:inline> will add a data point of units
remaining versus time elapsed after every 100 records. As the program
continues to execute, <fo:inline font-family="monospace" font-size="0.8em">projectedTimeRemaining( )</fo:inline>
will return an updated estimation of time remaining by retrieving the
y-intercept from <fo:inline font-family="monospace" font-size="0.8em">SimpleRegression</fo:inline> and subtracting
the time already spent in execution. The y-intercept from
<fo:inline font-family="monospace" font-size="0.8em">SimpleRegression</fo:inline> represents the y value when x
equals zero, where x is the number of records remaining; as x
decreases, y increases, and y represents the total time elapsed to
process all records.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">ProcessEstimationExample</fo:inline> in <fo:basic-link internal-destination="jakartackbk-CHP-8-EX-2" text-decoration="underline" color="blue">Example 8-2</fo:basic-link> uses the <fo:inline font-family="monospace" font-size="0.8em">ProcessEstimator</fo:inline>
to estimate the time remaining while calling the
<fo:inline font-family="monospace" font-size="0.8em">performLengthyProcess( )</fo:inline> method 10,000 times.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-8-EX-2"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 8-2. An example using the ProcessEstimator</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e25749">package com.discursive.jccook.math.timeestimate;

import org.apache.commons.lang.math.RandomUtils;

public class ProcessEstimationExample {

    private ProcessEstimator estimate;

    public static void main(String[] args) {
        ProcessEstimationExample example = new ProcessEstimationExample( );
        example.begin( );
    }

    public void begin( ) {
        estimate = new ProcessEstimator( 10000, 100 );
        estimate.start( );
        
        for( int i = 0; i &lt; 10000; i++ ) {
            // Print status every 1000 items
            printStatus(i);
            performLengthyProcess( );
            estimate.unitCompleted( );
        }
        
        estimate.stop( );
       
        System.out.println( "Completed " + estimate.getUnits( ) + " in " + 
                  Math.round( estimate.getTimeSpent( ) / 1000 ) + " seconds." );
    }
    
    private void printStatus(int i) {
        if( i % 1000 == 0 ) {
            System.out.println( "Completed: " + estimate.getCompleted( ) +
                                " of " + estimate.getUnits( ) );
            
            System.out.println( "\tTime Spent: " +
                                 Math.round( estimate.getTimeSpent( ) / 1000) +
                                 " sec" + ", Time Remaining: " +
                       Math.round( estimate.projectedTimeRemaining( ) / 1000) +
                                " sec" );
        }
    }

    private void performLengthyProcess( ) {
        try {
            Thread.sleep(RandomUtils.nextInt(10));
        } catch( Exception e ) {}
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">After each call to <fo:inline font-family="monospace" font-size="0.8em">performLengthyProcess( )</fo:inline>, the
<fo:inline font-family="monospace" font-size="0.8em">unitCompleted( )</fo:inline> method on
<fo:inline font-family="monospace" font-size="0.8em">ProcessEstimator</fo:inline> is invoked. Every 100th call to
<fo:inline font-family="monospace" font-size="0.8em">unitComplete( )</fo:inline> causes
<fo:inline font-family="monospace" font-size="0.8em">ProcessEstimator</fo:inline> to update
<fo:inline font-family="monospace" font-size="0.8em">SimpleRegression</fo:inline> with the number of records
remaining and the amount of time spent so far. After every <fo:wrapper id="jakartackbk-CHP-8-ITERM-2933"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2934"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2935"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2936"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2937"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-8-ITERM-2938"><!----></fo:wrapper>1000th call to
<fo:inline font-family="monospace" font-size="0.8em">performLengthyProcess( )</fo:inline>, a status message is
printed to the console as follows:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_8_tt349">Completed: 0 of 10000
    Time Spent: 0 sec, Time Remaining: 0 sec
Completed: 1000 of 10000
    Time Spent: 4 sec, Time Remaining: 42 sec
Completed: 2000 of 10000
    Time Spent: 9 sec, Time Remaining: 38 sec
Completed: 3000 of 10000
    Time Spent: 14 sec, Time Remaining: 33 sec
Completed: 4000 of 10000
    Time Spent: 18 sec, Time Remaining: 28 sec
Completed: 5000 of 10000
    Time Spent: 24 sec, Time Remaining: 23 sec
Completed: 6000 of 10000
    Time Spent: 28 sec, Time Remaining: 19 sec
Completed: 7000 of 10000
    Time Spent: 33 sec, Time Remaining: 14 sec
Completed: 8000 of 10000
    Time Spent: 38 sec, Time Remaining: 9 sec
Completed: 9000 of 10000
    Time Spent: 43 sec, Time Remaining: 4 sec
Completed 10000 in 47 seconds.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">As shown above, the output periodically displays the amount of time
you can expect the program to continue executing. Initially, there is
no data to make a prediction with, so the
<fo:inline font-family="monospace" font-size="0.8em">ProcessEstimator</fo:inline> returns zero seconds, but, as the
program executes the <fo:inline font-family="monospace" font-size="0.8em">performLengthyProcess( )</fo:inline>
method 10,000 times, a meaningful time remaining is produced.</fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-10.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.10.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous example used a method that sleeps for a random number of
milliseconds between 1 and 10, and this value is selected using the
<fo:inline font-family="monospace" font-size="0.8em">RandomUtils</fo:inline> class described in <fo:basic-link internal-destination="jakartackbk-CHP-8-SECT-4" text-decoration="underline" color="blue">Recipe 8.4</fo:basic-link>. It is easy to predict how long this process
is going to take because, on average, each method call is going to
sleep for five milliseconds. The <fo:inline font-family="monospace" font-size="0.8em">ProcessEstimator</fo:inline>
is inaccurate when the amount of time to process each record takes a
steadily increasing or decreasing amount of time, or if there is a
block of records that takes substantially more or less time to
process. If the amount of time to process each record does not remain
constant, then the relationship between records processed and time
elapsed is not linear. Because the
<fo:inline font-family="monospace" font-size="0.8em">ProcessEstimator</fo:inline> uses a linear model,
<fo:inline font-family="monospace" font-size="0.8em">SimpleRegression</fo:inline>, a nonconstant execution time
will produce inaccurate predictions for time remaining. If you are
using the <fo:inline font-family="monospace" font-size="0.8em">ProcessEstimator</fo:inline>, make sure that it
takes roughly the same amount of time to process each record.</fo:block></fo:block><fo:block id="jakartackbk-CHP-8-SECT-10.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">8.10.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This recipe refers to the <fo:inline font-family="monospace" font-size="0.8em">StopWatch</fo:inline> class from
Commons Lang. For more information about the
<fo:inline font-family="monospace" font-size="0.8em">StopWatch</fo:inline> class, see <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-19" text-decoration="underline" color="blue">Recipe 1.19</fo:basic-link>.</fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="false" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>Templating</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>Templating</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"/></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif" margin-left="0pc"/></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block id="jakartackbk-CHP-9"><fo:block font-family="serif"><fo:block margin-left="0pc"><fo:block text-align="left" font-weight="bold" font-size="21.6pt"><fo:block keep-with-next.within-column="always" space-before.optimum="12pt" space-before.minimum="12pt * 0.8" space-before.maximum="12pt * 1.2" hyphenate="false" text-align="left" start-indent="0pc" word-spacing="-0.1em" letter-spacing="-0.05em" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 9. Templating</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="ch09-2-fm2xml"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Introduction</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.1. Introduction</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Systems designed without clear separation between presentation and
application logic quickly become chores to maintain. Trivial
look-and-feel updates in such applications take days or weeks, and
trying to extend such a coupled architecture can introduce
unmanageable risks and code that is impossible to unit test. To
minimize the possibility of creating such disasters, avoid coupling
presentation and application logic through the use of a good
templating engine. Maintain clear separation between presentation and
application logic from the beginning—be orthogonal.
Don't print out HTML, XML, or SQL from Java code,
use a templating engine.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The simplest example of templating is Java's
<fo:inline font-family="monospace" font-size="0.8em">MessageFormat</fo:inline>. A simple message, such as
<fo:inline font-family="monospace" font-size="0.8em">Hello {0}, I speak {1}</fo:inline>, can be parameterized using
the <fo:inline font-family="monospace" font-size="0.8em">MessageFormat</fo:inline> class. A more complex templating
example is found in applications that use Jakarta Velocity or
FreeMarker to avoid mixing Java with HTML or textual output.
Throughout this spectrum of complexity, the concept of templating
remains the same; a template with references to variables is merged
with a context containing these variables. There are many ways to
decouple the rigors of logic from the prettiness of presentation, and
after reading this chapter, you will have a range of options for
different situations.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This chapter touches upon Jakarta Velocity, Jakarta Commons JEXL, and
a technology outside of the Apache Software Foundation named
FreeMarker. Templating engines are frequently used in web
application, and this chapter ends with instructions for integrating
these engines into a J2EE web application. Separating HTML or textual
content into a separate file allows you to give graphic designers and
business users a larger role in customizing and creating content for
the enduser. With a templating engine, you
can dramatically reduce the time and effort it takes to
make simple changes. But, by far, the largest benefit of a templating
engine is that it allows programmers to do more programming and
graphic designers to do more designing by reducing needless coupling
of presentation markup and compiled application logic.</fo:block><fo:block id="ch09-3-fm2xml"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Common Templating Problems in Applications</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.1.1. Common Templating Problems in Applications</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Server-side Java has won a fair amount of attention over the past
five years, but developers seldom consider using templating engines
when writing a standalone Java application. Consider the following
code, which prints a formatted report for a bank customer:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt350">System.out.println( "******************************" );
System.out.println( "******* BANK STATEMENT *******" );
System.out.println( "******************************" );
Account[] accounts = AccountUtil.getAccounts("1232");
double total = 0.0;
for( int i = 0; i &lt; accounts.length; i++ ) {
    System.out.println( "Account: " + 
        accounts[i].getBalance( ) );
    total += accounts[i].getBalance( ); 
}
System.out.println( "Total: " + total );
System.out.println( "******************************" );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In this example, textual content is mixed with Java code, and a
programmer must be involved in any change to the look and feel of the
report. If this report were generated using an external template, a
nonprogrammer could be trained to change the report, or the customers
could customize the output of this program by modifying a template
with straightforward syntax.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Consider another common problem: generating an XML document. There
are seemingly thousands of ways to create an XML document: using DOM
or JDOM to create a <fo:inline font-family="monospace" font-size="0.8em">Document</fo:inline> object, serializing
an object with Jakarta Commons Betwixt, and using
Exolab's Castor are a few of these possibilities.
Some of these techniques are explained in <fo:basic-link internal-destination="jakartackbk-CHP-6" text-decoration="underline" color="blue">Chapter 6</fo:basic-link>, but here is an example of how <fo:inline font-weight="bold">not</fo:inline> to generate an XML document:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt351">System.out.println("&lt;?xml version=\"1.0\"?&gt;");
System.out.println("&lt;Config&gt;");
System.out.println("&lt;Property name=\"" + name + "\"\n" +
                   "value=\"" + value + "\"/&gt;");
System.out.println("&lt;/Config&gt;");</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Avoid this practice at all costs. Here are a few red flags from the
previous two examples:</fo:block><fo:block space-before.optimum="0em" space-before.minimum="0em" space-before.maximum="0em" space-after.optimum="0em" space-after.minimum="0em" space-after.maximum="0em" margin-left="1.0em" id="d0e25878"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e25879" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>Mixed languages</fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>Nesting an XML document into a Java class by way of printing out
<fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> literals is unreadable. When you need to
mentally decode heavily escaped XML nested in Java, you are asking
yourself to do too much at once. You will also end up with mixed
context, an XML element starting within a pair of parentheses, and
ending in another. In this fugue of forward and back slashes, one
misplaced slash produces an invalid XML document, or one overlooked
<fo:inline font-family="monospace" font-size="0.8em">NullPointerException</fo:inline> causes a catastrophe. You are
asking your brain to compile two strands of code with intertwined and
overlapping syntax. While your compiler might not complain, your
system will be difficult to maintain. Code that is difficult to
comprehend is even more difficult to maintain.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e25891" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>Escaped characters in compiled code</fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>Escaping characters in <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> literals quickly
becomes an annoyance, especially if the strings to be encoded contain
back slashes and double quotes. I accept that the
<fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> 
                        <fo:inline font-family="monospace" font-size="0.8em">c:\temp\blah.txt</fo:inline>, must
be written as <fo:inline font-family="monospace" font-size="0.8em">c:\\temp\\blah.txt</fo:inline>, but I
don't enjoy doing it. How confusing is a literal
<fo:inline font-family="monospace" font-size="0.8em">\"c:\\temp\\\</fo:inline>"? Avoid this entirely by using a
templating engine or externalizing strings in properties files.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e25912" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>Mixing presentation with conditional or iterative logic</fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>A previous example printed each account balance in a
<fo:inline font-family="monospace" font-size="0.8em">for</fo:inline> loop. A common trick in JSP is to create a
<fo:inline font-family="monospace" font-size="0.8em">while</fo:inline> loop with JSP scriptlets, surrounding the
code to be executed with <fo:inline font-family="monospace" font-size="0.8em">&lt;% while( i &lt; 4 ) {
%&gt;</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">&lt;% } %&gt;</fo:inline>. Templating
languages such as Velocity or even JSP 2.0 with JSTL support
conditional and iterative operations without asking you to mix
languages.</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">There are other opportunities for using a template in an application.
These include code generation, creating SQL scripts, and interacting
with an interpreted language via generated scripts. The list
continues, and it proves that templating isn't just
for making web pages.</fo:block></fo:block><fo:block id="ch09-4-fm2xml"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Templating in Web Applications</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.1.2. Templating in Web Applications</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Examine the JSP
code<fo:wrapper id="jakartackbk-CHP-9-ITERM-2939"><!--templating, Web
applications--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2940"><!--Web
applications, templating--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2941"><!--applications, Web,
templating--></fo:wrapper> below (the variable names have
been changed to protect the innocent). Take this code and multiply it
by 100 or 200 pages. Now, what happens when you want to move from
PostgreSQL to Oracle? Do you do a global search and replace on the
driver class name and the JDBC URL? Or, even worse, what happens when
someone asks you to translate the entire site to Chinese in two
weeks? It would be easier to learn Chinese in two weeks than it would
be to internationalize this code. The offending JSP is:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt352">&lt;% ResultSet rs;
    try {
      Class.forName( "org.postgresql.Driver" );
      String dbURL = "jdbc:postgresql://192.168.0.1/dbname";
      Connection dbCon = 
            DriverManager.getConnection( dbURL, "system", "");

        PreparedStatement ps = 
            dbCon.prepareStatement( "select * from Offer " +
                                  "where id = ?" );
      ps.setString( 1, request.getAttribute("id") );
      rs = ps.executeQuery( );
        rs.next( );
    } catch( Exception e ) {
        %&gt;&lt;%= Something bad happened, Call Jack (800) 232-2233 %&gt;
&lt;% } %&gt;

&lt;jsp:include page="header.html" /&gt;

Hello &lt;%= rs.getString("name") %&gt;,

I would like to inform you of a good offer.
&lt;%= rs.getString("offerText") %&gt; 

There are a few things I would like to tell you.
&lt;ul&gt;
  &lt;% Thing[] things = OfferUtil.getThings( rs.getString("id") );
     for( int i = 0; i &lt; things.length; i++ ) { %&gt;
     &lt;li&gt;&lt;%= things[i].getText( )%&gt;&lt;/li&gt; 
  &lt;% } %&gt;
&lt;/ul&gt;    

&lt;jsp:include page="footer.html" /&gt;</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-CHP-9-NOTE-65"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/tip.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Tip</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This is real code from a real system, and it was written by a whole
team of programmers who didn't find anything
terribly wrong with this style. If you were raised on JSP like this,
you might not recognize some of the problems. What is wrong with the
previous example? Four different
"languages" are combined in one
file (Java, SQL, HTML, and JSP); the page starts off with JSP
scriptlets, then the example contains Java code that prints out HTML
and generates SQL statements. Lastly, this particular JSP page
forgets to close the connection it created to the
database—something that could easily create a resource leak
under a heavy load. Make it simpler, use a templating engine (or
upgrade to JSP 2.0) and <fo:inline font-weight="bold">never write a line of
Java in a JSP again</fo:inline>.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Velocity, JEXL, and FreeMarker are remedies for the coupling issues
demonstrated in the previous examples. Each of these tools can be
integrated into any application in a matter of minutes. In this
chapter, you will learn techniques for separating presentation logic
from behavioral (or business) logic. At the end of the chapter, I
will briefly explain how you can integrate all of these utilities
into a J2EE web application.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Obtaining Commons JEXL</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.1. Obtaining Commons JEXL</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-1.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.1.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to use Jakarta Commons JEXL to evaluate a simple expression
that contains references to variables and object properties.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-1.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.1.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You must download the latest version of Commons JEXL, and place the
Commons JEXL JAR in your project's classpath. Follow
the steps outlined in <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1" text-decoration="underline" color="blue">Recipe 1.1</fo:basic-link>,
downloading Commons JEXL 1.0 instead of Commons Lang.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Commons JEXL depends on Commons Logging 1.0.3, which can be
downloaded from the same location as Commons JEXL.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-1.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.1.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2942"><!--Commons JEXL--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2943"><!--expressions, Commons
JEXL--></fo:wrapper>Commons JEXL is an expression language
interpreter influenced by the expression language features of JSP
2.0; JEXL is an extended version of JSP 2.0 EL that does not depend
on the Servlet API. This means that it can be integrated into any
application that needs to use an expression language.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-CHP-9-NOTE-66"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/tip.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Tip</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">JEXL is similar to EL with one major difference. The JSP 2.0 EL
implementation project in Jakarta Commons, Commons EL, is covered by
a Java Specification Request (JSR), which was developed under the
Java Community Process (JCP). Because of this, EL is bound to
implement the JSP specification—no more and no less. On the
other hand, JEXL is free to extend and improve upon the standard.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you have a Maven project, which needs to use Commons JEXL, add a
dependency on Commons JEXL 1.0 with the following section in
<fo:inline font-family="monospace" font-size="0.8em">project.xml</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt353">&lt;dependencies&gt;
  &lt;dependency&gt;
    &lt;id&gt;commons-jexl&lt;/id&gt;
    &lt;version&gt;1.0&lt;/version&gt;
  &lt;/dependency&gt;

  ....other dependencies...
&lt;/dependencies&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-1.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.1.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about downloading Commons Logging 1.0.3, see
<fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-9" text-decoration="underline" color="blue">Recipe 7.9</fo:basic-link>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">To learn more about Commons JEXL, visit the Jakarta Commons JEXL web
site (<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/jexl/</fo:inline>).</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you have questions about how to use Jakarta Commons JEXL, you can
join the <fo:inline font-family="monospace" font-size="0.8em">commons-user@jakarta.apache.org</fo:inline> mailing list.
Refer to <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-2" text-decoration="underline" color="blue">Recipe 1.2</fo:basic-link> for instructions on
joining the Commons User mailing list.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about the Java Community Process, see the JCP
home at <fo:inline font-family="monospace" font-size="0.8em">http://www.jcp.org/en/home/index</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Using an Expression Language</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.2. Using an Expression Language</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-2.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.2.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to parameterize text <fo:wrapper id="jakartackbk-CHP-9-ITERM-2944"><!--templating, expression
languages--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2945"><!--expressions, language--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2946"><!--variables, expression
language--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2947"><!--beans, expression
language--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2948"><!--properties, expression
language--></fo:wrapper>messages with variables and bean
properties.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-2.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.2.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use Commons JEXL to evaluate an expression containing references to
bean properties. To reference properties of an object, create an
expression using the bean property syntax introduced in <fo:basic-link internal-destination="jakartackbk-CHP-3" text-decoration="underline" color="blue">Chapter 3</fo:basic-link>. Surround each property reference with
curly braces and a leading <fo:inline font-family="monospace" font-size="0.8em">$</fo:inline>, as in the following
example:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt354">${opera.name} was composed by ${opera.composer} in ${opera.year}.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use the following code to "merge"
an instance of the <fo:inline font-family="monospace" font-size="0.8em">Opera</fo:inline> bean with the above
expression:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt355">import org.apache.commons.jexl.Expression;
import org.apache.commons.jexl.ExpressionFactory;
import org.apache.commons.jexl.JexlContext;
import org.apache.commons.jexl.JexlHelper;

Opera opera = new Opera( );
opera.setName("The Magic Flute");
opera.setComposer("Mozart");
opera.setYear(1791);

String expr = 
    "${opera.name} was composed by ${opera.composer} in " +
    "${opera.year}.";

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Expression e = ExpressionFactory.createExpression( expr );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">JexlContext jc = JexlHelper.createContext( );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">jc.getVars( ).put("opera", opera);</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">String message = (String) e.evaluate(jc);</fo:inline>

System.out.println( message );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This code puts an instance of the <fo:inline font-family="monospace" font-size="0.8em">Opera</fo:inline> bean in a
<fo:inline font-family="monospace" font-size="0.8em">JexlContext</fo:inline> and evaluates the expression,
producing the following output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt356">The Magic Flute was composed by Mozart in 1791.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-2.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.2.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous example creates and populates an instance of the
<fo:inline font-family="monospace" font-size="0.8em">Opera</fo:inline> bean: <fo:inline font-family="monospace" font-size="0.8em">opera</fo:inline>. An
<fo:inline font-family="monospace" font-size="0.8em">Expression</fo:inline> object is then created by passing a
<fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> containing a JEXL expression to
<fo:inline font-family="monospace" font-size="0.8em">ExpressionFactory.createExpression( )</fo:inline>. A
<fo:inline font-family="monospace" font-size="0.8em">JexlContext</fo:inline> is created with a call to
<fo:inline font-family="monospace" font-size="0.8em">JexlHelper.createContext( )</fo:inline>. This context contains
a map-like structure that holds named variables, and the
<fo:inline font-family="monospace" font-size="0.8em">Opera</fo:inline> object is added to the
<fo:inline font-family="monospace" font-size="0.8em">JexlContext</fo:inline> under the name
<fo:inline font-family="monospace" font-size="0.8em">opera</fo:inline>. Once an <fo:inline font-family="monospace" font-size="0.8em">Expression</fo:inline> and a
<fo:inline font-family="monospace" font-size="0.8em">JexlContext</fo:inline> are created and populated,
<fo:inline font-family="monospace" font-size="0.8em">expression.evaluate( )</fo:inline> merges the expression with
the context, and a message is generated. A JEXL expression evaluates
to an <fo:inline font-family="monospace" font-size="0.8em">Object</fo:inline>, but, in this case, the expression
evaluates to a <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> object, and the results of
the evaluation are cast to a <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This simple example sets the stage for a majority of recipes in this
chapter; most templating engines involve the pattern established by
the previous example. First, there is a template—in this case,
a <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> that contains expressions that are to be
replaced by bean properties. Second, a collection of named variables
are put into a context. Lastly, the template is merged with the
variables in the context.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This chapter makes heavy use of expressions in templating engines,
and this is a logical time to introduce the concept of the syntax
used to create expressions. If you are familiar with
<fo:wrapper id="jakartackbk-CHP-9-ITERM-2949"><!--JavaServer
Pages--></fo:wrapper>JavaServer Pages (JSPs) you
may<fo:wrapper id="jakartackbk-CHP-9-ITERM-2950"><!--JSPs (JavaServer Pages)--></fo:wrapper>
know about a tag library called the <fo:wrapper id="jakartackbk-CHP-9-ITERM-2951"><!--JavaServer
Pages Standard Tag
Library--></fo:wrapper>JavaServer Pages Standard
Tag Library <fo:wrapper id="jakartackbk-CHP-9-ITERM-2952"><!--JSTL (JavaServer Page Tag
Library)--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2953"><!--tags, JSTL--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2954"><!--libraries, JSTL--></fo:wrapper>(JSTL),
which is a set of standard JSP tag libraries that make creating JSP
pages much easier. Along with JSTL came something called EL, which is
an expression language you can use in JSTL tags and in JSP 2.0. In
general, JEXL can do everything that JSP EL can do, and more. <fo:basic-link internal-destination="jakartackbk-CHP-9-TABLE-1" text-decoration="underline" color="blue">Table 9-1</fo:basic-link> lists expressions that are valid in both JSP
2.0 EL and Jakarta Commons JEXL.</fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-9-TABLE-1"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 9-1. Simple Commons JEXL and JSP 2.0 EL expressions</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-left-style="solid" border-right-style="solid" border-top-style="solid" border-bottom-style="solid" border-left-width="0.1pt" border-right-width="0.1pt" border-top-width="0.1pt" border-bottom-width="0.1pt" border-left-color="black" border-right-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="17.4cm"><fo:table-column column-number="1"/><fo:table-column column-number="2"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">EL expression</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Evaluates to</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${true}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${1}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The integer <fo:inline font-family="monospace" font-size="0.8em">1</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${'Hello'}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline>
"Hello"</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${'blah' == 'blah'}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${var == true}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> if the variable named <fo:inline font-family="monospace" font-size="0.8em">var</fo:inline>
is a Boolean <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${x.a &lt; 352}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> if <fo:inline font-family="monospace" font-size="0.8em">x.getA( )</fo:inline> is a number
less than 352</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${ball.color ==   'Green'}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> if <fo:inline font-family="monospace" font-size="0.8em">ball.getColor( )</fo:inline> equals
"Green"</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${x == 2 || y == 4}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> if <fo:inline font-family="monospace" font-size="0.8em">x</fo:inline> equals 2 or if
<fo:inline font-family="monospace" font-size="0.8em">y</fo:inline> equals 4</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${thing.color.name}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Retrieves the value of <fo:inline font-family="monospace" font-size="0.8em">thing.getColor( ).getName( )</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${thing.shapes["circle"]}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Retrieves the object stored under the key
"circle" on the
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> 
                              <fo:inline font-family="monospace" font-size="0.8em">shapes</fo:inline>, which is a bean
property of <fo:inline font-family="monospace" font-size="0.8em">thing</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${thing.someList[55]}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Retrieves the object at index 54 of a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">someList</fo:inline>, which is a bean property of
<fo:inline font-family="monospace" font-size="0.8em">thing</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${empty var}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Evaluates to <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> if <fo:inline font-family="monospace" font-size="0.8em">var</fo:inline> is
<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> or empty</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${!(y &lt; 4)}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> if <fo:inline font-family="monospace" font-size="0.8em">y</fo:inline> is not less than 4</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-2.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.2.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about JSP 2.0 Expression Language, see Hans
Bergsten's article on <fo:inline font-family="monospace" font-size="0.8em">onJava.com</fo:inline> called "JSP 2.0:
The New Deal, Part 1" (<fo:inline font-family="monospace" font-size="0.8em">http://www.onjava.com/pub/a/onjava/2003/11/05/jsp.html</fo:inline>)
or his book <fo:inline font-style="italic">JavaServer Pages</fo:inline>
(O'Reilly).</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Invoking Methods in an Expression</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.3. Invoking Methods in an Expression</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-3.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.3.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You are trying to print out a message that contains data returned by
a method.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-3.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.3.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Commons JEXL can evaluate any method that is made available to the
interpreter. The following expression invokes the <fo:inline font-family="monospace" font-size="0.8em">language()</fo:inline> method on an <fo:inline font-family="monospace" font-size="0.8em">Opera</fo:inline> bean. The
<fo:inline font-family="monospace" font-size="0.8em">acts</fo:inline> property of <fo:inline font-family="monospace" font-size="0.8em">Opera</fo:inline> is a
<fo:inline font-family="monospace" font-size="0.8em">List</fo:inline>, and this expression invokes the
<fo:inline font-family="monospace" font-size="0.8em">size( )</fo:inline> method on this <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> to
obtain the number of acts in the <fo:inline font-family="monospace" font-size="0.8em">Opera</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt357">${opera.name} was composed by ${opera.composer} in ${opera.year}.
This opera has ${opera.acts.size( )}, and it is performed in ${opera.
language( )}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The following code creates and populates an expression and a context,
merging the two to create a message:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt358">import org.apache.commons.jexl.Expression;
import org.apache.commons.jexl.ExpressionFactory;
import org.apache.commons.jexl.JexlContext;
import org.apache.commons.jexl.JexlHelper;

Opera opera = new Opera( );
opera.setName("The Magic Flute");
opera.setComposer("Mozart");
opera.setYear(1791);
opera.acts( new ArrayList(2) );

String expr = 
    "${opera.name} was composed by ${opera.composer} in ${opera.year}.";
    "This opera has ${opera.acts.size( )} acts, and it is performed in " +
    "${opera.language( )}";

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">Expression e = ExpressionFactory.createExpression( expr );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">JexlContext jc = JexlHelper.createContext( );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">jc.getVars( ).put("opera", opera);</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">String message = (String) e.evaluate(jc);</fo:inline>

System.out.println( message );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The following message is printed to the console:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt359">The Magic Flute was composed by Mozart in 1791.  This opera has
2 acts, and it is performed in German.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-3.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.3.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This code is almost the same as the previous recipe, but you will
notice that the expression contains a direct call to the
<fo:inline font-family="monospace" font-size="0.8em">opera.language( )</fo:inline> method and a call to the
<fo:inline font-family="monospace" font-size="0.8em">size( )</fo:inline> method on the <fo:inline font-family="monospace" font-size="0.8em">acts</fo:inline>
property of <fo:inline font-family="monospace" font-size="0.8em">opera</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Because JEXL is not governed by the <fo:wrapper id="jakartackbk-CHP-9-ITERM-2955"><!--Java
Community Process--></fo:wrapper>Java
Community<fo:wrapper id="jakartackbk-CHP-9-ITERM-2956"><!--JCP (Java Community
Process)--></fo:wrapper> Process (JCP), JEXL is free to extend
the feature set of EL. <fo:basic-link internal-destination="jakartackbk-CHP-9-TABLE-2" text-decoration="underline" color="blue">Table 9-2</fo:basic-link> presents valid
JEXL expressions that are actually <fo:inline font-style="italic">invalid</fo:inline> JSP
2.0 EL expressions.</fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-9-TABLE-2"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 9-2. Extended capabilities of JEXL expression language</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-left-style="solid" border-right-style="solid" border-top-style="solid" border-bottom-style="solid" border-left-width="0.1pt" border-right-width="0.1pt" border-top-width="0.1pt" border-bottom-width="0.1pt" border-left-color="black" border-right-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="17.4cm"><fo:table-column column-number="1"/><fo:table-column column-number="2"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">JEXL expression</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Evaluates to</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${object.function( )}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Accessing any function on an object, this evaluates to the return
value from this function.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${"Wolfgang" +   " " + "Mozart"}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">JEXL supports string concatenation. This expression evaluates to
"Wolfgang Mozart."</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${"Cow".size( )}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In JEXL you can get the size of a string like this. This expression
evaluates to 3.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${hashMap.size( )}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">On a map, JEXL will return the number of keys.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${arrayList.size( )}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Returns the size of a list.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-3.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.3.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about Commons JEXL's
improvements on JSP 2.0 EL, see the Commons JEXL page (<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/jexl/</fo:inline>).</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Externalizing Logic with an Expression Language</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.4. Externalizing Logic with an Expression Language</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-4.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.4.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to capture application
<fo:wrapper id="jakartackbk-CHP-9-ITERM-2957"><!--applications, logic--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2958"><!--logic, applications--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2959"><!--capturing, application
logic--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2960"><!--external files,
capturing application logic--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2961"><!--files, capturing application
logic--></fo:wrapper>logic in an external file.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-4.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.4.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use an external properties file to store <fo:wrapper id="jakartackbk-CHP-9-ITERM-2962"><!--storage,
expressions--></fo:wrapper>expressions used in an application.
For this recipe, imagine yourself creating a system to sort
<fo:inline font-family="monospace" font-size="0.8em">Ball</fo:inline> objects based on a set of arbitrary criteria.
Instead of hard-coding criteria in a series of Java
<fo:inline font-family="monospace" font-size="0.8em">if</fo:inline>-<fo:inline font-family="monospace" font-size="0.8em">else</fo:inline> clauses, create a
framework with loads sorting criteria from a properties file
containing <fo:inline font-family="monospace" font-size="0.8em">boolean</fo:inline> JEXL expressions. For instance,
the first line in this properties file would be:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt360">Hvy-Green-Basket = ball.color == 'Green' &amp;&amp; (ball.weight &gt; 1000)</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This translates to "If the ball's
color is Green and the weight is over 1000, put this ball into the
Heavy Green basket." The name of each property is
the name of the basket into which a <fo:inline font-family="monospace" font-size="0.8em">Ball</fo:inline> matching
the criteria is placed. The contents of the criteria file are:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt361">Hvy-Green-Basket = ball.color == 'Green' &amp;&amp; (ball.weight &gt; 1000)
Sm-Yellow-bin = ball.color == 'Yellow' &amp;&amp; (ball.weight &lt; 100)
Transparent-Bin = ball.isTransparent( )
Lrg-Yellow-Basket = ball.color == 'Yellow' &amp;&amp;(ball.weight &gt;= 100)
Misc-Bin = true</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Each criterion is applied to each <fo:inline font-family="monospace" font-size="0.8em">Ball</fo:inline> object in
the order it appears in the criteria file. The heavy green sorting
criteria is applied first, and each criterion is evaluated until the
last criterion is reached. The last criteria always evaluates to
<fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>—similar to a
<fo:inline font-family="monospace" font-size="0.8em">switch</fo:inline>-<fo:inline font-family="monospace" font-size="0.8em">case</fo:inline> control statement,
the "Misc-bin" is the default. The
following code reads this criteria file and evaluates each JEXL
expression in order to sort a collection of <fo:inline font-family="monospace" font-size="0.8em">Ball</fo:inline>
objects:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt362">import org.apache.commons.jexl.Expression;
import org.apache.commons.jexl.ExpressionFactory;
import org.apache.commons.jexl.JexlContext;
import org.apache.commons.jexl.JexlHelper;

// Load in our criteria properties
Properties criteria = new Properties( );
criteria.load( getClass( ).getResourceAsStream("criteria.txt") );

Set binNames = criteria.getKeys( );

// Load our ball objects into a List
List balls = getBalls( );
Iterator ballsIter = balls.iterator( );
while( ballsIter.hasNext( ) ) {
    Ball ball = (Ball) ballsIter.next( );

    // Iterate through every rule, until you find a match...
    Iterator binIter = binName.iterator( );
    while( ruleIter.hasNext( ) ) {
        
        // Get the name of the basket
        String basket = (String) binIter.next( );

        // Get the expression corresponding to this bin.
        String expr = conditions.get( bin );
        Expression e = ExpressionFactory.createExpression( expr );          

        // Populate the context with the current Ball object
        JexlContext jc = JexlHelper.createContext( );
        jc.getVars( ).put("ball", ball);
        
        // Evaluate the Expression.
        Boolean result = (Boolean) e.evaluate(jc);
        
        // If the expression evaluated to true, add this Ball to the bin.
        if( result.booleanValue( ) == true ) {
            sendBall( ball, basket );
        }
    }
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The result of the <fo:inline font-family="monospace" font-size="0.8em">Expression</fo:inline> evaluation is a
<fo:inline font-family="monospace" font-size="0.8em">Boolean</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2963"><!--Boolean
values--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2964"><!--values, Boolean--></fo:wrapper>
value, and, if the <fo:inline font-family="monospace" font-size="0.8em">Boolean</fo:inline> result is
<fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>, the matching <fo:inline font-family="monospace" font-size="0.8em">Ball</fo:inline> is sent
to the specified basket.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-4.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.4.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Using this technique, as the number of criteria increases, the code
to implement this sorting algorithm remains unchanged. The behavior
of the system can be altered by changing the criteria file; compiled
code is left untouched. The code in this Solution section is longer
than a series of <fo:inline font-family="monospace" font-size="0.8em">if</fo:inline>-<fo:inline font-family="monospace" font-size="0.8em">else</fo:inline>
clauses to implement these criteria in code, but, as the number of
sorting criteria increases, you will be glad you took the extra time
to create a general solution without hard coding system behavior in
Java code.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This was the first example that involved something more than printing
out a pretty message for human consumption. JEXL has been used to
create a "language" for sorting
criteria; if a client wants to change the rules, you can now train
someone familiar with simple logic statements to change a system to
meet changing requirements.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-4.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.4.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This recipe demonstrated a system<fo:wrapper id="jakartackbk-CHP-9-ITERM-2965"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2966"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2967"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2968"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2969"><!----></fo:wrapper> that uses a simple set of rules to
categorize balls. For more information about a serious open source
Rule Engine for Java named JESS, take a look at <fo:inline font-family="monospace" font-size="0.8em">http://herzberg.ca.sandia.gov/jess/index.shtml</fo:inline>.
If you are interested in Rule Engines, take a look at JSR 94: Java
Rule Engine API (<fo:inline font-family="monospace" font-size="0.8em">http://jcp.org/en/jsr/detail?id=94</fo:inline>) or Ernest
Friedman-Hill's "Jess in
Action" (Manning).</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-5"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Obtaining Jakarta Velocity</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.5. Obtaining Jakarta Velocity</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-5.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.5.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to use Jakarta <fo:wrapper id="jakartackbk-CHP-9-ITERM-2970"><!--templating, Jakarta
Velocity, downloading--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2971"><!--downloading, Jakarta
Velocity--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2972"><!--Jakarta Velocity,
downloading--></fo:wrapper>Velocity to
create<fo:wrapper id="jakartackbk-CHP-9-ITERM-2973"><!--Velocity--></fo:wrapper> templates that can reference variables and
object properties and contain limited conditional and iterative
control structures.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-5.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.5.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You must download the latest version of Jakarta Velocity, and place
the Velocity JAR<fo:inline font-family="monospace" font-size="0.8em"> </fo:inline>in your
project's classpath. Follow the steps outlined in
<fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1" text-decoration="underline" color="blue">Recipe 1.1</fo:basic-link>, downloading Jakarta Velocity
1.4 instead of Commons Lang.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-5.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.5.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">After downloading the Velocity 1.4 binary release, unzip or untar the
archive, and put both the <fo:inline font-family="monospace" font-size="0.8em">velocity-1.4.jar</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">velocity-dep-1.4.jar</fo:inline> into your
project's classpath. If you have a Maven project
that needs to use Jakarta Velocity, add a dependency on Jakarta
Velocity with the following section in
<fo:inline font-family="monospace" font-size="0.8em">project.xml</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt363">&lt;dependencies&gt;
  &lt;dependency&gt;
    &lt;id&gt;velocity&lt;/id&gt;
    &lt;version&gt;1.4&lt;/version&gt;
  &lt;/dependency&gt;

  ....other dependencies...
&lt;/dependencies&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-5.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.5.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">To learn more about Velocity, visit the Jakarta Velocity web site
(<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/velocity/</fo:inline>).</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you have questions about how to use Jakarta Velocity, you can join
the <fo:inline font-family="monospace" font-size="0.8em">velocity-user@jakarta.apache.org</fo:inline>
mailing list. Refer to <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-2" text-decoration="underline" color="blue">Recipe 1.2</fo:basic-link> for instructions on joining a user mailing
list. To join the Velocity user mailing list, see the Velocity
section of the Jakarta mailing lists page (<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/site/mail2.html#Velocity</fo:inline>).</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-6"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Using a Simple Templating Language</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.6. Using a Simple Templating Language</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-6.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.6.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to produce a parameterized message using a template stored
in a file.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-6.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.6.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use Jakarta Velocity and store your template in the filesystem.
Jakarta Velocity is a straightforward templating engine with a
lightweight syntax similar to the expression language introduced in
<fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-2" text-decoration="underline" color="blue">Recipe 9.2</fo:basic-link>. The following Velocity template
is used to create an email:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt364">#set( $customer = $subscription.customer )
#set( $magazine = $subscription.magazine )

$customer.firstName,

Your subscription to ${magazine.title} on
$subscription.endDate.  If you are interested in renewing your subscription,
please click on the following URL, and enter your password:

${magazine.baseUrl}/renew?cust=${customer.id}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This template references a <fo:inline font-family="monospace" font-size="0.8em">Subscription</fo:inline> bean bound
to the name <fo:inline font-family="monospace" font-size="0.8em">subscription</fo:inline>. This
<fo:inline font-family="monospace" font-size="0.8em">Subscription</fo:inline> object has a
<fo:inline font-family="monospace" font-size="0.8em">customer</fo:inline> property and a
<fo:inline font-family="monospace" font-size="0.8em">magazine</fo:inline> property, and both of these properties
are assigned to a local template variable using the
<fo:inline font-family="monospace" font-size="0.8em">#set</fo:inline> directive. To render a Velocity template, the
engine is initialized using <fo:inline font-family="monospace" font-size="0.8em">Velocity.init(
)</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2974"><!--Velocity.init( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2975"><!--methods, Velocity.init(
)--></fo:wrapper>, a <fo:inline font-family="monospace" font-size="0.8em">VelocityContext</fo:inline> is
created and populated, and the template is read with a
<fo:inline font-family="monospace" font-size="0.8em">FileReader</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2976"><!--FileReader--></fo:wrapper>.
The following code renders this template:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt365">import org.apache.velocity.VelocityContext;
import org.apache.velocity.app.Velocity;

// Initialize Velocity
Velocity.init( );

// Create a context and put our subscription object into the context
VelocityContext context = new VelocityContext( );
context.put("subscription", testSubscription( ));

// Create a Reader to read our velocity template.
Reader reader = new FileReader( new File("renew.vm") );

// Evaluate our template and write the result to a StringWriter
StringWriter writer = new StringWriter( );
Velocity.evaluate(context, writer, "test", reader);

System.out.println( writer.toString( ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The template is loaded from the filesystem in a file named
<fo:inline font-family="monospace" font-size="0.8em">renew.vm</fo:inline>, and the following output is printed to
the console:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt366">
               <fo:inline font-family="monospace" font-size="0.8em" font-style="italic">Tim</fo:inline>,

Your subscription to <fo:inline font-family="monospace" font-size="0.8em" font-style="italic">Science World </fo:inline>expires on <fo:inline font-family="monospace" font-size="0.8em" font-style="italic">July 20, 2003</fo:inline>.  If 
you are interested in renewing your subscription, please click on the following 
URL, and enter in your password.

http://www.scienceworld.com/renew?cust=22324</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-6.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.6.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In the previous example, <fo:inline font-family="monospace" font-size="0.8em">Velocity</fo:inline> is used as a
singleton—a single instance of the
<fo:inline font-family="monospace" font-size="0.8em">VelocityEngine</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2977"><!--VelocityEngine--></fo:wrapper>
in one Java Virtual Machine. The Velocity engine has a number of
configuration options, but, in this example, the Velocity engine is
configured with a default set of properties through a call to
<fo:inline font-family="monospace" font-size="0.8em">Velocity.init( )</fo:inline>. The template is stored on the
filesystem, and the template is read using a
<fo:inline font-family="monospace" font-size="0.8em">FileReader</fo:inline>. The output of the template evaluation
is written to a <fo:inline font-family="monospace" font-size="0.8em">StringWriter</fo:inline>. To
<fo:wrapper id="jakartackbk-CHP-9-ITERM-2978"><!--syntax--></fo:wrapper>merge a template with a
context, <fo:inline font-family="monospace" font-size="0.8em">Velocity.evaluate( )</fo:inline> is passed the
following parameters: a <fo:inline font-family="monospace" font-size="0.8em">VelocityContext</fo:inline>, a
<fo:inline font-family="monospace" font-size="0.8em">Writer</fo:inline> to hold the output, a name for logging
purposes, and a Reader to read the template.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Velocity syntax
is<fo:wrapper id="jakartackbk-CHP-9-ITERM-2979"><!--syntax, Jakarta
Velocity--></fo:wrapper> very simple, and it is similar to
the expression language used in JSP 2.0 EL and Commons JEXL. If you
want to print out the value of a bean property, use
<fo:inline font-family="monospace" font-size="0.8em">${bean.property}</fo:inline> or <fo:inline font-family="monospace" font-size="0.8em">${bean.getProperty(
)}</fo:inline>; Velocity can handle both bean properties and methods.
In addition to the basic expression syntax, Velocity also supports a
number of directives and control loops, which are explored in
<fo:basic-link internal-destination="jakartackbk-CHP-9-SECT-7" text-decoration="underline" color="blue">Recipe 9.7</fo:basic-link>
            </fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The one directive used in the previous example is
<fo:inline font-family="monospace" font-size="0.8em">#set</fo:inline>, which assigns a variable for use later in
the script; <fo:inline font-family="monospace" font-size="0.8em">#set($customer</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">=</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">$subscription.customer)</fo:inline>
assigns the <fo:inline font-family="monospace" font-size="0.8em">customer</fo:inline> property of the
<fo:inline font-family="monospace" font-size="0.8em">subscription</fo:inline> object to the variable
<fo:inline font-family="monospace" font-size="0.8em">$customer</fo:inline>. <fo:basic-link internal-destination="jakartackbk-CHP-9-TABLE-3" text-decoration="underline" color="blue">Table 9-3</fo:basic-link> lists some
sample Velocity references that demonstrate referencing bean
properties and invoking methods.</fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-9-TABLE-3"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 9-3. Sample Velocity references</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-left-style="solid" border-right-style="solid" border-top-style="solid" border-bottom-style="solid" border-left-width="0.1pt" border-right-width="0.1pt" border-top-width="0.1pt" border-bottom-width="0.1pt" border-left-color="black" border-right-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="17.4cm"><fo:table-column column-number="1"/><fo:table-column column-number="2"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Velocity reference</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Evaluates to</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${sub}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The value of "sub" in the
<fo:inline font-family="monospace" font-size="0.8em">VelocityContext</fo:inline>.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${sub.endDate}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The value of <fo:inline font-family="monospace" font-size="0.8em">sub.getEndDate( )</fo:inline>.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${sub.setProp("Val")}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The return type of <fo:inline font-family="monospace" font-size="0.8em">setProp( )</fo:inline> is void, this
reference does not evaluate to a value, but it does invoke the setter
with one argument.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">$!{customer.firstName}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If <fo:inline font-family="monospace" font-size="0.8em">customer.getFirstName( )</fo:inline> returns a
<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> reference, this evaluates to an empty
<fo:inline font-family="monospace" font-size="0.8em">String</fo:inline>. This is called a quiet reference.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${customer.firstName}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If <fo:inline font-family="monospace" font-size="0.8em">customer.getFirstName( )</fo:inline> returns a
<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>, this evaluates to the
<fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> "null."</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-6.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.6.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Velocity has a number of configuration options that allow you to
configure logging, character encoding, and the behavior of
directives. For more information about configuring Velocity, see
"Velocity Configuration Key and
Values" in the Velocity Developer's
Guide (<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/velocity/developer-guide.html</fo:inline>).</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-7"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Writing Templates with Conditionals and Loops</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.7. Writing Templates with Conditionals and Loops</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-7.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.7.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Your template needs to iterate over a list of objects and highlight
objects if a specific property meets a certain criteria.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-7.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.7.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use a Velocity template with the <fo:inline font-family="monospace" font-size="0.8em">#foreach</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">#if</fo:inline> directives. The following Velocity template
uses a <fo:inline font-family="monospace" font-size="0.8em">#foreach</fo:inline> to loop through a
<fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> of <fo:inline font-family="monospace" font-size="0.8em">Airport</fo:inline> beans and an
<fo:inline font-family="monospace" font-size="0.8em">#if</fo:inline> to check for the location of an airport
relative to the supplied <fo:inline font-family="monospace" font-size="0.8em">$countryCode</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt367">The World's Busiest Airports

&lt;table&gt;
  &lt;tr&gt;
    &lt;td&gt;Rank&lt;/td&gt;&lt;td&gt;Code&lt;/td&gt;&lt;td&gt;Name&lt;/td&gt;&lt;td&gt;Passengers&lt;/td&gt;
    &lt;td&gt;${countryCode} Domestic&lt;/td&gt;
  &lt;/tr&gt;
  #foreach( $airport in $airports )
    &lt;tr&gt;
      &lt;td&gt;$velocityCount&lt;/td&gt;
      &lt;td&gt;$airport.code&lt;/td&gt;
      &lt;td&gt;$airport.name&lt;/td&gt;
      &lt;td&gt;$airport.passengers&lt;/td&gt;
      #if( $airport.countryCode == $countryCode )
        &lt;td&gt;Y&lt;/td&gt;
      #else
        &lt;td&gt;N&lt;/td&gt;
      #end
    &lt;/tr&gt;
  #end
&lt;/table&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">To render this template, a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> of
<fo:inline font-family="monospace" font-size="0.8em">Airport</fo:inline> objects and
a<fo:wrapper id="jakartackbk-CHP-9-ITERM-2980"><!--countryCode string--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2981"><!--strings, countryCode--></fo:wrapper>
               <fo:inline font-family="monospace" font-size="0.8em">countryCode String</fo:inline> is created and put into a
<fo:inline font-family="monospace" font-size="0.8em">VelocityContext</fo:inline>. The
<fo:inline font-family="monospace" font-size="0.8em">$countryCode</fo:inline> reference is used to test the
<fo:inline font-family="monospace" font-size="0.8em">countryCode</fo:inline> property of every Airport object in
the <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline>; if the <fo:inline font-family="monospace" font-size="0.8em">countryCode</fo:inline>
property matches, a <fo:inline font-family="monospace" font-size="0.8em">Y</fo:inline> is placed in the last
column. The following code initializes the Velocity engine, creates a
<fo:inline font-family="monospace" font-size="0.8em">VelocityContext</fo:inline>, and renders the template:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt368">import org.apache.velocity.Velocity;
import org.apache.velocity.app.VelocityContext;

// Initialize Velocity with default properties
Velocity.init( );

// Create a List to hold our Airport objects
List airports = new ArrayList( );
airports.add( new Airport(1, "ATL", "Hartsfield Atlanta", 76876128, "US" ) );
airports.add( new Airport(2, "ORD", "Chicago O'Hare", 66501496, "US" ) );
airports.add( new Airport(3, "LHR", "London Heathrow", 63338649, "UK" ) );    
airports.add( new Airport(4, "HND", "Tokyo-Haneda", 61079478, "JP" ) );
airports.add( new Airport(5, "LAX", "Los Angeles", 56198447, "US" ) );
airports.add( new Airport(6, "DFW", "Dallas/Fort Worth", 52826304, "US" ) );    

// Create a context and put a List into the context, and a country code
VelocityContext context = new VelocityContext( );
context.put( "airports", airports );
context.put( "countryCode", "US" );

// Create a Reader to read our velocity template.
Reader reader = new FileReader( new File("renew.vm") );

// Evaluate our template and write the result to a StringWriter
StringWriter writer = new StringWriter( );
Velocity.evaluate(context, writer, "test", reader);

System.out.println( writer.toString( ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This code produces the following output after
<fo:wrapper id="jakartackbk-CHP-9-ITERM-2982"><!--merging templates--></fo:wrapper>merging
the Velocity template with a
<fo:inline font-family="monospace" font-size="0.8em">VelocityContext</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2983"><!--VelocityContext--></fo:wrapper>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt369">The World's Busiest Airports

Rank  Code  Name                Passengers  US Domestic
1     ATL   Hartsfield Atlanta  76876128            Y
2     ORD   Chicago O'Hare      66501496            Y
3     LHR   Heathrow            63338649            N
4     HND   Tokyo-Haneda        61079478            N
5     LAX   Los Angeles         56198447            Y
6     DFW   Dallas/Fort Worth   52826304            Y</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-7.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.7.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">#foreach</fo:inline> directive can iterate over arrays,
<fo:inline font-family="monospace" font-size="0.8em">Enumeration</fo:inline>s, <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline>s, and
<fo:inline font-family="monospace" font-size="0.8em">Set</fo:inline>s; each element is exposed as a local reference
specified in the parameter to <fo:inline font-family="monospace" font-size="0.8em">#foreach</fo:inline>. A
<fo:inline font-family="monospace" font-size="0.8em">#foreach</fo:inline> block is terminated by
<fo:inline font-family="monospace" font-size="0.8em">#end</fo:inline>. The <fo:inline font-family="monospace" font-size="0.8em">#foreach</fo:inline> directive
also exposes a local reference <fo:inline font-family="monospace" font-size="0.8em">$velocityCount</fo:inline>,
which holds the index of the current row, and, if you need to create
a table with alternating row colors, use the
<fo:inline font-family="monospace" font-size="0.8em">velocityCount</fo:inline> variable with the
<fo:inline font-family="monospace" font-size="0.8em">#if</fo:inline> directive:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt370">#foreach( $widgets in $theToolbox )
  #if( $velocityCount % 2 == 0 )
    #set( $bgColor = '#DDD' )
  #else
    #set( $bgColor = '#CCC' )
  #end
  &lt;tr color="${bgColor}"&gt;
    &lt;td&gt;Some Data&lt;/td&gt;
  &lt;/tr&gt;
#end</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">#if</fo:inline> directive takes a
<fo:inline font-family="monospace" font-size="0.8em">boolean</fo:inline> expression, and renders the content
contained in the <fo:inline font-family="monospace" font-size="0.8em">#if</fo:inline> block if this expression
evaluates to <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>. Like
<fo:inline font-family="monospace" font-size="0.8em">#foreach</fo:inline>, an <fo:inline font-family="monospace" font-size="0.8em">#if</fo:inline> block is also
terminated by <fo:inline font-family="monospace" font-size="0.8em">#end</fo:inline>. The <fo:inline font-family="monospace" font-size="0.8em">#if</fo:inline>
directive can also be followed by an <fo:inline font-family="monospace" font-size="0.8em">#elseif</fo:inline> block
or an <fo:inline font-family="monospace" font-size="0.8em">#else</fo:inline> block, as shown in the following
example:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt371">#if( $variable == "TEST" )
  This is a test.
#elseif( $variable == "SERIOUS" )
  The condition is Serious.
#elseif( $variable == "MAJOR" )
  The condition is Major.
#else
  The condition is Nominal
#end</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">#foreach</fo:inline> directive can be used to iterate over
a <fo:inline font-family="monospace" font-size="0.8em">Set</fo:inline> of keys from a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>. To
access each element in a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>, use the bracket
notation shown in the following example:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt372">#set( $keys = someMap.keySet( ) )

#foreach( $key in $keys )
  $key: $someMap[$key]
#end</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-7.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.7.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For information about the<fo:wrapper id="jakartackbk-CHP-9-ITERM-2984"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2985"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2986"><!----></fo:wrapper> relational and logical operators
supports by Velocity, see the Velocity Template Language (VTL)
Reference Guide (<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/velocity/vtl-reference-guide.html</fo:inline>).</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-8"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Using Macros in a Templating Engine</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.8. Using Macros in a Templating Engine</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-8.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.8.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to reuse portions of<fo:wrapper id="jakartackbk-CHP-9-ITERM-2987"><!--templating, macros--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2988"><!--macros, templating--></fo:wrapper>
a template to standardize the display of common elements such as an
address or a name.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-8.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.8.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use Velocity Macro definitions to reuse logic to print out
both<fo:wrapper id="jakartackbk-CHP-9-ITERM-2989"><!--printing, Jakarta
Velocity--></fo:wrapper> names and addresses. Velocity macros
are like subroutines that take a set of parameters and perform common
tasks. In the following Velocity template, two macros,
<fo:inline font-family="monospace" font-size="0.8em">#name</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">#address</fo:inline>, handle the
printing of names and addresses:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt373">#set( $volunteer = $appointment.volunteer )
#set( $location = $appointment.location )
#set( $org = $appointment.organization )

## Define the "name" macro
#macro( name $object )$!object.firstName $!object.lastName#end

## Define the "address" macro
#macro( address $object )
$!object.address.street1
$!object.address.street2
$!object.address.city, $!object.address.state $!object.address.zipcode
#end

#name( $volunteer ),

Thank you for volunteering to help serve food at the $location.name next 
week.  This email is a reminder that you are scheduled to help out from 
$appointment.startTime to $appointment.endTime on $appointment.date.  
The address of the shelter is:

#address( $location )    

If you need directions to the shelter click the following URL:

    ${org.baseUrl}directions?location=${location.id}

Also, if you are unable to help out on $appointment.date, please let us know by 
sending an email to ${org.email} or by filling out the form at this URL:

    ${org.baseUrl}planschange?appointment=${appointment.id}

Thanks again,

#name( $org.president )

#address( $org )</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In the following code, the template shown previously is loaded from a
classpath resource <fo:inline font-family="monospace" font-size="0.8em">organize.vm</fo:inline>, and an
<fo:inline font-family="monospace" font-size="0.8em">Appointment</fo:inline> object is placed in a
<fo:inline font-family="monospace" font-size="0.8em">VelocityContext</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt374">import org.apache.velocity.VelocityContext;
import org.apache.velocity.app.VelocityEngine;
import org.apache.velocity.runtime.RuntimeConstants;

// Create and initialize a VelocityEngine setting a configuration property
VelocityEngine vEngine = new VelocityEngine( );
vEnging.setProperty( RuntimeConstants.VM_CONTEXT_LOCALSCOPE, Boolean.TRUE );
vEngine.init( );

// Create a test Appointment
Appointment appointment = testAppointment( );

// Create a Velocity Context and give it the appointment 
VelocityContext context = new VelocityContext( );
context.put("appointment", appointment);

// Prepare a StringWriter that will hold the contents of
// our template merge
StringWriter writer = new StringWriter( );

// Get a stream to read in our velocity template.  The
// organize.vm file is loaded from the classpath and is stored
// in the same package as the current class.
InputStream templateStream = getClass( ).getResourceAsStream("organize.vm");
Reader reader = new InputStreamReader( templateStream );

// Evaluate the template
vEngine.evaluate(context, writer, "test", reader);
        
// Print out the results of the template evaluation
System.out.println( "organize: " + writer.toString( ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The template is merged with a <fo:inline font-family="monospace" font-size="0.8em">VelocityContext</fo:inline>, and
the following output is produced:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt375">
               <fo:inline font-family="monospace" font-size="0.8em" font-style="italic">John S.</fo:inline>,

Thank you for volunteering to help serve food at the Boston Homeless 
Veterans Shelter next week.  This email is a reminder that you are 
scheduled to help out from 9:00 AM to 2:00 PM on Monday, September 
12, 2003.  The address of the shelter is:

    17 Court Street
    Boston, MA 01260

If you need directions to the shelter click the following URL:

    <fo:inline font-style="italic">http://www.organize.com/directions?location=2342</fo:inline>

Also, if you are unable to help out on September 12th, please let us 
know by sending an email to <fo:inline font-style="italic">organize@helpout.com</fo:inline> 
or by filling out the form at this URL:

    <fo:inline font-style="italic">http://www.organize.com/planschange?appointment=29932422</fo:inline>

Thanks again,

Brishen R.
201 N. 2<fo:inline font-size="75%" vertical-align="super">nd</fo:inline> Street
Jersey City, NJ 20213</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-8.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.8.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A macro definition is started with the <fo:inline font-family="monospace" font-size="0.8em">#macro</fo:inline>
directive and ended with <fo:inline font-family="monospace" font-size="0.8em">#end</fo:inline>; the same macro is
invoked by calling <fo:inline font-family="monospace" font-size="0.8em">#&lt;macro_name&gt;( &lt;parameters&gt;
)</fo:inline>. Velocity macros must be defined before they are
referenced, using the following syntax:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt376">#macro(&lt;name&gt; &lt;arguments&gt;)
    &lt;Macro Body&gt;
#end</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Macro parameters are
<fo:wrapper id="jakartackbk-CHP-9-ITERM-2990"><!--macros, parameters--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2991"><!--parameters, macros--></fo:wrapper>not
typed as are method parameters in Java; there is no mechanism to
check that an <fo:inline font-family="monospace" font-size="0.8em">Address</fo:inline> object is passed to the
<fo:inline font-family="monospace" font-size="0.8em">#address</fo:inline> macro, throwing an exception if an
inappropriate object is encountered. To successfully render this
Velocity template, verify that an <fo:inline font-family="monospace" font-size="0.8em">Address</fo:inline> is sent
to the <fo:inline font-family="monospace" font-size="0.8em">#address</fo:inline> macro and a
<fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> is sent to the <fo:inline font-family="monospace" font-size="0.8em">#name</fo:inline>
macro.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In the previous example, an instance of
<fo:inline font-family="monospace" font-size="0.8em">VelocityEngine</fo:inline> is created and the
<fo:inline font-family="monospace" font-size="0.8em">RuntimeConstants.VM_CONTEXT_LOCALSCOPE</fo:inline> property is
set to <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>. This property corresponds to the
<fo:inline font-family="monospace" font-size="0.8em">velocimacro.context.localscope</fo:inline>, which controls the
scope of references created by <fo:inline font-family="monospace" font-size="0.8em">#set</fo:inline> directives
within macros. When this configuration property is set to
<fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>, references created in the body of a macro
are local to that macro.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The Velocity template in the Solution expects a single reference
<fo:inline font-family="monospace" font-size="0.8em">$appointment</fo:inline> to an <fo:inline font-family="monospace" font-size="0.8em">Appointment</fo:inline>
bean. Each <fo:inline font-family="monospace" font-size="0.8em">Appointment</fo:inline> has a
<fo:inline font-family="monospace" font-size="0.8em">volunteer</fo:inline> property of type
<fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline>, and every <fo:inline font-family="monospace" font-size="0.8em">Organization</fo:inline>
has a <fo:inline font-family="monospace" font-size="0.8em">president</fo:inline> property of type
<fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline>. These <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> objects,
<fo:inline font-family="monospace" font-size="0.8em">${appointment.volunteer}</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">${appointment.organization.president}</fo:inline>, are passed
to the #name macro that prints out the first and last name. Two
<fo:inline font-family="monospace" font-size="0.8em">Address</fo:inline> objects,
<fo:inline font-family="monospace" font-size="0.8em">${appointment.location.address}</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">${appointment.organization.address}</fo:inline>, are passed to
the <fo:inline font-family="monospace" font-size="0.8em">#address</fo:inline> macro that prints a standard U.S.
mailing address.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A macro can contain any directive used in Velocity; the following
macro uses nested directives to print out a list of numbers in HTML.
<fo:inline font-family="monospace" font-size="0.8em">#numberList</fo:inline> allows you to specify a range with
<fo:inline font-family="monospace" font-size="0.8em">$low</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">$high</fo:inline>; values in
<fo:inline font-family="monospace" font-size="0.8em">$numbers</fo:inline> within this range will be printed bold:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt377">#macro( numberList $numbers $low $high )
    &lt;ul&gt;
     #foreach( $number in $numbers )
       #if( ($number &gt; $low) &amp;&amp; ($number &lt; $high) ) 
           &lt;li&gt;&lt;b&gt;$number&lt;/b&gt; - In Range!&lt;/li&gt;
       #else
         &lt;li&gt;$number&lt;/li&gt; - Out of Range!&lt;/li&gt;
        #end
     #end
   &lt;/ul&gt;
#end</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The macro defined above would be called by the following Velocity
template. Note the presence of comments, which are preceded by two
hashes (<fo:inline font-family="monospace" font-size="0.8em">##</fo:inline>):</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt378">#set( $squares = [1, 4, 9, 16, 25, 36, 49, 64, 81, 100] )

## Print out a list of numbers highlighting numbers
## between 25 and 75
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">#numberList( $squares, 25, 75 )</fo:inline>
            </fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-8.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.8.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If your system has a large number of Velocity templates, you can
create a set of files to hold common macros, which will be made
available to every Velocity template using the
<fo:inline font-family="monospace" font-size="0.8em">velocimacro.library</fo:inline> property. For more
information, see the Velocity User Guide (<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/velocity/user-guide.html#Velocimacros</fo:inline>).</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-9"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Invoking Methods in a Template</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.9. Invoking Methods in a Template</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-9.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.9.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to invoke methods from a Velocity template.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-9.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.9.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use Velocity to access public methods on an object in the
<fo:inline font-family="monospace" font-size="0.8em">VelocityContext</fo:inline>. Bind an object to the
<fo:inline font-family="monospace" font-size="0.8em">VelocityContext</fo:inline> and reference methods on these
objects in a Velocity template. The following template, available on
the classpath at <fo:inline font-family="monospace" font-size="0.8em">scripting/velocity/results.vm</fo:inline>,
invokes the <fo:inline font-family="monospace" font-size="0.8em">average( )</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">min( )</fo:inline>,
and <fo:inline font-family="monospace" font-size="0.8em">max( )</fo:inline> methods on a
<fo:inline font-family="monospace" font-size="0.8em">StatUtil</fo:inline> object bound to the reference
<fo:inline font-family="monospace" font-size="0.8em">$stat</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt379">** Aggregate Statistics

Average: $stat.average( $results.scores )%
Lowest: $stat.min( $results.scores )%
Highest: $stat.max( $results.scores )%

** Scores:
#foreach( $student in $results.students )
    #score( $student 50 )
#end

More results are available here:
http://www.test.com/detail?test={results.id}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">StatUtil</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2992"><!--StatUtil
object--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2993"><!--objects, StatUtil--></fo:wrapper>
object, which is bound to <fo:inline font-family="monospace" font-size="0.8em">$stat</fo:inline>, computes basic
statistics on integer arrays. This class definition is:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt380">public class StatUtil {
    public int average(int[] array) {
        int sum = 0.0;
        for( int i = 0; i &lt; array.length; i++ ) {
            sum += array[i];
        }
        return( sum / array.length );
    }

    public int min(int[] array) {
        int min = Integer.MAX_VALUE;
        for( int i = 0; i &lt; array.length; i++) {
            if( array[i] &lt; min) { min = array[i]; }
        }
        return( min );
    }

    public int max(int[] array) {
        int max = Integer.MIN_VALUE;
        for( int i = 0; i &lt; array.length; i++) {
            if( array[i] &gt; max) { max = array[i]; }
        }
        return( max );
    }
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The template shown above is loaded from the classpath, and a
<fo:inline font-family="monospace" font-size="0.8em">StatUtil</fo:inline> object is added to the
<fo:inline font-family="monospace" font-size="0.8em">VelocityContext</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2994"><!--VelocityContext--></fo:wrapper>.
The <fo:inline font-family="monospace" font-size="0.8em">VelocityEngine</fo:inline> is configured to load templates
from the classpath, and the template is merged with a call to
<fo:inline font-family="monospace" font-size="0.8em">mergeTemplate( )</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2995"><!--mergeTemplate(
) method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2996"><!--methods, mergeTemplate(
)--></fo:wrapper>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt381">import org.apache.velocity.VelocityContext;
import org.apache.velocity.app.VelocityEngine;

// The following lines of code tell the Velocity Engine 
// where to find our shared Macros, 2. Load everything from
// Classpath.
VelocityEngine vEngine = new VelocityEngine( );
vEngine.setProperty("velocimacro.library", "scripting/velocity/macros.vm");
vEngine.setProperty("resource.loader","class");
vEngine.setProperty("class.resource.loader.description", "Classpath Loader");
vEngine.setProperty("class.resource.loader.class",
       "org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader");
vEngine.init( );

// Put the test results and the StatUtil object into the context
VelocityContext context = new VelocityContext( );
context.put("results", testResults( ));
context.put("stat", new StatUtil( ));

// Since we've configured our VelocityEngine to load our
// templates from the classpath, we can call mergeTemplate and
// let the VelocityEngine take care of reading our template.
StringWriter writer = new StringWriter( );
vEngine.mergeTemplate("scripting/velocity/results.vm", context, writer);

// Print out the results        
System.out.println( "results: " + writer.toString( ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">When the template is merged with a <fo:inline font-family="monospace" font-size="0.8em">VelocityContext</fo:inline>
containing student results and a <fo:inline font-family="monospace" font-size="0.8em">StatUtil</fo:inline> object,
the following output is produced:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt382">Here is the student performance on Test #3: The Geography of Upper Mongolia.

** Aggregate Statistics

Average:      84.3%

** Scores: 
Tim O.        40.2%    FAIL
Susan P.      90.6%    PASS
Steven R.     80.4%    PASS
Kofi A.       78.0%    PASS
Rock P.       85.1%    PASS

More results are available here: 
http://www.tests.com/detail?testId=2324223</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-9.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.9.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Note that the <fo:inline font-family="monospace" font-size="0.8em">#score</fo:inline> macro is absent from this
template. The <fo:inline font-family="monospace" font-size="0.8em">#score</fo:inline> macro encapsulates
presentation logic to translate a number grade to a printed letter
grade. This macro is stored in a separate file made available as a
classpath resource stored in
<fo:inline font-family="monospace" font-size="0.8em">scripting/velocity/macros.vm</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt383">#macro( score $student $passingGrade )
    #if( $student.score &gt;= $passingGrade )
      Student: ${student.name} Score: ${student.score}% PASS
    #else
      Student: ${student.name} Score: ${student.score}% FAIL
    #end
#end</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">VelocityEngine</fo:inline> is configured to load both the
<fo:inline font-family="monospace" font-size="0.8em">#score</fo:inline> macro and the template from the classpath
by setting the <fo:inline font-family="monospace" font-size="0.8em">resource.loader</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">class.resource.loader.description</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">class.resource.loader.class</fo:inline>. The
<fo:inline font-family="monospace" font-size="0.8em">#score</fo:inline> macro is loaded from a macro library, and
the location of this library is specified in the
<fo:inline font-family="monospace" font-size="0.8em">velocimacro.library</fo:inline> configuration property.
Velocity has built-in resource loaders to load resources from the
filesystem, the classpath, a database, or a JAR file. The following
configuration configures two resource loaders for a
<fo:inline font-family="monospace" font-size="0.8em">VelocityEngine</fo:inline>—a filesystem resource loader
and a classpath resource loader. When a resource is loaded, the
<fo:inline font-family="monospace" font-size="0.8em">VelocityEngine</fo:inline> attempts to locate the resource in
the filesystem, and, if the resource is not found, it searches the
classpath. Using this configuration, you can create an application
with default templates in the classpath, which can be overridden by
customized templates on the filesystem. The file resource loader is
also configured to cache file resources in memory, checking for a
modification every 600 seconds:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt384">resource.loader = file, class

file.resource.loader.description = Customized Templates
file.resource.loader.class = \ org.apache.velocity.runtime.resource.loader.
FileResourceLoader
file.resource.loader.path = custom/templates
file.resource.loader.cache = true
file.resource.loader.modificationCheckInterval = 600

class.resource.loader.description = Default Templates
class.resource.loader.class = \ org.apache.velocity.runtime.resource.loader.
ClasspathResourceLoader</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Instead of configuring a
<fo:inline font-family="monospace" font-size="0.8em">VelocityEngine</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2997"><!--VelocityEngine--></fo:wrapper>
in Java code, the name of this properties file can be passed to the
<fo:inline font-family="monospace" font-size="0.8em">init( )</fo:inline> method:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt385">VelocityEngine engine = new VelocityEngine( );
engine.init( "conf/velocity.properties" );</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-9.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.9.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you need to format dates and numbers, take a look at the
<fo:inline font-family="monospace" font-size="0.8em">VelocityTools</fo:inline> project, which provides a few
ready-made utilities, such as <fo:inline font-family="monospace" font-size="0.8em">DateTool</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">NumberTool</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">MathTool</fo:inline>
(<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/velocity/tools/index.html</fo:inline>).</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Velocity's simplicity can be both a blessing and a
curse. In this last example, note that the student scores were all
stored as integer values. Velocity's numeric
comparisons only work with integers values. Try to evaluate
<fo:inline font-family="monospace" font-size="0.8em">${var &lt; 37.4}</fo:inline> in a Velocity template and you
will have inconsistent results. Velocity is simple is by design. If
you are looking for a more complex templating engine<fo:wrapper id="jakartackbk-CHP-9-ITERM-2998"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-2999"><!----></fo:wrapper>, the next few
recipes introduce another templating engine named FreeMarker.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-10"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Obtaining FreeMarker</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.10. Obtaining FreeMarker</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-10.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.10.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to use FreeMarker to
write<fo:wrapper id="jakartackbk-CHP-9-ITERM-3000"><!--templating, FreeMaker,
downloading--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-3001"><!--FreeMarker,
downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-3002"><!--downloading, FreeMarker--></fo:wrapper>
templates that can reference variables, object properties, and DOM
<fo:inline font-family="monospace" font-size="0.8em">Node</fo:inline> objects.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-10.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.10.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You must download the latest version of FreeMarker, and place the
FreeMarker JAR<fo:inline font-family="monospace" font-size="0.8em"> </fo:inline>in your
project's classpath. Go to the FreeMarker download
page at <fo:inline font-family="monospace" font-size="0.8em">http://www.freemarker.org/freemarkerdownload.html</fo:inline>,
and download the FreeMarker 2.3 distribution. After you untar and
unzip the distribution, you will find a
<fo:inline font-family="monospace" font-size="0.8em">freemarker.jar</fo:inline> file in the
<fo:inline font-family="monospace" font-size="0.8em">lib</fo:inline> directory; place this file in your
project's classpath.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-10.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.10.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you have a Maven project that needs to use FreeMarker, add a
dependency on FreeMarker with the following section in
<fo:inline font-family="monospace" font-size="0.8em">project.xml</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt386">&lt;dependencies&gt;
  &lt;dependency&gt;
    &lt;id&gt;freemarker&lt;/id&gt;
    &lt;version&gt;2.3&lt;/version&gt;
  &lt;/dependency&gt;

  ....other dependencies...
&lt;/dependencies&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-10.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.10.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">To learn more about FreeMarker, visit the FreeMarker web site
(<fo:inline font-family="monospace" font-size="0.8em">http://www.freemarker.org/</fo:inline>).</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">To participate in the FreeMarker community, join the FreeMarker users
or developers list (<fo:inline font-family="monospace" font-size="0.8em">http://sourceforge.net/mail/?group_id=794</fo:inline>).</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-11"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Using a Complex Scripting Engine</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.11. Using a Complex Scripting Engine</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-11.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.11.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to find a templating engine that supports number formatting,
date formatting, and comparison of double values. In addition, you
are looking for a templating engine that gives you more control over
whitespace and line breaks.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-11.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.11.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use FreeMarker, a templating engine with a large built-in feature set
that includes support for date and number formatting and intelligent
handling of whitespace. The following FreeMarker template creates a
summary report for a college course:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt387">&lt;#assign student = enrollment.student &gt;
&lt;#assign course = enrollment.course &gt;
&lt;#assign exams = enrollment.exams &gt;
&lt;#-- This macro assigns a variable named final --&gt;
&lt;@final exams=exams/&gt;    

${student.firstName} ${student.lastName},

Here is a summary of your performance in ${course.dept} ${course.num} 
${course.name}.  

Class:         ${course.name}
Professor:     ${course.professor}
Section:       ${enrollment.section?string("000")}

Exam, Date, Score, Weight, Grade
-----------------------------------------------
&lt;#list exams as exam&gt;
  &lt;@compress single_line=true&gt;
    &lt;#assign score = exam.score &gt;
    ${exam.name}, 
    ${exam.date?date?string.short}, 
    #{exam.score; m1M1}, 
    ${exam.weight},
    &lt;@letter score=score/&gt;        
  &lt;/@compress&gt;
  
&lt;/#list&gt;

Final Grade:  ${final; m1M1} &lt;@letter score=final/&gt;        
Your final grade has been submitted to the Registrar.  

&lt;#macro final exams&gt;
    &lt;#local num = 0&gt;
    &lt;#local dem = 0&gt;
    &lt;#list exams as exam&gt;
        &lt;#local num = num + (exam.score * exam.weight)/&gt;
        &lt;#local dem = dem + exam.weight&gt;
    &lt;/#list&gt;
    &lt;#assign final = num / dem&gt;
&lt;/#macro&gt;

&lt;#macro letter score&gt;
    &lt;#if (score &gt;= 90)&gt; A
    &lt;#elseif (score &gt;= 80)&gt; B
    &lt;#elseif (score &gt;= 70)&gt; C
    &lt;#elseif (score &gt;= 60)&gt; D
    &lt;#else&gt; F
    &lt;/#if&gt;
&lt;/#macro&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">To merge this template with data, populate a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>
with named attributes and pass this <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> to the
<fo:inline font-family="monospace" font-size="0.8em">template.process()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-3003"><!--template.process( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-3004"><!--methods, template.process(
)--></fo:wrapper> method. The following code creates a
<fo:inline font-family="monospace" font-size="0.8em">Configuration</fo:inline> object that loads a FreeMarker
template, <fo:inline font-family="monospace" font-size="0.8em">template.ftl</fo:inline>, from the classpath. An
<fo:inline font-family="monospace" font-size="0.8em">Enrollment</fo:inline> object is added to the root
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>, and the output of the template merge is
written to a <fo:inline font-family="monospace" font-size="0.8em">StringWriter</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt388">import freemarker.template.Configuration;
import freemarker.cache.ClassTemplateLoader;
import freemarker.template.ObjectWrapper;
import freemarker.template.Template;

StringWriter writer = new StringWriter( );

// Create a Configuration object for FreeMarker
Configuration cfg = Configuration.getDefaultConfiguration( );
cfg.setTemplateLoader(new ClassTemplateLoader(getClass( )));
cfg.setObjectWrapper(ObjectWrapper.BEANS_WRAPPER);

// The root Map serves as a Context for our template engine
Map root = new HashMap( );
root.put("enrollment", testEnrollment( ));

// A template is processed with a Map and output is sent to a Writer.
Template template = cfg.getTemplate("template.ftl");
template.process(root, writer);
System.out.println("output: \n" + writer.toString( ));</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The template is rendered, and the following output is printed to the
console:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt389">Stefan Winz,

Here is a summary of your performance in ECON 201 Macroeconomics.  

Class:         Macroeconomics
Professor:     Dr. Stephen H. Jones
Section:        002

Exam, Date, Score, Weight, Grade
-----------------------------------------------
T01, 01/10/03,    93.4, 1.00, A
T02, 01/27/03,    85.5, 1.50, B
Mid, 02/15/03,    98.0, 2.00, A+
T03, 03/31/03,    71.5, 1.00, C-
T04, 04/10/03,    88.5, 1.50, B+
Fin, 05/05/03,    95.0, 4.00, A

Final Grade:     91        A-

Your final grade has been submitted to the Registrar.  Have a great Summer!</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-11.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.11.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In the template for this recipe, three objects are retrieved from an
<fo:inline font-family="monospace" font-size="0.8em">Enrollment</fo:inline> object: a <fo:inline font-family="monospace" font-size="0.8em">course</fo:inline>
property, a <fo:inline font-family="monospace" font-size="0.8em">student</fo:inline> property, and a
<fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> of <fo:inline font-family="monospace" font-size="0.8em">Exam</fo:inline> objects. Three
variables—<fo:inline font-family="monospace" font-size="0.8em">course</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">student</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">exam</fo:inline>—are
created with the <fo:inline font-family="monospace" font-size="0.8em">&lt;#assign&gt;</fo:inline> directive,
<fo:inline font-family="monospace" font-size="0.8em">&lt;#assign</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">variable = expression
&gt;</fo:inline>. Properties are referenced as they were referenced in
JEXL and Velocity; <fo:inline font-family="monospace" font-size="0.8em">${enrollment.student}</fo:inline> is used
to access the <fo:inline font-family="monospace" font-size="0.8em">student</fo:inline> property on the
<fo:inline font-family="monospace" font-size="0.8em">enrollment</fo:inline>. A student's final
course grade is calculated in a macro by calling
<fo:inline font-family="monospace" font-size="0.8em">&lt;@final</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">exams=exams/&gt;</fo:inline>.
This macro assigns a global template variable,
<fo:inline font-family="monospace" font-size="0.8em">final</fo:inline>, which is formatted to one decimal place
with the expression <fo:inline font-family="monospace" font-size="0.8em">${final; m1M1}</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">At first glance, a FreeMarker template looks very similar to a
Velocity template, but there are several interesting features not
available in Velocity:</fo:block><fo:block space-before.optimum="0em" space-before.minimum="0em" space-before.maximum="0em" space-after.optimum="0em" space-after.minimum="0em" space-after.maximum="0em" margin-left="1.0em" id="d0e27995"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e27996" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>Formatting dates and numbers</fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>Our date object was formatted with the expression
<fo:inline font-family="monospace" font-size="0.8em">${exam.date?date?string.short}</fo:inline>.
<fo:inline font-family="monospace" font-size="0.8em">?date</fo:inline> instructs the engine to take only the day,
month, and year portion of the date, and
<fo:inline font-family="monospace" font-size="0.8em">?string.short</fo:inline> tells FreeMarker to use the
locale's short-date format (12/31/04). You can also
specify your own date format using the same syntax you would use in
<fo:inline font-family="monospace" font-size="0.8em">SimpleDateFormat</fo:inline>. The expression
<fo:inline font-family="monospace" font-size="0.8em">${exam.date?string("MM-dd-yyyy hh:mm:ss")}</fo:inline> would
output a string similar to "12-31-2004
04:23:22."</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e28017" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>Comparing dates and numbers</fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>FreeMarker can compare dates and numbers, both integer and floating
point.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e28023" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>Macros with named parameters</fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>Macros can be invoked with named parameters. For example, the
<fo:inline font-family="monospace" font-size="0.8em">@letter</fo:inline> macro can be invoked with named
parameters: <fo:inline font-family="monospace" font-size="0.8em">&lt;@letter</fo:inline>
                        <fo:inline font-family="monospace" font-size="0.8em">team="Boston</fo:inline> 
                        <fo:inline font-family="monospace" font-size="0.8em">Celtics</fo:inline>"
<fo:inline font-family="monospace" font-size="0.8em">score="34"&gt;&lt;/@letter&gt;</fo:inline>.</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Here are some other interesting FreeMarker features not available in
Velocity:</fo:block><fo:list-block space-before.optimum="0em" space-before.minimum="0em" space-before.maximum="0em" space-after.optimum="0em" space-after.minimum="0em" space-after.maximum="0em" margin-left="1.0em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e28046"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e28047"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Namespaces for variables and macros</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e28050"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>"Built-in" functions for basic
types</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e28053"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Access to XML document objects</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e28056"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Improved looping</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e28059"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Local macro variables</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e28062"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Built-in XML and HTML escaping</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-CHP-9-NOTE-67"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/tip.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Tip</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Velocity has a very large user base, and it is the right tool for a
simple job. FreeMarker has some very useful features
"out of the box," while Velocity
requires developers to install supporting utilities or write these
"extensions" from scratch. Some
developers will prefer a templating language that is simple by
design, and others need a tool that is substantially more complex.
There is a case to be made for simplicity. If you working on a large
team, where you have content authors who need to create and maintain
your templates, you may want to use a technology like Velocity that
embraces simplicity. Open source communities benefit from healthy
cross-pollination of ideas and competition, and FreeMarker was
developed as an alternative to Jakarta Velocity; they even have a
feature comparison page (<fo:inline font-family="monospace" font-size="0.8em">http://www.freemarker.org/fmVsVel.html</fo:inline>).</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-11.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.11.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">It is beyond the scope of this book to drill into the details of
every FreeMarker feature listed in this recipe. If you are interested
in learning more about FreeMarker, take a look at the online
documentation (<fo:inline font-family="monospace" font-size="0.8em">http://www.freemarker.org/docs/index.html</fo:inline>).</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you are using Jakarta Velocity and wish to migrate your templates
to FreeMarker, the FreeMarker team has written a utility, code named
"US Cavalry," which will
automatically translate your VTL templates to FTL templates. To
obtain "US Cavalry," see
<fo:inline font-family="monospace" font-size="0.8em">http://www.freemarker.org/usCavalry.html</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-12"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Accessing XML Documents from a Templating Engine</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.12. Accessing XML Documents from a Templating Engine</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-12.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.12.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to reference XML nodes from a template.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-12.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.12.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use FreeMarker and parse an XML document with the
<fo:inline font-family="monospace" font-size="0.8em">NodeModel</fo:inline> class. A <fo:inline font-family="monospace" font-size="0.8em">NodeModel</fo:inline> is
an object that allows access to an XML document as a hierarchy of
named elements and attributes from a FreeMarker template.
<fo:inline font-family="monospace" font-size="0.8em">NodeModel</fo:inline> has a <fo:inline font-family="monospace" font-size="0.8em">public</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">static</fo:inline> method <fo:inline font-family="monospace" font-size="0.8em">parse( )</fo:inline>, which
parses an XML document and returns a <fo:inline font-family="monospace" font-size="0.8em">NodeModel</fo:inline> to
be added to your context <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>. The following code
parses an XML document and passes a <fo:inline font-family="monospace" font-size="0.8em">NodeModel</fo:inline> to a
template:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt390">import freemarker.template.Configuration;
import freemarker.cache.ClassTemplateLoader;
import freemarker.template.ObjectWrapper;
import freemarker.template.Template;
import freemarker.ext.dom.NodeModel;

// Create a File Object for our XML data
File composers = new File("composers.xml");
NodeModel nodeModel = NodeModel.parse( composers );

Map root = new HashMap( );
root.put("doc", nodeModel); 

// A template is processed with a Map and output is sent to a Writer.
Template template = cfg.getTemplate("composerTable.ftl");
template.process(root, writer);
System.out.println("output: \n" + writer.toString( ));</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A <fo:inline font-family="monospace" font-size="0.8em">File</fo:inline> object refers to an XML document, and
<fo:inline font-family="monospace" font-size="0.8em">NodeModel.parse( )</fo:inline> is used to parse this document
to a <fo:inline font-family="monospace" font-size="0.8em">NodeModel</fo:inline> object, which is then placed in the
<fo:inline font-family="monospace" font-size="0.8em">root</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>—the context with
which the FreeMarker template will be merged. The XML document
contains information about the lives of great classical composers,
and the structure of this document is shown here:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt391">&lt;?xml version="1.0"?&gt;

&lt;composers&gt;
  &lt;composer&gt;
    &lt;name&gt;Bach, Johann Sebastian&lt;/name&gt;
    &lt;born date="3/21/1685"&gt;
      &lt;location&gt;Eisenbach&lt;/location&gt;
    &lt;/born&gt;
    &lt;notes&gt;Bach wrote intense and complex fugues.&lt;/notes&gt;
    &lt;link&gt;http://www.bachfaq.org/&lt;/link&gt;
  &lt;/composer&gt;
  &lt;composer&gt;
    &lt;name&gt;Mozart, Wolfgang Amadeus&lt;/name&gt;
    &lt;born date="1/27/1756"&gt;
      &lt;location&gt;Salzburg&lt;/location&gt;
    &lt;/born&gt;
    &lt;notes&gt;Wrote first symphony at age 8.&lt;/notes&gt;
    &lt;link&gt;http://www.mozartproject.org/&lt;/link&gt;
  &lt;/composer&gt;
  &lt;composer&gt;
    &lt;name&gt;Hendrix, Jimi&lt;/name&gt;
    &lt;born date="11/27/1942"&gt;
      &lt;location&gt;Seattle&lt;/location&gt;
    &lt;/born&gt;
    &lt;notes&gt;Hendrix set his guitar on fire in Monterey&lt;/notes&gt;
    &lt;link&gt;http://www.jimihendrix.com/&lt;/link&gt;
  &lt;/composer&gt;
&lt;/composers&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">NodeModel</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-3005"><!--NodeModel
object--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-3006"><!--objects, NodeModel--></fo:wrapper>
object is exposed to the template as <fo:inline font-family="monospace" font-size="0.8em">doc</fo:inline>, and the
<fo:inline font-family="monospace" font-size="0.8em">#list</fo:inline> directive is used to iterate through each
<fo:inline font-family="monospace" font-size="0.8em">composer</fo:inline> element. A reference to a child element
<fo:inline font-family="monospace" font-size="0.8em">link</fo:inline> of the <fo:inline font-family="monospace" font-size="0.8em">composer</fo:inline> element is
<fo:inline font-family="monospace" font-size="0.8em">${composer.link}</fo:inline>, and a reference to the date
attribute of the born element is preceded by
<fo:inline font-family="monospace" font-size="0.8em">@--${composer.born.@date}</fo:inline>. The FreeMarker
template, which references elements and attributes through a
<fo:inline font-family="monospace" font-size="0.8em">NodeModel</fo:inline>, is:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt392">&lt;#list doc.composers.composer as composer&gt;
  &lt;p&gt;
    &lt;a href="${composer.link}"&gt;${composer.name}&lt;/a&gt;&lt;br/&gt;
    Born on ${composer.born.@date} in ${composer.born.location}&lt;br/&gt;
    Notes: ${composer.notes}
  &lt;/p&gt;
&lt;/#list&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-12.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.12.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In addition to simple access to elements and attributes, FreeMarker
also allows you to use XPath expressions if
<fo:wrapper id="jakartackbk-CHP-9-ITERM-3007"><!--Apache Xalan--></fo:wrapper>Apache Xalan is
available on the classpath. If you have
<fo:wrapper id="jakartackbk-CHP-9-ITERM-3008"><!--Xalan--></fo:wrapper>Xalan, you can use
XPath with the same syntax you would use if you were trying to access
a map. Instead of <fo:inline font-family="monospace" font-size="0.8em">someMap["key"]</fo:inline>, you would use
<fo:inline font-family="monospace" font-size="0.8em">someElement["&lt;XPath&gt;"]</fo:inline>. Here is a quick
example, which uses an XPath expression to iterate through every
composer's "born"
element:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt393">&lt;#list doc["composers/composer/born"] as birth&gt;
  &lt;p&gt;Born: ${birth.date}, ${birth.location}  ${birth?parent.name}&lt;/p&gt; 
&lt;/#list&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">FreeMarker also includes a number of built-ins for
<fo:inline font-family="monospace" font-size="0.8em">NodeModel</fo:inline> objects; in the previous template,
<fo:inline font-family="monospace" font-size="0.8em">?parent</fo:inline> returns the parent element of the element
represented by the <fo:inline font-family="monospace" font-size="0.8em">birth</fo:inline> node. <fo:basic-link internal-destination="jakartackbk-CHP-9-TABLE-4" text-decoration="underline" color="blue">Table 9-4</fo:basic-link> lists a number of built-ins for XML nodes;
<fo:inline font-family="monospace" font-size="0.8em">?children</fo:inline> returns all of the child nodes of a
given node, and <fo:inline font-family="monospace" font-size="0.8em">?ancestors</fo:inline> gives every node above
this node in an XML document.</fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-9-TABLE-4"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 9-4. FreeMarker built-ins for NodeModel objects</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-left-style="solid" border-right-style="solid" border-top-style="solid" border-bottom-style="solid" border-left-width="0.1pt" border-right-width="0.1pt" border-top-width="0.1pt" border-bottom-width="0.1pt" border-left-color="black" border-right-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="17.4cm"><fo:table-column column-number="1"/><fo:table-column column-number="2"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Expression</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Evaluates to</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${composers?children}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A sequence of all child nodes. This example would return 3
<fo:inline font-family="monospace" font-size="0.8em">composer</fo:inline> nodes.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${composer?parent}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If called on a <fo:inline font-family="monospace" font-size="0.8em">composer</fo:inline> node, this would return
the <fo:inline font-family="monospace" font-size="0.8em">composers</fo:inline> node.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${composer?root}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This would return the <fo:inline font-family="monospace" font-size="0.8em">doc</fo:inline> node, which is the
topmost node in this document.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${link?ancestors}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If this corresponded to the link element for Jimi Hendrix, this would
return a sequence of <fo:inline font-family="monospace" font-size="0.8em">[${composers.composer[3]},
${composers}]</fo:inline>. This returns an array of all ancestors
starting with <fo:inline font-family="monospace" font-size="0.8em">${link?parent}</fo:inline> and ending at
<fo:inline font-family="monospace" font-size="0.8em">${link.root}</fo:inline>.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${link?node_name}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This would return "link." This
returns the name of the element or attribute in question.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                              <fo:inline font-family="monospace" font-size="0.8em">${link?node_type}</fo:inline>
                           </fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This would return "element." It
could return "attribute,"
"element,"
"text,"
"comment,"
"entity," and a few other types
corresponding to <fo:inline font-family="monospace" font-size="0.8em">Node</fo:inline> types in the DOM API.</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-12.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.12.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more detail about referencing XML elements through
<fo:inline font-family="monospace" font-size="0.8em">NodeModel</fo:inline> and the use of XPath expressions in
FreeMarker, see the "Learning by
Example" section of Imperative XML Processing
(<fo:inline font-family="monospace" font-size="0.8em">http://www.freemarker.org/docs/xgui_imperative_learn.html</fo:inline>).</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">FreeMarker also offers syntax for declarative processing of
XML—assigning macros to handle elements in an XML document. For
more information about FreeMarker declarative XML processing, see the
FreeMarker online documentation (<fo:inline font-family="monospace" font-size="0.8em">http://www.freemarker.org/docs/xgui_declarative_basics.html</fo:inline>).</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-13"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Using Velocity in a Web Application</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.13. Using Velocity in a Web Application</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-13.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.13.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You are sick of writing JSP and having to wait for pages to compile.
You would like to find a way to use Velocity instead of JSP.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-13.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.13.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Configure your web application to use the
<fo:inline font-family="monospace" font-size="0.8em">VelocityViewServlet</fo:inline> to render your Velocity
templates. Download the latest version of the
<fo:inline font-family="monospace" font-size="0.8em">VelocityView</fo:inline> project from <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/site/binindex.cgi</fo:inline>;
it is listed under "Velocity Tools
1.1." Put the velocity and velocity-tools jars in
the <fo:inline font-family="monospace" font-size="0.8em">WEB-INF/lib</fo:inline> directory, and configure your
web application to render templates ending in
<fo:inline font-family="monospace" font-size="0.8em">*.vm</fo:inline> with the
<fo:inline font-family="monospace" font-size="0.8em">VelocityViewServlet</fo:inline>. Add the following
<fo:inline font-family="monospace" font-size="0.8em">servlet</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">servlet-mapping</fo:inline>
elements to your <fo:inline font-family="monospace" font-size="0.8em">web.xml</fo:inline> file as follows:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt394">&lt;!-- Define Velocity template compiler --&gt;
&lt;servlet&gt;
  &lt;servlet-name&gt;velocity&lt;/servlet-name&gt;
  &lt;servlet-class&gt;
    org.apache.velocity.tools.view.servlet.VelocityViewServlet
  &lt;/servlet-class&gt;
  &lt;load-on-startup&gt;10&lt;/load-on-startup&gt;
&lt;/servlet&gt;

.....other servlets.....

&lt;!-- Map *.vm files to Velocity --&gt;
&lt;servlet-mapping&gt;
  &lt;servlet-name&gt;velocity&lt;/servlet-name&gt;
  &lt;url-pattern&gt;*.vm&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">All requests ending in <fo:inline font-family="monospace" font-size="0.8em">*.vm</fo:inline> are processed by the
<fo:inline font-family="monospace" font-size="0.8em">VelocityViewServlet</fo:inline>, which locates the appropriate
Velocity template in the document root of your web application.
Attributes from the request, session, and application scope will be
available as variables in the <fo:inline font-family="monospace" font-size="0.8em">VelocityContext</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">To test this configuration, create a simple Velocity template in the
document root of your web application named
<fo:inline font-family="monospace" font-size="0.8em">index.vm</fo:inline>, start your servlet container, and
attempt to render the template by loading <fo:inline font-family="monospace" font-size="0.8em">http://&lt;server&gt;/&lt;web-app&gt;/index.vm</fo:inline>
in a browser. If everything is set up correctly, you should see the
rendered template. If the configuration is not correct, you will see
the source for your Velocity template.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-13.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.13.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">JSP compilation is an annoyance, especially if you are constantly
altering and debugging JSP—all that waiting around adds up over
the course of a long project. Using Velocity can help improve
performance; the simplicity and elegance of Velocity makes parsing
and executing a template fast and efficient. If you are looking for a
viable alternative to JSP, try Velocity as your view layer, and you
might be surprised.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Velocity can be a refreshing break from JSP, and almost any web
application framework will work with Velocity. If you are working
with an existing web application, there is no need to stop using JSP
in lieu of Velocity; you can use both technologies in the same web
application. Templates ending in <fo:inline font-family="monospace" font-size="0.8em">*.jsp</fo:inline> will be
rendered by the existing JSP servlet, and templates ending in
<fo:inline font-family="monospace" font-size="0.8em">*.vm</fo:inline> will be rendered by the
<fo:inline font-family="monospace" font-size="0.8em">VelocityViewServlet</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-13.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.13.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-3009"><!--VelocityTools--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-3010"><!--tools, VelocityTools--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-3011"><!--utilities, VelocityTools--></fo:wrapper>VelocityTools
also contains a project named
<fo:wrapper id="jakartackbk-CHP-9-ITERM-3012"><!--VelocityStruts--></fo:wrapper>VelocityStruts,
which provides tools to integrate Velocity with Jakarta Struts. The
VelocityStruts project has tools that duplicate the functionality of
the<fo:wrapper id="jakartackbk-CHP-9-ITERM-3013"><!--Struts JSP tag libraries--></fo:wrapper>
Struts JSP tag libraries—a <fo:inline font-family="monospace" font-size="0.8em">FormTool</fo:inline>
corresponds to the <fo:inline font-family="monospace" font-size="0.8em">html</fo:inline> tag library, a
<fo:inline font-family="monospace" font-size="0.8em">MessageTool</fo:inline> duplicates the
<fo:inline font-family="monospace" font-size="0.8em">bean:message</fo:inline> tag, a <fo:inline font-family="monospace" font-size="0.8em">TilesTool</fo:inline>
provides access to the Struts tiles plug-in. It is possible to
introduce Velocity into an existing Struts application by simply
adding the <fo:inline font-family="monospace" font-size="0.8em">servlet</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">serlvet-mapping</fo:inline> to <fo:inline font-family="monospace" font-size="0.8em">web.xml</fo:inline>,
as shown above. Configure the <fo:inline font-family="monospace" font-size="0.8em">VelocityViewServlet</fo:inline>,
and configure an <fo:inline font-family="monospace" font-size="0.8em">Action</fo:inline> to forward to a velocity
template; configure the struts tools by following the directions on
the VelocityStruts user guide (<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/velocity/tools/struts/userguide.html</fo:inline>).</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-14"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Using FreeMarker in a Web Application</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.14. Using FreeMarker in a Web Application</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-14.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.14.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You would like to use FreeMarker templates in a web application.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-14.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.14.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">FreeMarker ships with a <fo:inline font-family="monospace" font-size="0.8em">FreemarkerServlet</fo:inline>, which
can be configured to render your FreeMarker templates. To configure
this servlet, add the following <fo:inline font-family="monospace" font-size="0.8em">servlet</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">servlet-mapping</fo:inline> elements to your
<fo:inline font-family="monospace" font-size="0.8em">web.xml</fo:inline> file:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt395">&lt;servlet&gt;
  &lt;servlet-name&gt;freemarker&lt;/servlet-name&gt;
  &lt;servlet-class&gt;freemarker.ext.servlet.FreemarkerServlet&lt;/servlet-class&gt;
  &lt;init-param&gt;
    &lt;param-name&gt;TemplatePath&lt;/param-name&gt;
    &lt;param-value&gt;/&lt;/param-value&gt;
  &lt;/init-param&gt;
  &lt;init-param&gt;
    &lt;param-name&gt;NoCache&lt;/param-name&gt;
    &lt;param-value&gt;true&lt;/param-value&gt;
  &lt;/init-param&gt;
  &lt;init-param&gt;
    &lt;param-name&gt;ContentType&lt;/param-name&gt;
    &lt;param-value&gt;text/html&lt;/param-value&gt;
  &lt;/init-param&gt;
  &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
&lt;/servlet&gt;

&lt;servlet-mapping&gt;
  &lt;servlet-name&gt;freemarker&lt;/servlet-name&gt;
  &lt;url-pattern&gt;*.ftl&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-14.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.14.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If your application contains custom JSP tag libraries, these tag
libraries can be used from a FreeMarker template. To see how a JSP
tag library can be used in FreeMarker, take a look at the following
JSP page, which references an <fo:inline font-family="monospace" font-size="0.8em">app</fo:inline> tag library with
a TLD file in <fo:inline font-family="monospace" font-size="0.8em">/WEB-INF/app-taglib.tld</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt396">&lt;%@page language="java"%&gt;
&lt;%@taglib uri="/WEB-INF/app-taglib.tld" prefix="app"%&gt;

&lt;p&gt;
 This is an HTML page with a taglib in it.
&lt;/p&gt;

&lt;app:printStuff var="test" mode="fast"/&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">app</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-3014"><!--app tag
library--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-3015"><!--tags, app tag
library--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-3016"><!--libraries, app
tag--></fo:wrapper> tag library has a
<fo:inline font-family="monospace" font-size="0.8em">printStuff</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-3017"><!--printStuff
tag--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-3018"><!--tags, printStuff--></fo:wrapper>
tag, which takes the parameters <fo:inline font-family="monospace" font-size="0.8em">var</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">mode</fo:inline>. The same tag can be used in a FreeMarker
template by assigning a reference to
<fo:inline font-family="monospace" font-size="0.8em">JspTaglibs["/WEB-INF/app-taglib.tld"]</fo:inline>
in an <fo:inline font-family="monospace" font-size="0.8em">&lt;#assign&gt;</fo:inline> directive. The tag can then
be used with a call to <fo:inline font-family="monospace" font-size="0.8em">&lt;@app.printStuff/&gt;</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_9_tt397">&lt;#assign app=JspTaglibs["/WEB-INF/app-taglib.tld"]&gt;

&lt;p&gt;
 This is an HTML page with a taglib in it.
&lt;/p&gt;

&lt;@app.printStuff var="test" mode="fast"/&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">That couldn't be much simpler.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-14.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.14.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This is a valuable piece of
<fo:wrapper id="jakartackbk-CHP-9-ITERM-3019"><!--templating, FreeMaker,
downloading--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-3020"><!--FreeMarker,
downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-3021"><!--downloading, FreeMarker--></fo:wrapper>functionality
if you are using a framework like Struts, which depends on JSP tag
libraries. For more details about using FreeMarker with Struts, see
"Using FreeMarker with Servlets"
(<fo:inline font-family="monospace" font-size="0.8em">http://fmpp.sourceforge.net/freemarker/pgui_misc_servlet.html</fo:inline>).</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-15"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Writing Templates in Eclipse</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.15. Writing Templates in Eclipse</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-15.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.15.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You are writing a fair amount of
<fo:wrapper id="jakartackbk-CHP-9-ITERM-3022"><!--templating, Eclipse--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-3023"><!--Eclipse--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-3024"><!--tools, Eclipse--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-9-ITERM-3025"><!--utilities, Eclipse--></fo:wrapper>Velocity
and FreeMarker templates, and you are looking for a tool that can do
some syntax highlighting, validation, and code completion.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-15.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.15.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you are writing Velocity templates, use the Velocity UI for
Eclipse. To get this plug-in, point your Eclipse Update Manager at
<fo:inline font-family="monospace" font-size="0.8em">http://veloedit.sourceforge.net/updates/</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you are writing FreeMarker templates, use the FreeMarker Eclipse
plug-in. To get this plug-in, point your Eclipse Update Manager at
<fo:inline font-family="monospace" font-size="0.8em">http://www.freemarker.org/eclipse/update</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-9-SECT-15.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">9.15.3. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The FreeMarker project maintains templates, plug-ins, and modes for
Eclipse, Emacs, jEdit, KWrite, TextPad 4, and Vim. These tools are
described on the FreeMarker site at <fo:inline font-family="monospace" font-size="0.8em">http://freemarker.org/editors.html</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The Velocity project has pointers to templates, plug-ins, and modes
for IntelliJ IDEA, Eclipse, UltraEdit, JEdit, TextPad, and Emacs.
These tools are described on the Velocity site at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/velocity/devtools.html</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about Eclipse, see Steve
Holzner's <fo:inline font-style="italic">Eclipse</fo:inline>
(O'Reilly) and <fo:inline font-style="italic">Eclipse Cookbook</fo:inline>
(O'Reilly).</fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="false" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>I/O and Networking</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>I/O and Networking</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"/></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif" margin-left="0pc"/></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block id="jakartackbk-CHP-10"><fo:block font-family="serif"><fo:block margin-left="0pc"><fo:block text-align="left" font-weight="bold" font-size="21.6pt"><fo:block keep-with-next.within-column="always" space-before.optimum="12pt" space-before.minimum="12pt * 0.8" space-before.maximum="12pt * 1.2" hyphenate="false" text-align="left" start-indent="0pc" word-spacing="-0.1em" letter-spacing="-0.05em" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 10. I/O and Networking</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="ch10-2-fm2xml"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Introduction</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.1. Introduction</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you've ever had to copy a <fo:inline font-family="monospace" font-size="0.8em">File</fo:inline>
or copy the contents of an <fo:inline font-family="monospace" font-size="0.8em">InputStream</fo:inline> to an
<fo:inline font-family="monospace" font-size="0.8em">OutputStream</fo:inline>, you've probably
wondered why Java goes out of its way to make things difficult. Java
I/O is not a terribly complex subject, but it does have a knack for
turning simpler tasks into complex nests of heavily wrapped
<fo:inline font-family="monospace" font-size="0.8em">Reader</fo:inline>s and streams. Jakarta Commons IO fills a
few gaps in Java's I/O and networking capabilities
by providing utilities and methods to copy streams, copy files, touch
files, recursively delete directories, and safely close
<fo:inline font-family="monospace" font-size="0.8em">Reader</fo:inline>s and streams. If you are working with
<fo:inline font-family="monospace" font-size="0.8em">Reader</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">Writer</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">InputStream</fo:inline>, or <fo:inline font-family="monospace" font-size="0.8em">OutputStream</fo:inline>,
you should take a look at <fo:inline font-family="monospace" font-size="0.8em">IOUtils</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">CopyUtils</fo:inline>; they may save you a few lines of
tedious code.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Commons IO also provides a set of simple
<fo:inline font-family="monospace" font-size="0.8em">FilenameFilter</fo:inline> implementations, which can be used
to selectively list files or directories. In addition to Commons
IO's <fo:inline font-family="monospace" font-size="0.8em">FilenameFilter</fo:inline>
implementations, Jakarta ORO's
<fo:inline font-family="monospace" font-size="0.8em">GlobFilenameFilter</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">Perl5FilenameFilter</fo:inline> are presented to introduce you
to more complex filters involving expressions. ORO is a subproject of
Jakarta that provides support for Perl 5 regular expressions and glob
expressions. A glob expression is commonly used when listing files in
a directory; for example, the expression, <fo:inline font-family="monospace" font-size="0.8em">*.xml</fo:inline>,
is a glob expression that matches every file that ends in
<fo:inline font-family="monospace" font-size="0.8em">.xml</fo:inline>. While Java 1.4 provides support for
regular expressions, there are subtle differences between the regular
expression syntax supported by Java 1.4 and the regular expression
syntax supported in Perl 5. You can learn more about the differences
between Perl5 regular expressions supported by ORO and regular
expressions supported by Java 1.4 by reading the ORO project page at
<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/oro</fo:inline>.
Take a look at Jakarta ORO if your application needs to work with
globs and complex regular expressions.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Commons Net contains simple clients for common protocols, such as
FTP, POP3, and SMTP. Using Commons Net, you can retrieve or transfer
files to an FTP server with a very small amount of code. Sun provides
a very capable set of classes to send and retrieve mail using POP and
SMTP, but the <fo:inline font-family="monospace" font-size="0.8em">javax.mail</fo:inline> API brings a certain
amount of complexity and overhead that might not make sense for an
application sending a simple email message. Commons Net provides a
lightweight SMTP client, which can be used to send a simple email
message in a few lines of code without introducing the complexity of
<fo:inline font-family="monospace" font-size="0.8em">javax.mail</fo:inline>. Commons Net also contains a very
straightforward POP3 client, which can be used to check a POP mailbox
for incoming messages. In addition to FTP, POP, and SMTP, Commons Net
contains simple clients for Trivial File Transfer Protocol (TFTP),
Telnet, Finger, and NNTP.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Obtaining Commons IO</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.1. Obtaining Commons IO</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-1.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.1.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to use Jakarta<fo:wrapper id="jakartackbk-CHP-10-ITERM-3026"><!--Commons
IO, downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3027"><!--downloading, Commons
IO--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3028"><!--I/O, Commons
IO, downloading--></fo:wrapper> Commons
IO.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-1.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.1.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You must download the latest version of Commons IO, and place the
Commons IO JAR<fo:inline font-family="monospace" font-size="0.8em"> </fo:inline>in your
project's classpath. Following the steps outlined in
<fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1" text-decoration="underline" color="blue">Recipe 1.1</fo:basic-link>, download Commons IO 1.0
instead of Commons Lang.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-1.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.1.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Commons IO contains a few utilities for simplifying a number of
common I/O tasks. <fo:inline font-family="monospace" font-size="0.8em">CopyUtils</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">IOUtils</fo:inline> in the
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.io</fo:inline> package provide a suite of
static utility methods for working with streams and readers.
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.io.FileUtils</fo:inline> provides static
utility methods to help with common <fo:inline font-family="monospace" font-size="0.8em">File</fo:inline>
operations, such as touching a file, recursive deletion of
directories, and reading files. The
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.io.filefilter</fo:inline> package contains
implementations of <fo:inline font-family="monospace" font-size="0.8em">FilenameFilter</fo:inline>, such as
<fo:inline font-family="monospace" font-size="0.8em">SuffixFileFilter</fo:inline>, which accepts files with a
specified name suffix.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you have a Maven project, which needs to use Commons IO, add a
dependency on Commons IO 1.0 with the following section in
<fo:inline font-family="monospace" font-size="0.8em">project.xml</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt398">&lt;dependencies&gt;
  &lt;dependency&gt;
    &lt;id&gt;commons-io&lt;/id&gt;
    &lt;version&gt;1.0&lt;/version&gt;
  &lt;/dependency&gt;
  ....other dependencies...
&lt;/dependencies&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-1.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.1.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about the Commons IO project, see the project
page at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/io</fo:inline>. If you
have questions about using Commons IO, please feel free to join the
<fo:inline font-family="monospace" font-size="0.8em">commons-user@jakarta.apache.org</fo:inline>
mailing list. Instructions for joining the user mailing list can be
found in <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-2" text-decoration="underline" color="blue">Recipe 1.2</fo:basic-link>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Copying Streams, byte[ ], Readers, and Writers</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.2. Copying Streams, byte[ ], Readers, and Writers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-2.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.2.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to copy a stream, <fo:inline font-family="monospace" font-size="0.8em">byte[]</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">Reader</fo:inline>, <fo:wrapper id="jakartackbk-CHP-10-ITERM-3029"><!--Commons
IO, CopyUtils--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3030"><!--CopyUtils--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3031"><!--I/O, CopyUtils--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3032"><!--streams, copying--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3033"><!--readers, copying--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3034"><!--writers, copying--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3035"><!--strings, copying--></fo:wrapper>or
<fo:inline font-family="monospace" font-size="0.8em">Writer</fo:inline>. For example, you need to copy the content
from an <fo:inline font-family="monospace" font-size="0.8em">InputStream</fo:inline> or <fo:inline font-family="monospace" font-size="0.8em">Reader</fo:inline>
to a <fo:inline font-family="monospace" font-size="0.8em">Writer</fo:inline>, or you need to copy a
<fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> to an <fo:inline font-family="monospace" font-size="0.8em">OutputStream</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-2.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.2.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">CopyUtils</fo:inline> from Commons IO to copy the contents
of an <fo:inline font-family="monospace" font-size="0.8em">InputStream</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">Reader</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">byte[]</fo:inline>, or <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> to an
<fo:inline font-family="monospace" font-size="0.8em">OutputStream</fo:inline> or a <fo:inline font-family="monospace" font-size="0.8em">Writer</fo:inline>. The
following code demonstrates the use of <fo:inline font-family="monospace" font-size="0.8em">CopyUtils</fo:inline>
to copy between an <fo:inline font-family="monospace" font-size="0.8em">InputStream</fo:inline> and a
<fo:inline font-family="monospace" font-size="0.8em">Writer</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt399">import org.apache.commons.io.CopyUtils;

try {
    Writer writer = new FileWriter( "test.dat" );
    InputStream inputStream = 
        getClass( ).getResourceAsStream("./test.resource");
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    CopyUtils.copy( inputStream, writer );</fo:inline>
    writer.close( );
    inputStream.close( );
} catch (IOException e) {
    System.out.println( "Error copying data" );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous example reads <fo:inline font-family="monospace" font-size="0.8em">test.resource</fo:inline> using
an <fo:inline font-family="monospace" font-size="0.8em">InputStream</fo:inline>, which is copied to a
<fo:inline font-family="monospace" font-size="0.8em">FileWriter</fo:inline> using <fo:inline font-family="monospace" font-size="0.8em">CopyUtils.copy(
)</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-2.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.2.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you need to copy information from a <fo:inline font-family="monospace" font-size="0.8em">Reader</fo:inline> or
<fo:inline font-family="monospace" font-size="0.8em">InputStream</fo:inline> to a <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline>, use
<fo:inline font-family="monospace" font-size="0.8em">IOUtils.toString( )</fo:inline>. The following example opens
an
<fo:inline font-family="monospace" font-size="0.8em">InputStream</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3036"><!--InputStream--></fo:wrapper>
from a <fo:inline font-family="monospace" font-size="0.8em">URL</fo:inline> and copies the contents to a
<fo:inline font-family="monospace" font-size="0.8em">String</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt400">import org.apache.commons.io.IOUtils;

URL url = new URL( "http://www.slashdot.org" );
try {
    InputStream inStream = url.openStream( );
    <fo:inline font-weight="bold">String contents = IOUtils.toString( inStream );</fo:inline>
    System.out.println( "Slashdot: " + contents );
} catch ( IOException ioe ) {
    // handle this exception
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Because <fo:inline font-family="monospace" font-size="0.8em">CopyUtils</fo:inline> uses a 4 KB buffer to copy
between the source and the destination, you do
<fo:inline font-style="italic">not</fo:inline> need to supply buffered streams or readers
to the <fo:inline font-family="monospace" font-size="0.8em">copy( )</fo:inline> method. When using
<fo:inline font-family="monospace" font-size="0.8em">CopyUtils.copy( )</fo:inline>, make sure to <fo:inline font-family="monospace" font-size="0.8em">flush(
)</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">close( )</fo:inline> any streams,
<fo:inline font-family="monospace" font-size="0.8em">Readers</fo:inline>, or <fo:inline font-family="monospace" font-size="0.8em">Writers</fo:inline> passed to
<fo:inline font-family="monospace" font-size="0.8em">copy( )</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Closing Streams, Readers, and Writers</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.3. Closing Streams, Readers, and Writers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-3.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.3.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to close an <fo:wrapper id="jakartackbk-CHP-10-ITERM-3037"><!--Commons
IO, closing--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3038"><!--closing,
Commons IO--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3039"><!--I/O, Commons
IO, closing--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3040"><!--streams, closing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3041"><!--readers, closing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3042"><!--writers, closing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3043"><!--strings, closing--></fo:wrapper>
               <fo:inline font-family="monospace" font-size="0.8em">InputStream</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">OutputStream</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">Reader</fo:inline>, or
<fo:inline font-family="monospace" font-size="0.8em">Writer</fo:inline>, and you want to avoid catching an
<fo:inline font-family="monospace" font-size="0.8em">IOException</fo:inline> in a <fo:inline font-family="monospace" font-size="0.8em">finally</fo:inline> block.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-3.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.3.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">IOUtils.closeQuietly()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3044"><!--IOUtils.closeQuietly( )
methods--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3045"><!--methods, IOUtils.closeQuietly(
)--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3046"><!--blocks,
finally--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3047"><!--exceptions, finally
block--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3048"><!--finally
block--></fo:wrapper> to close an
<fo:inline font-family="monospace" font-size="0.8em">InputStream</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">OutputStream</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">Reader</fo:inline>, or <fo:inline font-family="monospace" font-size="0.8em">Writer</fo:inline> without
having to test for <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> or deal with an
<fo:inline font-family="monospace" font-size="0.8em">IOException</fo:inline>. The following code demonstrates the
use of <fo:inline font-family="monospace" font-size="0.8em">closeQuietly( )</fo:inline> to avoid a nasty
<fo:inline font-family="monospace" font-size="0.8em">try</fo:inline>/<fo:inline font-family="monospace" font-size="0.8em">catch</fo:inline> within a
<fo:inline font-family="monospace" font-size="0.8em">finally</fo:inline> block:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt401">import org.apache.commons.io.IOUtils
import org.apache.commons.io.CopyUtils

Reader reader = null;
String result = "":

try {
    File file = new File( "test.dat" );
    reader = new FileReader( file );
    result = CopyUtils.toString( reader );
} catch( IOException ioe ) {
    System.out.println( "Unable to copy file test.dat to a String." );
} finally {
    IOUtils.closeQuietly( reader );
}</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-3.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.3.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">It is always a good idea to close streams, readers, and writers in
<fo:inline font-family="monospace" font-size="0.8em">finally</fo:inline> blocks because you can guarantee that a
system will release I/O resources even if an exception is thrown. A
call to <fo:inline font-family="monospace" font-size="0.8em">close( )</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3049"><!--close( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3050"><!--methods, close(
)--></fo:wrapper> releases resources associated with the
stream, but because <fo:inline font-family="monospace" font-size="0.8em">close( )</fo:inline> can throw an
<fo:inline font-family="monospace" font-size="0.8em">IOException</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3051"><!--IOException,
finally blocks--></fo:wrapper>, you need to either surround
your call to <fo:inline font-family="monospace" font-size="0.8em">close( )</fo:inline> with a
<fo:inline font-family="monospace" font-size="0.8em">try</fo:inline>/<fo:inline font-family="monospace" font-size="0.8em">catch</fo:inline> block, or declare
that your method throws an <fo:inline font-family="monospace" font-size="0.8em">IOException</fo:inline>. This
problem is best illustrated by the following code, which closes a
<fo:inline font-family="monospace" font-size="0.8em">Reader</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">Writer</fo:inline> without the
help of <fo:inline font-family="monospace" font-size="0.8em">IOUtils</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt402">Reader reader = null;
Writer writer = null;
String result = "":

try {
    File file = ew File("test.dat");
    reader = new FileReader( file );
    writer = new StringWriter( );
    CopyUtils.copy( reader, writer );
    result = writer.toString( );
} catch( IOException ioe ) {
    System.out.println( "A serious problem has happened" );
} finally {
    try {
        if( reader != null ) {
            reader.close( );
        }
    } catch( IOException ioe ) {
        System.out.println( "There has been a problem closing the reader." );
    }
    try {
        if( writer != null ) {
            writer.close( );
        }
    } catch( IOException ioe ) {
        System.out.println( "There has been a problem closing the writer." );
    }
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The code within the <fo:inline font-family="monospace" font-size="0.8em">finally</fo:inline> block is as tedious to
read as it is to write. To avoid a
<fo:inline font-family="monospace" font-size="0.8em">NullPointerException</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3052"><!--NullPointerException--></fo:wrapper>,
both the <fo:inline font-family="monospace" font-size="0.8em">Reader</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">Writer</fo:inline> need
to be compared with <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>, and both
<fo:inline font-family="monospace" font-size="0.8em">Reader</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">Writer</fo:inline> need separate
<fo:inline font-family="monospace" font-size="0.8em">try</fo:inline>/<fo:inline font-family="monospace" font-size="0.8em">catch</fo:inline> blocks to avoid a
situation where a <fo:inline font-family="monospace" font-size="0.8em">Writer</fo:inline> remains open because of a
problem closing the <fo:inline font-family="monospace" font-size="0.8em">Reader</fo:inline>. Another variation on
this theme is to surround the entire example with a single
<fo:inline font-family="monospace" font-size="0.8em">try</fo:inline>/<fo:inline font-family="monospace" font-size="0.8em">catch</fo:inline> for
<fo:inline font-family="monospace" font-size="0.8em">IOException</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt403">try {
    Reader reader = null;
    Writer writer = null;
    String result = "":

    try {
        File file = new File("test.dat");
        reader = new FileReader( file );
        writer = new StringWriter( );
        CopyUtils.copy( reader, writer );
        result = writer.toString( );
    } finally {
        if( reader != null ) {
            reader.close( );
        }
        if( writer != null ) {
            writer.close( );
        }
    }
} catch( IOException ioe ) {
    System.out.println( "There was an I/O exception." );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">While this looks manageable, the
<fo:inline font-family="monospace" font-size="0.8em">try</fo:inline>/<fo:inline font-family="monospace" font-size="0.8em">catch</fo:inline> for
<fo:inline font-family="monospace" font-size="0.8em">IOException</fo:inline> has been expanded to cover the entire
example, just to avoid catching an exception in a
<fo:inline font-family="monospace" font-size="0.8em">finally</fo:inline> block. In the previous sample, when an
<fo:inline font-family="monospace" font-size="0.8em">IOException</fo:inline> was thrown, the exception was handled
within a few lines of its origin, making it easier to provide
meaningful context in an exception message. Expanding the scope of a
<fo:inline font-family="monospace" font-size="0.8em">try</fo:inline>/<fo:inline font-family="monospace" font-size="0.8em">catch</fo:inline> block and introducing
a nested
<fo:inline font-family="monospace" font-size="0.8em">try</fo:inline>/<fo:inline font-family="monospace" font-size="0.8em">catch</fo:inline>/<fo:inline font-family="monospace" font-size="0.8em">finally</fo:inline>
is an overly complex solution for what should be a relatively
straightforward task—closing a <fo:inline font-family="monospace" font-size="0.8em">Reader</fo:inline> and a
<fo:inline font-family="monospace" font-size="0.8em">Writer</fo:inline>. There is a more subtle problem with this
second approach, as well; if an <fo:inline font-family="monospace" font-size="0.8em">IOException</fo:inline> is
thrown by <fo:inline font-family="monospace" font-size="0.8em">reader.close( )</fo:inline> in the
<fo:inline font-family="monospace" font-size="0.8em">finally</fo:inline> block, <fo:inline font-family="monospace" font-size="0.8em">writer.close( )</fo:inline>
may never be executed—a possible resource leak.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">IOUtils.closeQuietly( )</fo:inline> allows you to ignore this
dilemma entirely if you accept the assumption that a problem closing
a stream can be safely ignored. If there is a problem closing an
<fo:inline font-family="monospace" font-size="0.8em">InputStream</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">OutputStream</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">Reader</fo:inline>, or <fo:inline font-family="monospace" font-size="0.8em">Writer</fo:inline>, it is
unlikely that you will be able to take any corrective action in a
<fo:inline font-family="monospace" font-size="0.8em">finally</fo:inline> block. <fo:inline font-family="monospace" font-size="0.8em">IOUtils.closeQuietly()</fo:inline> takes a reference to an <fo:inline font-family="monospace" font-size="0.8em">InputStream</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">OutputStream</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">Reader</fo:inline>, or
<fo:inline font-family="monospace" font-size="0.8em">Writer</fo:inline>, tests for <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>, and
swallows any <fo:inline font-family="monospace" font-size="0.8em">IOException</fo:inline> that may be thrown
<fo:wrapper id="jakartackbk-CHP-10-ITERM-3053"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3054"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3055"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3056"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3057"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3058"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3059"><!----></fo:wrapper>in
the process of closing a stream or reader.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-3.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.3.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This recipe used <fo:inline font-family="monospace" font-size="0.8em">CopyUtils</fo:inline>, which was demonstrated
in <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-2" text-decoration="underline" color="blue">Recipe 10.2</fo:basic-link>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Printing a Human-Readable File Size</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.4. Printing a Human-Readable File Size</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-4.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.4.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to display <fo:wrapper id="jakartackbk-CHP-10-ITERM-3060"><!--Commons
IO, printing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3061"><!--printing, Commons
IO--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3062"><!--I/O, Commons
IO, printing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3063"><!--sizing, print
files--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3064"><!--human-readable file
size, printing--></fo:wrapper>the size of a file in kilobytes,
megabytes, or gigabytes. Instead of displaying file sizes as
1,073,741,824 bytes, you want an approximate, human-readable size,
such as 1 GB.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-4.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.4.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">FileUtils.byteCountToDisplaySize()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3065"><!--FileUtils.byteCountToDisplaySize( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3066"><!--methods, FileUtils.byteCountToDisplaySize(
)--></fo:wrapper> to produce a <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline>
containing an approximate, human-readable size. The following code
passes the number of bytes in the file
<fo:inline font-family="monospace" font-size="0.8em">project.xml</fo:inline> to
<fo:inline font-family="monospace" font-size="0.8em">FileUtils.byteCountToDisplaySize( )</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt404">import org.apache.commons.io.FileUtils;

try {
    File file = new File("project.xml");
    long bytes = file.length( );
    String display = FileUtils.byteCountToDisplaySize( bytes );
    System.out.println("File: project.xml");
    System.out.println("  bytes: " + bytes );
    System.out.println("  size: " + display );
} catch( IOException ioe ) {
    System.out.println( "Error reading file length." );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This code prints out the number of bytes in the
<fo:inline font-family="monospace" font-size="0.8em">project.xml</fo:inline> file, and the human-readable size
"2 KB":</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt405">File: project.xml
  bytes: 2132
  size: 2 KB</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-4.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.4.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">FileUtils</fo:inline> contains three static
variables—<fo:inline font-family="monospace" font-size="0.8em">FileUtils.ONE_KB</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">FileUtils.ONE_MB</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">FileUtils.ONE_GB</fo:inline>—which represent the number
of bytes in a kilobyte, megabyte, and gigabyte.
<fo:inline font-family="monospace" font-size="0.8em">FileUtils.byteCountToDisplaySize( )</fo:inline> divides the
number of bytes by each constant until it finds a constant that can
divide the number of bytes, discarding the remainder to create a
human-readable value. For example, the value 2,123,022 is divided by
<fo:inline font-family="monospace" font-size="0.8em">FileUtils.ONE_GB</fo:inline>, which returns a value of less
than 1.0. The value is then divided by
<fo:inline font-family="monospace" font-size="0.8em">FileUtils.ONE_MB</fo:inline>, which returns 2—the value
used in the human-readable size "2
MB."</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-CHP-10-NOTE-68"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/warning.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Warning</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
                  <fo:inline font-family="monospace" font-size="0.8em">FileUtils.byteCountToDisplaySize( )</fo:inline> will not round
the size of a file; a 2.9 MB file will have a display size of 2 MB.
The byte count is divided by <fo:inline font-family="monospace" font-size="0.8em">ONE_KB</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">ONE_MB</fo:inline>, or <fo:inline font-family="monospace" font-size="0.8em">ONE_GB</fo:inline>, and the
remainder is discarded.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-5"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Copying Files, Strings, and URLs</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.5. Copying Files, Strings, and URLs</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-5.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.5.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to copy a file <fo:wrapper id="jakartackbk-CHP-10-ITERM-3067"><!--Commons
IO, copying files--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3068"><!--copying, files--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3069"><!--I/O, Commons
IO, copying files--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3070"><!--files, copying--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3071"><!--strings, copying--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3072"><!--URLs (uniform resource
locators), copying--></fo:wrapper>to
another file, or you need to copy a <fo:wrapper id="jakartackbk-CHP-10-ITERM-3073"><!--uniform
resource locators--></fo:wrapper>file to a
directory.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-5.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.5.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">FileUtils.copyFile()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3074"><!--FileUtils.copyFile( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3075"><!--methods, FileUtils.copyFile(
)--></fo:wrapper> and <fo:inline font-family="monospace" font-size="0.8em">FileUtils.copyFileToDirectory()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3076"><!--FileUtils.copyFileToDirectory( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3077"><!--methods, FileUtils.copyFileToDirectory(
)--></fo:wrapper>. The following code copies the file
<fo:inline font-family="monospace" font-size="0.8em">test.dat</fo:inline> to <fo:inline font-family="monospace" font-size="0.8em">test.dat.bak</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt406">import org.apache.commons.io.FileUtils;

try {
    File src = new File( "test.dat" );
    file dest = new File( "test.dat.bak" );
            
    FileUtils.copyFile( src, dest ) {
} catch( IOException ioe ) {
    System.out.println( "Problem copying file." );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You may also use <fo:inline font-family="monospace" font-size="0.8em">FileUtils.copyFileToDirectory( )</fo:inline>
to copy a file to a directory. The following code copies the file
<fo:inline font-family="monospace" font-size="0.8em">test.dat</fo:inline> to the directory
<fo:inline font-family="monospace" font-size="0.8em">./temp</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt407">try {
    File src = new File( "test.dat" );
    File dir = new File( "./temp" );

    FileUtils.copyFileToDirectory( src, dir );
} catch( IOException ioe ) {
    System.out.println( "Problem copying file to dir.");
}</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-5.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.5.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Quite often you need to write the contents of a
<fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> to a file.
<fo:inline font-family="monospace" font-size="0.8em">FileUtils.writeStringToFile( )</fo:inline> provides a quick
way to write textual content stored in a <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> to
a <fo:inline font-family="monospace" font-size="0.8em">File</fo:inline>, without opening a
<fo:inline font-family="monospace" font-size="0.8em">Writer</fo:inline>. The following code writes the contents of
the <fo:inline font-family="monospace" font-size="0.8em">data String</fo:inline> to the file
<fo:inline font-family="monospace" font-size="0.8em">temp.tmp</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt408">try {
  String string = "Blah blah blah";
  File dest = new File( "test.tmp" );
            
  FileUtils.writeStringToFile( dest, string, ? );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Another common task is storing the contents of a
<fo:inline font-family="monospace" font-size="0.8em">URL</fo:inline> in a <fo:inline font-family="monospace" font-size="0.8em">File</fo:inline>.
<fo:inline font-family="monospace" font-size="0.8em">FileUtils.copyURLToFile( )</fo:inline> takes a
<fo:inline font-family="monospace" font-size="0.8em">URL</fo:inline> object and stores the contents in a file. The
following code stores the contents of the <fo:inline font-style="italic">New York
Times</fo:inline> front page in a file
<fo:inline font-family="monospace" font-size="0.8em">times.html</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt409">try {
    URL src = new URL( "http://www.nytimes.com" );
    File dest = new File( "times.html" );

    FileUtils.copyURLToFile( src, dest );
} catch( IOException ioe ) {
    System.out.println( "Error copying contents of a URL to a File." );
}</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-6"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Deleting Directories Recursively</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.6. Deleting Directories Recursively</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-6.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.6.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to delete a directory and <fo:wrapper id="jakartackbk-CHP-10-ITERM-3078"><!--Commons
IO, deleting directories--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3079"><!--deleting, directories--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3080"><!--I/O, Commons
IO, deleting directories--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3081"><!--directories, deleting--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3082"><!--recursive deletes,
directories--></fo:wrapper>everything it contains. You need a
recursive delete—the equivalent of a Unix <fo:inline font-family="monospace" font-size="0.8em">rm
-r</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-6.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.6.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">FileUtils.deleteDirectory()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3083"><!--FileUtils.deleteDirectory( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3084"><!--methods, FileUtils.deleteDirectory(
)--></fo:wrapper> to remove a directory and everything below
it. The following example deletes the <fo:inline font-family="monospace" font-size="0.8em">temp</fo:inline>
directory:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt410">import org.apache.commons.io.FileUtils;

try {
    File dir = new File( "temp" );
    FileUtils.deleteDirectory( dir );
} catch( IOException ioe ) {
    System.out.println( "Error deleting directory." );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This code will delete every file and directory in the
<fo:inline font-family="monospace" font-size="0.8em">temp</fo:inline> directory and, once the directory is empty,
<fo:inline font-family="monospace" font-size="0.8em">deleteDirectory( )</fo:inline> will remove the
<fo:inline font-family="monospace" font-size="0.8em">temp</fo:inline> directory itself.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-6.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.6.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You can also "clean" a directory
with the <fo:inline font-family="monospace" font-size="0.8em">cleanDirectory()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3085"><!--cleanDirectory( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3086"><!--methods, cleanDirectory(
)--></fo:wrapper> method. When cleaning a directory, the
contents of the directory are erased, but the directory itself is not
deleted. The following example cleans the <fo:inline font-family="monospace" font-size="0.8em">temp</fo:inline>
directory, emptying it of all files and
<fo:wrapper id="jakartackbk-CHP-10-ITERM-3087"><!--subdirectories, cleaning--></fo:wrapper>subdirectories:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt411">import org.apache.commons.io.FileUtils;

try {
    File dir = new File( "temp" );
    FileUtils.cleanDirectory( dir );
} catch( IOException ioe ) {
    System.out.println( "Problem cleaning a directory" );
}</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-7"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Obtaining the Size of a Directory</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.7. Obtaining the Size of a Directory</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-7.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.7.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to know the size of <fo:wrapper id="jakartackbk-CHP-10-ITERM-3088"><!--Commons
IO, sizing directories--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3089"><!--sizing, directories--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3090"><!--I/O, Commons
IO, sizing directories--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3091"><!--directories, sizing--></fo:wrapper>everything
contained within a directory.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-7.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.7.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use the<fo:wrapper id="jakartackbk-CHP-10-ITERM-3092"><!--FileUtils.sizeOfDirectory( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3093"><!--methods, FileUtils.sizeOfDirectory(
)--></fo:wrapper> 
               <fo:inline font-family="monospace" font-size="0.8em">sizeOfDirectory( )</fo:inline>
method on <fo:inline font-family="monospace" font-size="0.8em">FileUtils</fo:inline>. The following example returns
the size of the <fo:inline font-family="monospace" font-size="0.8em">temp</fo:inline> directory:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt412">File dir = new File( "temp" );
long dirSize = FileUtils.sizeOfDirectory( );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If <fo:inline font-family="monospace" font-size="0.8em">temp</fo:inline> contains a number files,
<fo:inline font-family="monospace" font-size="0.8em">FileUtils.sizeOfDirectory( )</fo:inline> will return the sum
of the size of every file in <fo:inline font-family="monospace" font-size="0.8em">temp</fo:inline>. If
<fo:inline font-family="monospace" font-size="0.8em">temp</fo:inline> contains subdirectories, this method will
recursively call <fo:inline font-family="monospace" font-size="0.8em">sizeOfDirectory( )</fo:inline> on each
subdirectory to obtain the size of each subdirectory, and it will
return the sum of these sizes.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-8"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Touching a File</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.8. Touching a File</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-8.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.8.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to perform the <fo:wrapper id="jakartackbk-CHP-10-ITERM-3094"><!--Commons
IO, timestamps--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3095"><!--timestamps, Commons
IO--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3096"><!--I/O, Commons
IO, timestamps--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3097"><!--updating timestamps--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3098"><!--timestamps, updating--></fo:wrapper>equivalent
of the Unix <fo:inline font-family="monospace" font-size="0.8em">touch</fo:inline> command; you want to create a
file or update a file's modified timestamp.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-8.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.8.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use the <fo:inline font-family="monospace" font-size="0.8em">touch()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3099"><!--FileUtils.touch( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3100"><!--methods, FileUtils.touch(
)--></fo:wrapper> method from <fo:inline font-family="monospace" font-size="0.8em">FileUtils</fo:inline>.
To use <fo:inline font-family="monospace" font-size="0.8em">touch( )</fo:inline>, pass it a <fo:inline font-family="monospace" font-size="0.8em">File</fo:inline>
object; if the <fo:inline font-family="monospace" font-size="0.8em">File</fo:inline> does not exist,
<fo:inline font-family="monospace" font-size="0.8em">touch( )</fo:inline> will create a new file. If the file
exists, the timestamp of the file will be updated to the current
time. The following code demonstrates the <fo:inline font-family="monospace" font-size="0.8em">touch( )</fo:inline>
method on the file <fo:inline font-family="monospace" font-size="0.8em">testFile.txt</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt413">import org.apache.commons.io.FileUtils;

try {
    File testFile = new File( "testFile.txt" );

    // If testFile didn't already exists, create it
    // If testFile already exists, update the modified timestamp
    FileUtils.touch( testFile );  
} catch( IOException ioe ) {
    System.out.println( "Error touching testFile" );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If <fo:inline font-family="monospace" font-size="0.8em">testFile.txt</fo:inline> does not exist, the file will be
created by the call to <fo:inline font-family="monospace" font-size="0.8em">touch( )</fo:inline>. If
<fo:inline font-family="monospace" font-size="0.8em">testFile.txt</fo:inline> does exist, the last modified
timestamp will be updated to the current time after the call to
<fo:inline font-family="monospace" font-size="0.8em">touch( )</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-9"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Filtering Files</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.9. Filtering Files</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-9.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.9.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to select all the files<fo:wrapper id="jakartackbk-CHP-10-ITERM-3101"><!--Commons
IO, filtering files--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3102"><!--filtering, files--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3103"><!--I/O, Commons
IO, filtering files--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3104"><!--files, filtering--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3105"><!--directories, filtering--></fo:wrapper>
in a directory ending in <fo:inline font-family="monospace" font-size="0.8em">.xml</fo:inline>, or you need to
select only files (not subdirectories) contained in a directory. In
other words, you need to filter a list of files.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-9.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.9.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use one of the many implementations of
<fo:inline font-family="monospace" font-size="0.8em">IOFileFilter</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3106"><!--IOFileFilter--></fo:wrapper>
in the <fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.io.filefilter</fo:inline> package.
This package contains various implementations of
<fo:inline font-family="monospace" font-size="0.8em">FileFilter</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">FilenameFilter</fo:inline>,
which can be used to filter the contents of a directory. The
following example uses <fo:inline font-family="monospace" font-size="0.8em">SuffixFileFilter</fo:inline> to return
an array of filenames that end in <fo:inline font-family="monospace" font-size="0.8em">.xml</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt414">import java.io.FilenameFilter;
import org.apache.commons.io.filefilter.SuffixFileFilter;
import org.apache.commons.lang.ArrayUtils;

File rootDir = new File(".");
FilenameFilter fileFilter = new SuffixFileFilter(".xml");
String[] xmlFiles = rootDir.list( fileFilter );
System.out.println( "*** XML Files" );
System.out.println( ArrayUtils.toString( xmlFiles ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This code searches for all files ending in <fo:inline font-family="monospace" font-size="0.8em">.xml</fo:inline>
in the current directory. Running this in the root of the example
project matches one file, <fo:inline font-family="monospace" font-size="0.8em">project.xml</fo:inline>, producing
the following output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt415">*** XML Files
{project.xml}</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-9.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.9.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.io.filefilter</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3107"><!--org.apache.commons.io.filefilter
package--></fo:wrapper> package contains a number of
implementations of <fo:inline font-family="monospace" font-size="0.8em">FilenameFilter</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">FileFilter</fo:inline>. <fo:inline font-family="monospace" font-size="0.8em">PrefixFileFilter</fo:inline>
and <fo:inline font-family="monospace" font-size="0.8em">SuffixFileFilter</fo:inline> let you match files and
directories by a prefix or suffix. <fo:inline font-family="monospace" font-size="0.8em">NameFileFilter</fo:inline>
matches a file or a directory to a specific name.
<fo:inline font-family="monospace" font-size="0.8em">DirectoryFileFilter</fo:inline> accepts only directories.
<fo:inline font-family="monospace" font-size="0.8em">AndFileFilter</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">OrFileFilter</fo:inline>,
and <fo:inline font-family="monospace" font-size="0.8em">NotFileFilter</fo:inline> allow for the logical
combination of filters. The following example uses a combination of
the file filters in this package to list <fo:inline font-family="monospace" font-size="0.8em">.htm</fo:inline> or
<fo:inline font-family="monospace" font-size="0.8em">.html</fo:inline> files in a directory:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt416">import org.apache.commons.io.filefilter.AndFileFilter;
import org.apache.commons.io.filefilter.DirectoryFileFilter;
import org.apache.commons.io.filefilter.IOFileFilter;
import org.apache.commons.io.filefilter.NotFileFilter;
import org.apache.commons.io.filefilter.OrFileFilter;
import org.apache.commons.io.filefilter.SuffixFileFilter;
import org.apache.commons.lang.ArrayUtils;

IOFileFilter htmlFilter = 
    new OrFileFilter( new SuffixFileFilter("htm"),
                      new SuffixFileFilter("html") );
IOFileFilter notDirectory = new NotFileFilter( DirectoryFileFilter.INSTANCE );
FilenameFilter fileFilter = new AndFileFilter( htmlFilter, notDirectory );

String[] htmlFiles = rootDir.list(fileFilter);
System.out.println( "*** HTML Files" );
System.out.println( ArrayUtils.toString( htmlFiles ) );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example combines two
<fo:inline font-family="monospace" font-size="0.8em">SuffixFileFilter</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3108"><!--SuffixFileFilter
instances--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3109"><!--instances, SuffixFileFilter--></fo:wrapper>
instances in an <fo:inline font-family="monospace" font-size="0.8em">OrFileFilter</fo:inline> to match
<fo:inline font-family="monospace" font-size="0.8em">.htm</fo:inline> or <fo:inline font-family="monospace" font-size="0.8em">.html</fo:inline> files.
Wrapping a <fo:inline font-family="monospace" font-size="0.8em">DirectoryFileFilter</fo:inline> with a
<fo:inline font-family="monospace" font-size="0.8em">NotFileFilter</fo:inline> creates a filter that will accept
files and reject directories. Combining these two filters in an
<fo:inline font-family="monospace" font-size="0.8em">AndFileFilter</fo:inline> creates a filter to list files with
either suffix. Every filter defined in the
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.io.filefilter</fo:inline> package is an
implementation of the <fo:inline font-family="monospace" font-size="0.8em">IOFileFilter</fo:inline>, which
implements both the <fo:inline font-family="monospace" font-size="0.8em">java.io.FileFilter</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">java.io.FilenameFilter</fo:inline> interfaces.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-10"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Measuring Stream Traffic</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.10. Measuring Stream Traffic</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-10.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.10.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to keep track <fo:wrapper id="jakartackbk-CHP-10-ITERM-3110"><!--Commons
IO, tracking traffic--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3111"><!--tracking--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3112"><!--traffic, Commons
IO--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3113"><!--I/O, Commons
IO, tracking traffic--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3114"><!--traffic, tracking--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3115"><!--streams, tracking--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3116"><!--measuring, stream
traffic--></fo:wrapper>of the number of bytes read from an
<fo:inline font-family="monospace" font-size="0.8em">InputStream</fo:inline> or written to an
<fo:inline font-family="monospace" font-size="0.8em">OutputStream</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-10.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.10.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use a
<fo:inline font-family="monospace" font-size="0.8em">CountingInputStream</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3117"><!--CountingInputStream--></fo:wrapper>
or
<fo:inline font-family="monospace" font-size="0.8em">CountingOutputStream</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3118"><!--CountingOutputStream--></fo:wrapper>
to keep track of the number of bytes written to a stream. The
following example uses a <fo:inline font-family="monospace" font-size="0.8em">CountingOutputStream</fo:inline> to
keep track of the number of bytes written to a
<fo:inline font-family="monospace" font-size="0.8em">FileOutputStream</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3119"><!--FileOutputStream--></fo:wrapper>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt417">import org.apache.commons.io.IOUtils;
import org.apache.commons.io.output.CountingOutputStream;
import java.io.*;

File test = new File( "test.dat" );
CountingOutputStream countStream = null;

try {
    FileOutputStream fos = new FileOutputStream( test );
    countStream = new CountingOutputStream( fos );
    countStream.write( "Hello".getBytes( ) );
} catch( IOException ioe ) {
    System.out.println( "Error writing bytes to file." );
} finally {
    IOUtils.closeQuietly( countStream );
}

if( countStream != null ) {
    int bytesWritten = countStream.getCount( );
    System.out.println( "Wrote " + bytesWritten + " bytes to test.dat" );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This previous example wrapped a <fo:inline font-family="monospace" font-size="0.8em">FileOutputStream</fo:inline>
with a <fo:inline font-family="monospace" font-size="0.8em">CountingOutputStream</fo:inline>, producing the
following console output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt418">Wrote 5 bytes to test.dat</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-10.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.10.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">CountingInputStream</fo:inline> wraps an
<fo:inline font-family="monospace" font-size="0.8em">InputStream</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">getCount( )</fo:inline>
provides a running tally of total bytes read. The following example
demonstrates <fo:inline font-family="monospace" font-size="0.8em">CountingInputStream</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt419">import org.apache.commons.io.IOUtils;
import org.apache.commons.io.output.CountingOutputStream;
import java.io.*;

File test = new File( "test.dat" );
CountingInputStream countStream = null;

try {
    FileInputStream fis = new FileInputStream( test );
    countStream = new CountingOutputStream( fis );
    String contents = IOUtils.toString( countStream );
} catch( IOException ioe ) {
    System.out.println( "Error reading bytes from file." );
} finally {
    IOUtils.closeQuietly( countStream );
}

if( countStream != null ) {
    int bytesRead = countStream.getCount( );
    System.out.println( "Read " + bytesRead + " bytes from test.dat" );
}</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-11"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Splitting an OutputStream</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.11. Splitting an OutputStream</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-11.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.11.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to send the same output <fo:wrapper id="jakartackbk-CHP-10-ITERM-3120"><!--Commons
IO, splitting
OutputStreams--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3121"><!--splitting, OutputStreamsCommons
IO--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3122"><!--I/O, Commons
IO, splitting OutputSteams--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3123"><!--OutputStreams, splitting--></fo:wrapper>to
two <fo:inline font-family="monospace" font-size="0.8em">OutputStream</fo:inline>s.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-11.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.11.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:wrapper id="jakartackbk-CHP-10-ITERM-3124"><!--Commons IO
TeeOutputStream--></fo:wrapper>Commons IO
<fo:inline font-family="monospace" font-size="0.8em">TeeOutputStream</fo:inline> to send the same data to two
instances of <fo:inline font-family="monospace" font-size="0.8em">OutputStream</fo:inline>. When data is written to
a
<fo:inline font-family="monospace" font-size="0.8em">TeeOutputStream</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3125"><!--TeeOutputStream--></fo:wrapper>,
that data is sent to the two instances of
<fo:inline font-family="monospace" font-size="0.8em">OutputStream</fo:inline> passed to its constructor. The
following example demonstrates the use of
<fo:inline font-family="monospace" font-size="0.8em">TeeOutputStream</fo:inline> to write the same
<fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> to two instances of
<fo:inline font-family="monospace" font-size="0.8em">FileOutputStream</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3126"><!--FileOutputStream--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3127"><!--instances, FileOutputStream--></fo:wrapper>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt420">import org.apache.commons.io.IOUtils;
import org.apache.commons.io.output.TeeOutputStream;

File test1 = new File("split1.txt");
File test2 = new File("split2.txt");
OutputStream outStream = null;
        
try {
    FileOutputStream fos1 = new FileOutputStream( test1 );
    FileOutputStream fos2 = new FileOutputStream( test2 );
    outStream = new TeeOutputStream( fos1, fos2 );
            
    outStream.write( "One Two Three, Test".getBytes( ) );
    outStream.flush( );
} catch( IOException ioe ) {
    System.out.println( "Error writing to split output stream" );
} finally {
    IOUtils.closeQuietly( outStream );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Flushing or closing a <fo:inline font-family="monospace" font-size="0.8em">TeeOutputStream</fo:inline> will flush
or close both of the <fo:inline font-family="monospace" font-size="0.8em">OutputStream</fo:inline> instances it
contains. After this example is executed, two files,
<fo:inline font-family="monospace" font-size="0.8em">split1.txt</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">split2.txt</fo:inline>,
will contain the same text.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-12"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Obtaining Jakarta ORO</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.12. Obtaining Jakarta ORO</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-12.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.12.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to use <fo:wrapper id="jakartackbk-CHP-10-ITERM-3128"><!--Jakarta
ORO, downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3129"><!--downloading, Jakarta
ORO--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3130"><!--files, Jakarta
ORO, downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3131"><!--searching, Jakarta
ORO, downloading--></fo:wrapper>Jakarta
ORO to finds files by<fo:wrapper id="jakartackbk-CHP-10-ITERM-3132"><!--ORO--></fo:wrapper> a glob or regular expression.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-12.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.12.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Download Jakarta ORO 2.0.8 from <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/site/binindex.cgi</fo:inline>.
Once you have downloaded and uncompressed the archive distribution,
place the <fo:inline font-family="monospace" font-size="0.8em">jakarta-oro-2.0.8.jar</fo:inline> in your
classpath.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-12.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.12.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Jakarta ORO provides support for Perl regular expressions, AWK
expressions, and glob expressions. Before Java 1.4 introduced the
<fo:inline font-family="monospace" font-size="0.8em">java.util.regex</fo:inline> package and regular expression
support in the <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> class, Jakarta ORO and
Jakarta RegExp gave developers a way to use regular expressions in
Java. Now that Java 1.4 supports regular expressions, ORO still
remains relevant for developers who need specific support for Perl5
extended regular expressions.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you have a Maven project that needs to use Jakarta ORO, add a
dependency on Jakarta ORO 2.0.8 with the following section in
<fo:inline font-family="monospace" font-size="0.8em">project.xml</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt421">&lt;dependencies&gt;
  &lt;dependency&gt;
    &lt;id&gt;oro&lt;/id&gt;
    &lt;version&gt;2.0.8&lt;/version&gt;
  &lt;/dependency&gt;
  ....other dependencies...
&lt;/dependencies&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-12.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.12.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about ORO, see the Jakarta ORO project at
<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/oro</fo:inline>.
For more information about the regular expression syntax supported by
Jakarta ORO, see the package summary for the
<fo:inline font-family="monospace" font-size="0.8em">org.apache.oro.test.regex</fo:inline> package at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/oro/api/org/apache/oro/text/regex/package-summary.html</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-13"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Using Globs and Perl5 Regular Expressions to List Files</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.13. Using Globs and Perl5 Regular Expressions to List Files</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-13.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.13.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to get a list<fo:wrapper id="jakartackbk-CHP-10-ITERM-3133"><!--Jakarta
ORO, listing files--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3134"><!--lists, files--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3135"><!--files, Jakarta
ORO, listing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3136"><!--searching, Jakarta
ORO, listing files--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3137"><!--globs--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3138"><!--expressions, files,
listing--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3139"><!--regular
expressions--></fo:wrapper> of files that match either a glob
or regular expression.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-13.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.13.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use
<fo:inline font-family="monospace" font-size="0.8em">Perl5FilenameFilter</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3140"><!--Perl5FilenameFilter--></fo:wrapper>
or
<fo:inline font-family="monospace" font-size="0.8em">GlobFilenameFilter</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3141"><!--GlobFilenameFilter--></fo:wrapper>
from Jakarta ORO to select all files matching an expression. Both of
these classes implement the <fo:inline font-family="monospace" font-size="0.8em">FileFilter</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">FilenameFilter</fo:inline> interface, and both can be passed
to the <fo:inline font-family="monospace" font-size="0.8em">listFiles( )</fo:inline> method on a
<fo:inline font-family="monospace" font-size="0.8em">File</fo:inline> object. The following example uses
<fo:inline font-family="monospace" font-size="0.8em">GlobFilenameFilter</fo:inline> to list XML files in the
<fo:inline font-family="monospace" font-size="0.8em">./dataDir</fo:inline> directory:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt422">import org.apache.oro.io.GlobFilenameFilter;

File dataDir = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> File("./dataDir");
FilenameFilter xmlFilter = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> GlobFilenameFilter( "*.xml" );
File[] xmlFiles = dataDir.listFiles( xmlFilter );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">To find all files matching a Perl regular expression, use the
<fo:inline font-family="monospace" font-size="0.8em">Perl5FilenameFilter</fo:inline>. The following example returns
files starting with "dev" and
ending with ".tld" by passing a
regular expression to the constructor of
<fo:inline font-family="monospace" font-size="0.8em">Perl5FilenameFilter</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt423">File dataDir = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> File("./dataDir");
FilenameFilter regexFilter = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> Perl5FilenameFilter( "^dev.*.tld$" );
File[] tldFiles = dataDir.listFiles( regexFilter );</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-14"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Obtaining Commons Net</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.14. Obtaining Commons Net</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-14.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.14.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to use <fo:wrapper id="jakartackbk-CHP-10-ITERM-3142"><!--Commons
Net, downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3143"><!--downloading, Commons
Net--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3144"><!--clients, Commons
Net, downloading--></fo:wrapper>Commons
Net to write a simple FTP, SMTP, or POP3 client.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-14.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.14.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Download the latest version of Commons Net, and place the Commons Net
JAR<fo:inline font-family="monospace" font-size="0.8em"> </fo:inline>in your project's
classpath. Following the steps outlined in <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1" text-decoration="underline" color="blue">Recipe 1.1</fo:basic-link>, download Commons Net 1.2.2 instead of
Commons Lang.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-14.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.14.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Jakarta Commons Net contains some simple clients for commonly used
network protocols, such as FTP, TFTP, Telnet, NNTP, POP3, and SMTP.
Protocols are supported by collections of classes in packages
dedicated to these protocols. For example, FTP is supported by a set
of classes in the <fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.net.ftp</fo:inline>
package, including <fo:inline font-family="monospace" font-size="0.8em">FTPClient</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">FTPFile</fo:inline>; and SMTP is supported by classes in the
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.net.smtp</fo:inline> package, including
<fo:inline font-family="monospace" font-size="0.8em">SMTPClient</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you have a Maven project that needs to use Commons Net, add a
dependency on Commons Net 1.2.2 with the following section in
<fo:inline font-family="monospace" font-size="0.8em">project.xml</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt424">&lt;dependencies&gt;
  &lt;dependency&gt;
    &lt;id&gt;commons-net&lt;/id&gt;
    &lt;version&gt;1.2.2&lt;/version&gt;
  &lt;/dependency&gt;
  ....other dependencies...
&lt;/dependencies&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-14.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.14.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about Commons Net, see the Commons Net project
page at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/net</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-15"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Writing an FTP Client</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.15. Writing an FTP Client</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-15.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.15.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to write a<fo:wrapper id="jakartackbk-CHP-10-ITERM-3145"><!--File Transfer
Protocol--></fo:wrapper> program to
interact<fo:wrapper id="jakartackbk-CHP-10-ITERM-3146"><!--Commons
Net, FTP--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3147"><!--FTP (File
Transfer Protocol)--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3148"><!--clients, Commons
Net, FTP--></fo:wrapper> with an FTP
server.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-15.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.15.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use Commons Net <fo:inline font-family="monospace" font-size="0.8em">FTPClient</fo:inline> to communicate
<fo:wrapper id="jakartackbk-CHP-10-ITERM-3149"><!--servers, FTP--></fo:wrapper>with
an FTP server. The following example retrieves the contents of the
file <fo:inline font-family="monospace" font-size="0.8em">c64bus.gif</fo:inline> from
<fo:inline font-family="monospace" font-size="0.8em">ftp.ibibilio.org</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt425">import org.apache.commons.io.IOUtils;
import org.apache.commons.net.ftp.FTPClient;

FTPClient client = new FTPClient( );
OutputStream outStream = null;

try {
    // Connect to the FTP server as anonymous
    client.connect( "ftp.ibiblio.org" );
    client.login( "anonymous", "" );

    String remoteFile = "/pub/micro/commodore/schematics/computers/c64/
                         c64bus.gif";

    // Write the contents of the remote file to a FileOutputStream
    outStream = new FileOutputStream( "c64bus.gif" );
    client.retrieveFile( remoteFile, outStream );
} catch(IOException ioe) {
    System.out.println( "Error communicating with FTP server." );
} finally {
    IOUtils.closeQuietly( outStream );
    try {
        client.disconnect( );
    } catch (IOException e) {
        System.out.println( "Problem disconnecting from FTP server" );
    }
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In the previous example, an instance of <fo:inline font-family="monospace" font-size="0.8em">FTPClient</fo:inline>
is created; the example then logs on to
<fo:inline font-family="monospace" font-size="0.8em">ftp.ibibio.org</fo:inline> as
<fo:inline font-family="monospace" font-size="0.8em">anonymous—</fo:inline>with no password—using the
<fo:inline font-family="monospace" font-size="0.8em">connect( )</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3150"><!--connect( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3151"><!--methods, connect(
)--></fo:wrapper> and <fo:inline font-family="monospace" font-size="0.8em">login()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3152"><!--login( ) method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3153"><!--methods, login(
)--></fo:wrapper> method on <fo:inline font-family="monospace" font-size="0.8em">FTPClient</fo:inline>. The
full path to the remote file <fo:inline font-family="monospace" font-size="0.8em">c64bus.gif</fo:inline> and an
<fo:inline font-family="monospace" font-size="0.8em">OutputStream</fo:inline> are passed to <fo:inline font-family="monospace" font-size="0.8em">retrieveFile()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3154"><!--retrieveFile( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3155"><!--methods, retrieveFile(
)--></fo:wrapper>, which then transfers the contents of the
<fo:inline font-family="monospace" font-size="0.8em">c64bus.gif</fo:inline> to a local file. Once the file has
been retrieved, the <fo:inline font-family="monospace" font-size="0.8em">FTPClient</fo:inline> is disconnected from
the server using the <fo:inline font-family="monospace" font-size="0.8em">disconnect(
)</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3156"><!--disconnect( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3157"><!--methods, disconnect(
)--></fo:wrapper> method in a <fo:inline font-family="monospace" font-size="0.8em">finally</fo:inline>
block.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-15.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.15.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">FTPClient</fo:inline> can also be used to list the contents of
a directory by passing a directory to the <fo:inline font-family="monospace" font-size="0.8em">listFiles(
)</fo:inline> method. The following example uses
<fo:inline font-family="monospace" font-size="0.8em">FTPClient</fo:inline> to print the name and size of every file
in the <fo:inline font-family="monospace" font-size="0.8em">/pub/mirrors/apache/jakarta/ecs/binaries</fo:inline>
directory on <fo:inline font-family="monospace" font-size="0.8em">ftp.ibiblio.org</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt426">import org.apache.commons.net.ftp.FTPClient;
import org.apache.commons.net.ftp.FTPFile;

FTPClient client = new FTPClient( );

// Connect to the FTP server as anonymous
client.connect( "ftp.ibiblio.org" );
client.login( "anonymous", "" );

String remoteDir = "/pub/mirrors/apache/jakarta/ecs/binaries";

// List the contents of the remote directory
FTPFile[] remoteFiles = client.listFiles( remoteDir );

System.out.println( "Files in " + remoteDir );
for (int i = 0; i &lt; remoteFiles.length; i++) {
    String name = remoteFiles[i].getName( );
    long length = remoteFiles[i].getSize( );
    String readableLength = FileUtils.byteCountToDisplaySize( length );

    System.out.println( name + ":\t\t" + readableLength );
}
client.disconnect( );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">After connecting to <fo:inline font-family="monospace" font-size="0.8em">ftp.ibiblio.org</fo:inline>, this
example retrieves an array of <fo:inline font-family="monospace" font-size="0.8em">FTPFile</fo:inline> objects
using <fo:inline font-family="monospace" font-size="0.8em">client.listFiles( )</fo:inline>. Each
<fo:inline font-family="monospace" font-size="0.8em">FTPFile</fo:inline> object contains information describing the
remote file, and the name and size of each <fo:inline font-family="monospace" font-size="0.8em">FTPFile</fo:inline>
is printed to the console as follows:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt427">Files in /pub/mirrors/apache/jakarta/ecs/binaries
README.html:           1 KB
RELEASE_NOTES.txt:     2 KB
ecs-1.4.2.tar.gz:      1 MB
ecs-1.4.2.tar.gz.asc:  65 bytes
ecs-1.4.2.tar.gz.md5:  33 bytes
ecs-1.4.2.zip:         2 MB
ecs-1.4.2.zip.asc:     65 bytes
ecs-1.4.2.zip.md5:     33 bytes</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-15.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.15.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Commons Net also contains a <fo:wrapper id="jakartackbk-CHP-10-ITERM-3158"><!--Trivial File Transfer
Protocol--></fo:wrapper>Trivial File Transfer
Protocol
<fo:wrapper id="jakartackbk-CHP-10-ITERM-3159"><!--clients, TFTP--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3160"><!--TFTP (Trivial File Transfer
Protocol)--></fo:wrapper>(TFTP) client:
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.net.tftp.TFTPClient</fo:inline>. For more
information about TFTP client, see the Javadoc for
<fo:inline font-family="monospace" font-size="0.8em">TFTPClient</fo:inline> at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/net/apidocs/org/apache/commons/net/tftp/TFTPClient.html</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">FTPClient</fo:inline> contains a number of
additional<fo:wrapper id="jakartackbk-CHP-10-ITERM-3161"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3162"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3163"><!----></fo:wrapper> features, such as active and
passive connection modes and the ability to append to remote files,
make remote directories, and put files on a remote FTP server. For
more information about <fo:inline font-family="monospace" font-size="0.8em">FTPClient</fo:inline>, see the
<fo:inline font-family="monospace" font-size="0.8em">FTPClient</fo:inline> Javadoc at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/net/apidocs/org/apache/commons/net/ftp/FTPClient.html</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-16"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Sending Mail with SMTP</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.16. Sending Mail with SMTP</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-16.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.16.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to <fo:wrapper id="jakartackbk-CHP-10-ITERM-3164"><!--Simple Mail Transfer
Protocol--></fo:wrapper>send an<fo:wrapper id="jakartackbk-CHP-10-ITERM-3165"><!--Commons
Net, SMTP--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3166"><!--SMTP (Simple
Mail Transfer Protocol)--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3167"><!--sending, email--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3168"><!--email, sending--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3169"><!--clients, SMTP--></fo:wrapper>
email.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-16.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.16.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use <fo:inline font-family="monospace" font-size="0.8em">SMTPClient</fo:inline> from Commons Net. The following
example sends a simple email to <fo:inline font-family="monospace" font-size="0.8em">somedude@aol.org</fo:inline>
from <fo:inline font-family="monospace" font-size="0.8em">tobrien@discursive.com</fo:inline> via the SMTP server
on host <fo:inline font-family="monospace" font-size="0.8em">www.discursive.com</fo:inline> using port 25:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt428">import org.apache.commons.net.smtp.SMTPClient;

SMTPClient client = new SMTPClient( );
client.connect("www.discursive.com");
client.sendSimpleMessage("tobrien@discursive.com", 
                         "somedude@aol.com", 
                         "Hey! Call me when you get a chance." );
client.disconnect( );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example sends a very simple email message to one recipient by
passing three arguments to <fo:inline font-family="monospace" font-size="0.8em">client.sendSimpleMessage()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3170"><!--client.sendSimpleMessage( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3171"><!--methods, client.sendSimpleMessage(
)--></fo:wrapper>: the sender's email
address, the recipient's email address, and a
message. If you are trying to send a simple email message to multiple
recipients, pass a <fo:inline font-family="monospace" font-size="0.8em">String[]</fo:inline> containing each
address as the second parameter to <fo:inline font-family="monospace" font-size="0.8em">sendSimpleMessage(
)</fo:inline>. The following example sends a simple email message to
multiple recipients by passing a <fo:inline font-family="monospace" font-size="0.8em">String[]</fo:inline> to
<fo:inline font-family="monospace" font-size="0.8em">sendSimpleMessage( )</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt429">import org.apache.commons.net.smtp.SMTPClient;

SMTPClient client = new SMTPClient( );
client.connect("www.discursive.com");

String[] recipients = new String[2];
recipients[0] = "mission-control@nasa.gov";
recipients[1] = "announce@nasa.gov";

client.sendSimpleMessage("astronaut@nasa.gov", 
                         recipients, 
                         "The eagle has landed." );
client.disconnect( );</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-16.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.16.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3172"><!--Telnet--></fo:wrapper>Telnet to port 25 of
a SMTP server,
<fo:wrapper id="jakartackbk-CHP-10-ITERM-3173"><!--servers, SMTP--></fo:wrapper>and
you will see the server respond with a numeric code (220).
<fo:inline font-family="monospace" font-size="0.8em">SMTPReply.isPositiveCompletion( )</fo:inline> returns
<fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> if the response code of the previously
executed command is between 200 and 299; the value of the initial
response code, 220, is equal to the public static variable
<fo:inline font-family="monospace" font-size="0.8em">SMTPReply.SERVICE_READY</fo:inline>. The following example
uses <fo:inline font-family="monospace" font-size="0.8em">getReplyCode(
)</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3174"><!--getReplyCode( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3175"><!--methods, getReplyCode(
)--></fo:wrapper> and
<fo:inline font-family="monospace" font-size="0.8em">SMTPReply.isPositiveCompletion()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3176"><!--SMTPReply.isPositiveCompletion( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3177"><!--methods, SMTPReply.isPositiveCompletion(
)--></fo:wrapper> to test the connection
to<fo:wrapper id="jakartackbk-CHP-10-ITERM-3178"><!--connections, testing--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3179"><!--testing, connections--></fo:wrapper>
the SMTP server:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt430">import org.apache.commons.net.smtp.SMTP;
import org.apache.commons.net.smtp.SMTPClient;
import org.apache.commons.net.smtp.SMTPReply;

SMTPClient client = new SMTPClient( );
client.connect("www.discursive.com");

int response = client.getReplyCode( );
if( SMTPReply.isPositiveCompletion( response ) ) {

    // Set the sender and the recipients
    client.setSender( "tobrien@discursive.com" );
    client.addRecipient( "president@whitehouse.gov" );
    client.addRecipient( "vicepresident@whitehouse.gov" );

    // Supply the message via a Writer
    Writer message = client.sendMessageData( );
    message.write( "Spend more money on energy research.  Thanks." );
    message.close( );

    // Send the message and print a confirmation
    boolean success = client.completePendingCommand( );
    if( success ) {
        System.out.println( "Message sent" );                
    }
} else {
    System.out.println( "Error communicating with SMTP server" );
}
client.disconnect( );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Instead of <fo:inline font-family="monospace" font-size="0.8em">sendSimpleMessage( )</fo:inline>, the previous
example sets a sender address and two recipient addresses using
<fo:inline font-family="monospace" font-size="0.8em">setSender( )</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">addRecipient()</fo:inline>. The message body is then written to a
<fo:inline font-family="monospace" font-size="0.8em">Writer</fo:inline> returned by <fo:inline font-family="monospace" font-size="0.8em">sendMessageData()</fo:inline>. When the <fo:inline font-family="monospace" font-size="0.8em">Writer</fo:inline> is closed, the
message is sent by calling <fo:inline font-family="monospace" font-size="0.8em">completePendingCommand()</fo:inline>. <fo:inline font-family="monospace" font-size="0.8em">completePendingCommand( )</fo:inline> returns
<fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> if the message has been queued for delivery.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-16.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.16.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">JavaMail is the set of utilities contained in the
<fo:inline font-family="monospace" font-size="0.8em">javax.mail</fo:inline> package, and JavaMail is usually used
in conjunction with the Java Activation Framework (JAF) to send email
messages using SMTP. Commons Net does not aim to replace the JavaMail
API, but it does provide a very straightforward alternative for
sending email messages. For more information about JavaMail,
see<fo:wrapper id="jakartackbk-CHP-10-ITERM-3180"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3181"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3182"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3183"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3184"><!----></fo:wrapper> the
JavaMail product page at <fo:inline font-family="monospace" font-size="0.8em">http://java.sun.com/products/javamail</fo:inline>. For
more information about the JavaMail API, see Chapter 10,
"JavaMail Best Practices," in
<fo:inline font-style="italic">Java Enterprise Best Practices</fo:inline>
(O'Reilly).</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-17"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Checking a POP3 Mailbox</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.17. Checking a POP3 Mailbox</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-17.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.17.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to check a POP3 <fo:wrapper id="jakartackbk-CHP-10-ITERM-3185"><!--Commons
Net, POP3--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3186"><!--POP3 (Post Office Protocol
3)--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3187"><!--mailboxes,
POP3--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3188"><!--clients, POP3--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3189"><!--email, mailboxes--></fo:wrapper>mailbox.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-17.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.17.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use Commons Net <fo:inline font-family="monospace" font-size="0.8em">POP3Client</fo:inline> to check a POP3 mailbox
for incoming mail. The following example connects to the
<fo:wrapper id="jakartackbk-CHP-10-ITERM-3190"><!--servers, POP3--></fo:wrapper>POP3
server <fo:inline font-family="monospace" font-size="0.8em">www.discursive.com</fo:inline>, logs in as
<fo:inline font-family="monospace" font-size="0.8em">tobrien@discursive.com</fo:inline>, and prints each message in
the mailbox:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt431">import org.apache.commons.io.CopyUtils;
import org.apache.commons.io.IOUtils;
import org.apache.commons.net.pop3.POP3Client;
import org.apache.commons.net.pop3.POP3MessageInfo;

POP3Client client = new POP3Client( );
client.connect("www.discursive.com");
client.login("tobrien@discursive.com", "secretpassword");
        
POP3MessageInfo[] messages = client.listMessages( );
for (int i = 0; i &lt; messages.length; i++) {
    int messageNum = messages[i].number;
    System.out.println( "************* Message number: " + messageNum );
    Reader reader = client.retrieveMessage( messageNum );
    System.out.println( "Message:\n" + IOUtils.toString( reader ) );
    IOUtils.closeQuietly( reader );
}
        
client.logout( );
client.disconnect( );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example calls <fo:inline font-family="monospace" font-size="0.8em">client.listMessage()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3191"><!--client.listMessage( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3192"><!--methods, client.listMessage(
)--></fo:wrapper> to get an array of
<fo:inline font-family="monospace" font-size="0.8em">POP3MessageInfo</fo:inline> objects. Each message is retrieved
using the message number contained in each
<fo:inline font-family="monospace" font-size="0.8em">POP3MessageInfo</fo:inline>. To retrieve the contents of an
individual message, the message number is passed to
<fo:inline font-family="monospace" font-size="0.8em">retrieveMessage()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3193"><!--retrieveMessage( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-10-ITERM-3194"><!--methods, retrieveMessage(
)--></fo:wrapper>, which returns a <fo:inline font-family="monospace" font-size="0.8em">Reader</fo:inline>
from which the message body is read. The previous example prints the
contents of a POP3 mailbox, as shown below:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_10_tt432">************* Message number: 1
Message:
Return-Path: &lt;jerk@spamheaven.net&gt;
X-Original-To: tobrien@discursive.com
Delivered-To: tobrien@discursive.com
Received: from jerk-net.co.jp (unknown [219.71.255.123])
    by pericles.symbiont.net (Postfix) with SMTP id 6FA54543FE
    for &lt;tobrien@discursive.com&gt;; Tue, 22 Jun 2004 02:19:13 -0400 (EDT)
Received: from 228.4.65.206 by smtp.cito.nl;
    Tue, 22 Jun 2004 06:09:26 +0000
Message-ID: &lt;9b8001c4581f$2524e2e9$d8470c90@jerk-net.co.jp&gt;
From: "Spammer" &lt;jerk@spamheaven.net&gt;
To: tobrien@discursive.com
Subject: Hey, I heard you need a mortgage
Date: Tue, 22 Jun 2004 02:09:21 -0400
MIME-Version: 1.0
Content-Type: text/plain;
    charset="iso-8859-1"
Content-Transfer-Encoding: 8bit

Hello,

I heard that you must be a sucker, so I thought I would send you some 
unsolicited email about a mortgage.  Only 3%, and you can even wire 
the money directly to my friend from Nigeria.  Did I mention that if 
you decide to take this mortgage I'll send you the secret for making 
millions by sending useless spam.

---
Mr. Jerk Spammer
"I ruin email for everyone!"</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-17.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.17.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example did not venture into the topic of parsing an email
message body. As shown above, the message read with
<fo:inline font-family="monospace" font-size="0.8em">retrieveMessage( )</fo:inline> is a raw message with SMTP
headers containing the <fo:inline font-family="monospace" font-size="0.8em">Subject</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">Message-ID</fo:inline>, and other important pieces of data
associated with a message. The body of a message is separated from a
list of headers by a single blank, and if you are creating a mail
client for a user, you will need to write a parser that can extract a
relevant header—such as <fo:inline font-family="monospace" font-size="0.8em">Subject</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">From</fo:inline>—from the raw email message.</fo:block></fo:block><fo:block id="jakartackbk-CHP-10-SECT-17.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">10.17.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This recipe used <fo:inline font-family="monospace" font-size="0.8em">IOUtils.toString( )</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">IOUtils.closeQuietly( )</fo:inline> to copy and close a
<fo:inline font-family="monospace" font-size="0.8em">Reader</fo:inline> for each email message. These methods are
described in detail in  <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-2" text-decoration="underline" color="blue">Recipe 10.2</fo:basic-link> and <fo:basic-link internal-destination="jakartackbk-CHP-10-SECT-3" text-decoration="underline" color="blue">Recipe 10.3</fo:basic-link>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For a good overview of SMTP and POP3 from the perspective of a
FreeBSD administrator, take a look at Dru Lavigne's
article "Understanding E-Mail" from
OnLamp.com (<fo:inline font-family="monospace" font-size="0.8em">http://www.onlamp.com/pub/a/bsd/2000/08/30/FreeBSD_Basics.html</fo:inline>).</fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="false" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>HTTP and WebDAV</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>HTTP and WebDAV</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"/></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif" margin-left="0pc"/></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block id="jakartackbk-CHP-11"><fo:block font-family="serif"><fo:block margin-left="0pc"><fo:block text-align="left" font-weight="bold" font-size="21.6pt"><fo:block keep-with-next.within-column="always" space-before.optimum="12pt" space-before.minimum="12pt * 0.8" space-before.maximum="12pt * 1.2" hyphenate="false" text-align="left" start-indent="0pc" word-spacing="-0.1em" letter-spacing="-0.05em" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 11. HTTP and WebDAV</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="ch11-2-fm2xml"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Introduction</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.1. Introduction</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:wrapper id="jakartackbk-CHP-11-ITERM-3195"><!--Hypertext Transfer
Protocol--></fo:wrapper>Hypertext Transfer
<fo:wrapper id="jakartackbk-CHP-11-ITERM-3196"><!--HTTP (Hypertext Transfer
Protocol)--></fo:wrapper>Protocol (HTTP) is ubiquitous; this
protocol is at the core of important technologies such as the
<fo:wrapper id="jakartackbk-CHP-11-ITERM-3197"><!--World Wide Web (WWW)--></fo:wrapper>World
Wide Web (WWW), the <fo:wrapper id="jakartackbk-CHP-11-ITERM-3198"><!--Simple Object Access
Protocol--></fo:wrapper>Simple Object Access
Protocol (SOAP), <fo:wrapper id="jakartackbk-CHP-11-ITERM-3199"><!--SOAP (Simple Object Access
Protocol)--></fo:wrapper>XML databases, content management
systems, WebDAV, and, most importantly, iTunes. Much of the
world's business is accomplished over HTTP in some
form or another, and if this protocol were to suddenly vanish, a
sizable portion of the world economy would vanish with it. Given this
ubiquity, it is likely that you've had occasion to
write a Java program that needed to fetch a web page or interact with
a servlet or CGI script. While the J2SE contains some rudimentary
tools to communicate via HTTP, the feature set of
<fo:inline font-family="monospace" font-size="0.8em">URLConnection</fo:inline> is somewhat limited. This chapter
introduces Jakarta HttpClient, a set of utilities that simplifies the
task of retrieving and sending information over HTTP.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Jakarta HttpClient grew up in the Jakarta Commons, and until April
2004 it was a Commons project. It has only recently graduated to a
full Jakarta project, and it is still visible as a part of the
Jakarta Commons subproject. This chapter refers to HttpClient as
Jakarta HttpClient, but you should be aware that most of the
documentation and support still refer to the project as Jakarta
Commons HttpClient until the project has successfully
<fo:wrapper id="jakartackbk-CHP-11-ITERM-3200"><!--connections--></fo:wrapper>migrated out of
the Jakarta Commons.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Obtaining Jakarta HttpClient</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.1. Obtaining Jakarta HttpClient</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-1.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.1.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to use <fo:wrapper id="jakartackbk-CHP-11-ITERM-3201"><!--HTTP (Hypertext Transfer
Protocol)--></fo:wrapper>Jakarta
HttpClient<fo:wrapper id="jakartackbk-CHP-11-ITERM-3202"><!--Jakarta
HttpClient, downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3203"><!--downloading, Jakarta
HttpClient--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3204"><!--clients, Jakarta
HttpClient, downloading--></fo:wrapper> to
write a program to interact with a server over HTTP.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-1.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.1.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Download Jakarta HttpClient 3.0. Following the steps outlined in
<fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1" text-decoration="underline" color="blue">Recipe 1.1</fo:basic-link>, download
"Commons HttpClient 3.0" instead of
Commons Lang. The HttpClient
archive—<fo:inline font-family="monospace" font-size="0.8em">commons-httpclient-3.0.zip—</fo:inline>will
contain a file named <fo:inline font-family="monospace" font-size="0.8em">commons-httpclient-3.0.jar</fo:inline>;
place this JAR file in your classpath, and you will be ready to use
Jakarta HttpClient.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Jakarta HttpClient depends on Jakarta Commons Logging, which can be
obtained from the same binary download page as HttpClient. To
download Commons Logging, see <fo:basic-link internal-destination="jakartackbk-CHP-7-SECT-9" text-decoration="underline" color="blue">Recipe 7.9</fo:basic-link>.
Jakarta HttpClient also depends on Jakarta Commons Codec, which can
also be obtained from the same binary download page as HttpClient. To
download Commons Codec, see <fo:basic-link internal-destination="jakartackbk-CHP-2-SECT-15" text-decoration="underline" color="blue">Recipe 2.15</fo:basic-link>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-1.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.1.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Jakarta HttpClient is a client library for the HTTP protocol.
HttpClient is very feature-rich, supporting all HTTP methods defined
in RFC 2616 (Hypertext Transfer Protocol, HTTP/1.1). Jakarta
HttpClient supports GET, POST, PUT, OPTIONS, HEAD, and DELETE using
the command pattern; <fo:inline font-family="monospace" font-size="0.8em">HttpMethod</fo:inline> objects are
instantiated and executed by an <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> object
that manages server interaction and state across multiple requests.
HttpClient has support for various authentication mechanisms,
including Basic, Digest, and NTLM authentication. HttpClient supports
both HTTP and HTTPS, and the library can manage the complexity
involved in using both schemes with an HTTP proxy. HttpClient can
manage the state of a session, automatically keeping track of cookies
across multiple requests.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you have a Maven project that needs to use Jakarta HttpClient, add
a dependency on Jakarta HttpClient 3.0 with the following section in
<fo:inline font-family="monospace" font-size="0.8em">project.xml</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt433">&lt;dependencies&gt;
  &lt;dependency&gt;
    &lt;id&gt;httpclient&lt;/id&gt;
    &lt;version&gt;3.0&lt;/version&gt;
  &lt;/dependency&gt;

  ....other dependencies...
&lt;/dependencies&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-1.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.1.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about the Jakarta HttpClient project, see the
project page (<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/httpclient</fo:inline>).</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-CHP-11-NOTE-70"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/tip.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Tip</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The Jakarta Commons HttpClient recently voted itself out of the
Jakarta Commons and into Jakarta as a subproject. Be aware that the
URLs specified in this recipe may not be accurate after HttpClient
"graduates" from the Jakarta
Commons.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you have questions about using HttpClient, please feel free to
join the <fo:inline font-family="monospace" font-size="0.8em">commons-user@jakarta.apache.org</fo:inline> mailing list. Instructions for
joining the user mailing list can be found in <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-2" text-decoration="underline" color="blue">Recipe 1.2</fo:basic-link>. Note that as Jakarta Commons HttpClient
becomes Jakarta HttpClient, the commons-user mailing list may stop
being the place to ask questions about Jakarta HttpClient.
Investigate the current status of HttpClient before joining these
mailing lists.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For information on obtaining the source code for Commons HttpClient,
see <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-2" text-decoration="underline" color="blue">Recipe 11.2</fo:basic-link>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Getting Jakarta HttpClient Source Code</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.2. Getting Jakarta HttpClient Source Code</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-2.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.2.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need the source code for the <fo:wrapper id="jakartackbk-CHP-11-ITERM-3205"><!--Jakarta
HttpClient, source code--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3206"><!--source code, Jakarta
HttpClient--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3207"><!--clients, Jakarta
HttpClient, source code--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3208"><!--code, Jakarta
HttpClient--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3209"><!--programming, Jakarta
HttpClient--></fo:wrapper>Jakarta HttpClient project.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-2.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.2.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Download the source distribution of Jakarta HttpClient 3.0. Following
the steps outlined in <fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-3" text-decoration="underline" color="blue">Recipe 1.3</fo:basic-link>,
download "Commons HttpClient 3.0"
instead of Commons Lang. The HttpClient source
archive—<fo:inline font-family="monospace" font-size="0.8em">commons-httpclient-3.0-src.zip—</fo:inline>contains
a directory named <fo:inline font-family="monospace" font-size="0.8em">src</fo:inline>, which contains the source
for HttpClient<fo:inline font-family="monospace" font-size="0.8em">.</fo:inline>
            </fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-2.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.2.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">commons-httpclient-3.0-src</fo:inline> directory will
contain the following:</fo:block><fo:block space-before.optimum="0em" space-before.minimum="0em" space-before.maximum="0em" space-after.optimum="0em" space-after.minimum="0em" space-after.maximum="0em" margin-left="1.0em" id="d0e31371"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e31372" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                     <fo:inline font-family="monospace" font-size="0.8em">build.xml</fo:inline>
                  </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>An Apache Ant build file that you can use to compile the source. If
Ant is installed, you can compile or test by running <fo:inline font-family="monospace" font-size="0.8em">ant
compile</fo:inline> or <fo:inline font-family="monospace" font-size="0.8em">ant test</fo:inline>.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e31387" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                     <fo:inline font-family="monospace" font-size="0.8em">maven.xml</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">project.xml</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">project.properties</fo:inline>
                  </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>These three files are Maven project files. If Maven is installed, you
can compile or test by running <fo:inline font-family="monospace" font-size="0.8em">maven compile</fo:inline> or
<fo:inline font-family="monospace" font-size="0.8em">maven test</fo:inline>.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e31408" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                     <fo:inline font-family="monospace" font-size="0.8em">src/java</fo:inline>
                  </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>This subdirectory contains the source for the classes in Jakarta
HttpClient.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e31417" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                     <fo:inline font-family="monospace" font-size="0.8em">src/test</fo:inline>
                  </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>This subdirectory contains unit tests for the Jakarta HttpClient
project. Each <fo:inline font-family="monospace" font-size="0.8em">*Test.java</fo:inline> file is an extension of
JUnit <fo:inline font-family="monospace" font-size="0.8em">TestCase</fo:inline> class.</fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-2.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.2.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For information on obtaining the binary distribution for Jakarta
HttpClient, see <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-1" text-decoration="underline" color="blue">Recipe 11.1</fo:basic-link>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Performing an HTTP GET</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.3. Performing an HTTP GET</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-3.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.3.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to retrieve information <fo:wrapper id="jakartackbk-CHP-11-ITERM-3210"><!--Jakarta
HttpClient, GET method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3211"><!--clients, Jakarta
HttpClient, GET method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3212"><!--GET method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3213"><!--methods, GET--></fo:wrapper>with
the HTTP GET method.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-3.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.3.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Create an instance of <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> and use it to
execute a <fo:inline font-family="monospace" font-size="0.8em">GetMethod</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3214"><!--objects, GetMethod--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3215"><!--instances, HttpClient--></fo:wrapper>object.
Once the method has been executed, the response body can be accessed
as an <fo:inline font-family="monospace" font-size="0.8em">InputStream</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">byte[]</fo:inline>, or
<fo:inline font-family="monospace" font-size="0.8em">String</fo:inline>. The following example gets the contents of
<fo:inline font-family="monospace" font-size="0.8em">http://www.discursive.com/jccook/</fo:inline>
and retrieves the response body as a string:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt434">
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpClient;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpException;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpMethod;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.methods.GetMethod;

HttpClient client = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> HttpClient( );
String url = "http://www.discursive.com/jccook/";
HttpMethod method = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> GetMethod( url );
    
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">try</fo:inline> {
    client.executeMethod( method );

    if( method.getStatusCode( ) == HttpStatus.SC_OK ) {
        String response = method.getResponseBodyAsString( );
        System.out.println( response );
    }
} <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">catch</fo:inline>( HttpException he ) {
    System.out.println( "HTTP Problem: " + he.getMessage( ) );
} <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">catch</fo:inline>( IOException ioe ) {
    System.out.println( "IO Exeception: " + ioe.getMessage( ) );
} <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">finally</fo:inline> {
    method.releaseConnection( );
    method.recycle( );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This code retrieves the content of <fo:inline font-family="monospace" font-size="0.8em">http://www.discursive.com/jccook</fo:inline> using the
HTTP GET method. If the response code is
<fo:inline font-family="monospace" font-size="0.8em">HttpStatus.SC_OK</fo:inline> or <fo:inline font-family="monospace" font-size="0.8em">200</fo:inline>, the
response is printed to the console:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt435">&lt;html&gt;
 &lt;head&gt;
  &lt;title&gt;JCCook Example&lt;/title&gt;
 &lt;/head&gt;
 &lt;body&gt;
  &lt;h1&gt;Hello World!&lt;/h1&gt;
 &lt;/body&gt;
&lt;/html&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-3.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.3.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Note the exception handling involved in this example. Performing a
simple HTTP GET called for two catch blocks:
<fo:inline font-family="monospace" font-size="0.8em">HttpException</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">IOException</fo:inline>.
An <fo:inline font-family="monospace" font-size="0.8em">HttpException</fo:inline> is thrown if there is a problem
relating to the HTTP protocol, and an <fo:inline font-family="monospace" font-size="0.8em">IOException</fo:inline>
is thrown if there is a problem with the network. Examples in this
chapter omit the rigorous exception handling from the previous
example; you can assume that every call to <fo:inline font-family="monospace" font-size="0.8em">execute()</fo:inline> is surrounded by the appropriate
<fo:inline font-family="monospace" font-size="0.8em">try</fo:inline>/<fo:inline font-family="monospace" font-size="0.8em">catch</fo:inline> block.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">GetMethod</fo:inline> is an implementation of the
<fo:inline font-family="monospace" font-size="0.8em">HttpMethod</fo:inline> interface, which is executed by
<fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline>. The lifecycle of any
<fo:inline font-family="monospace" font-size="0.8em">HttpMethod</fo:inline> implementation is straightforward; an
<fo:inline font-family="monospace" font-size="0.8em">HttpMethod</fo:inline> is created, executed by an instance of
<fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline>, and, once the response has been
examined, the connection is released and the method is recycled. When
an <fo:inline font-family="monospace" font-size="0.8em">HttpMethod</fo:inline> object is recycled by a call to
<fo:inline font-family="monospace" font-size="0.8em">recycle( )</fo:inline>, it is a signal to the system that this
specific <fo:inline font-family="monospace" font-size="0.8em">HttpMethod</fo:inline> instance can be used again.
<fo:inline font-family="monospace" font-size="0.8em">releaseConnection( )</fo:inline> instructs
<fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> to release the connection that is
associated with an <fo:inline font-family="monospace" font-size="0.8em">HttpMethod</fo:inline> instance. No matter
what happens during the execution of a method, the
<fo:inline font-family="monospace" font-size="0.8em">releaseConnection( )</fo:inline> must be called to free
network resources.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Once a method has been executed, you can get the response status code
from <fo:inline font-family="monospace" font-size="0.8em">method.getStatusCode( )</fo:inline>. This method returns
an <fo:inline font-family="monospace" font-size="0.8em">int</fo:inline>, which will correspond to one of the
<fo:inline font-family="monospace" font-size="0.8em">public static final</fo:inline> variables on
<fo:inline font-family="monospace" font-size="0.8em">HttpStatus</fo:inline>. Some of the more common status codes
on <fo:inline font-family="monospace" font-size="0.8em">HttpStatus</fo:inline> are <fo:inline font-family="monospace" font-size="0.8em">SC_OK</fo:inline> (200),
<fo:inline font-family="monospace" font-size="0.8em">SC_NOT_FOUND</fo:inline> (404),
<fo:inline font-family="monospace" font-size="0.8em">SC_INTERNAL_SERVER_ERROR</fo:inline> (500),
<fo:inline font-family="monospace" font-size="0.8em">SC_MOVED_TEMPORARILY</fo:inline> (302), and
<fo:inline font-family="monospace" font-size="0.8em">SC_UNAUTHORIZED</fo:inline> (401). For a full list of HTTP
status codes, see the Javadoc for <fo:inline font-family="monospace" font-size="0.8em">HttpStatus</fo:inline>. When
a server sends back a bad HTTP status, it is sometimes accompanied by
a short message. This message can be read by calling
<fo:inline font-family="monospace" font-size="0.8em">method.getStatusText( )</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-3.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.3.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For a formal definition of the HTTP GET method, see Section 9.3 of
RFC 2616 at <fo:inline font-family="monospace" font-size="0.8em">http://www.zvon.org/tmRFC/RFC2616/Output/index.html</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For a full list of HTTP status codes, see the
<fo:inline font-family="monospace" font-size="0.8em">HttpStatus</fo:inline> Javadoc at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/httpclient/apidocs/index.html</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Sending Parameters in a Query String</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.4. Sending Parameters in a Query String</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-4.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.4.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to send query<fo:wrapper id="jakartackbk-CHP-11-ITERM-3216"><!--Jakarta
HttpClient, URLs, sending query
parameters--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3217"><!--URLs (uniform resource
locators), Jakarta
HttpClient--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3218"><!--clients, Jakarta
HttpClient, sending query
parameters--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3219"><!--parameters, queries,
sending--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3220"><!--sending, query
parameters--></fo:wrapper> parameters in a URL.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-4.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.4.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Set the query string using the <fo:inline font-family="monospace" font-size="0.8em">setQueryString( )</fo:inline>
method on an instance of <fo:inline font-family="monospace" font-size="0.8em">HttpMethod</fo:inline>. Use
<fo:inline font-family="monospace" font-size="0.8em">URIUtil</fo:inline> to encode any text included in a URL. The
following example puts two parameters on the query string:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt436">
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpClient;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpException;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpMethod;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.NameValuePair;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.methods.GetMethod;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.util.URIUtil;

HttpClient client = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> HttpClient( );

String url = "http://www.discursive.com/cgi-bin/jccook/param_list.cgi";

HttpMethod method = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> GetMethod( url );

// Set the Query String with setQueryString( )
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">method.setQueryString(URIUtil.encodeQuery("test1=O Reilly&amp;blah=Whoop"));</fo:inline>
System.out.println( "With Query String: " + method.getURI( ) );

client.executeMethod( method );

System.out.println( "Response:\n " + method.getResponseBodyAsString( ) );
method.releaseConnection( );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">param_list.cgi</fo:inline> CGI script echoes all
parameters received, and from the following output, you can see how
<fo:inline font-family="monospace" font-size="0.8em">URIUtil</fo:inline> encodes the first parameter:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt437">With Query String: http://www.discursive.com/cgi-bin/jccook/param_list.
cgi?test1=O%20Reilly&amp;blah=Whoop
Response:
 These are the parameters I received:

test1:
  O Reilly
blah:
  Whoop</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-CHP-11-NOTE-71"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/tip.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Tip</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The question mark is understood, and you do not need to supply a
leading question mark to the <fo:inline font-family="monospace" font-size="0.8em">setQueryString( )</fo:inline>
method of <fo:inline font-family="monospace" font-size="0.8em">HttpMethod</fo:inline>, as it will be automatically
added when the method is executed by an instance of
<fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline>.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-4.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.4.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In the previous example, <fo:inline font-family="monospace" font-size="0.8em">method.setQueryString()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3221"><!--method.setQueryString( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3222"><!--methods, method.setQueryString(
)--></fo:wrapper> is used to set the entire query string at
once, but there is another alternative: setting the query string with
an array of <fo:inline font-family="monospace" font-size="0.8em">NameValuePair</fo:inline> objects. When a
<fo:inline font-family="monospace" font-size="0.8em">NameValuePair[]</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3223"><!--NameValuePair--></fo:wrapper>
is passed to <fo:inline font-family="monospace" font-size="0.8em">method.setQueryString( )</fo:inline>, the
<fo:inline font-family="monospace" font-size="0.8em">HttpMethod</fo:inline> then takes each pair and creates a
series of parameters delimited by an ampersand. The approach
encourages cleaner code because you are not concatenating strings to
pass multiple parameters. The following example sets the same
parameters used in the previous example, using
<fo:inline font-family="monospace" font-size="0.8em">NameValuePair</fo:inline> objects:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt438">// Set query string with name value pair objects
HttpMethod method = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> GetMethod( url );
NameValuePair pair = 
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    new</fo:inline> NameValuePair( "test1", URIUtil.encodeQuery( "O Reilly" ) );
NameValuePair pair2 = 
    <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> NameValuePair( "blah", URIUtil.encodeQuery( "Whoop" ) );
NameValuePair[] pairs = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> NameValuePair[] { pair, pair2 };
method.setQueryString( pairs );
System.out.println( "With NameValuePairs: " + method.getURI( ) );
client.executeMethod( method );
System.out.println( "Response:\n " + method.getResponseBodyAsString( ) );
method.releaseConnection( );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">According to RFC 1738 (Uniform Resource Locators (URL) specification)
URLs can only contain alphanumeric characters,
<fo:inline font-family="monospace" font-size="0.8em">[0-9a-zA-Z]</fo:inline>, and a few other special characters.
If you need to send a parameter with an unacceptable character in a
URL, you will need to encode your string according to the standard
defined in RFC 1738. <fo:inline font-family="monospace" font-size="0.8em">URIUtil</fo:inline> exposes a method
<fo:inline font-family="monospace" font-size="0.8em">encodeQuery( )</fo:inline> that can be used to encode the
value "O Reilly" in the previous
example. The following code demonstrates the use of
<fo:inline font-family="monospace" font-size="0.8em">URIUtil</fo:inline> to encode strings for inclusion in a URL:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt439">String encoded1 = URIUtil.encodeQuery( "&lt;test&gt;=O'Connell" );
String encoded2 = URIUtil.encodeQuery( "one:two=thr ee#" );

String decoded = URIUtil.decode( "Hello%20World%3F" );

System.out.println( "Encoded: " + encoded1 );
System.out.println( "Encoded: " + encoded2 );
System.out.println( "Decoded: " + decoded );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This simple example encodes two strings and decodes an encoded string
using <fo:inline font-family="monospace" font-size="0.8em">URIUtil</fo:inline>. The output shows the result of each
transformation:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt440">Encoded: %3ctest%e3=O'Connell
Encoded: one%3atwo=thr%20ee#23
Decoded: Hello World?</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-4.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.4.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In this example, <fo:inline font-family="monospace" font-size="0.8em">URLUtil</fo:inline> was used to encode
content passed in on the query string. This HttpClient team has
recently moved some of the URL encoding and decoding logic to the
Jakarta Commons Codec project as a class named
<fo:inline font-family="monospace" font-size="0.8em">URLCodec</fo:inline>. For more information about
<fo:inline font-family="monospace" font-size="0.8em">URLCodec</fo:inline>, see the Jakarta Commons Codec project
page (<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/codec</fo:inline>).</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">RFC 1738 discusses the legal characters <fo:wrapper id="jakartackbk-CHP-11-ITERM-3224"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3225"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3226"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3227"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3228"><!----></fo:wrapper>for a URL and defines a process for
encoding other characters. RFC 1738 can be found at <fo:inline font-family="monospace" font-size="0.8em">http://www.zvon.org/tmRFC/RFC2616/Output/index.html</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-5"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Retrieving Content with a Conditional GET</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.5. Retrieving Content with a Conditional GET</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-5.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.5.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to retrieve <fo:wrapper id="jakartackbk-CHP-11-ITERM-3229"><!--Jakarta
HttpClient, GET method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3230"><!--clients, Jakarta
HttpClient, GET method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3231"><!--GET method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3232"><!--methods, GET--></fo:wrapper>the
same content <fo:wrapper id="jakartackbk-CHP-11-ITERM-3233"><!--retrieving content (conditional GET
method)--></fo:wrapper>more than once, and you would like to
have the server only send the content if it has changed since the
last request.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-5.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.5.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Create a <fo:inline font-family="monospace" font-size="0.8em">GetMethod</fo:inline> and set the
<fo:inline font-family="monospace" font-size="0.8em">If-None-Match</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">If-Modified-Since</fo:inline> headers; these two headers
will instruct the server to refrain from sending content if the
content has not been altered since the last request. <fo:basic-link internal-destination="jakartackbk-CHP-11-EX-1" text-decoration="underline" color="blue">Example 11-1</fo:basic-link> makes three separate requests for the same URL
(<fo:inline font-family="monospace" font-size="0.8em">http://www.apache.org</fo:inline>), and,
because the content remains static, it is only sent in the response
body of the first request.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-11-EX-1"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 11-1. Requesting information with a conditional GET</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e31943">
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> java.io.IOException;

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.Header;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HeaderElement;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpClient;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpException;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpMethod;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpStatus;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.methods.GetMethod;

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">public</fo:inline> 
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">class</fo:inline> ConditionalGetExample {

    <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">public</fo:inline> 
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">static</fo:inline> 
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">void</fo:inline> main(String[] args) <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">throws</fo:inline> HttpException, IOException {
        ConditionalGetExample example = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> ConditionalGetExample( );
        example.start( );
    }
    
    String entityTag = "";
    String lastModified = "";
    
    <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">public</fo:inline> 
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">void</fo:inline> start( ) <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">throws</fo:inline> HttpException, IOException {

        HttpClient client = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> HttpClient( );
        HttpMethod method = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> GetMethod("http://www.apache.org");

        <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">for</fo:inline>( <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">int</fo:inline> i = 0; i &lt; 3; i++ ) {
            setHeaders(method);
            client.executeMethod(method);
            processResults(method);
            method.releaseConnection( );
            method.recycle( );
        }
    }

    <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">private</fo:inline> 
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">void</fo:inline> setHeaders(HttpMethod method) {
        method.setRequestHeader(<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> Header("If-None-Match", entityTag ) );
        method.setRequestHeader(<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> Header("If-Modified-Since", 
                               lastModified ) );
    }

    <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">private</fo:inline> 
                  <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">void</fo:inline> processResults(HttpMethod method) <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">throws</fo:inline> HttpException {
        <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">if</fo:inline>(method.getStatusCode( ) == HttpStatus.SC_NOT_MODIFIED ) {
            System.out.println( "Content not modified since last request" );
        } <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">else</fo:inline> {
            entityTag = retrieveHeader( method, "ETag" );
            lastModified = retrieveHeader( method, "Last-Modified" );
            System.out.println( "Get Method retrieved content." );
            System.out.println( "Entity Tag: " + entityTag );
            System.out.println( "Last Modified: " + lastModified );
        } 
    }
    
    <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">private</fo:inline> String retrieveHeader( HttpMethod method, String name ) 
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">        throws</fo:inline> HttpException {
        HeaderElement[] header = method.getResponseHeader("ETag").
                                 getElements( );
        String value = "";
        <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">if</fo:inline>(header.length &gt; 0) {
         value = header[0].getName( );
        }
        <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">return</fo:inline> value;
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-11-EX-1" text-decoration="underline" color="blue">Example 11-1</fo:basic-link> requests the same page three times; the
first request retrieves the content, and the second and third
requests contain the headers for a conditional HTTP GET. Because the
Apache homepage remains unchanged throughout this example, the
content of <fo:inline font-family="monospace" font-size="0.8em">http://www.apache.org</fo:inline>
is retrieved only once. This example uses the headers in the first
response to populate the <fo:inline font-family="monospace" font-size="0.8em">If-None-Match</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">If-Modified-Since</fo:inline> headers for the second and
third requests:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt441">Request 1. Get Method retrieved content.
Entity Tag: "2da794a-2d0d-998ebc80"
Last Modified: Wed, 14 Apr 2004 05:53:38 GMT

Request 2. Content not modified since last request

Request 3. Content not modified since last request</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-5.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.5.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This first request is similar to a regular HTTP GET, and if you
examine the contents of the first request and response, you will see
that the server's response contains two headers:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt442">Last-Modified: Wed, 05 May 2004 02:51:59 GMT
ETag: "a06d2-76-829811c0"</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-11-EX-1" text-decoration="underline" color="blue">Example 11-1</fo:basic-link> takes the values of these two response
headers and stores them in the <fo:inline font-family="monospace" font-size="0.8em">entityTag</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">lastModified</fo:inline> variables. When the next request is
made, the values of these two variables are used to populate the
conditional headers <fo:inline font-family="monospace" font-size="0.8em">If-None-Match</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">If-Modified-Since</fo:inline> in the <fo:inline font-family="monospace" font-size="0.8em">setHeaders()</fo:inline> method. These request headers are present in the second
request for the same resource:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt443">GET / HTTP/1.1
If-None-Match: "2da7807-31a8-e1eeb400"
If-Modified-Since: Tue, 11 May 2004 23:57:04 GMT
User-Agent: Jakarta Commons-HttpClient/3.0final
Host: www.apache.org</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">When the server receives these conditional headers, it will check to
see if the resource has been modified. If the resource has been
modified, the resource will have a different modified date and
different entity tag value. If the resource has not been modified,
the server will respond to <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> with a
<fo:inline font-family="monospace" font-size="0.8em">304 Not Modified</fo:inline> response code:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt444">HTTP/1.1 304 Not Modified
Date: Sat, 15 May 2004 16:59:23 GMT
Server: Apache/2.0.49-dev (Unix)
ETag: "2da7807-31a8-e1eeb400"
Expires: Sun, 16 May 2004 16:59:23 GMT
Cache-Control: max-age=86400</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">ETag</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3234"><!--ETag
headers--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3235"><!--headers, ETag--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3236"><!--entity tags--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3237"><!--tags, entity--></fo:wrapper>
header is known as an <fo:inline font-family="monospace" font-size="0.8em">entity tag</fo:inline>, and it is
similar to a hash code for a resource served by a particular web
server. Different servers have different algorithms for creating an
<fo:inline font-family="monospace" font-size="0.8em">ETag</fo:inline> header; for example, the Apache HTTPD
server has a configuration directive, which allows you to base an
<fo:inline font-family="monospace" font-size="0.8em">ETag</fo:inline> on a configurable set of file attributes,
such as size, i-node number, and modified time. Consider an
<fo:inline font-family="monospace" font-size="0.8em">ETag</fo:inline> to be a unique identifier for a particular
version of a resource; if this header changes, the corresponding
resource has been altered.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-5.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.5.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Entity tags (the <fo:inline font-family="monospace" font-size="0.8em">ETag</fo:inline> header) are described in
sections 3.11 and 14.19 of RFC 2616 (<fo:inline font-family="monospace" font-size="0.8em">http://www.zvon.org/tmRFC/RFC2616/Output/index.html</fo:inline>).
The Apache HTTPD server can be configured to use different file
attributes when creating an <fo:inline font-family="monospace" font-size="0.8em">ETag</fo:inline> header. For
more information about configuring the Apache HTTPD server<fo:wrapper id="jakartackbk-CHP-11-ITERM-3238"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3239"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3240"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3241"><!----></fo:wrapper> via the
<fo:inline font-family="monospace" font-size="0.8em">FileETag</fo:inline> directive, see the documentation of
Apache's core features (<fo:inline font-family="monospace" font-size="0.8em">http://httpd.apache.org/docs-2.0/mod/core.html#fileetag</fo:inline>).</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-6"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Debugging HTTP Communications</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.6. Debugging HTTP Communications</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-6.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.6.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to see the low-level communications <fo:wrapper id="jakartackbk-CHP-11-ITERM-3242"><!--Jakarta
HttpClient, debugging--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3243"><!--debugging, Jakarta
HttpClient--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3244"><!--clients, Jakarta
HttpClient, debugging--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3245"><!--servers, HTTP,
debugging--></fo:wrapper>between the client and the server.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-6.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.6.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Set four <fo:inline font-family="monospace" font-size="0.8em">System</fo:inline> variables that control logging,
and <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3246"><!--logging, HttpClient--></fo:wrapper>will
produce debugging statements dealing with environment information,
SSL configuration information, and the raw data sent to and received
from the server. The following example sets the four
<fo:inline font-family="monospace" font-size="0.8em">System</fo:inline> properties that control
<fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> debugging output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt445">
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpClient;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpException;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpMethod;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.methods.GetMethod;

String logging = "org.apache.commons.logging";

// Configure Logging
System.setProperty(logging + ".Log", logging + ".impl.SimpleLog");
System.setProperty(logging + ".logging.simplelog.showdatetime", "true");
System.setProperty(logging + ".simplelog.log.httpclient.wire", "debug");        
System.setProperty(logging + ".simplelog.log.org.apache.commons.httpclient", 
                   "debug");
        
HttpClient client = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> HttpClient( );
String url = "http://www.discursive.com/jccook/";
HttpMethod method = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> GetMethod( url );
client.executeMethod( method );
String response = method.getResponseBodyAsString( );

System.out.println( response );
method.releaseConnection( );
method.recycle( );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This code executes a simple <fo:inline font-family="monospace" font-size="0.8em">GetMethod</fo:inline> and produces
the following debugging output, which contains environment
information and a log of all data sent and received from the server:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt446">HttpClient - -Java version: 1.4.2_04
HttpClient - -Java vendor: Sun Microsystems Inc.
HttpClient - -Java class path: 
HttpClient - -Operating system name: Windows XP
HttpClient - -Operating system architecture: x86
HttpClient - -Operating system version: 5.1
HttpClient - -SUN 1.42: SUN (DSA key/parameter generation; DSA signing; SHA-1, \
             MD5  digests; SecureRandom; X.509 certificates; JKS keystore; \
             PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection \
             CertStores)
HttpClient - -SunJSSE 1.42: Sun JSSE provider(implements RSA Signatures, \
             PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)
HttpClient - -SunRsaSign 1.42: SUN's provider for RSA signatures
HttpClient - -SunJCE 1.42: SunJCE Provider (implements DES, Triple DES, \
             AES, Blowfish, PBE, Diffie-Hellman, HMAC-MD5, HMAC-SHA1)
HttpClient - -SunJGSS 1.0: Sun (Kerberos v5)
HttpConnection - -HttpConnection.setSoTimeout(0)
HttpMethodBase - -Execute loop try 1
wire - -&gt;&gt; "GET /jccook/ HTTP/1.1[\r][\n]"
HttpMethodBase - -Adding Host request header
wire - -&gt;&gt; "User-Agent: Jakarta Commons-HttpClient/3.0final[\r][\n]"
wire - -&gt;&gt; "Host: www.discursive.com[\r][\n]"
wire - -&gt;&gt; "[\r][\n]"
wire - -&lt;&lt; "HTTP/1.1 200 OK[\r][\n]"
wire - -&lt;&lt; "Date: Thu, 06 May 2004 02:49:43 GMT[\r][\n]"
wire - -&lt;&lt; "Server: Apache/2.0.48 (Fedora)[\r][\n]"
wire - -&lt;&lt; "Last-Modified: Wed, 05 May 2004 02:51:37 GMT[\r][\n]"
wire - -&lt;&lt; "ETag: "a06d1-68-81486040"[\r][\n]"
wire - -&lt;&lt; "Accept-Ranges: bytes[\r][\n]"
wire - -&lt;&lt; "Content-Length: 104[\r][\n]"
wire - -&lt;&lt; "Content-Type: text/html; charset=UTF-8[\r][\n]"
HttpMethodBase - -Buffering response body
wire - -&lt;&lt; "&lt;html&gt;[\n]"
wire - -&lt;&lt; " &lt;head&gt;[\n]"
wire - -&lt;&lt; "  &lt;title&gt;JCCook Example&lt;/title&gt;[\n]"
wire - -&lt;&lt; " &lt;/head&gt;[\n]"
wire - -&lt;&lt; " &lt;body&gt;[\n]"
wire - -&lt;&lt; "  &lt;h1&gt;Hello World!&lt;/h1&gt;[\n]"
wire - -&lt;&lt; " &lt;/body&gt;[\n]"
wire - -&lt;&lt; "&lt;/html&gt;"
HttpMethodBase - -Resorting to protocol version default close connection policy
HttpMethodBase - -Should NOT close connection, using HTTP/1.1.
&lt;html&gt;
 &lt;head&gt;
  &lt;title&gt;JCCook Example&lt;/title&gt;
 &lt;/head&gt;
 &lt;body&gt;
  &lt;h1&gt;Hello World!&lt;/h1&gt;
 &lt;/body&gt;
&lt;/html&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-6.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.6.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The ability to see the communications between a browser and a server
is a great diagnostic tool, and, throughout this chapter, the wire
protocol logging properties have been used to provide some insight
into the inner workings of <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline>. There were
four <fo:inline font-family="monospace" font-size="0.8em">System</fo:inline> properties set in the previous
example:</fo:block><fo:block space-before.optimum="0em" space-before.minimum="0em" space-before.maximum="0em" space-after.optimum="0em" space-after.minimum="0em" space-after.maximum="0em" margin-left="1.0em" id="d0e32265"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e32266" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                     <fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.logging.simplelog.log.httpclient.wire</fo:inline>
                  </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>Setting this property to <fo:inline font-family="monospace" font-size="0.8em">debug</fo:inline> causes an
<fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> instance to print out all traffic sent
to and received from a web server.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e32281" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                     <fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.logging.simplelog.log.org.apache.commons.httpclient</fo:inline>
                  </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>Setting this property to <fo:inline font-family="monospace" font-size="0.8em">debug</fo:inline> configures
<fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> to print general debugging information.
In the previous example, every line starting with
<fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> or <fo:inline font-family="monospace" font-size="0.8em">HttpMethodBase</fo:inline> is
a debugging message configured by this setting.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e32302" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                     <fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.logging.Log</fo:inline>
                  </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>Setting this property to
<fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.logging.impl.SimpleLog</fo:inline>
configures <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> to log output to the
console.</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e32317" keep-together.within-column="always" keep-with-next.within-column="always"><fo:inline>
                     <fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.logging.simplelog.showdatetime</fo:inline>
                  </fo:inline></fo:block><fo:block margin-left="0.25in"><fo:block>Setting this to <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> will cause the
<fo:inline font-family="monospace" font-size="0.8em">SimpleLog</fo:inline> to <fo:wrapper id="jakartackbk-CHP-11-ITERM-3247"><!----></fo:wrapper> 
                        <fo:wrapper id="jakartackbk-CHP-11-ITERM-3248"><!----></fo:wrapper> 
                        <fo:wrapper id="jakartackbk-CHP-11-ITERM-3249"><!----></fo:wrapper> 
                        <fo:wrapper id="jakartackbk-CHP-11-ITERM-3250"><!----></fo:wrapper>print the date and time for every
message.</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-7"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Making an HTTP POST Request</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.7. Making an HTTP POST Request</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-7.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.7.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to supply parameters to a<fo:wrapper id="jakartackbk-CHP-11-ITERM-3251"><!--Jakarta
HttpClient, HTTP POST
requests--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3252"><!--HTTP POST
requests--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3253"><!--clients, HTTP
POST requests--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3254"><!--parameters, HTTP
POST requests--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3255"><!--scripts, HTTP
POST requests--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3256"><!--servlets, HTTP POST
requests--></fo:wrapper> script or servlet using HTTP POST.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-7.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.7.2. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Create a <fo:inline font-family="monospace" font-size="0.8em">PostMethod</fo:inline> and call
<fo:inline font-family="monospace" font-size="0.8em">setParameter( )</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3257"><!--setParameter( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3258"><!--methods, setParameter(
)--></fo:wrapper> or <fo:inline font-family="monospace" font-size="0.8em">addParameter()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3259"><!--addParameter( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3260"><!--methods, addParameter(
)--></fo:wrapper> before you execute the method. The
<fo:inline font-family="monospace" font-size="0.8em">PostMethod</fo:inline> will send a request with a
<fo:inline font-family="monospace" font-size="0.8em">Content-Type</fo:inline> header of
<fo:inline font-family="monospace" font-size="0.8em">application/x-www-form-urlencoded</fo:inline>, and the
parameters will be sent in the request body. The following example
demonstrates the use of
<fo:inline font-family="monospace" font-size="0.8em">PostMethod</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3261"><!--PostMethod--></fo:wrapper>
to<fo:wrapper id="jakartackbk-CHP-11-ITERM-3262"><!--sending, parameters--></fo:wrapper>
send parameters:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt447">
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpClient;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpException;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.NameValuePair;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.methods.PostMethod;

HttpClient client = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> HttpClient( );
        
// Create POST method
String url = "http://www.discursive.com/cgi-bin/jccook/param_list.cgi";
PostMethod method = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> PostMethod( url );

<fo:inline font-weight="bold">// Set parameters on POST</fo:inline>    
               <fo:inline font-weight="bold">method.setParameter( "test1", "Hello World" );</fo:inline>
               <fo:inline font-weight="bold">method.addParameter( "test2", "This is a Form Submission" );</fo:inline>
               <fo:inline font-weight="bold">method.addParameter( "Blah", "Whoop" );</fo:inline>
               <fo:inline font-weight="bold">method.addParameter( new NameValuePair( "Blah", "Whoop2" ) );</fo:inline>

// Execute and print response
client.executeMethod( method );
String response = method.getResponseBodyAsString( );
System.out.println( response );

method.releaseConnection( );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">param_list.cgi</fo:inline> CGI script echoes all
parameters received, and from the following output, you can see that
three parameters were supplied to this script:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt448">These are the parameters I received:

test1:
  Hello World
test2:
  This is a Form Submission
Blah:
  Whoop
  Whoop2</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-7.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.7.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous example sent the parameters in the request body. The
request created by the previous example is shown below:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt449">POST /cgi-bin/jccook/param_list.cgi HTTP/1.1[\r][\n]
User-Agent: Jakarta Commons-HttpClient/3.0final[\r][\n]
Host: www.discursive.com[\r][\n]
Content-Length: 72[\r][\n]
Content-Type: application/x-www-form-urlencoded[\r][\n]
[\r][\n]
test1=Hello+World&amp;test2=This+is+a+Form+Submission&amp;Blah=Whoop&amp;Blah=Whoop2</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-CHP-11-NOTE-72"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/tip.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Tip</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This output was produced by turning on wire debugging for
<fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline>, as described in Recipe 11.6.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The first line specifies the HTTP method, the request path, and the
protocol. The second line identifies this client as HttpClient
Version 3.0. The third line specifies the request host and is used by
servers serving many different virtual hosts using one IP address.
The fourth line states that the request body is exactly 72 bytes, and
the <fo:inline font-family="monospace" font-size="0.8em">Content-Type</fo:inline> header defines the request body
as being a series of URL-encoded parameters. The parameters are
passed in one line as
<fo:inline font-family="monospace" font-size="0.8em">name1=value1&amp;name2=value&amp;</fo:inline>, etc.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">There are a few ways to specify parameters on a
<fo:inline font-family="monospace" font-size="0.8em">PostMethod</fo:inline>. The most straightforward is to call
<fo:inline font-family="monospace" font-size="0.8em">setParameter( )</fo:inline> with two strings: the parameter
name and parameter value. <fo:inline font-family="monospace" font-size="0.8em">setParameter( )</fo:inline> will
replace any existing parameter with the same name. If a parameter
with the same name is already present in a
<fo:inline font-family="monospace" font-size="0.8em">PostMethod</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">addParameter( )</fo:inline>
will add another value to an existing parameter;
<fo:inline font-family="monospace" font-size="0.8em">addParameter( )</fo:inline> also accepts two strings: the name
and value. Alternatively, both methods can be called with a
<fo:inline font-family="monospace" font-size="0.8em">NameValuePair</fo:inline> object that encapsulates the name
and value of a parameter. The previous example sent two values for
the parameter <fo:inline font-family="monospace" font-size="0.8em">Blah</fo:inline>, which were both added using
<fo:inline font-family="monospace" font-size="0.8em">addParameter( )</fo:inline>. The first was added with two
string parameters, and the second was added using a
<fo:inline font-family="monospace" font-size="0.8em">NameValuePair</fo:inline> object.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-7.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.7.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The POST method is defined in detail in Section 9.5 of RFC 2616
(<fo:inline font-family="monospace" font-size="0.8em">http://www.zvon.org/tmRFC/RFC2616/Output/index.html</fo:inline>).</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-8"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Sending POST Data from a File</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.8. Sending POST Data from a File</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-8.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.8.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to send the data
from<fo:wrapper id="jakartackbk-CHP-11-ITERM-3263"><!--sending, HTTP POST request
files--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3264"><!--files, HTTP POST
requests--></fo:wrapper> a file in an HTTP POST request.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-8.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.8.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Create a <fo:inline font-family="monospace" font-size="0.8em">PostMethod</fo:inline>, create a
<fo:inline font-family="monospace" font-size="0.8em">File</fo:inline> object, and call <fo:inline font-family="monospace" font-size="0.8em">setRequestBody(
)</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3265"><!--setRequestBody( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3266"><!--methods, setRequestBody(
)--></fo:wrapper> and <fo:inline font-family="monospace" font-size="0.8em">setRequestContentLength()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3267"><!--setRequestContentLength( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3268"><!--methods, setRequestContentLength(
)--></fo:wrapper> on the method before it is executed. The
<fo:inline font-family="monospace" font-size="0.8em">PostMethod</fo:inline> will send a request with a
<fo:inline font-family="monospace" font-size="0.8em">Content-Length</fo:inline> header, which reflects the size
of the file sent in the request body. The following example
demonstrates the use of <fo:inline font-family="monospace" font-size="0.8em">PostMethod</fo:inline> to send data
from a file in a request body:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt450">
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpClient;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpException;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.methods.PostMethod;

HttpClient client = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> HttpClient( );
        
// Create POST method
String weblintURL = "http://ats.nist.gov/cgi-bin/cgi.tcl/echo.cgi";
PostMethod method = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> PostMethod( weblintURL );

File file = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> File( "project.xml" );
<fo:inline font-weight="bold">method.setRequestBody( new FileInputStream( file ) );</fo:inline>
               <fo:inline font-weight="bold">method.setRequestContentLength( (int)file.length( ) );</fo:inline>

// Execute and print response
client.executeMethod( method );
String response = method.getResponseBodyAsString( );
System.out.println( response );

method.releaseConnection( );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous example hits a CGI script, which echoes the contents of
the request body. When this example is executed, the response body is
printed with the contents of the file that was uploaded in an HTTP
POST request.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-8.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.8.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This recipe sets the request body of an HTTP POST directly by passing
a <fo:inline font-family="monospace" font-size="0.8em">File</fo:inline> object to <fo:inline font-family="monospace" font-size="0.8em">method.setRequestBody()</fo:inline>. In addition to accepting a <fo:inline font-family="monospace" font-size="0.8em">File</fo:inline>
object, <fo:inline font-family="monospace" font-size="0.8em">setRequestBody( )</fo:inline> can accept an
<fo:inline font-family="monospace" font-size="0.8em">InputStream</fo:inline> or a <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline>. Any
time a request body is populated, the
<fo:inline font-family="monospace" font-size="0.8em">Content-Length</fo:inline> header must be set to reflect the
size of the request body by calling
<fo:inline font-family="monospace" font-size="0.8em">method.setRequestContentLength( )</fo:inline>. The previous
recipe sent parameters in an HTTP POST request body by calling
<fo:inline font-family="monospace" font-size="0.8em">setParameter( )</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">addParameter()</fo:inline>, and the <fo:inline font-family="monospace" font-size="0.8em">Content-Length</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">Content-Type</fo:inline> headers are automatically populated
when the method is executed. In this example, the
<fo:inline font-family="monospace" font-size="0.8em">Content-Type</fo:inline> header is not sent with the request
as the content can be any arbitrary textual or binary data.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-9"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Uploading Files with a Multipart POST</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.9. Uploading Files with a Multipart POST</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-9.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.9.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to upload a file or a<fo:wrapper id="jakartackbk-CHP-11-ITERM-3269"><!--uploading
files--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3270"><!--files, uploading--></fo:wrapper>
set of files with an HTTP multipart POST.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-9.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.9.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Create a <fo:inline font-family="monospace" font-size="0.8em">MultipartPostMethod</fo:inline> and add
<fo:inline font-family="monospace" font-size="0.8em">File</fo:inline> objects as parameters using
<fo:inline font-family="monospace" font-size="0.8em">addParameter( )</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">addPart( )</fo:inline>.
The
<fo:inline font-family="monospace" font-size="0.8em">MultipartPostMethod</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3271"><!--MultipartPostMethod--></fo:wrapper>
creates a request with a <fo:inline font-family="monospace" font-size="0.8em">Content-Type</fo:inline> header of
<fo:inline font-family="monospace" font-size="0.8em">multipart/form-data</fo:inline>, and each part is separated
by a boundary. The following example sends two files in an HTTP
multipart POST:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt451">
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpClient;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpException;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.methods.MultipartPostMethod;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.methods.multipart.FilePart;

HttpClient client = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> HttpClient( );
        
// Create POST method
String weblintURL = "http://ats.nist.gov/cgi-bin/cgi.tcl/echo.cgi";
MultipartPostMethod method = 
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    new</fo:inline> MultipartPostMethod( weblintURL );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">File file = new File( "data", "test.txt" );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">File file2 = new File( "data", "sample.txt" );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">method.addParameter("test.txt", file );</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">method.addPart( new FilePart( "sample.txt", file2, "text/plain", 
"ISO-8859-1" ) ); </fo:inline>

// Execute and print response
client.executeMethod( method );
String response = method.getResponseBodyAsString( );
System.out.println( response );

method.releaseConnection( );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Two <fo:inline font-family="monospace" font-size="0.8em">File</fo:inline> objects are added to the
<fo:inline font-family="monospace" font-size="0.8em">MultipartPostMethod</fo:inline> using two different methods.
The first method, <fo:inline font-family="monospace" font-size="0.8em">addParameter( )</fo:inline>, adds a
<fo:inline font-family="monospace" font-size="0.8em">File</fo:inline> object and sets the file name to
<fo:inline font-family="monospace" font-size="0.8em">test.txt</fo:inline>. The second method, <fo:inline font-family="monospace" font-size="0.8em">addPart()</fo:inline>, adds a <fo:inline font-family="monospace" font-size="0.8em">FilePart</fo:inline> object to the
<fo:inline font-family="monospace" font-size="0.8em">MultipartPostMethod</fo:inline>. Both files are sent in the
request separated by a part boundary, and the script echoes the
location and type of both files on the server:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt452">&lt;h3&gt;Form input&lt;/h3&gt;
&lt;pre&gt;
sample.txt = /tmp/CGI14480.4 sample.txt {text/plain; charset=ISO-8859-1}

test.txt = /tmp/CGI14480.2 test.txt {application/octet-stream; 
charset=ISO-8859-1}
&lt;/pre&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-9.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.9.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Adding a part as a
<fo:inline font-family="monospace" font-size="0.8em">FilePart</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3272"><!--FilePart--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3273"><!--adding, parts--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3274"><!--parts, adding--></fo:wrapper> object allows
you to specify the <fo:wrapper id="jakartackbk-CHP-11-ITERM-3275"><!--Multipurpose Internet Main
Extensions (MIME)--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3276"><!--MIME
(Multipurpose Internet Main
Extensions)--></fo:wrapper>Multipurpose Internet Main
Extensions (MIME) type and the character set of the part. In this
example, the <fo:inline font-family="monospace" font-size="0.8em">sample.txt</fo:inline> file is added with a
<fo:inline font-family="monospace" font-size="0.8em">text/plain</fo:inline> MIME type and an
<fo:inline font-family="monospace" font-size="0.8em">ISO-8859-1</fo:inline> character set. If a
<fo:inline font-family="monospace" font-size="0.8em">File</fo:inline> is added to the method using
<fo:inline font-family="monospace" font-size="0.8em">addParameter( )</fo:inline> or <fo:inline font-family="monospace" font-size="0.8em">setParameter(
)</fo:inline>, it is sent with the default
<fo:inline font-family="monospace" font-size="0.8em">application/octet-stream</fo:inline> type and the default
<fo:inline font-family="monospace" font-size="0.8em">ISO-8859-1</fo:inline> character set.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">When <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> executes the
<fo:inline font-family="monospace" font-size="0.8em">MultipartPostMethod</fo:inline> created in the previous
example, the following request is sent to the server. The
<fo:inline font-family="monospace" font-size="0.8em">Content-Type</fo:inline> header is
<fo:inline font-family="monospace" font-size="0.8em">multipart/form-data</fo:inline>, and an arbitrary
<fo:inline font-family="monospace" font-size="0.8em">boundary</fo:inline> is created to delineate multiple parts
being sent in the request:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt453">POST /cgi-bin/cgi.tcl/echo.cgi HTTP/1.1
User-Agent: Jakarta Commons-HttpClient/3.0final
Host: ats.nist.gov
Content-Length: 498
Content-Type: multipart/form-data; boundary=----------------31415926535
8979323846

------------------314159265358979323846
Content-Disposition: form-data; name=test.txt; filename=test.txt
Content-Type: application/octet-stream; charset=ISO-8859-1
Content-Transfer-Encoding: binary

This is a test.
------------------314159265358979323846
Content-Disposition: form-data; name=sample.txt; filename=sample.txt
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: binary

This is a sample
------------------314159265358979323846--</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Each part contains a <fo:inline font-family="monospace" font-size="0.8em">Content-Disposition</fo:inline> header
to name the part and a <fo:inline font-family="monospace" font-size="0.8em">Content-Type</fo:inline> header to
classify the part with a MIME type and character set.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-9.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.9.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">RFC 1867 (form-based file upload in HTML defines a multipart POST)
can be found at <fo:inline font-family="monospace" font-size="0.8em">http://www.zvon.org/tmRFC/RFC1867/Output/index.html</fo:inline>.
Each part is sent using MIME, which is described in RFC 2045,
Multipurpose Internet Mail Extensions (MIME) Part One: Format of
Internet Message Bodies (<fo:inline font-family="monospace" font-size="0.8em">http://www.zvon.org/tmRFC/RF2045/Output/index.html</fo:inline>).</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-10"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Basic Authentication</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.10. Basic Authentication</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-10.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.10.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to access information<fo:wrapper id="jakartackbk-CHP-11-ITERM-3277"><!--Jakarta
HttpClient, authentication--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3278"><!--authentication, Jakarta
HttpClient--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3279"><!--clients, Jakarta
HttpClient, authentication--></fo:wrapper>
protected by HTTP Basic Authentication.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-10.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.10.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Create a
<fo:inline font-family="monospace" font-size="0.8em">UsernamePasswordCredentials</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3280"><!--UsernamePasswordCredentials
object--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3281"><!--objects, UsernamePasswordCredentials--></fo:wrapper>
object with a username and password. Add this
<fo:inline font-family="monospace" font-size="0.8em">Credentials</fo:inline> object to the instance of
<fo:inline font-family="monospace" font-size="0.8em">HttpState</fo:inline> associated with an
<fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> object. <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline>
will attempt to execute a message, and the server will respond with
<fo:inline font-family="monospace" font-size="0.8em">401</fo:inline> response code; <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline>
will then retry the request with<fo:wrapper id="jakartackbk-CHP-11-ITERM-3282"><!--authorization,
headers--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3283"><!--headers, authorization--></fo:wrapper>
the appropriate <fo:inline font-family="monospace" font-size="0.8em">Authorization</fo:inline> header. The
following example uses a
<fo:inline font-family="monospace" font-size="0.8em">UsernamePasswordCredentials</fo:inline> object to access a
protected resource:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt454">
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.Credentials;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpClient;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpException;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpMethod;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.UsernamePasswordCredentials;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.methods.GetMethod;

HttpClient client = new HttpClient( );
HttpState state = client.getState( );
    
// Set credentials on the client
Credentials credentials =
     new UsernamePasswordCredentials( "testuser", "crazypass" );
state.setCredentials( null, null, credentials );

String url = "http://www.discursive.com/jccook/auth/";
HttpMethod method = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> GetMethod( url );
    
client.executeMethod( method );
String response = method.getResponseBodyAsString( );

System.out.println( response );
method.releaseConnection( );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example executes a <fo:inline font-family="monospace" font-size="0.8em">GetMethod</fo:inline>, the server
requests <fo:wrapper id="jakartackbk-CHP-11-ITERM-3284"><!--credentials--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3285"><!--servers, authentication--></fo:wrapper>credentials,
and the credentials are sent to the server. The final response is:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt455">&lt;html&gt;
 &lt;head&gt;
  &lt;title&gt;Secure JCCook Example&lt;/title&gt;
 &lt;/head&gt;
 &lt;body&gt;
  &lt;h1&gt;Hello Secure World!&lt;/h1&gt;
 &lt;/body&gt;
&lt;/html&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-10.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.10.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous example added a
<fo:inline font-family="monospace" font-size="0.8em">UsernamePasswordCredentials</fo:inline> object to the
<fo:inline font-family="monospace" font-size="0.8em">HttpState</fo:inline> with a <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>
authentication realm and a <fo:inline font-family="monospace" font-size="0.8em">null</fo:inline> host; this makes
the supplied <fo:inline font-family="monospace" font-size="0.8em">UsernamePasswordCredentials</fo:inline> object
the default instance to use for all authentication realms and hosts.
The requests and responses created by this example demonstrate the
inner-workings of <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline>, which sent the
following request when the <fo:inline font-family="monospace" font-size="0.8em">GetMethod</fo:inline> was executed:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt456">GET /jccook/auth/ HTTP/1.1
User-Agent: Jakarta Commons-HttpClient/3.0final
Host: www.discursive.com</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The server then responds with a <fo:inline font-family="monospace" font-size="0.8em">401</fo:inline> response code,
telling the client that authorization is required. The
<fo:inline font-family="monospace" font-size="0.8em">WWW-Authenticate</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3286"><!--WWW-Authenticate
header--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3287"><!--headers, WWW-Authenticate--></fo:wrapper>
header specifies that the server is expecting Basic authentication,
and the authentication realm is <fo:inline font-family="monospace" font-size="0.8em">jccook realm</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt457">HTTP/1.1 401 Authorization Required
Date: Fri, 14 May 2004 20:40:59 GMT
Server: Apache/2.0.48 (Fedora)
WWW-Authenticate: Basic realm="jccook realm"
Content-Length: 487
Content-Type: text/html; charset=iso-8859-1
DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN"&gt;
&lt;html&gt;&lt;head&gt;
title&gt;401 Authorization Required&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
.... error message ....</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The server did not return the information needed, and another request
needs to be made, sending the credentials in an
<fo:inline font-family="monospace" font-size="0.8em">Authorization</fo:inline> request header. Since the initial
request was made with <fo:inline font-family="monospace" font-size="0.8em">HTTP/1.1</fo:inline>, the connection
is not closed after the response, and a second request will be sent
over the same connection. This second request is the same as the
first request except for an <fo:inline font-family="monospace" font-size="0.8em">Authorization</fo:inline>
header. <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> looked at the associated
<fo:inline font-family="monospace" font-size="0.8em">HttpState</fo:inline> object and located the appropriate
<fo:inline font-family="monospace" font-size="0.8em">Credentials</fo:inline> object to use to create the
<fo:inline font-family="monospace" font-size="0.8em">Authorization</fo:inline> header:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt458">GET /jccook/auth/ HTTP/1.1
User-Agent: Jakarta Commons-HttpClient/3.0final
Host: www.discursive.com
Authorization: Basic dGVzdHVzZXI6Y3JhenlwYXNz</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Finally, the server replies with a <fo:inline font-family="monospace" font-size="0.8em">200</fo:inline> response
code and the content of the requested resource:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt459">HTTP/1.1 200 OK
Date: Fri, 14 May 2004 20:40:59 GMT
Server: Apache/2.0.48 (Fedora)
Last-Modified: Wed, 05 May 2004 02:51:59 GMT
ETag: "a06d2-76-829811c0"
Accept-Ranges: bytes
Content-Length: 118
Content-Type: text/html; charset=UTF-8
&lt;html&gt;
 &lt;head&gt;
  &lt;title&gt;Secure JCCook Example&lt;/title&gt;
 &lt;/head&gt;
 &lt;body&gt;
  &lt;h1&gt;Hello Secure World!&lt;/h1&gt;
 &lt;/body&gt;
&lt;/html&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> waits for the server to send back a
<fo:inline font-family="monospace" font-size="0.8em">401</fo:inline> response code before sending the appropriate
credentials. If you are accessing a resource, which is known to be
protected by authentication, you can configure the
<fo:inline font-family="monospace" font-size="0.8em">HttpState</fo:inline> object to send credentials preemptively,
obviating the need for the client to react to a
<fo:inline font-family="monospace" font-size="0.8em">401</fo:inline> response code. In other words, the
<fo:inline font-family="monospace" font-size="0.8em">Authorization</fo:inline> header is supplied in the initial
request. To configure <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> to send
credentials preemptively, retrieve an
<fo:inline font-family="monospace" font-size="0.8em">HttpClientParams</fo:inline> object from
<fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> via the <fo:inline font-family="monospace" font-size="0.8em">getParams( )</fo:inline>
method, and call <fo:inline font-family="monospace" font-size="0.8em">setAuthenticationPreemptive(true)</fo:inline>
as follows:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt460">HttpClientParams params = client.getParams( );

params.setAuthenticationPreemptive( <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">true</fo:inline> );</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-CHP-11-NOTE-73"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/warning.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Warning</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Basic authentication involves sending an unencrypted password in the
request. The value of the <fo:inline font-family="monospace" font-size="0.8em">Authorization</fo:inline> header
in the request is simply <fo:inline font-family="monospace" font-size="0.8em">testuser:crazypass</fo:inline> sent
through a <fo:inline font-family="monospace" font-size="0.8em">Base64</fo:inline> encoding utility. If you are
working on a system that uses Basic authentication, make sure that
any system that performs authentication does so over
<fo:inline font-family="monospace" font-size="0.8em">SSL</fo:inline>; otherwise, your password will fall into the
wrong hands.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-10.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.10.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you want to convince someone that <fo:wrapper id="jakartackbk-CHP-11-ITERM-3288"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3289"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3290"><!----></fo:wrapper>using Basic authentication without
encryption is a bad idea, download the network protocol analyzer
Ethereal (<fo:inline font-family="monospace" font-size="0.8em">http://www.ethereal.com/</fo:inline>), and capture some
network traffic. Identify an <fo:inline font-family="monospace" font-size="0.8em">Authorize</fo:inline> header
and run the value through a Base64 decoder (<fo:inline font-family="monospace" font-size="0.8em">http://www.securitystats.com/tools/base64.php</fo:inline>).
Create a custom T-shirt or coffee mug with your
friend's username and password, and present it to
him as a gift.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-11"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">NTLM Authentication</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.11. NTLM Authentication</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-11.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.11.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to access a resource that is protected by
Microsoft's NTLM authentication protocol.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-11.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.11.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Create an instance of <fo:inline font-family="monospace" font-size="0.8em">NTCredentials</fo:inline> with a
username, password, host, and domain, and call
<fo:inline font-family="monospace" font-size="0.8em">setCredentials()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3291"><!--setCredentials( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3292"><!--methods, setCredentials(
)--></fo:wrapper> on the <fo:inline font-family="monospace" font-size="0.8em">HttpState</fo:inline>
associated with an instance of <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline>. The
following example demonstrates the use of
<fo:inline font-family="monospace" font-size="0.8em">NTCredentials</fo:inline> to access a resource on host
<fo:inline font-family="monospace" font-size="0.8em">test.windowsmachine.com</fo:inline>, which is on the domain
<fo:inline font-family="monospace" font-size="0.8em">TESTDOM</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt461">
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.Credentials;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpClient;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpState;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpException;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpMethod;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.NTCredentials;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.methods.GetMethod;

HttpClient client = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> HttpClient( );

<fo:inline font-weight="bold">// Set credentials on the client</fo:inline>
               <fo:inline font-weight="bold">Credentials credentials =</fo:inline>
               <fo:inline font-weight="bold">new NTCredentials( "testuser", "crazypass"</fo:inline>, 
                       "<fo:inline font-weight="bold">homecomputer ", "TESTDOM" );</fo:inline>
               <fo:inline font-weight="bold">HttpState state = client.getState( );</fo:inline>
               <fo:inline font-weight="bold">state( ).setCredentials( null, null, credentials );</fo:inline>

String url = "http://webmail.domain.biz/exchange/";
HttpMethod method = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> GetMethod( url );
    
client.executeMethod( method );
String response = method.getResponseBodyAsString( );

System.out.println( response );
method.releaseConnection( );</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-11.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.11.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The parameters to the constructor of <fo:inline font-family="monospace" font-size="0.8em">NTCredentials</fo:inline>
are the username, the password, a hostname, and a domain. The
hostname is the name of the machine making the request, and, in this
case, the third parameter is <fo:inline font-family="monospace" font-size="0.8em">homecomputer</fo:inline>. When
this <fo:inline font-family="monospace" font-size="0.8em">Credential</fo:inline> object is set in the
<fo:inline font-family="monospace" font-size="0.8em">HttpState</fo:inline> object, the first two parameters specify
the authentication realm and the host to apply a
<fo:inline font-family="monospace" font-size="0.8em">Credential</fo:inline> object to. The previous example sets
both the authentication realm and the host to
<fo:inline font-family="monospace" font-size="0.8em">null</fo:inline>; this makes the
<fo:inline font-family="monospace" font-size="0.8em">NTCredentials</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3293"><!--NTCredentials
object--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3294"><!--objects, NTCredentials--></fo:wrapper>
object the default <fo:inline font-family="monospace" font-size="0.8em">Credentials</fo:inline> to use if there is
no realm or host specified. If we were using one instance of
<fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> to connect to two different hosts with
two different <fo:inline font-family="monospace" font-size="0.8em">NTCredentials</fo:inline> objects, both
<fo:inline font-family="monospace" font-size="0.8em">Credentials</fo:inline> objects could be added to
<fo:inline font-family="monospace" font-size="0.8em">HttpState</fo:inline> with the following code:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt462">HttpClient client = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> HttpClient( );

Credentials credentials1 =
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    new</fo:inline> NTCredentials( "testuser", "crazypass", 
                       "homecomputer", "TESTDOM" );

Credentials credentials2 =
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    new</fo:inline> NTCredentials( "anotheruser", "password2", 
                       "homecomputer", "DIFFERENT_DOMAIN" );

HttpState state = client.getState( );
state( ).setCredentials( <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">null</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">"webmail.domain.biz"</fo:inline>, credentials1 );
state( ).setCredentials( <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">null</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">"silly-iis-server.lame.net"</fo:inline>, credentials2 );

// Execute a request which uses credentials1
String url = "http://webmail.domain.biz/exchange/";
HttpMethod method = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> GetMethod( url );
client.executeMethod( method );

// Execute a request which uses credentials2
String url2 = "http://silly-iis-server.lame.net/test/";
HttpMethod method2 = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> GetMethod( url2 );
client.executeMethod( method2 );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The host <fo:inline font-family="monospace" font-size="0.8em">webmail.domain.biz</fo:inline> tries to
authenticate the first request against the
<fo:inline font-family="monospace" font-size="0.8em">TESTDOM</fo:inline> domain, and the
<fo:inline font-family="monospace" font-size="0.8em">silly-iis-server.lame.net</fo:inline> host tries to
authenticate the second request against the
<fo:inline font-family="monospace" font-size="0.8em">DIFFERENT_DOMAIN</fo:inline> domain. Since the
<fo:inline font-family="monospace" font-size="0.8em">HttpState</fo:inline> is configured with two separate
<fo:inline font-family="monospace" font-size="0.8em">Credentials</fo:inline> objects for different hosts, both
requests are successfully authenticated.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-11.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.11.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">No one will dispute the assertion that the HTTP protocol has
dramatically changed the world we live in, and one of the reasons for
this success is the openness of the protocol. Unfortunately, NTLM is
proprietary and undocumented, and this is reason enough to avoid
using it entirely. If you are stuck with NTLM and you want to learn
more about the protocol, it is described in excruciating detail at
<fo:inline font-family="monospace" font-size="0.8em">http://www.innovation.ch/java/ntlm.html</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">http://davenport.sourceforge.net/ntlm.html</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-12"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Working with Cookies</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.12. Working with Cookies</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-12.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.12.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to work with <fo:wrapper id="jakartackbk-CHP-11-ITERM-3295"><!--Jakarta
HttpClient, cookies--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3296"><!--cookies, Jakarta
HttpClient--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3297"><!--clients, Jakarta
HttpClient, cookies--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3298"><!--tracking, cookies--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3299"><!--servers, cookies--></fo:wrapper>a
system that uses cookies to store state, and you need to be able to
set cookies as well as keep track of cookies set by the server.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-12.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.12.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> handles cookies automatically. If you
need to keep track of a cookie set by the server, simply use the same
instance of <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> for each request in a
session. If you need to set a cookie, create an instance of
<fo:inline font-family="monospace" font-size="0.8em">Cookie</fo:inline>, and add it to
<fo:inline font-family="monospace" font-size="0.8em">HttpState</fo:inline>. The following example sends a
<fo:inline font-family="monospace" font-size="0.8em">Cookie</fo:inline> to the server:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt463">
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> java.io.IOException;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.Cookie;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpClient;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpException;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpMethod;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.methods.GetMethod;

HttpClient client = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> HttpClient( );
    
System.out.println( "Making Request without Cookie: " );
makeRequest(client);
            
System.out.println( "Making Request with Cookie: " );
Cookie cookie = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> Cookie(".discursive.com", "test_cookie", 
                           "hello", "/", null, <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">false</fo:inline> );
client.getState( ).addCookie( cookie );
makeRequest(client);

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">private</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">static</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">void</fo:inline> makeRequest(HttpClient client)
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    throws</fo:inline> IOException, HttpException {
    String url = "http://www.discursive.com/cgi-bin/jccook/cookie_test.cgi";
    HttpMethod method = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> GetMethod( url );
    client.executeMethod( method );
    String response = method.getResponseBodyAsString( );
    System.out.println( response );
    method.releaseConnection( );
    method.recycle( );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example hits a CGI script that tests for the presence of a
cookie named <fo:inline font-family="monospace" font-size="0.8em">test_cookie</fo:inline>. One request is made
without the cookie and another request is made with the cookie. The
following output is produced:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt464">Making Request without Cookie: 
&lt;h1&gt;test_cookie NOT PRESENT&lt;/h1&gt;

Making Request with Cookie: 
&lt;h1&gt;test_cookie PRESENT&lt;/h1 &gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-12.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.12.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Cookies are used by a number of application servers to manage user
sessions; <fo:inline font-family="monospace" font-size="0.8em">JSESSIONID</fo:inline> cookies are used by most
J2EE application servers and servlet containers to keep track of a
session. Because <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> automatically handles
cookies, if a server sets a cookie, it will be added to the
<fo:inline font-family="monospace" font-size="0.8em">HttpState</fo:inline> instance associated with
<fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline>. If you need to get a list of cookies
associated with an <fo:inline font-family="monospace" font-size="0.8em">HttpState</fo:inline>, call
<fo:inline font-family="monospace" font-size="0.8em">getCookies( )</fo:inline> to obtain an array of
<fo:inline font-family="monospace" font-size="0.8em">Cookie</fo:inline> objects. The following code retrieves an
array of <fo:inline font-family="monospace" font-size="0.8em">Cookie</fo:inline> objects, printing the
<fo:inline font-family="monospace" font-size="0.8em">domain</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">path</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">name</fo:inline>, and <fo:inline font-family="monospace" font-size="0.8em">value</fo:inline> of each
<fo:inline font-family="monospace" font-size="0.8em">Cookie</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt465">HttpClient client = new HttpClient( );

// execute some methods...

Cookie[] cookies = client.getState( ).getCookies( );
for( int i = 0; i &lt; cookies; i++ ) {
    Cookie cookie = cookies[i];
    String domain = cookie.getDomain( );
    String path = cookie.getPath( );
    String name = cookie.getName( );
    String value = cookie.getValue( );
    System.out.println( "Cookie: " + domain + ", " + path + ", " +
                        name + ", " + value );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">There are two different approaches to cookies floating around the
internet: <fo:wrapper id="jakartackbk-CHP-11-ITERM-3300"><!--Netscape Draft
Specification--></fo:wrapper>Netscape Draft Specification and
<fo:wrapper id="jakartackbk-CHP-11-ITERM-3301"><!--RFC 2109--></fo:wrapper>RFC 2109. Some
servers use the Netscape Draft and others use RFC 2109; because of
this, HttpClient offers a
<fo:inline font-family="monospace" font-size="0.8em">COMPATIBILITY</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3302"><!--COMPATIBILITY
mode--></fo:wrapper> mode that should work with most servers.
The default cookie policy for HttpClient is the
<fo:inline font-family="monospace" font-size="0.8em">RFC_2109</fo:inline> policy. If you are having problems with
cookies, change the cookie policy to the
<fo:inline font-family="monospace" font-size="0.8em">COMPATIBILITY</fo:inline> policy, which is a public static
<fo:inline font-family="monospace" font-size="0.8em">int</fo:inline> in the <fo:inline font-family="monospace" font-size="0.8em">CookiePolicy</fo:inline> class.
To change the cookie policy, call <fo:inline font-family="monospace" font-size="0.8em">setCookiePolicy()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3303"><!--setCookiePolicy( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3304"><!--methods, setCookiePolicy(
)--></fo:wrapper> on the <fo:inline font-family="monospace" font-size="0.8em">HttpState</fo:inline>
associated with <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline>, as follows:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt466">HttpClient client = new HttpClient( );

// To use a Compatability policy
client.getState( ).setCookiePolicy(CookiePolicy.COMPATIBILITY);

// To use a Netscape Draft policy
client.getState( ).setCookiePolicy(CookiePolicy.NETSCAPE_DRAFT);

// To use a RFC 2109 policy - this is the default
client.getState( ).setCookiePolicy(CookiePolicy.RFC2109);</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">There is also a third approach—outlined in RFC 2965—which
supercedes RFC 2109. However, there is no code-level support for this
third approach in commons yet.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-12.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.12.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The original cookie specification was <fo:wrapper id="jakartackbk-CHP-11-ITERM-3305"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3306"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3307"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3308"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3309"><!----></fo:wrapper>written by Netscape, and it can be
found at <fo:inline font-family="monospace" font-size="0.8em">http://wp.netscape.com/newsref/std/cookie_spec.html</fo:inline>.
RFC 2109 (HTTP State Management Mechanism) is available at
<fo:inline font-family="monospace" font-size="0.8em">http://www.zvon.org/tmRFC/RFC2109/Output/</fo:inline>,
and the newer RFC 2965 (HTTP State Management Mechanism) can be found
at <fo:inline font-family="monospace" font-size="0.8em">http://www.zvon.org/tmRFC/RFC2965/Output/</fo:inline>.
Currently, HttpClient does not support the RFC 2965 standard.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-13"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Handling Redirects</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.13. Handling Redirects</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-13.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.13.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to access a server that<fo:wrapper id="jakartackbk-CHP-11-ITERM-3310"><!--Jakarta
HttpClient, redirects--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3311"><!--redirects, Jakarta
HttpClient--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3312"><!--clients, Jakarta
HttpClient, redirects--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3313"><!--sending, redirects--></fo:wrapper>
may send an arbitrary number of redirects.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-13.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.13.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Before executing an <fo:inline font-family="monospace" font-size="0.8em">HttpMethod</fo:inline> call,
<fo:inline font-family="monospace" font-size="0.8em">setFollowRedirects(true)</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3314"><!--setFollowRedirects(
) method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3315"><!--methods, setFollowRedirects(
)--></fo:wrapper> on the method;
<fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> will take care of following any
redirects a server may return in a response. The following example
shows what happens when a method requests a CGI script that returns a
<fo:inline font-family="monospace" font-size="0.8em">302</fo:inline> (moved temporarily) response code:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt467">
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpClient;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpException;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpMethod;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.methods.GetMethod;

HttpClient client = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> HttpClient( );
String url = "http://www.discursive.com/cgi-bin/jccook/redirect.cgi";
    
System.out.println( "Executing Method not following redirects: ");        
HttpMethod method = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> GetMethod( url );
method.setFollowRedirects( <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">false</fo:inline> );
executeMethod(client, method);

System.out.println( "Executing Method following redirects: ");        
method = new GetMethod( url );
method.setFollowRedirects( <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">true</fo:inline> );
executeMethod(client, method);

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">private</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">static</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">void</fo:inline> executeMethod(HttpClient client, HttpMethod method)
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    throws</fo:inline> IOException, HttpException {
    client.executeMethod( method );
    System.out.println( "Response Code: " + method.getStatusCode( ) );
    String response = method.getResponseBodyAsString( );
    System.out.println( response );
    method.releaseConnection( );
    method.recycle( );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example executes two <fo:inline font-family="monospace" font-size="0.8em">GetMethod</fo:inline> instances; the
first method is configured <fo:inline font-weight="bold">not</fo:inline> to
follow redirects, and the second is configured to follow redirects.
The first method is executed, and the server sends a
<fo:inline font-family="monospace" font-size="0.8em">302</fo:inline> response code. Since this method is not
configured to follow redirects, <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> does
not make another request. When the second method is executed,
<fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> follows the initial redirect to a
<fo:inline font-family="monospace" font-size="0.8em">redirect2.cgi</fo:inline> script, which sends another
redirect to <fo:inline font-family="monospace" font-size="0.8em">/jccook/index.html</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt468">Executing Method not following redirects: 
0    INFO  [main] org.apache.commons.httpclient.HttpMethodBase     - Redirect 
requested but followRedirects is disabled
Response Code: 302

Executing Method following redirects: 
Response Code: 200
&lt;html&gt;
 &lt;head&gt;
  &lt;title&gt;JCCook Example&lt;/title&gt;
 &lt;/head&gt;
 &lt;body&gt;
  &lt;h1&gt;Hello World!&lt;/h1&gt;
 &lt;/body&gt;
&lt;/html&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-13.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.13.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> can handle any of the following
<fo:wrapper id="jakartackbk-CHP-11-ITERM-3316"><!--response codes,
redirects--></fo:wrapper>response codes specifying a redirect:</fo:block><fo:list-block space-before.optimum="0em" space-before.minimum="0em" space-before.maximum="0em" space-after.optimum="0em" space-after.minimum="0em" space-after.maximum="0em" margin-left="1.0em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e33719"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e33720"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Status Code 302: <fo:inline font-family="monospace" font-size="0.8em">HttpStatus.SC_MOVED_TEMPORARILY</fo:inline>
                  </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e33726"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Status Code 301: <fo:inline font-family="monospace" font-size="0.8em">HttpStatus.SC_MOVED_PERMANENTLY</fo:inline>
                  </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e33732"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Status Code 303: <fo:inline font-family="monospace" font-size="0.8em">HttpStatus.SC_SEE_OTHER</fo:inline>
                  </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e33738"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Status Code 307: <fo:inline font-family="monospace" font-size="0.8em">HttpStatus.SC_TEMPORARY_REDIRECT</fo:inline>
                  </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">When a response code is retrieved, <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline>
sends another GET request for the resource specified in the
<fo:inline font-family="monospace" font-size="0.8em">Location</fo:inline> header. The following code is the first
request sent by a method configured
to<fo:wrapper id="jakartackbk-CHP-11-ITERM-3317"><!--configuration, redirects--></fo:wrapper>
follow redirects:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt469">GET /cgi-bin/jccook/redirect.cgi HTTP/1.1
User-Agent: Jakarta Commons-HttpClient/3.0final
Host: www.discursive.com</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The
<fo:inline font-family="monospace" font-size="0.8em">redirect.cgi</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3318"><!--scripts, redirect.cgi--></fo:wrapper>
script will then send a <fo:inline font-family="monospace" font-size="0.8em">302 Moved</fo:inline> response,
supplying a <fo:inline font-family="monospace" font-size="0.8em">Location</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3319"><!--Location
headers--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3320"><!--headers, Location--></fo:wrapper>
header that points to <fo:inline font-family="monospace" font-size="0.8em">redirect2.cgi</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt470">HTTP/1.1 302 Moved
Date: Sat, 15 May 2004 19:30:49 GMT
Server: Apache/2.0.48 (Fedora)
Location: /cgi-bin/jccook/redirect2.cgi
Content-Length: 0
Content-Type: text/plain; charset=UTF-8</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> then sends another GET request for the
resource specified in the previous response:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt471">GET /cgi-bin/jccook/redirect2.cgi HTTP/1.1
User-Agent: Jakarta Commons-HttpClient/3.0final
Host: www.discursive.com</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">redirect2.cgi</fo:inline> is configured to send a
redirect for <fo:inline font-family="monospace" font-size="0.8em">/jccook/index.html</fo:inline>, and the
response to the previous request does just that:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt472">HTTP/1.1 302 Moved
Date: Sat, 15 May 2004 19:30:49 GMT
Server: Apache/2.0.48 (Fedora)
Location: /jccook/index.html
Content-Length: 0
Content-Type: text/plain; charset=UTF-8</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">How <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> handles redirect responses can be
further customized by three configurable parameters on
<fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline>.
<fo:inline font-family="monospace" font-size="0.8em">REJECT_RELATIVE_REDIRECT</fo:inline> causes
<fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> to throw an exception if a server sends
a <fo:inline font-family="monospace" font-size="0.8em">Location</fo:inline> header with a relative URL; for
instance, if the <fo:inline font-family="monospace" font-size="0.8em">redirect.cgi</fo:inline> script returns a
<fo:inline font-family="monospace" font-size="0.8em">Location</fo:inline> header of
<fo:inline font-family="monospace" font-size="0.8em">../index.html</fo:inline>, the redirection causes an
exception if <fo:inline font-family="monospace" font-size="0.8em">REJECT_RELATIVE_REDIRECT</fo:inline> is set to
<fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>. If
<fo:inline font-family="monospace" font-size="0.8em">ALLOW_CIRCULAR_REDIRECTS</fo:inline> is set to
<fo:inline font-family="monospace" font-size="0.8em">true</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> throws an
exception if a series of redirects includes the same resources more
than once. <fo:inline font-family="monospace" font-size="0.8em">MAX_REDIRECTS</fo:inline> allows you to specify a
maximum number of redirects to follow. The following example sets all
three parameters on an instance of
<fo:inline font-family="monospace" font-size="0.8em">HttpClientParams</fo:inline> associated with an instance of
<fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt473">HttpClient client = new HttpClient( );
HttpClientParams params = client.getParams( );

params.setBooleanParameter( HttpClientParams.REJECT_RELATIVE_REDIRECT, false );
params.setBooleanParameter( HttpClientParams.ALLOW_CIRCULAR_REDIRECTS, false );
params.setIntParameter( HttpClientParams.MAX_REDIRECTS, 10 );</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-13.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.13.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information on how <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3321"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3322"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3323"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3324"><!----></fo:wrapper> handles
redirection, take a look at the source for
the<fo:wrapper id="jakartackbk-CHP-11-ITERM-3325"><!--HttpMethodDirector--></fo:wrapper>
               <fo:inline font-family="monospace" font-size="0.8em">HttpMethodDirector</fo:inline>. The <fo:inline font-family="monospace" font-size="0.8em">isRedirectNeeded()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3326"><!--isRedirectNeeded( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3327"><!--methods, isRedirectNeeded(
)--></fo:wrapper> and <fo:inline font-family="monospace" font-size="0.8em">processRedirectResponse()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3328"><!--processRedirectResponse( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3329"><!--methods, processRedirectResponse(
)--></fo:wrapper> methods handle redirection, and the source
for this class can be viewed using ViewCVS (<fo:inline font-family="monospace" font-size="0.8em">http://cvs.apache.org/viewcvs.cgi/jakarta-commons/httpclient/src/java/</fo:inline>).
Navigate to the <fo:inline font-family="monospace" font-size="0.8em">org.apache.commons.httpclient</fo:inline>
package and click on <fo:inline font-family="monospace" font-size="0.8em">HttpMethodDirector</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-14"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">SSL</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.14. SSL</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-14.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.14.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to execute a <fo:wrapper id="jakartackbk-CHP-11-ITERM-3330"><!--Jakarta
HttpClient, SSL--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3331"><!--SSL (Secure Sockets Layer)--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3332"><!--clients, Jakarta
HttpClient, SSL--></fo:wrapper>method
using HTTP over <fo:wrapper id="jakartackbk-CHP-11-ITERM-3333"><!--Secure Sockets
Layer--></fo:wrapper>Secure Sockets Layer (SSL).</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-14.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.14.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you are working with a server that has a certificate signed by a
certificate authority included in the Java Secure Socket Extension
(JSSE), <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> automatically handles HTTP over
SSL; just use a URL that <fo:wrapper id="jakartackbk-CHP-11-ITERM-3334"><!--URLs (uniform resource
locators), SSL--></fo:wrapper>starts with
<fo:inline font-family="monospace" font-size="0.8em">https</fo:inline>. The following example retrieves
Amazon.com's sign-in page using HTTP over SSL:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt474">
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpClient;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpException;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpMethod;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.methods.GetMethod;

HttpClient client = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> HttpClient( );
String url = "https://www.amazon.com/gp/flex/sign-in.html";

HttpMethod method = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> GetMethod( url );
client.executeMethod( method );

String response = method.getResponseBodyAsString( );
System.out.println( response );

method.releaseConnection( );
method.recycle( );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example executes a simple <fo:inline font-family="monospace" font-size="0.8em">GetMethod</fo:inline>
constructed with a URL starting with <fo:inline font-family="monospace" font-size="0.8em">https</fo:inline>. The
output of this example is:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt475">0    WARN  [main] org.apache.commons.httpclient.HttpMethodBase     - Response 
content length is not known
297  WARN  [main] org.apache.commons.httpclient.HttpMethodBase     - Response 
content length is not known
&lt;html&gt;
&lt;head&gt;&lt;title&gt;Amazon.com Sign In&lt;/title&gt;
&lt;/head&gt;
.......... Content ..................
&lt;/html&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-14.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.14.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">HttpClient handles SSL automatically, if it can verify the
authenticity of a certificate against an authority; this is why this
recipe is so similar to <fo:basic-link internal-destination="jakartackbk-CHP-11-SECT-3" text-decoration="underline" color="blue">Recipe 11.3</fo:basic-link>. The
example in this recipe only works if you are dealing with a site that
has a certificate signed by a well-known authority. The Java Runtime
Environment (JRE) keeps track of the signatures of all the known
certificate authorities in a file named <fo:inline font-family="monospace" font-size="0.8em">cacerts</fo:inline>.
<fo:inline font-family="monospace" font-size="0.8em">cacerts</fo:inline> can be found in
<fo:inline font-family="monospace" font-size="0.8em">${JAVA_HOME}/jre/lib/security/cacerts</fo:inline>; it is an
archive that has a default password of <fo:inline font-family="monospace" font-size="0.8em">changeit</fo:inline>.
For a list of certificate authorities in Java, execute the following
command line and supply the default password:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt476">keytool -list -keystore C:\j2sdk1.4.2_04\jre\lib\security\cacerts</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The list will contain certificate fingerprints for Thawte, Entrust,
Verisign, and other commercial certificate authorities. If you wish
to use the JSSE without having to write your own
<fo:inline font-family="monospace" font-size="0.8em">ProtocolSocketFactory</fo:inline>, you need to obtain a
certificate signed by an authority.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-14.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.14.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you need to work with a self-signed certificate, see the next
recipe.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-15"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Accepting a Self-Signed Certificate</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.15. Accepting a Self-Signed Certificate</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-15.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.15.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to work with a server <fo:wrapper id="jakartackbk-CHP-11-ITERM-3335"><!--Jakarta
HttpClient, self-signed
certificates--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3336"><!--self-signed
certificates--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3337"><!--clients, Jakarta
HttpClient, self-signed
certificates--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3338"><!--certificates,
self-signed--></fo:wrapper>that is using a self-signed
certificate.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-15.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.15.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Provide a custom
<fo:inline font-family="monospace" font-size="0.8em">SSLProtocolSocketFactory</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3339"><!--SSLProtocolSocketFactory--></fo:wrapper>
that is configured to trust your self-signed certificate. A sample
implementation of <fo:inline font-family="monospace" font-size="0.8em">SSLProtocolSocketFactory</fo:inline> named
<fo:inline font-family="monospace" font-size="0.8em">EasySSLProtocolSocketFactory</fo:inline> is available via
HttpClient's CVS repository, and the following
example uses it to trust a self-signed certificate:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt477">
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpClient;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpException;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpMethod;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.contrib.ssl.EasySSLProtocolSocketFactory;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.methods.GetMethod;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.protocol.Protocol;

HttpClient client = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> HttpClient( );
String url = "https://pericles.symbiont.net/jccook";
        
ProtocolSocketFactory socketFactory =
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">    new</fo:inline> EasySSLProtocolSocketFactory( );
Protocol https = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> Protocol( "https", socketFactory, 443);
Protocol.registerProtocol( "https", https );
        
HttpMethod method = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> GetMethod( url );
client.executeMethod( method );
String response = method.getResponseBodyAsString( );
System.out.println( response );
method.releaseConnection( );
method.recycle( );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This executes and accepts the self-signed certificate from
<fo:inline font-family="monospace" font-size="0.8em">pericles.symbiont.net</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt478">Word up, this page was served using SSL!</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-15.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.15.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">EasySSLProtocolSocketFactory</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">EasyX509TrustManager</fo:inline> can be obtained from
HttpClient's CVS in the
<fo:inline font-family="monospace" font-size="0.8em">src/contrib</fo:inline> directory. If you do not want to
checkout the source code from CVS, you can also obtain these two
classes from ViewCVS on <fo:inline font-family="monospace" font-size="0.8em">cvs.apache.org</fo:inline>.
HttpClient's CVS repository can be accessed at
<fo:inline font-family="monospace" font-size="0.8em">http://cvs.apache.org/viewcvs.cgi/jakarta-commons/httpclient/</fo:inline>,
and the two classes are in the
<fo:inline font-family="monospace" font-size="0.8em">src/contrib/org/apache/commons/httpclient/contrib/ssl</fo:inline>
directory. To use these classes, you must integrate them into your
own project, customizing the behavior of these classes as you see
fit.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">EasySSLProtocolSocketFactory</fo:inline> uses the
<fo:inline font-family="monospace" font-size="0.8em">EasyX509TrustManager</fo:inline> to validate a certificate. To
customize the criteria for certificate acceptance and alter the
implementation of <fo:inline font-family="monospace" font-size="0.8em">EasyX509TrustManager</fo:inline>. For
example, if you only want to accept a certificate from a specific
hostname, change the implementation of the <fo:inline font-family="monospace" font-size="0.8em">isServerTrusted()</fo:inline> method in <fo:inline font-family="monospace" font-size="0.8em">EasyX509TrustManager</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-15.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.15.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In the same package as
<fo:inline font-family="monospace" font-size="0.8em">EasySSLProtocolSocketFactory</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">EasyX509TrustManager</fo:inline> is an implementation of
<fo:inline font-family="monospace" font-size="0.8em">SSLProtocolSocketFactory</fo:inline> named
<fo:inline font-family="monospace" font-size="0.8em">StrictSSLProtocolSocketFactory</fo:inline>, which makes sure
that the hostname of the SSL server matches the hostname of the SSL
certificate. For more information, go to
HttpClient's CVS repository (<fo:inline font-family="monospace" font-size="0.8em">http://cvs.apache.org/viewcvs.cgi/jakarta-commons/httpclient/</fo:inline>)
and download <fo:inline font-family="monospace" font-size="0.8em">StrictSSLProtocolSocketFactory</fo:inline> from
this
<fo:inline font-family="monospace" font-size="0.8em">src/contrib/org/apache/commons/httpclient/contrib/ssl</fo:inline>
directory.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-16"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Obtaining Jakarta Slide</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.16. Obtaining Jakarta Slide</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-16.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.16.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to use Jakarta Slide to access a Web-based Distributed
Authoring and Versioning
(<fo:wrapper id="jakartackbk-CHP-11-ITERM-3340"><!--WebDav, Jakarta Slide,
downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3341"><!--downloading, Jakarta
Slide--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3342"><!--Jakarta Slide,
downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3343"><!--clients, WebDav--></fo:wrapper>WebDAV)
resource.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-16.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.16.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Download the Jakarta Slide 2.0 WebDAV client, and place
<fo:wrapper id="jakartackbk-CHP-11-ITERM-3344"><!--Slide--></fo:wrapper>the appropriate JAR<fo:inline font-family="monospace" font-size="0.8em">
</fo:inline>files<fo:inline font-family="monospace" font-size="0.8em"> </fo:inline>in your
project's classpath. Following the steps outlined in
<fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1" text-decoration="underline" color="blue">Recipe 1.1</fo:basic-link>, download Jakarta Slide
2.0—<fo:inline font-family="monospace" font-size="0.8em">2.0 client zip—</fo:inline>instead of
Commons Lang.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Jakarta Slide 2.0 WebDAV client depends on Jakarta Commons Logging
and Jakarta HttpClient. These dependencies are included in the binary
distribution, and once you unpack the archive, they should be
available in the <fo:inline font-family="monospace" font-size="0.8em">lib</fo:inline> directory. The archive
<fo:inline font-family="monospace" font-size="0.8em">jakarta-slide-webdavclient-bin-2.0.zip</fo:inline> will
contain a JAR file named
<fo:inline font-family="monospace" font-size="0.8em">jakarta-slide-webdavclient-2.0.jar</fo:inline>; add this JAR
and the dependencies to your classpath, and you will be ready to use
Jakarta Slide to access WebDAV resources.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-16.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.16.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">WebDAV, defined in RFC 2518, is an extension of HTTP/1.1, which
supports distributed and collaborative authoring of content. Using a
WebDAV client you can read, modify, copy, move, lock, and unlock
resources, and you can read, enumerate, and modify properties
associated with resources and collections of resources. Resources
made available with WebDAV can be mounted as filesystems in Windows
XP/2000, Mac OS X, and Linux, and the DAV protocol can be thought of
as defining a filesystem built on top of HTTP/1.1. The WebDAV
protocol is at the core of a number of distributed version control
and content management systems.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Jakarta Slide extends Jakarta HttpClient implementing
<fo:inline font-family="monospace" font-size="0.8em">HttpMethod</fo:inline> for the methods introduced by the
WebDAV protocol. For example, the <fo:inline font-family="monospace" font-size="0.8em">LockMethod</fo:inline> in
the <fo:inline font-family="monospace" font-size="0.8em">org.apache.webdav.lib.methods</fo:inline> package is an
instance of <fo:inline font-family="monospace" font-size="0.8em">HttpMethod</fo:inline> from Jakarta HttpClient,
and just as WebDAV is an extension of HTTP/1.1, Jakarta Slide is an
extension of Jakarta HttpClient. When dealing with authentication,
cookie management, or redirects, you can configure Jakarta Slide the
same way you would configure Jakarta HttpClient; to use Slide, you
must create an instance of <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline>.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-16.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.16.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about the Jakarta Slide project, see the project
page at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/slide</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">It is far beyond the scope of this book to fully describe WebDAV, and
attempting to do so in one or two recipes would not do it justice.
WebDAV, like the protocol it extends, has the potential to transform
the way people think about content creation, file sharing, and
version control. To learn more about WebDAV, see the following
resources:</fo:block><fo:list-block space-before.optimum="0em" space-before.minimum="0em" space-before.maximum="0em" space-after.optimum="0em" space-after.minimum="0em" space-after.maximum="0em" margin-left="1.0em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e34279"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e34280"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>RFC 2518 (HTTP Extensions for Distributed Authoring—WEBDAV) at
<fo:inline font-family="monospace" font-size="0.8em">http://www.zvon.org/tmRFC/RFC2518/Output/index.html</fo:inline>.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e34286"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                     <fo:inline font-family="monospace" font-size="0.8em">http://www.webdav.org</fo:inline> is a hub
for the WebDAV community. If you are interested in learning about
WebDAV and a number of related specifications, see <fo:inline font-family="monospace" font-size="0.8em">http://www.webdav.org/specs/</fo:inline>. For a list of
software products that support WebDAV, see <fo:inline font-family="monospace" font-size="0.8em">http://www.webdav.org/projects/</fo:inline>.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e34298"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Subversion is a great replacement for CVS from the Tigris community.
You can configure Apache 2.0 to expose a Subversion repository via
the WebDAV/DeltaV protocol using mod_dav_svn. For more information
about Subversion and mod_dav_svn, see <fo:inline font-family="monospace" font-size="0.8em">http://subversion.tigris.org</fo:inline> or
<fo:inline font-style="italic">Version Control with Subversion</fo:inline>
by Ben Collins-Sussman, Brian W. Fitzpatrick, and C.
Michael Pilato (O'Reilly).</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you would like to set up your own WebDAV resource, I recommend
installing the Apache HTTP Server with mod_dav. More information
about installing "The Number One HTTP Server on the
Internet" can be found at <fo:inline font-family="monospace" font-size="0.8em">http://httpd.apache.org/</fo:inline>. Information about
configuring mod_dav can be found at <fo:inline font-family="monospace" font-size="0.8em">http://httpd.apache.org/docs-2.0/mod/mod_dav.html</fo:inline>.
The Jakarta Tomcat 5.0 distribution is bundled with a web application
that exposes a resource using a WebDAV servlet. To download and
install Jakarta Tomcat 5.0, see <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/tomcat/</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-17"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Connecting to WebDAV Resources</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.17. Connecting to WebDAV Resources</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-17.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.17.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to connect to a <fo:wrapper id="jakartackbk-CHP-11-ITERM-3345"><!--WebDav, connections--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3346"><!--connections, WebDav--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3347"><!--resources, WebDav, connections--></fo:wrapper>WebDAV
resource and list the contents of a collection. As with most WebDAV
resources, you need to supply
<fo:wrapper id="jakartackbk-CHP-11-ITERM-3348"><!--authentication, WebDav--></fo:wrapper>authentication
information.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-17.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.17.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Create an instance of <fo:inline font-family="monospace" font-size="0.8em">WebdavResource</fo:inline>, passing in a
URL and a <fo:inline font-family="monospace" font-size="0.8em">UsernamePasswordCredential</fo:inline> object. List
the contents of a WebDAV collection by calling the
<fo:inline font-family="monospace" font-size="0.8em">listWebdavResources()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3349"><!--listWebdavResources( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3350"><!--methods, listWebdavResources(
)--></fo:wrapper> method. The following example demonstrates
the use of <fo:inline font-family="monospace" font-size="0.8em">WebdavResource</fo:inline> to list the contents of
a WebDAV collection:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt479">
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.Credentials;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpClient;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpException;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.UsernamePasswordCredentials;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.lang.StringUtils;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.lang.time.FastDateFormat;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.webdav.lib.WebdavResource;

HttpClient client = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> HttpClient( );

String url = "http://www.discursive.com/jccook/dav/";
Credentials credentials =
    <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> UsernamePasswordCredentials("davuser", "davpass");

// List resources in top directory
WebdavResource resource = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> WebdavResource(url, credentials);
WebdavResource[] resources = resource.listWebdavResources( );
System.out.println( "type  name           size    type" +
                    "                   modified");
System.out.println( "-----------------------------------------" +
                    "---------------------------");
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">for</fo:inline>( <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">int</fo:inline> i = 0; i &lt; resources.length; i++ )    {
    WebdavResource item = resources[i];
    String type;
    <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">if</fo:inline>( item.isCollection( ) ) {
        type = "dir";
    } <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">else</fo:inline> {
        type = "file";
    }
    System.out.print( StringUtils.rightPad( type, 6 ) );
    System.out.print( StringUtils.rightPad( item.getName( ), 15 ) );
    System.out.print( StringUtils.rightPad( item.getGetContentLength( ) 
    + "", 8 ) );
    System.out.print( StringUtils.rightPad( item.getGetContentType( ), 
    23 ) );
    Date lastMod = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> Date( item.getGetLastModified( ) );
    System.out.print( 
        StringUtils.rightPad( 
            FastDateFormat.getInstance( ).format( lastMod ), 25 ));
    System.out.print( "\n" );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The program connects to a WebDAV resource using the credentials
supplied to the constructor of <fo:inline font-family="monospace" font-size="0.8em">WebdavResource</fo:inline>. It
lists the contents of a collection and produces the following output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt480">type  name           size    type                   modified
---------------------------------------------------------------------
file  test.html      14      text/html              5/6/04 12:16 AM          
file  index.html     14      text/html              5/5/04 11:59 PM          
dir   test           0       httpd/unix-directory   5/6/04 12:01 AM</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-17.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.17.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Jakarta Slide is built on top of Jakarta HttpClient, but you will
notice that this recipe did not involve the execution of an
<fo:inline font-family="monospace" font-size="0.8em">HttpMethod</fo:inline>. This is because
<fo:inline font-family="monospace" font-size="0.8em">WebdavResource</fo:inline> manages the complexity of working
with an instance of <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> behind the scenes.
The only trace of <fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> is the
<fo:inline font-family="monospace" font-size="0.8em">UsernamePasswordCredentials</fo:inline> object that is passed
to the constructor of <fo:inline font-family="monospace" font-size="0.8em">WebdavResource</fo:inline>. Because
Jakarta Slide is built on top of Jakarta HttpClient, almost any
feature of Jakarta HttpClient translates directly to Jakarta Slide.
If you need to access a WebDAV repository over SSL with a self-signed
certificate, or if you need to alter the cookie policy, you can use
<fo:wrapper id="jakartackbk-CHP-11-ITERM-3351"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3352"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3353"><!----></fo:wrapper>the
same facilities that are available to you when you are using
<fo:inline font-family="monospace" font-size="0.8em">HttpClient</fo:inline> directly.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-18"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Modifying a WebDAV Resource</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.18. Modifying a WebDAV Resource</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-18.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.18.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to modify
a<fo:wrapper id="jakartackbk-CHP-11-ITERM-3354"><!--WebDav, modifying--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3355"><!--modifying WebDav--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3356"><!--resources, WebDav, modifying--></fo:wrapper>
WebDAV resource.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-18.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.18.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use the <fo:inline font-family="monospace" font-size="0.8em">putMethod( )</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3357"><!--putMethod(
) method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3358"><!--methods, putMethod(
)--></fo:wrapper> on <fo:inline font-family="monospace" font-size="0.8em">WebdavResource</fo:inline>, and
be sure to lock and unlock the resource before and after
modification. The following example demonstrates the use of
<fo:inline font-family="monospace" font-size="0.8em">lockMethod( )</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3359"><!--lockMethod( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3360"><!--methods, lockMethod(
)--></fo:wrapper>, <fo:inline font-family="monospace" font-size="0.8em">putMethod( )</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">unlockMethod( )</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3361"><!--unlockMethod( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-11-ITERM-3362"><!--methods, unlockMethod(
)--></fo:wrapper> to modify a resource:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_11_tt481">
               <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.Credentials;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpClient;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.HttpException;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.commons.httpclient.UsernamePasswordCredentials;
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">import</fo:inline> org.apache.webdav.lib.WebdavResource;

String url = "http://www.discursive.com/jccook/dav/test.html";
Credentials credentials =
    <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> UsernamePasswordCredentials("davuser", "davpass");

// List resources in top directory
WebdavResource resource = <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">new</fo:inline> WebdavResource(url, credentials);

// Lock the Resource for 100 seconds
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">boolean</fo:inline> locked = resource.lockMethod( "tobrien", 100 );

<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">if</fo:inline>( locked ) {
    <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">try</fo:inline> {
        // Read content as a String
        String resourceData = resource.getMethodDataAsString( );
        
        // Modify a resource
        System.out.println( "*** Modifying Resource");
        resourceData = resourceData.replaceAll( "test", "modified test" );
        resource.putMethod( resourceData );
    } <fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">finally</fo:inline> {
        // Unlock the resource
        resource.unlockMethod( );
    }
}
        
// Close the resource    
resource.close( );</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-18.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.18.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">lockMethod( )</fo:inline> accepts an owner and a timeout; the
owner is the owner of the lock, and the timeout is the timeout of the
lock in number of seconds. When locking a resource, the
<fo:inline font-family="monospace" font-size="0.8em">lockMethod( )</fo:inline> will return a
<fo:inline font-family="monospace" font-size="0.8em">boolean</fo:inline> value: <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> if the lock
was granted and <fo:inline font-family="monospace" font-size="0.8em">false</fo:inline> if the lock was not granted.
The <fo:inline font-family="monospace" font-size="0.8em">resource.putMethod( )</fo:inline> was called with a
<fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> object, but it can also be invoked when a
<fo:inline font-family="monospace" font-size="0.8em">byte[]</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">InputStream</fo:inline>, or
<fo:inline font-family="monospace" font-size="0.8em">File</fo:inline>. <fo:inline font-family="monospace" font-size="0.8em">putMethod( )</fo:inline> returns a
<fo:inline font-family="monospace" font-size="0.8em">boolean</fo:inline> value: <fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> if the put
was successful; otherwise, <fo:inline font-family="monospace" font-size="0.8em">false</fo:inline>. The
<fo:inline font-family="monospace" font-size="0.8em">unlockMethod( )</fo:inline> unlocks the resource and makes it
available for other clients to lock, modify, and unlock.</fo:block></fo:block><fo:block id="jakartackbk-CHP-11-SECT-18.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">11.18.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Section 7 of RFC 2518 (HTTP Extensions for Distributed
Authoring—WEBDAV) discusses the various types of write locks
available in WebDAV. This RFC is available at <fo:inline font-family="monospace" font-size="0.8em">http://www.zvon.org/tmRFC/RFC2518/Output/chapter7.html</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The Slide recipes in this chapter are only meant as a brief
introduction to WebDAV. If you would like to learn more about how to
work with properties, create collections, and search a WebDAV
repository, please see the Jakarta Slide project page at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/slide</fo:inline>.</fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="false" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>Searching and Filtering</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>Searching and Filtering</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"/></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif" margin-left="0pc"/></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block id="jakartackbk-CHP-12"><fo:block font-family="serif"><fo:block margin-left="0pc"><fo:block text-align="left" font-weight="bold" font-size="21.6pt"><fo:block keep-with-next.within-column="always" space-before.optimum="12pt" space-before.minimum="12pt * 0.8" space-before.maximum="12pt * 1.2" hyphenate="false" text-align="left" start-indent="0pc" word-spacing="-0.1em" letter-spacing="-0.05em" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 12. Searching and Filtering</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="ch12-2-fm2xml"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Introduction</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.1. Introduction</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">XPath is a popular way to select nodes from an XML document. If you
are working with a single XML document or a series of XML documents
in an XML Database— such as Apache Xindice—XPath is used
to query, address, and filter XML content. Jakarta Commons JXPath
allows you to use an XPath query to address objects in a collection
or properties of a bean. JXPath is an unconventional application of
an XML standard to Java objects, which allows you to quickly select
objects from a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> without the need for an
<fo:inline font-family="monospace" font-size="0.8em">Iterator</fo:inline> and a comparison. For example, if you had
a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> of <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> objects with
an <fo:inline font-family="monospace" font-size="0.8em">age</fo:inline> property, you could select all of the
people older than 10 by passing the expression <fo:inline font-family="monospace" font-size="0.8em">/person[@age
&gt; 10]</fo:inline> to a <fo:inline font-family="monospace" font-size="0.8em">JXPathContext</fo:inline>. JXPath
implements a large subset of the XPath specification, and JXPath
expressions can be applied to a wide array of objects, beans,
Document Object Model (DOM) Documents, collections, and maps. This
chapter shows you how to use Commons JXPath to search and filter
objects in a collection.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A system will frequently need to search for and identify occurrences
of text in a large set of documents. To accomplish this, you will use
a tool, such as Jakarta Lucene, to create a searchable index of
terms. For example, if you've used an IDE, such as
Eclipse, you may find yourself searching for all of the occurrences
of the text "testVariable" in your
workspace. Eclipse can quickly perform any number of complex
searches, and when it does, it is using Jakarta Lucene to index and
search every file. Jakarta Lucene is a very efficient search engine
that can be used to search a set of documents for terms and phrases
and analyze the frequency of terms within a set of documents. Lucene
offers a complex query syntax, which allows for compound queries and
term matching using proximity and wildcards. This chapter combines
Lucene with Commons Digester to create a tool to search a set of XML
documents.</fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Obtaining Commons JXPath</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.1. Obtaining Commons JXPath</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-1.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.1.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to use Jakarta Commons <fo:wrapper id="jakartackbk-CHP-12-ITERM-3363"><!--Commons
JXPath, downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3364"><!--downloading, Commons
JXPath--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3365"><!--collections, Commons
JXPath, downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3366"><!--objects, Commons
JXPath, downloading--></fo:wrapper>JXPath
to select objects from a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> using XPath
syntax.</fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-1.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.1.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You must download the latest version of Commons JXPath, and place the
Commons JXPath JAR<fo:inline font-family="monospace" font-size="0.8em"> </fo:inline>in your
project's classpath. Following the steps outlined in
<fo:basic-link internal-destination="jakartackbk-CHP-1-SECT-1" text-decoration="underline" color="blue">Recipe 1.1</fo:basic-link>, download Commons JXPath 1.2
instead of Commons Lang.</fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-1.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.1.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Commons JXPath provides a mechanism<fo:wrapper id="jakartackbk-CHP-12-ITERM-3367"><!--XPath (XML
Path Language)--></fo:wrapper> for
evaluating<fo:wrapper id="jakartackbk-CHP-12-ITERM-3368"><!--XML Path
Language--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3369"><!--XPath (XML Path Language)--></fo:wrapper> XML Path Language
(XPath) expressions against objects and various data structures in
Java. This unconventional application of XPath to objects enables a
developer to traverse, address, and filter specific nodes or
locations in a complex object graph. This chapter details a few of
the ways in which JXPath can be used to search, select, and filter
objects.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you have a Maven project that needs to use Commons JXPath, add a
dependency on Commons JXPath 1.2 with the following section in
<fo:inline font-family="monospace" font-size="0.8em">project.xml</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt482">&lt;dependencies&gt;
  &lt;dependency&gt;
    &lt;id&gt;commons-jxpath&lt;/id&gt;
    &lt;version&gt;1.2&lt;/version&gt;
  &lt;/dependency&gt;
  ....other dependencies...
&lt;/dependencies&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-1.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.1.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about Commons JXPath, see the Commons JXPath
project page at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/jxpath</fo:inline>. For
more information about XPath, see the official W3C XPath
recommendation at <fo:inline font-family="monospace" font-size="0.8em">http://www.w3.org/TR/xpath</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Querying an Object Graph with XPath</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.2. Querying an Object Graph with XPath</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-2.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.2.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to retrieve nested bean<fo:wrapper id="jakartackbk-CHP-12-ITERM-3370"><!--Commons
JXPath, querying object
graphs--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3371"><!--collections, Commons
JXPath, querying object
graphs--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3372"><!--objects, Commons
JXPath, querying object
graphs--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3373"><!--queries, object
graphs--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3374"><!--graphs,
objects--></fo:wrapper> properties using an XPath expression.
You need to perform an XPath query on an object graph.</fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-2.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.2.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use Commons JXPath to evaluate an XPath expression against an object
graph. JXPath treats nested bean properties as if they were nested
elements in an XML document; using JXPath, the expression
<fo:inline font-family="monospace" font-size="0.8em">a/b/c</fo:inline> is the equivalent of
<fo:inline font-family="monospace" font-size="0.8em">getA( ).getB( ).getC( )</fo:inline>. Create a
<fo:inline font-family="monospace" font-size="0.8em">JXPathContext</fo:inline> by passing an object to
<fo:inline font-family="monospace" font-size="0.8em">JXPathContext.newContext( )</fo:inline>, and retrieve the
value of a nested property by passing an XPath expression to the
<fo:inline font-family="monospace" font-size="0.8em">getValue( )</fo:inline> method on
<fo:inline font-family="monospace" font-size="0.8em">JXPathContext</fo:inline>. The following example creates an
object graph rooted on a <fo:inline font-family="monospace" font-size="0.8em">League</fo:inline> object and
retrieves nested properties using two XPath expressions:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt483">import org.apache.commons.jxpath.JXPathContext;

// Create an Object graph
League league = new League( );

Team team = new Team( );
league.getTeams( ).add( team );
        
team.setCoach( new Person( "Coach Bob" ) );
team.getPlayers( ).add( new Person( "Player Charlie" );
team.getPlayers( ).add( new Person( "Player Ted" );
team.getPlayers( ).add( new Person( "Player Bart" );

Team team2 = new Team( );
league.getTeams( ).add( team2 );
        
team2.setCoach( new Person( "Coach Susan" );
team2.getPlayers( ).add( new Person( "Player Jim" );

// Query for the coach of a specific player.
JXPathContext context = JXPathContext.newContext( league );
System.out.println( "** Retrieve the first name of Ted's coach");
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">String xpath = "teams/players[firstName = 'Player Ted']/../coach/firstName";</fo:inline>
Object value = context.getValue( xpath );
System.out.println( value );

// Query for the players of a specific coach
context = JXPathContext.newContext( league );
System.out.println( "** Retrieve the players on Coach Susan's team");
<fo:inline font-family="monospace" font-size="0.8em" font-weight="bold">value = context.getValue( "teams/coach[firstName = 'Coach Susan']/../players" );</fo:inline>
System.out.println( value );</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example creates a <fo:inline font-family="monospace" font-size="0.8em">League</fo:inline> with two
<fo:inline font-family="monospace" font-size="0.8em">Team</fo:inline> objects stored in a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline>.
Each <fo:inline font-family="monospace" font-size="0.8em">Team</fo:inline> object has a <fo:inline font-family="monospace" font-size="0.8em">coach</fo:inline>
property of type <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline>, and a
<fo:inline font-family="monospace" font-size="0.8em">players</fo:inline> property, which is a
<fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> of <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> objects. A
<fo:inline font-family="monospace" font-size="0.8em">JXPathContext</fo:inline> is created by passing
<fo:inline font-family="monospace" font-size="0.8em">league</fo:inline> to <fo:inline font-family="monospace" font-size="0.8em">JXPathContext.newContext(
)</fo:inline>, and two XPath queries are executed by passing query
strings to <fo:inline font-family="monospace" font-size="0.8em">getValue( )</fo:inline>. The first XPath query
returns the <fo:inline font-family="monospace" font-size="0.8em">firstName</fo:inline> of Ted's
coach, and the second XPath query returns the
<fo:inline font-family="monospace" font-size="0.8em">players</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> of the team Susan
coaches. This example produces the following output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt484">Retrieve the first name of Ted's coach
Coach Bob
Retrieve the players on Coach Susan's team
[com.discursive.jccook.xml.jxpath.Person@173831b]</fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-2.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.2.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">XPath is generally used by select nodes in an XML document, and you
may have used it to transform XML with Extensible Stylesheet Language
Transformations (XSLT). In this example, XPath is used in a somewhat
unconventional manner as a query to filter and select objects based
on the values of deeply nested properties. The first
query—<fo:inline font-style="italic">teams/players[firstname =
`Player
Ted']/../coach/firstName</fo:inline>
               <fo:inline font-family="monospace" font-size="0.8em">—</fo:inline>is
evaluated using the <fo:inline font-family="monospace" font-size="0.8em">League</fo:inline> object as the current
node, and if one were to evaluate the XPath expressions
<fo:inline font-style="italic">self( )</fo:inline> or ., you would
retrieve the <fo:inline font-family="monospace" font-size="0.8em">League</fo:inline> object passed to
<fo:inline font-family="monospace" font-size="0.8em">newContext( )</fo:inline>. When the previous example retrieved
the first name of Ted's coach, JXPath iterated
through the <fo:inline font-family="monospace" font-size="0.8em">team</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline>, and
located the matching <fo:inline font-family="monospace" font-size="0.8em">Player</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">Coach</fo:inline> object. The execution of the first XPath
expression in the previous example is equivalent to the following
code, which iterates through the <fo:inline font-family="monospace" font-size="0.8em">Team</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">Player</fo:inline> lists:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt485">String firstName = null;

Iterator teamIterator = league.getTeams( ).iterator( );
while( teamIterator.hasNext( ) ) {
    Team team = (Team) teamIterator.next( );
    Iterator playerIterator = team.getPlayers( ).iterator( );
    while( playerIterator.hasNext( ) ) {
        Player player = (Player) playerIterator.next( );
        if( player.getFirstName( ).equals( "Player Ted" ) ) {
            firstName = team.getCoach( ).getFirstName( );
        }
    }
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The ability to filter a complex object graph with a simple expression
can help you avoid writing tedious code to iterate through doubly
nested collections to compare property values.</fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-2.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.2.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Commons JXPath can also be used to reference objects at a specific
index in a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> or an array, or objects by a known
key in a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>. <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-4" text-decoration="underline" color="blue">Recipe 12.4</fo:basic-link>
demonstrates how to use JXPath to reference items in a
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline>, and <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-3" text-decoration="underline" color="blue">Recipe 12.3</fo:basic-link>
demonstrates<fo:wrapper id="jakartackbk-CHP-12-ITERM-3375"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3376"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3377"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3378"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3379"><!----></fo:wrapper> the use of JXPath to reference an
item at a specific index in a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Search a Collection of Simple Objects</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.3. Search a Collection of Simple Objects</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-3.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.3.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to select objects<fo:wrapper id="jakartackbk-CHP-12-ITERM-3380"><!--Commons
JXPath, searching--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3381"><!--collections, Commons
JXPath, searching--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3382"><!--objects, Commons
JXPath, searching--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3383"><!--searching, objects--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3384"><!--predicates, searching--></fo:wrapper>
from a <fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> using XPath predicates.</fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-3.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.3.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use Jakarta Commons JXPath to select objects from a
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> using predicates in XPath expressions.
The <fo:inline font-family="monospace" font-size="0.8em">iterate( )</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3385"><!--iterate( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3386"><!--methods, iterate(
)--></fo:wrapper> method on <fo:inline font-family="monospace" font-size="0.8em">JXPathContext</fo:inline>
takes an XPath expression and returns an <fo:inline font-family="monospace" font-size="0.8em">Iterator</fo:inline>
that contains each node satisfying that expression. The following
example uses simple XPath predicates to select
<fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> objects from a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> by
age, first name, and position:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt486">import org.apache.commons.jxpath.JXPathContext;

// Create a List of Person objects
List people = new ArrayList( );
people.add(new Person("Ahmad", "Russell", 28 );
people.add(new Person("Tom", "Russell", 35 );
people.add(new Person("Ahmad", "Abuzayedeh", 33 );

// Select all people older than 30
System.out.println( "** People older than 30");
JXPathContext context = JXPathContext.newContext( people );
Iterator iterator = context.iterate(".[@age &gt; 30]");
printPeople(iterator);

// Select all people with a first name of 'Ahmad'
context = JXPathContext.newContext( people );
System.out.println( "** People with first name 'Ahmad'" );
iterator = context.iterate(".[@firstName = 'Ahmad']");
printPeople(iterator);

// Select the second person from the List
context = JXPathContext.newContext( people );
System.out.println( "** Third Person in List" );
Person p = (Person) context.getValue(".[2]");
System.out.println( "Person: " + p.getFirstName( ) + " " + p.getLastName( ) +
                    ", age: " + p.getAge( ) );

// A method to print out the result of each iteration.
private void printPeople(Iterator iterator) {
    while( iterator.hasNext( ) ) {
        Person p = (Person) iterator.next( );
        System.out.println( "Person: " + p.getFirstName( ) + 
            " " + p.getLastName( ) + ", age: " + p.getAge( ) );
    }
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A <fo:inline font-family="monospace" font-size="0.8em">JXPathContext</fo:inline> is created by passing a
<fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> to <fo:inline font-family="monospace" font-size="0.8em">newContext( )</fo:inline>, and each
expression is evaluated through a call to <fo:inline font-family="monospace" font-size="0.8em">context.iterate()</fo:inline>. Three expressions are evaluated, and the results of each
expression are printed in the <fo:inline font-family="monospace" font-size="0.8em">printPeople( )</fo:inline>
method:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt487">** People older than 30
Person: Tom Russell, age: 35
Person: Ahmad Abuzayedeh, age: 33

** People with first name 'Ahmad'
Person: Ahmad Russell, age: 28
Person: Ahmad Abuzayedeh, age: 33

** Second Person in List
Person: Tom Russell, age: 35</fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-3.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.3.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The final expression in the previous example is a reference to a
specific index in a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline>;
<fo:inline font-family="monospace" font-size="0.8em">.[2]</fo:inline> selected the second element in the
<fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> supplied to the
<fo:inline font-family="monospace" font-size="0.8em">JXPathContext</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3387"><!--JXPathContext--></fo:wrapper>.
Whenever an XPath expression deals with a property, which is a
<fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> or an array, a one-based index can be
supplied in brackets after the name of the property. If a
<fo:inline font-family="monospace" font-size="0.8em">League</fo:inline> object contains a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline>
of <fo:inline font-family="monospace" font-size="0.8em">Team</fo:inline> objects, and a <fo:inline font-family="monospace" font-size="0.8em">Team</fo:inline>
object contains a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> of
<fo:inline font-family="monospace" font-size="0.8em">Player</fo:inline> objects, the third
<fo:inline font-family="monospace" font-size="0.8em">Player</fo:inline> object of the fourteenth
<fo:inline font-family="monospace" font-size="0.8em">Team</fo:inline> can be selected by using the XPath expression
<fo:inline font-family="monospace" font-size="0.8em">league/teams[14]/players[3]</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In the previous example, which filtered a <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> of
<fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> objects, you might have noticed that the
properties <fo:inline font-family="monospace" font-size="0.8em">age</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">firstName</fo:inline>
are referenced as attributes in the XPath predicate expression. A
property can be referenced either as an element or an attribute. In
XPath terms, when JXPath resolves properties on an object, the
<fo:inline font-family="monospace" font-size="0.8em">child</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">attribute</fo:inline> axis
both reference properties. This means that the expressions
<fo:inline font-family="monospace" font-size="0.8em">.[@age &gt; 30]</fo:inline> and <fo:inline font-family="monospace" font-size="0.8em">.[age &gt;
30]</fo:inline> would return the same results, as
<fo:inline font-family="monospace" font-size="0.8em">age</fo:inline> can be addressed as a child element or
attribute of the current node.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">iterate( )</fo:inline> returns an <fo:inline font-family="monospace" font-size="0.8em">Iterator</fo:inline>
that lets you iterate over all nodes that satisfy the given XPath
query. <fo:inline font-family="monospace" font-size="0.8em">getValue( )</fo:inline> returns the first matching
result. In the previous example, <fo:inline font-family="monospace" font-size="0.8em">iterate( )</fo:inline>
retrieves two <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> objects with an
<fo:inline font-family="monospace" font-size="0.8em">age</fo:inline> property greater than 30. If the same
expression were evaluated with <fo:inline font-family="monospace" font-size="0.8em">getValue( )</fo:inline>, only
one <fo:inline font-family="monospace" font-size="0.8em">Person</fo:inline> object would have been returned: Tom
Russell. Use <fo:inline font-family="monospace" font-size="0.8em">iterate( )</fo:inline> when multiple nodes may
match an XPath expression.</fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-3.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.3.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-5" text-decoration="underline" color="blue">Chapter 5</fo:basic-link> demonstrates the use of Commons
<fo:wrapper id="jakartackbk-CHP-12-ITERM-3388"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3389"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3390"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3391"><!----></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3392"><!----></fo:wrapper>Collections'
<fo:inline font-family="monospace" font-size="0.8em">CollectionUtils</fo:inline> to select items in a
<fo:inline font-family="monospace" font-size="0.8em">Collection</fo:inline> that satisfy a
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline>. For more information about using
<fo:inline font-family="monospace" font-size="0.8em">Predicate</fo:inline> objects to filter collections, refer to
<fo:basic-link internal-destination="jakartackbk-CHP-5-SECT-4" text-decoration="underline" color="blue">Recipe 5.4</fo:basic-link>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Applying XPath Queries to Complex Object Graphs</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.4. Applying XPath Queries to Complex Object Graphs</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-4.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.4.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to use XPath expressions to<fo:wrapper id="jakartackbk-CHP-12-ITERM-3393"><!--Commons
JXPath, applying object
graphs--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3394"><!--collections, Commons
JXPath, applying object
graphs--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3395"><!--objects, Commons
JXPath, applying object
graphs--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3396"><!--applying XPath to object
graphs--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3397"><!--graphs,
objects--></fo:wrapper> select objects from a complex object
graph referencing the contents of a <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> and using
expressions with variable references.</fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-4.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.4.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use Jakarta Commons JXPath to select objects from a collection using
XPath queries. The following example uses Commons Digester to parse
an XML file into an object graph, and selects
<fo:inline font-family="monospace" font-size="0.8em">Planet</fo:inline> objects with a radius greater than 5000:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt488">import org.apache.commons.digester.Digester;
import org.apache.commons.digester.xmlrules.DigesterLoader;
import org.apache.commons.jxpath.JXPathContext;

List planets = new ArrayList( );

// Parse Planet XML into a List of Planet objects
InputStream input = getClass( ).getResourceAsStream("./planets.xml");
URL rules = getClass( ).getResource("./planet-digester-rules.xml");
Digester digester = DigesterLoader.createDigester(rules);
digester.push(planets);
digester.parse( input );

// Select all planets with a radius greater than 5000
System.out.println( "Planet Name where radius &gt; 5000");
JXPathContext context = JXPathContext.newContext( planets );
Iterator iterator = context.iterate(".[@radius &gt; 5000]/name");
while( iterator.hasNext( ) ) {
    Object o  = (Object) iterator.next( );
    System.out.println( "Object: " + o);
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">Planet</fo:inline> objects are filtered and the names of
planets with sufficient radii are printed to the console:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt489">Planet Name where radius &gt; 5000
Object: Venus
Object: Saturn</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This object graph was created from an XML document that contains a
list of planets and their physical properties including mass, radius,
atmospheric composition, lunar population, and orbital distance and
period. Commons Digester (from <fo:basic-link internal-destination="jakartackbk-CHP-6" text-decoration="underline" color="blue">Chapter 6</fo:basic-link>) is
used to parse this XML document to a list of
<fo:inline font-family="monospace" font-size="0.8em">Planet</fo:inline> objects. The following XML document,
<fo:inline font-family="monospace" font-size="0.8em">planets.xml</fo:inline>, was parsed in the previous example:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt490">&lt;planets&gt;
    &lt;planet name="Venus" mass="4.869e+24" radius="6051.8"&gt;
        &lt;orbit distance="108200000" period="224.701"/&gt;
        &lt;atmosphere meanTemp="482" pressure="92"&gt;
            &lt;component symbol="CO2" percentage="96"/&gt;
            &lt;component symbol="N" percentage="3"/&gt;
            &lt;component symbol="Other" percentage="1"/&gt;
        &lt;/atmosphere&gt;
    &lt;/planet&gt;
    &lt;planet name="Mars" mass="6.421e+23" radius="3397.2"&gt;
        &lt;orbit distance="227940000" period="686.98"/&gt;
        &lt;atmosphere meanTemp="-63" pressure="0.007"&gt;
            &lt;component symbol="CO2" percentage="95.32"/&gt;
            &lt;component symbol="N2" percentage="2.7"/&gt;
            &lt;component symbol="Ar" percentage="1.6"/&gt;
        &lt;/atmosphere&gt;
        &lt;moon&gt;Phobos&lt;/moon&gt;
        &lt;moon&gt;Deimos&lt;/moon&gt;
    &lt;/planet&gt;
    &lt;planet name="Saturn" mass="5.688e+26" radius="60268"&gt;
        &lt;orbit distance="1429400000" period="29.458"/&gt;
        &lt;atmosphere meanTemp="-125" pressure="1.4"&gt;
            &lt;component symbol="H" percentage="97"/&gt;
            &lt;component symbol="He" percentage="3"/&gt;
        &lt;/atmosphere&gt;
        &lt;moon&gt;Pan&lt;/moon&gt;
        &lt;moon&gt;Atlas&lt;/moon&gt;
        &lt;moon&gt;Prometheus&lt;/moon&gt;
        &lt;moon&gt;Pandora&lt;/moon&gt;
    &lt;moon&gt;Epimetheus&lt;/moon&gt;
    &lt;moon&gt;Janus&lt;/moon&gt;
    &lt;moon&gt;Mimas&lt;/moon&gt;
  &lt;/planet&gt;
&lt;/planets&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">To parse this XML document, the following Digester rules are passed
to <fo:inline font-family="monospace" font-size="0.8em">DigesterLoader.createDigester()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3398"><!--createDigester( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3399"><!--methods, createDigester(
)--></fo:wrapper>. This digester rule-set creates a
<fo:inline font-family="monospace" font-size="0.8em">Planet</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">Orbit</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">Atmosphere</fo:inline> object for each planet.
<fo:inline font-family="monospace" font-size="0.8em">Moon</fo:inline> objects are created and added to
<fo:inline font-family="monospace" font-size="0.8em">Planet</fo:inline> objects using the <fo:inline font-family="monospace" font-size="0.8em">addMoon(
)</fo:inline> method on <fo:inline font-family="monospace" font-size="0.8em">Planet</fo:inline>. Individual compounds
in an atmosphere are added to an
<fo:inline font-family="monospace" font-size="0.8em">Atmosphere</fo:inline>'s
<fo:inline font-family="monospace" font-size="0.8em">component</fo:inline> 
               <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> using
<fo:inline font-family="monospace" font-size="0.8em">addComponent( )</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3400"><!--addComponent( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3401"><!--methods, addComponent(
)--></fo:wrapper>. The following XML document contains the
contents of the <fo:inline font-family="monospace" font-size="0.8em">planet-digester-rules.xml</fo:inline> file
used in the previous example:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt491">&lt;digester-rules&gt;
    &lt;pattern value="planets/planet"&gt;
        &lt;object-create-rule classname="Planet"/&gt;
        &lt;set-properties-rule/&gt;
        &lt;pattern value="orbit"&gt;
            &lt;object-create-rule classname=" Orbit"/&gt;
            &lt;set-properties-rule/&gt;
            &lt;set-next-rule methodname="setOrbit" paramtype=" Orbit"/&gt;
        &lt;/pattern&gt;
        &lt;pattern value="atmosphere"&gt;
            &lt;object-create-rule classname="Atmosphere"/&gt;
            &lt;set-properties-rule/&gt;
            &lt;pattern value="component"&gt;
                &lt;call-method-rule methodname="addComponent" paramcount="2"
                              paramtypes="java.lang.String,java.lang.Double"/&gt;
                &lt;call-param-rule attrname="symbol" paramnumber="0"/&gt;    
                &lt;call-param-rule attrname="percentage" paramnumber="1"/&gt;
            &lt;/pattern&gt;
            &lt;set-next-rule methodname="setAtmosphere"         
                           paramtype=" Atmosphere"/&gt;
        &lt;/pattern&gt;
        &lt;call-method-rule pattern="moon" methodname="addMoon" 
                          paramtypes="java.lang.String" paramcount="0"/&gt;    
        &lt;set-next-rule methodname="add" paramtype="java.lang.Object"/&gt;
    &lt;/pattern&gt;
&lt;/digester-rules&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-4.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.4.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">XPath expressions can be parameterized by referencing a variable
name: <fo:inline font-family="monospace" font-size="0.8em">$variable</fo:inline>. The following example
references a variable <fo:inline font-family="monospace" font-size="0.8em">$moonName</fo:inline>, which is
populated by calling <fo:inline font-family="monospace" font-size="0.8em">declareVariable( )</fo:inline> on
<fo:inline font-family="monospace" font-size="0.8em">context.getVariables( )</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt492">System.out.println( "Planet Name where a moon is named Deimos");
context.getVariables( ).declareVariable("moonName", "Deimos");
iterator = context.iterate("./moons[. = $moonName]/../name");
while( iterator.hasNext( ) ) {
    String name  = (String) iterator.next( );
    System.out.println( "Planet Namet: " + name);
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This example selects the name of a planet with a moon named
"Deimos." The results of the
previous example are printed below:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt493">Planet Name where a moon is named Deimos
Planet Namet: Mars</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">Planet.getAtmosphere( ).getComponents( )</fo:inline> returns a
<fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> with element symbols as keys. The following
example selects every planet with more than a 2% Helium atmosphere:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt494">System.out.println( "Planet where Helium percentage greater than 2");
iterator = context.iterate("./atmosphere/components/He[.&gt;2]/../../..");
while( iterator.hasNext( ) ) {
    Planet p  = (Planet) iterator.next( );
    System.out.println( "Planet: " + p.getName( ));
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">To select every planet with more than a 2% Helium atmosphere, the
XPath expression in the previous example references a specific key in
the components <fo:inline font-family="monospace" font-size="0.8em">Map</fo:inline> as if it were a nested element.
<fo:inline font-family="monospace" font-size="0.8em">components/He[.&gt;2]</fo:inline> will evaluate to
<fo:inline font-family="monospace" font-size="0.8em">true</fo:inline> if <fo:inline font-family="monospace" font-size="0.8em">getComponents(
).get("He")</fo:inline> is a number larger than 2. The previous code
determines that Saturn is the only one of these three planets with
more than 2% Helium:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt495">Planet where Helium percentage greater than 2
Planet: Saturn</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The following example prints a list of each moon and the
corresponding planet using a reference to a variable in an XPath
expression:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt496">System.out.println( "All of the Moon Names");
iterator = context.iterate("./moons");
while( iterator.hasNext( ) ) {
    String moon  = (String) iterator.next( );
    context.getVariables( ).declareVariable("moonName", moon);
    String planet = 
        (String) context.getValue("./moons[. = $moonName]/../name");
    System.out.println( "Moon: " + moon + ", \t\t\tPlanet: " + planet);
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The previous example shows that a <fo:inline font-family="monospace" font-size="0.8em">JXPathContext</fo:inline>
can be reused. This example iterates through each moon and finds the
name of the planet corresponding to each moon using the results of
the first expression to populate a variable in the second expression.
The XPath expression, <fo:inline font-family="monospace" font-size="0.8em">./moons[. =
$moonName]/../name</fo:inline>, contains a reference to the variable
<fo:inline font-family="monospace" font-size="0.8em">$moonName</fo:inline>, which is set by passing a variable name
and value to the <fo:inline font-family="monospace" font-size="0.8em">declareVariable(
)</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3402"><!--declareVariable( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3403"><!--methods, declareVariable(
)--></fo:wrapper> method on <fo:inline font-family="monospace" font-size="0.8em">JXPathContext</fo:inline>.
This example prints each moon and planet to the console as follows:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt497">All of the Moon Names
Moon: Phobos,          Planet: Mars
Moon: Deimos,          Planet: Mars
Moon: Pan,             Planet: Saturn
Moon: Atlas,           Planet: Saturn
Moon: Prometheus,      Planet: Saturn
Moon: Pandora,         Planet: Saturn
Moon: Epimetheus,      Planet: Saturn
Moon: Janus,           Planet: Saturn
Moon: Mimas,           Planet: Saturn</fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-4.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.4.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">There is much more to JXPath including object creation <fo:wrapper id="jakartackbk-CHP-12-ITERM-3404"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3405"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3406"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3407"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3408"><!----></fo:wrapper>and the ability
to set properties using XPath expressions; for more information about
using JXPath to access maps, collections, servlet contexts, and
DOM/JDOM Documents, see the JXPath User's Guide
(<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/commons/jxpath/users-guide.html</fo:inline>).</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-5"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Obtaining Jakarta Lucene</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.5. Obtaining Jakarta Lucene</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-5.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.5.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to use <fo:wrapper id="jakartackbk-CHP-12-ITERM-3409"><!--Jakarta
Lucene, downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3410"><!--downloading, Jakarta
Lucene--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3411"><!--indexes, Jakarta
Lucene, downloading--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3412"><!--documents, Jakarta
Lucene--></fo:wrapper>Jakarta Lucene to
<fo:wrapper id="jakartackbk-CHP-12-ITERM-3413"><!--Lucene--></fo:wrapper>create a searchable index of documents.</fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-5.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.5.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Download Jakarta Lucene 1.4 from <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/site/binindex.cgi</fo:inline>,
and uncompress the distribution archive. Place the <fo:inline font-family="monospace" font-size="0.8em">lucene-1.4-final.jar</fo:inline> file in your classpath.</fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-5.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.5.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Jakarta Lucene is a full-text
<fo:wrapper id="jakartackbk-CHP-12-ITERM-3414"><!--searching--></fo:wrapper>search engine that can be used to index
any information. Lucene maintains an index of
<fo:inline font-family="monospace" font-size="0.8em">Document</fo:inline> objects that can contain any number of
fields, and this index can be searched using a highly developed query
language.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you have a Maven project that needs to use Jakarta Lucene, add a
dependency on Jakarta Lucene 1.4 with the following section in
<fo:inline font-family="monospace" font-size="0.8em">project.xml</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt498">&lt;dependencies&gt;
  &lt;dependency&gt;
    &lt;id&gt;lucene&lt;/id&gt;
    &lt;version&gt;1.4&lt;/version&gt;
  &lt;/dependency&gt;
  ....other dependencies...
&lt;/dependencies&gt;</fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-5.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.5.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information on the Jakarta Lucene project, see the Jakarta
Lucene project page at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/lucene</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-6"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Creating an Index of XML Documents</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.6. Creating an Index of XML Documents</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-6.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.6.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to quickly search a <fo:wrapper id="jakartackbk-CHP-12-ITERM-3415"><!--Jakarta
Lucene, XML documents--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3416"><!--XML (Extensible Markup
Language), Jakarta Lucene--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3417"><!--indexes, Jakarta
Lucene, XML documents--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3418"><!--documents, XML, Jakarta
Lucene--></fo:wrapper>collection of XML documents, and, to do
this, you need to create an index of terms keeping track of the
context in which these terms appear.</fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-6.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.6.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use Jakarta Lucene and Jakarta Digester and create an index of Lucene
<fo:inline font-family="monospace" font-size="0.8em">Document</fo:inline> objects for the lowest level of
granularity you wish to search. For example, if you are attempting to
search for speeches in a Shakespeare play that contain specific
terms, create a Lucene <fo:inline font-family="monospace" font-size="0.8em">Document</fo:inline> object for each
speech. For the purposes of this recipe, assume that you are
attempting to index Shakespeare plays stored in the following XML
format:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt499">
&lt;?xml version="1.0"?&gt;


&lt;PLAY&gt;
  &lt;TITLE&gt;All's Well That Ends Well&lt;/TITLE&gt;

  &lt;ACT&gt;
    &lt;TITLE&gt;ACT I&lt;/TITLE&gt;

    &lt;SCENE&gt;
      &lt;TITLE&gt;SCENE I.  Rousillon. The COUNT's palace.&lt;/TITLE&gt;

      &lt;SPEECH&gt;
        &lt;SPEAKER&gt;COUNTESS&lt;/SPEAKER&gt;
        &lt;LINE&gt;In delivering my son from me, I bury a second husband.&lt;/LINE&gt;
      &lt;/SPEECH&gt;

      &lt;SPEECH&gt;
        &lt;SPEAKER&gt;BERTRAM&lt;/SPEAKER&gt;
        &lt;LINE&gt;And I in going, madam, weep o'er my father's death&lt;/LINE&gt;
        &lt;LINE&gt;anew: but I must attend his majesty's command, to&lt;/LINE&gt;
        &lt;LINE&gt;whom I am now in ward, evermore in subjection.&lt;/LINE&gt;
      &lt;/SPEECH&gt;
    &lt;/SCENE&gt;
  &lt;/ACT&gt;
&lt;/PLAY&gt;</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The following class creates a Lucene index of Shakespeare speeches,
reading XML files for each play in the
<fo:inline font-family="monospace" font-size="0.8em">./data/Shakespeare</fo:inline> directory, and calling the
<fo:inline font-family="monospace" font-size="0.8em">PlayIndexer</fo:inline> to create Lucene
<fo:inline font-family="monospace" font-size="0.8em">Document</fo:inline> objects for every speech. These
<fo:inline font-family="monospace" font-size="0.8em">Document</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3419"><!--Document
objects--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3420"><!--objects, Documents--></fo:wrapper>
objects are then written to a Lucene index using an
<fo:inline font-family="monospace" font-size="0.8em">IndexWriter</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt500">import java.io.File;
import java.io.FilenameFilter;

import org.apache.log4j.Logger;
import org.apache.lucene.analysis.standard.StandardAnalyzer;
import org.apache.lucene.index.IndexWriter;
import org.apache.oro.io.GlobFilenameFilter;

File dataDir = new File("./data/shakespeare");
logger.info( "Looking for XML files in " 

FilenameFilter xmlFilter = new GlobFilenameFilter( "*.xml" );
File[] xmlFiles = dataDir.listFiles( xmlFilter );

logger.info( "Creating Index");
IndexWriter writer = new IndexWriter("index", 
                                     new SimpleAnalyzer( ), true);
PlayIndexer playIndexer = new PlayIndexer( writer );
playIndexer.init( );

for (int i = 0; i &lt; xmlFiles.length; i++) {
    playIndexer.index(xmlFiles[i]);
}

writer.optimize( );
writer.close( );

logger.info( "Parsing Complete, Index Created");</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The <fo:inline font-family="monospace" font-size="0.8em">PlayIndexer</fo:inline> class, shown in <fo:basic-link internal-destination="jakartackbk-CHP-12-EX-1" text-decoration="underline" color="blue">Example 12-1</fo:basic-link>, parses each XML file and creates
<fo:inline font-family="monospace" font-size="0.8em">Document</fo:inline> objects that are written to an
<fo:inline font-family="monospace" font-size="0.8em">IndexWriter</fo:inline>. The
<fo:inline font-family="monospace" font-size="0.8em">PlayIndexer</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3421"><!--PlayIndexer--></fo:wrapper>
uses Commons Digester to create a Lucene <fo:inline font-family="monospace" font-size="0.8em">Document</fo:inline>
object for every speech. The <fo:inline font-family="monospace" font-size="0.8em">init( )</fo:inline> method
creates a <fo:inline font-family="monospace" font-size="0.8em">Digester</fo:inline> instance designed to interact
with an inner class, <fo:inline font-family="monospace" font-size="0.8em">DigestContext</fo:inline>, which keeps
track of the current context of a
speech—<fo:inline font-family="monospace" font-size="0.8em">play</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">act</fo:inline>,
<fo:inline font-family="monospace" font-size="0.8em">scene</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">speaker</fo:inline>—and the
textual contents of a <fo:inline font-family="monospace" font-size="0.8em">speech</fo:inline>. At the end of every
speech element, the <fo:inline font-family="monospace" font-size="0.8em">DigestContext</fo:inline> invokes the
<fo:inline font-family="monospace" font-size="0.8em">processSpeech( )</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3422"><!--processSpeech(
) method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3423"><!--methods, processSpeech(
)--></fo:wrapper> method that creates a Lucene
<fo:inline font-family="monospace" font-size="0.8em">Document</fo:inline> for each speech and writes this
<fo:inline font-family="monospace" font-size="0.8em">Document</fo:inline> to the
Lucene<fo:wrapper id="jakartackbk-CHP-12-ITERM-3424"><!--IndexWriter--></fo:wrapper>
               <fo:inline font-family="monospace" font-size="0.8em">IndexWriter</fo:inline>. Because each
<fo:inline font-family="monospace" font-size="0.8em">Document</fo:inline> is associated with the specific context
of a speech, it will be possible to obtain a specific location for
each term or phrase.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-12-EX-1"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 12-1. PlayIndexer using Commons Digester and Jakarta Lucene</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e35679">package com.discursive.jccook.xml.bardsearch;

import java.io.File;
import java.io.IOException;
import java.net.URL;

import org.apache.commons.digester.Digester;
import org.apache.commons.digester.xmlrules.DigesterLoader;
import org.apache.log4j.Logger;
import org.apache.lucene.document.Document;
import org.apache.lucene.document.Field;
import org.apache.lucene.index.IndexWriter;
import org.xml.sax.SAXException;

import com.discursive.jccook.util.LogInit;

public class PlayIndexer {

    private static Logger logger = 
        Logger.getLogger( PlayIndexer.class );
    static { LogInit.init( ); }

    private IndexWriter indexWriter;
    private Digester digester;
    private DigestContext context;

    public PlayIndexer(IndexWriter pIndexWriter) {
        indexWriter = pIndexWriter;
    }
    
    public void init( ) {
        URL playRules = 
            PlayIndexer.class.getResource("play-digester-rules.xml");
        digester = DigesterLoader.createDigester( playRules );
    }
        
    public void index(File playXml) throws IOException, SAXException {
        context = new DigestContext( );
        digester.push( context );
        digester.parse( playXml );
        logger.info( "Parsed: " + playXml.getAbsolutePath( ) );
    }
    
    public void processSpeech( ) {
        Document doc = new Document( );
        doc.add(Field.Text("play", context.playTitle));
        doc.add(Field.Text("act", context.actTitle));
        doc.add(Field.Text("scene", context.sceneTitle));
        doc.add(Field.Text("speaker", context.speaker));
        doc.add(Field.Text("speech", 
                           new StringReader( context.speech.toString( ) )));
        try {
            indexWriter.addDocument( doc );
        } catch( IOException ioe ) {
            logger.error( "Unable to add document to index", ioe);
        }
    }
    
    public class DigestContext {
        File playXmlFile;
        String playTitle, actTitle, sceneTitle, speaker;
        StringBuffer speech = new StringBuffer( );

        public void setActTitle(String string) { actTitle = string; }
        public void setPlayTitle(String string) { playTitle = string; }
        public void setSceneTitle(String string){ sceneTitle = string;}
        public void setSpeaker(String string) { speaker = string; }
        public void appendLine(String pLine) { speech.append( pLine ); }

        public void speechEnd( ) {
            processSpeech( );
            speech.delete( 0, speech.length( ) );
            speaker = "";
        }
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:basic-link internal-destination="jakartackbk-CHP-12-EX-1" text-decoration="underline" color="blue">Example 12-1</fo:basic-link> used a Digester rule set defined in
<fo:basic-link internal-destination="jakartackbk-CHP-12-EX-2" text-decoration="underline" color="blue">Example 12-2</fo:basic-link>. This set of rules is designed to invoke
a series of methods in a set sequence to populate the context
variables for each speech. The Digester rules in <fo:basic-link internal-destination="jakartackbk-CHP-12-EX-2" text-decoration="underline" color="blue">Example 12-2</fo:basic-link> never push or pop objects onto the digester
stack; instead, the Digester is being used to populate variables and
invoke methods on an object that creates Lucene
<fo:inline font-family="monospace" font-size="0.8em">Document</fo:inline> objects based on a set of context
variables. This example uses the Digester as a shorthand Simple API
for XML (SAX) parser; the <fo:inline font-family="monospace" font-size="0.8em">PlayIndexer</fo:inline> contains a
series of callback methods, and the Digester rule set simplifies the
interaction between the underlying SAX parser and the
<fo:inline font-family="monospace" font-size="0.8em">DigestContext</fo:inline>.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-12-EX-2"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 12-2. Digester rules for PlayIndexer</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e35704">&lt;?xml version="1.0"?&gt;

&lt;digester-rules&gt;
    &lt;pattern value="PLAY"&gt;
        &lt;bean-property-setter-rule pattern="TITLE"
                                   propertyname="playTitle"/&gt;
        &lt;pattern value="ACT"&gt;
            &lt;bean-property-setter-rule pattern="TITLE"
                                       propertyname="actTitle"/&gt;
               &lt;pattern value="PROLOGUE"&gt;
                &lt;bean-property-setter-rule pattern="TITLE"
                                           propertyname="sceneTitle"/&gt;
                &lt;pattern value="SPEECH"&gt;
                    &lt;bean-property-setter-rule pattern="SPEAKER"
                                               propertyname="speaker"/&gt;
                    &lt;call-method-rule pattern="LINE" 
                                      methodname="appendLine"
                                      paramtype="java.lang.String"
                                      paramcount="0"/&gt;
                    &lt;call-method-rule methodname="speechEnd"
                                      paramtype="java.lang.Object"/&gt;
                &lt;/pattern&gt;
            &lt;/pattern&gt;
            &lt;pattern value="SCENE"&gt;
                &lt;bean-property-setter-rule pattern="TITLE"
                                           propertyname="sceneTitle"/&gt;
                &lt;pattern value="SPEECH"&gt;
                    &lt;bean-property-setter-rule pattern="SPEAKER"
                                               propertyname="speaker"/&gt;
                    &lt;call-method-rule pattern="LINE"
                                      methodname="appendLine"
                                      paramtype="java.lang.String"
                                      paramcount="0"/&gt;
                    &lt;call-method-rule methodname="speechEnd"
                                      paramtype="java.lang.Object"/&gt;
                &lt;/pattern&gt;
               &lt;/pattern&gt;
        &lt;/pattern&gt;
    &lt;/pattern&gt;
&lt;/digester-rules&gt;</fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-6.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.6.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">In this recipe, an <fo:inline font-family="monospace" font-size="0.8em">IndexWriter</fo:inline> was created with a
<fo:inline font-family="monospace" font-size="0.8em">SimpleAnalyzer</fo:inline>. An <fo:inline font-family="monospace" font-size="0.8em">Analyzer</fo:inline>
takes a series of terms or tokens and creates the terms to be
indexed; different <fo:inline font-family="monospace" font-size="0.8em">Analyzer</fo:inline> implementations are
appropriate for different applications. A
<fo:inline font-family="monospace" font-size="0.8em">SimpleAnalyzer</fo:inline> will keep every term in a piece of
text, discarding nothing. A <fo:inline font-family="monospace" font-size="0.8em">StandardAnalyzer</fo:inline> is an
<fo:inline font-family="monospace" font-size="0.8em">Analyzer</fo:inline> that discards common English words with
little semantic value, such as
"the,"
"a,"
"an," and
"for." The
<fo:inline font-family="monospace" font-size="0.8em">StandardAnalyzer</fo:inline> maintains a list of terms to
discard—a <fo:inline font-family="monospace" font-size="0.8em">stop list</fo:inline>. Cutting down on the
number of terms indexed can save time and space in an index, but it
can also limit accuracy. For example, if one were to use the
<fo:inline font-family="monospace" font-size="0.8em">StandardAnalyzer</fo:inline> to index the play
<fo:inline font-style="italic">Hamlet</fo:inline>, a search for "to be or
not to be" would return zero results, because every
term in that phrase is a common English word on
<fo:inline font-family="monospace" font-size="0.8em">StandardAnalyzer</fo:inline>'s stop list. In
this recipe, a <fo:inline font-family="monospace" font-size="0.8em">SimpleAnalyzer</fo:inline> is used because it
keeps track of the occurrence of every term in a document.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">What you end up with after running this example is a directory named
<fo:inline font-family="monospace" font-size="0.8em">index</fo:inline>, which contains files used by Lucene to
associate terms with documents. In this example, a Lucene
<fo:inline font-family="monospace" font-size="0.8em">Document</fo:inline> consists of the contextual information
fully describing each
speech—"play,"
"act,"
"scene,"
"speaker," and
"speech." <fo:inline font-family="monospace" font-size="0.8em">Field</fo:inline>
objects are added to <fo:inline font-family="monospace" font-size="0.8em">Document</fo:inline> objects using
<fo:inline font-family="monospace" font-size="0.8em">Document</fo:inline>'s <fo:inline font-family="monospace" font-size="0.8em">addDoc()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3425"><!--addDoc( ) method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3426"><!--methods, addDoc(
)--></fo:wrapper> method. The <fo:inline font-family="monospace" font-size="0.8em">processSpeech()</fo:inline> method in <fo:inline font-family="monospace" font-size="0.8em">PlayIndexer</fo:inline> creates Lucene
<fo:inline font-family="monospace" font-size="0.8em">Document</fo:inline> objects that contain
<fo:inline font-family="monospace" font-size="0.8em">Field</fo:inline>s; <fo:inline font-family="monospace" font-size="0.8em">Field</fo:inline> objects are
created by calling <fo:inline font-family="monospace" font-size="0.8em">Text( )</fo:inline>, a static method on
<fo:inline font-family="monospace" font-size="0.8em">Field</fo:inline>. The first parameter to <fo:inline font-family="monospace" font-size="0.8em">Text(
)</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3427"><!--Text( ) method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3428"><!--methods, Text(
)--></fo:wrapper> is the name of the field, and the second
parameter is the content to be indexed. Passing a
<fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> as the second parameter to <fo:inline font-family="monospace" font-size="0.8em">Text()</fo:inline> instructs the <fo:inline font-family="monospace" font-size="0.8em">IndexWriter</fo:inline> to store the
content of a field in a Lucene index; a <fo:inline font-family="monospace" font-size="0.8em">Field</fo:inline>
created with a <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> can be displayed in a search
result. Passing a <fo:inline font-family="monospace" font-size="0.8em">Reader</fo:inline> as the second parameter
to <fo:inline font-family="monospace" font-size="0.8em">Text( )</fo:inline> instructs the
<fo:inline font-family="monospace" font-size="0.8em">IndexWriter</fo:inline> not to store the contents of a field,
and the contents of a field created with a <fo:inline font-family="monospace" font-size="0.8em">Reader</fo:inline>
               <fo:inline font-weight="bold">cannot</fo:inline> be returned in a search
result. In the previous example, the
"speech" field is created with a
<fo:inline font-family="monospace" font-size="0.8em">Reader</fo:inline> to reduce the size of the Lucene index, and
every other <fo:inline font-family="monospace" font-size="0.8em">Field</fo:inline> is created with a
<fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> so that our search results can provide a
speech's contextual coordinates.</fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-6.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.6.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Sure, you've created a Lucene index, but how would
you search it? The index created in this recipe can be searched with
Lucene using techniques described in <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-7" text-decoration="underline" color="blue">Recipe 12.7</fo:basic-link> and <fo:basic-link internal-destination="jakartackbk-CHP-12-SECT-8" text-decoration="underline" color="blue">Recipe 12.8</fo:basic-link>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">If you are indexing a huge database of English documents, consider
using the <fo:inline font-family="monospace" font-size="0.8em">StandardAnalyzer</fo:inline> to discard common
English words. If you are indexing documents written in German or
Russian, Lucene ships with <fo:inline font-family="monospace" font-size="0.8em">GermanAnalyzer</fo:inline> and
<fo:inline font-family="monospace" font-size="0.8em">RussianAnalyzer</fo:inline>, which both contain stop word
lists for these languages. For more information about these two
implementations of <fo:inline font-family="monospace" font-size="0.8em">Analyzer</fo:inline>, see the Lucene
JavaDoc at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/lucene/docs/api/index.html</fo:inline>.
Analyzer implementations for French, Dutch, Chinese, and Czech can be
found in the Lucene Sandbox (<fo:inline font-family="monospace" font-size="0.8em">http://cvs.apache.org/viewcvs/jakarta-lucene-sandbox/contributions/analyzers/</fo:inline>).</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">For more information about Jakarta Lucene, see the Lucene project web
site at <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/lucene</fo:inline>.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This recipe uses<fo:wrapper id="jakartackbk-CHP-12-ITERM-3429"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3430"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3431"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3432"><!----></fo:wrapper> the <fo:inline font-style="italic">The Plays of
Shakespeare</fo:inline>, compiled by Jon Bosak. To download the
complete works of Shakespeare in XML format, see <fo:inline font-family="monospace" font-size="0.8em">http://www.ibiblio.org/bosak/</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-7"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Searching for a Specific Term in a Document Index</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.7. Searching for a Specific Term in a Document Index</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-7.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.7.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to identify which documents in <fo:wrapper id="jakartackbk-CHP-12-ITERM-3433"><!--Jakarta
Lucene, specific searches--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3434"><!--specific searches, Jakarta
Lucene--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3435"><!--indexes, Jakarta
Lucene, specific searches--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3436"><!--documents, Jakarta
Lucene, specific searches--></fo:wrapper>a
Lucene index contain specific terms or phrases.</fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-7.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.7.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use an
<fo:wrapper id="jakartackbk-CHP-12-ITERM-3437"><!--IndexSearcher--></fo:wrapper>IndexSearcher
to search a Lucene index created with IndexWriter. This recipe
assumes that you have created a Lucene index using the techniques
shown in the previous recipe. The constructor of
<fo:inline font-family="monospace" font-size="0.8em">IndexSearcher</fo:inline> takes the name of a directory that
contains a Lucene index. A <fo:inline font-family="monospace" font-size="0.8em">Query</fo:inline> object can be
created by passing a <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline> query, a default
search field, and an <fo:inline font-family="monospace" font-size="0.8em">Analyzer</fo:inline> to
<fo:inline font-family="monospace" font-size="0.8em">QueryParser.parse()</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3438"><!--QueryParser.parse( )
method--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3439"><!--methods, QueryParser.parse(
)--></fo:wrapper>. The following example searches the
<fo:inline font-family="monospace" font-size="0.8em">Lucene</fo:inline> index created in the previous recipe for
all speeches containing the term
"Ophelia":</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt501">import org.apache.lucene.analysis.Analyzer;
import org.apache.lucene.analysis.SimpleAnalyzer;
import org.apache.lucene.document.Document;
import org.apache.lucene.queryParser.QueryParser;
import org.apache.lucene.search.Hits;
import org.apache.lucene.search.IndexSearcher;
import org.apache.lucene.search.Query;
import org.apache.lucene.search.Searcher;

logger.info("Searching for Ophelia");
Searcher searcher = new IndexSearcher("index");
Analyzer analyzer = new SimpleAnalyzer( );
Query query = QueryParser.parse("Ophelia", "speech", analyzer);
Hits hits = searcher.search(query);
logger.info( "Searching Done, hit: " + hits.length( ) );

System.out.println( "Score | Play | Act | Scene | Speaker" );
        
for( int i = 0; i &lt; hits.length( ); i++ ) {
    Document doc = hits.doc(i);
    System.out.print( (int) (hits.score(i) * 100 ) );
    System.out.print( " | " + doc.get("play") );
    System.out.print( " | " + doc.get("act") );
    System.out.print( " | " + doc.get("scene") );
    System.out.print( " | " + doc.get("speaker") + "\n" );
}</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">An <fo:inline font-family="monospace" font-size="0.8em">IndexSearcher</fo:inline> is created by passing in the name
of the directory containing the Lucene index to its constructor.
Next, an
<fo:inline font-family="monospace" font-size="0.8em">Analyzer</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3440"><!--Analyzers, creating--></fo:wrapper>
is created that will analyze the query <fo:inline font-family="monospace" font-size="0.8em">String</fo:inline>.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="jakartackbk-CHP-12-NOTE-75"><fo:list-block provisional-distance-between-starts="36pt + 18pt" provisional-label-separation="18pt"><fo:list-item><fo:list-item-label end-indent="label-end()"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="images/warning.png"/></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Warning</fo:block><fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">It is important at this stage to use the same
<fo:inline font-family="monospace" font-size="0.8em">Anaylzer</fo:inline> implementation that was used to create
the Lucene index to be searched, and, in this case, a
<fo:inline font-family="monospace" font-size="0.8em">SimpleAnalyzer</fo:inline> is used. If you use an
<fo:inline font-family="monospace" font-size="0.8em">Analyzer</fo:inline>, which discards the words
"to,"
"be,"
"or," and
"not," and then try to create a
<fo:inline font-family="monospace" font-size="0.8em">Query</fo:inline> for "to be or not to
be," you are not going to find the appropriate
speech in <fo:inline font-style="italic">Hamlet</fo:inline> because the
<fo:inline font-family="monospace" font-size="0.8em">Analyzer</fo:inline> you used to parse your query dropped
every term.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">
               <fo:inline font-family="monospace" font-size="0.8em">QueryParser</fo:inline> parses the query string and creates a
<fo:inline font-family="monospace" font-size="0.8em">Query</fo:inline> object that will search the
"speech" field of each
<fo:inline font-family="monospace" font-size="0.8em">Document</fo:inline> in the index. The example then calls
<fo:inline font-family="monospace" font-size="0.8em">searcher.search( )</fo:inline> and iterates through
<fo:inline font-family="monospace" font-size="0.8em">Document</fo:inline> objects contained in an instance of
<fo:inline font-family="monospace" font-size="0.8em">Hits</fo:inline>. <fo:inline font-family="monospace" font-size="0.8em">Hits</fo:inline> contains a
<fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> of <fo:inline font-family="monospace" font-size="0.8em">Document</fo:inline> objects and a
relevance score for each result; a relevance score is a number
between 1.00 and 0.00 that tells you how strongly a particular
<fo:inline font-family="monospace" font-size="0.8em">Document</fo:inline> matches a particular query. The more a
term occurs in a speech, the more relevant the speech is, and the
closer the relevance score is to 1. The previous example returns
every occurrence of the term
"Ophelia" in every Shakespeare
play, and, from the results, it is clear that Ophelia is a character
in <fo:inline font-style="italic">Hamlet</fo:inline>. Every occurrence of Ophelia is listed
with the relevance, play, act, scene, and speaker:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt502">1   INFO [main] TermSearch     - Searching for Ophelia
321 INFO [main] TermSearch     - Searching Done, hit: 19

Score | Play   | Act     | Scene     | Speaker
100   | Hamlet | ACT IV  | SCENE V   | QUEEN GERTRUDE
100   | Hamlet | ACT IV  | SCENE V   | KING CLAUDIUS
81    | Hamlet | ACT IV  | SCENE V   | QUEEN GERTRUDE
81    | Hamlet | ACT V   | SCENE I   | HAMLET
58    | Hamlet | ACT I   | SCENE III | LORD POLONIUS
58    | Hamlet | ACT II  | SCENE I   | LORD POLONIUS
50    | Hamlet | ACT I   | SCENE III | LAERTES
33    | Hamlet | ACT V   | SCENE I   | HAMLET
25    | Hamlet | ACT III | SCENE I   | QUEEN GERTRUDE
24    | Hamlet | ACT III | SCENE I   | LORD POLONIUS
22    | Hamlet | ACT IV  | SCENE VII | LAERTES
21    | Hamlet | ACT III | SCENE I   | KING CLAUDIUS
17    | Hamlet | ACT IV  | SCENE V   | LAERTES
17    | Hamlet | ACT II  | SCENE II  | LORD POLONIUS
16    | Hamlet | ACT III | SCENE I   | LORD POLONIUS
14    | Hamlet | ACT II  | SCENE II  | LORD POLONIUS
13    | Hamlet | ACT I   | SCENE III | LORD POLONIUS
11    | Hamlet | ACT I   | SCENE III | LAERTES
11    | Hamlet | ACT III | SCENE I   | HAMLET</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A <fo:inline font-family="monospace" font-size="0.8em">Query</fo:inline> can also search for multiple terms in a
specific order because a Lucene index keeps track of the order
relationships between terms within a <fo:inline font-family="monospace" font-size="0.8em">Document</fo:inline>.
Searching for the famous "to be or not to
be" returns a single match from Act III, Scene I of
<fo:inline font-style="italic">Hamlet</fo:inline>:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt503">0 [main] INFO TermSearch  - Searching for 'speech:"to be or not to be"'
354 [main] INFO TermSearch  - Searching Done, hit: 1

Score | Play   | Act     | Scene   | Speaker
100   | Hamlet | ACT III | SCENE I | HAMLET</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">This search was only possible because the
<fo:inline font-family="monospace" font-size="0.8em">SimpleAnalyzer</fo:inline> is used during index creation and
query parsing. If a different <fo:inline font-family="monospace" font-size="0.8em">Analyzer</fo:inline> had been
used to create the index, the Lucene index would not be storing
information about such common words as
"to,"
"be,"
"or," and
"not." It is a common practice for
general search engines to discard very common terms such as
"the,"
"a,"
"an," or
"when." Discarding unimportant
terms can reduce the size of an index remarkably, but if you need to
search for "to be or not to be,"
you will need to preserve all terms.</fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-7.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.7.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Both of the previous examples executed queries in about 300
milliseconds on a very cheap 2.0 GHz Celeron eMachine. This search
would have taken orders of magnitude longer to execute if every
document had to be parsed and searched in response to a query. The
only reason a full-text search can be completed in a few hundred
milliseconds is the presence of a Lucene index. The Lucene index
provides a database of Documents indexed by term, and an
<fo:inline font-family="monospace" font-size="0.8em">IndexSearcher</fo:inline> is essentially retrieving objects
from this database.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A Lucene query can combine multiple criteria, search for terms
matching wildcards, and find documents by multiple fields. A specific
field can be searched by prefixing a term with the field name and a
colon; for example, to search for documents in a certain play, one
would use the query
<fo:inline font-family="monospace" font-size="0.8em">play:"Hamlet"</fo:inline>.
The second parameter to <fo:inline font-family="monospace" font-size="0.8em">QueryParser.parse( )</fo:inline> is
the default field for a query, and, in the previous example, the
default field is "speech." This
means that a term without a field qualifier will match the
"speech" field. <fo:basic-link internal-destination="jakartackbk-CHP-12-TABLE-1" text-decoration="underline" color="blue">Table 12-1</fo:basic-link> lists
some<fo:wrapper id="jakartackbk-CHP-12-ITERM-3441"><!--queries, Jakarta
Lucene--></fo:wrapper> possible Lucene queries and describes
the results they would return.</fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-12-TABLE-1"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 12-1. A survey of Lucene queries</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-left-style="solid" border-right-style="solid" border-top-style="solid" border-bottom-style="solid" border-left-width="0.1pt" border-right-width="0.1pt" border-top-width="0.1pt" border-bottom-width="0.1pt" border-left-color="black" border-right-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="17.4cm"><fo:table-column column-number="1"/><fo:table-column column-number="2"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Query</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block font-weight="bold">
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Description</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">play:"Hamlet"</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Returns all documents with a "play"
field matching the string "Hamlet"</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">"to be" AND "not
to be"</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Returns a document with a "speech"
field containing the strings "to
be" and "not to
be"</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">play:"Hamlet" AND
("Polonius" OR
"Hamlet")</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Returns all documents with a "play"
field matching "Hamlet" with a
"speech" field that contains the
terms "Polonius" or
"Hamlet"</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">s*ings</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Returns all documents with a
"speech" field containing a term
that starts with "s" and ends in
"ings"; includes terms such as
"strings" and
"slings"</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">L?ve</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-bottom-width="0.1pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Returns all documents with a
"speech" field containing terms
such as "Love" or
"Live"</fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt" border-right-width="0.1pt" border-right-style="solid" border-right-color="black"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">"slings" NOT
"arrows"</fo:block>
                        </fo:block></fo:table-cell><fo:table-cell padding-left="4pt" padding-right="4pt" padding-top="4pt" padding-bottom="4pt"><fo:block>
                           <fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Returns documents with a "speech"
field that contains "slings" but
not "arrows"</fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The following Lucene query finds documents containing
"Saint Crispin" and
"England" or "to
be or not to be" and "slings and
arrows":</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt504">("Saint Crispin" AND "England") OR 
("to be or not to be" AND ("slings and arrows") )</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">When this query is executed against the Lucene index used in the
previous two recipes, two speeches are returned—a rousing
battle speech from <fo:inline font-family="monospace" font-size="0.8em"><fo:inline keep-together.within-line="always" hyphenate="false">&lt;Henry V&gt;</fo:inline></fo:inline> and
Hamlet's existential rant. Running this query would
produce the following output:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt505">0 [main] INFO TermSearch  - Searching for ("Saint Crispin" AND "England") OR 
("to be or not to be" AND ("slings and arrows") )
406 [main] INFO TermSearch  - Searching Done, hit: 2
Score | Play    | Act     | Scene                           | Speaker
31    | Hamlet  | ACT III | SCENE I.  A room in the castle. | HAMLET
11    | Henry V | ACT IV  | SCENE III.  The English camp.   | KING HENRY V</fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-7.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.7.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Lucene is a capable search <fo:wrapper id="jakartackbk-CHP-12-ITERM-3442"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3443"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3444"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3445"><!----></fo:wrapper>engine with very rich query syntax
supporting fuzzy term matching and searching for terms based on
proximity. For more details on Lucene query syntax, see <fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/lucene/docs/queryparsersyntax.html</fo:inline>.</fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-8"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Finding the Frequency of Terms in an Index</fo:marker><fo:block font-size="18pt" space-before.optimum="0.8em" space-before.minimum="0.8em" space-before.maximum="0.8em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.8. Finding the Frequency of Terms in an Index</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-8.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Problem</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.8.1. Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">You need to find the most frequently<fo:wrapper id="jakartackbk-CHP-12-ITERM-3446"><!--Jakarta
Lucene, term frequency--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3447"><!--term frequency, Jakarta
Lucene--></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3448"><!--indexes, Jakarta
Lucene, term frequency--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3449"><!--documents, Jakarta
Lucene, term frequency--></fo:wrapper>
used terms in a Lucene index.</fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-8.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Solution</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.8.2. Solution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Use Jakarta Lucene to index your documents and obtain a
<fo:inline font-family="monospace" font-size="0.8em">TermEnum</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3450"><!--TermEnum
object--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3451"><!--objects, TermEnum--></fo:wrapper>
using an <fo:inline font-family="monospace" font-size="0.8em">IndexReader</fo:inline>. The frequency of a term is
defined as the number of documents in which a specific term appears,
and a <fo:inline font-family="monospace" font-size="0.8em">TermEnum</fo:inline> object contains the frequency of
every term in a set of documents. <fo:basic-link internal-destination="jakartackbk-CHP-12-EX-3" text-decoration="underline" color="blue">Example 12-3</fo:basic-link>
iterates over the terms contained in <fo:inline font-family="monospace" font-size="0.8em">TermEnum</fo:inline>
returning every term that appears in more than 1,100 speeches.</fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="jakartackbk-CHP-12-EX-3"><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="0.6em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 12-3. TermFreq finding the most frequent terms in an index</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="d0e36278">package com.discursive.jccook.xml.bardsearch;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;

import org.apache.commons.lang.builder.CompareToBuilder;
import org.apache.log4j.Logger;
import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.TermEnum;

import com.discursive.jccook.util.LogInit;

public class TermFreq {
    private static Logger logger = Logger.getLogger(TermFreq.class);
    static { LogInit.init( ); }

    public static void main(String[] pArgs) throws Exception {
        logger.info("Threshold is 1100" );
        Integer threshold = new Integer( 1100 );

        IndexReader reader = IndexReader.open( "index" );
        TermEnum enum = reader.terms( );
        List termList = new ArrayList( );
        while( enum.next( ) ) {
            if( enum.docFreq( ) &gt;= threshold.intValue( ) &amp;&amp; 
                enum.term( ).field( ).equals( "speech" ) ) {
                Freq freq = new Freq( enum.term( ).text( ), enum.docFreq( ) );
                termList.add( freq );
            }
        }
        Collections.sort( termList );
        Collections.reverse( termList );

        System.out.println( "Frequency | Term" );
        Iterator iterator = termList.iterator( );
        while( iterator.hasNext( ) ) {
            Freq freq = (Freq) iterator.next( );
            System.out.print( freq.frequency );
            System.out.println( " | " + freq.term );
        }
    }
    
    public static class Freq implements Comparable {
        String term;
        int frequency;
        
        public Freq( String term, int frequency ) {
            this.term = term;
            this.frequency = frequency;
        }
        
        public int compareTo(Object o) {
            if( o instanceof Freq ) {
                Freq oFreq = (Freq) o;
                return new CompareToBuilder( )
                    .append( frequency, oFreq.frequency )
                    .append( term, oFreq.term )
                    .toComparison( );
            } else {
                return 0;
            }
        }
    }
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">A Lucene index is opened by passing the name of the
<fo:inline font-family="monospace" font-size="0.8em">index</fo:inline> directory to <fo:inline font-family="monospace" font-size="0.8em">IndexReader.open()</fo:inline>, and a <fo:inline font-family="monospace" font-size="0.8em">TermEnum</fo:inline> is retrieved from the
<fo:inline font-family="monospace" font-size="0.8em">IndexReader</fo:inline> with a call to <fo:inline font-family="monospace" font-size="0.8em">reader.terms()</fo:inline>. The previous example iterates through every term
contained in <fo:inline font-family="monospace" font-size="0.8em">TermEnum</fo:inline>, creating and populating an
instance of the inner class <fo:inline font-family="monospace" font-size="0.8em">Freq</fo:inline>, if a term
appears in more than 1,100 documents and the term occurs in the
"speech" field.
<fo:inline font-family="monospace" font-size="0.8em">TermEnum</fo:inline> contains three methods of interest:
<fo:inline font-family="monospace" font-size="0.8em">next( )</fo:inline>, <fo:inline font-family="monospace" font-size="0.8em">docFreq( )</fo:inline>, and
<fo:inline font-family="monospace" font-size="0.8em">term( )</fo:inline>. <fo:inline font-family="monospace" font-size="0.8em">next( )</fo:inline> moves to the
next term in the <fo:inline font-family="monospace" font-size="0.8em">TermEnum</fo:inline>, returning
<fo:inline font-family="monospace" font-size="0.8em">false</fo:inline> if no more terms are available.
<fo:inline font-family="monospace" font-size="0.8em">docFreq( )</fo:inline> returns the number of documents a term
appears in, and <fo:inline font-family="monospace" font-size="0.8em">term( )</fo:inline> returns a
<fo:inline font-family="monospace" font-size="0.8em">Term</fo:inline> object containing the text of the term and
the field the term occurs in. The <fo:inline font-family="monospace" font-size="0.8em">List</fo:inline> of
<fo:inline font-family="monospace" font-size="0.8em">Freq</fo:inline> objects is sorted by frequency and reversed,
and the most frequent terms in a set of Shakespeare plays is printed
to the console:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt506">0    INFO  [main] TermFreq     - Threshold is 4500
Frequency | Term
2907 | i
2823 | the
2647 | and
2362 | to
2186 | you
1950 | of
1885 | a
1870 | my
1680 | is
1678 | that
1564 | in
1562 | not
1410 | it
1262 | s
1247 | me
1200 | for
1168 | be
1124 | this
1109 | but</fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-8.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Discussion</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.8.3. Discussion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">From this list, it appears that the most frequent terms in
Shakespeare plays are inconsequential words, such as
"the,"
"a,"
"of," and
"be." The index this example was
executed against was created with a <fo:inline font-family="monospace" font-size="0.8em">SimpleAnalyzer</fo:inline>
that does not discard any terms. If this index is created with
<fo:inline font-family="monospace" font-size="0.8em">StandardAnalyzer</fo:inline>, common articles and pronouns
will not be stored as terms in the index, and they will not show up
on the most frequent terms list. Running this example against an
index created with a
<fo:inline font-family="monospace" font-size="0.8em">StandardAnalyzer</fo:inline>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3452"><!--StandardAnalyzer--></fo:wrapper>
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3453"><!--Analyzers, StandardAnalyzer--></fo:wrapper>
and reducing the frequency threshold to 600 documents returns the
following results:</fo:block><fo:block space-before.minimum="0em" space-before.optimum="0em" space-before.maximum="0em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" border-color="#151B54" border-style="solid" border-width="0.2pt" padding-top="0.5em" padding-left="0.3em" padding-right="0.3em" padding-bottom="0.5em" margin-left="0em" margin-right="0em" font-family="monospace" font-size="9.8pt" background-color="#E3E4FA" id="I_12_tt507">Frequency | Term
2727 | i
2153 | you
1862 | my
1234 | me
1091 | your
1057 | have
1027 | he
973 | what
921 | so
893 | his
824 | do
814 | him
693 | all
647 | thou
632 | shall
614 | lord</fo:block></fo:block><fo:block id="jakartackbk-CHP-12-SECT-8.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pc" font-family="serif"><fo:block keep-with-next.within-column="always"><fo:block font-family="serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">See Also</fo:marker><fo:block font-size="15pt" space-before.optimum="0.6em" space-before.minimum="0.6em" space-before.maximum="0.6em" space-after.optimum="0.1em" space-after.minimum="0.1em" space-after.maximum="0.1em">12.8.4. See Also</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">There is an example of enumerating <fo:wrapper id="jakartackbk-CHP-12-ITERM-3454"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3455"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3456"><!----></fo:wrapper> 
               <fo:wrapper id="jakartackbk-CHP-12-ITERM-3457"><!----></fo:wrapper>term frequency in the Jakarta
Lucene Sandbox. To see this frequency analysis example, see the
"High Frequency Terms" example
(<fo:inline font-family="monospace" font-size="0.8em">http://jakarta.apache.org/lucene/docs/lucene-sandbox/</fo:inline>).</fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="false" master-reference="back" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>Colophon</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before"><fo:block><fo:block>Colophon</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif" margin-left="-5em" margin-right="-5em"/></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="left" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="after"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="after"><fo:block><fo:page-number/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif" margin-left="0pc"/></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block id="jakartackbk-COLOPHON"><fo:block><fo:block><fo:block margin-left="0pc" font-size="24.8832pt" font-family="serif" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="12pt" space-before.minimum="12pt * 0.8" space-before.maximum="12pt * 1.2" hyphenate="false" text-align="left" start-indent="0pc" word-spacing="-0.1em" letter-spacing="-0.05em" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Colophon</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Our look is the result of reader comments, our own experimentation, and feedback from distribution channels. Distinctive covers complement our distinctive approach to technical topics, breathing personality and life into potentially dry subjects.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The animal on the cover of Jakarta Commons Cookbook is an aardvark. Native to the grasslands and woodlands of sub-Saharan Africa, the aardvark is the only surviving species in the Orycteropodidae family of mammals. Despite being named for its resemblance to the pig (the word aardvark derives from the Dutch for "earth pig"), the aardvark's appearance is far more similar to that of marsupials, such as the bilby and the bandicoot.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Aardvarks are distinguished by their pig-like torso, arched back, oversized ears, and lengthy snout. They are typically yellow-gray in color, although their tough skin may appear reddish-brown when coated in soil. On average, the adult aadvark is slightly more than three feet long and weighs approximately 90 to 140 pounds. Aardvarks dine almost exclusively on ants and termites, for which their tiny, tubular mouth and long, slender tongue are ideally suited. Upon locating a cache of ants with their keen sense of smell, aardvarks use their strong front legs to dig into the nest and rapidly lap up the insects with their sticky tongue. Scientists have observed aardvarks devouring as many as 50,000 insects in a single night!</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">By nature, aardvarks tend to be reclusive. They are nocturnal creatures that build elaborate individual burrows of up to 40 feet in length in their home terrain, used to search for food and provide temporary shelter. Mothers make use of burrows as a more permanent home when giving birth to their young.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Currently, aardvarks are not considered an endangered species. However, they are still targeted by hunters for their exquisite cylindrical teeth, which are often used for decorative purposes.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Matt Hutchinson was the production editor for Jakarta Commons Cookbook . Octal Publishing, Inc. provided production services. Marlowe Shaeffer, Sarah Sherman, and Darren Kelly provided quality control.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">Emma Colby designed the cover of this book, based on a series design by Edie Freedman. The cover image is a 19th-century engraving from Illustrated Natural History. Clay Fernald produced the cover layout with QuarkXPress 4.1 using Adobe's ITC Garamond font.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">David Futato designed the interior layout. This book was converted by Julie Hawks to FrameMaker 5.5.6 with a format conversion tool created by Erik Ray, Jason McIntosh, Neil Walls, and Mike Sierra that uses Perl and XML technologies. The text font is Linotype Birka; the heading font is Adobe Myriad Condensed; and the code font is LucasFont's TheSans Mono Condensed. The illustrations that appear in the book were produced by Lesley Borash using Macromedia FreeHand MX and Adobe Photoshop CS. The tip and warning icons were drawn by Christopher Bing. This colophon was written by Sanders Kleinfeld.</fo:block><fo:block space-before.optimum="3pt" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="6pt">The online edition of this book was created by the Safari
production group (John Chodacki, Ken Douglass, and Ellie Cutler)
using a set of Frame-to-XML conversion and cleanup tools written and
maintained by Erik Ray, Benn Salter, John Chodacki, Ellie Cutler, and Jeff Liggett.</fo:block></fo:flow></fo:page-sequence></fo:root>